\Block{The Complex Delay Block}
{delay\_complex}
{delaycomplex}
{Aaron Parsons}
{Aaron Parsons}
{A delay block that treats its input as complex, splits it into real and imaginary components, delays each component by a specified amount, and then re-joins them into a complex output. The underlying storage is user-selectable (either BRAM or SLR16 elements). The reason for this is wide (36 bit) delays make adjacent multipliers in multiplier-bram pairs unusable.}



\begin{ParameterTable}

\Parameter{Delay Depth}{delay\_depth}{The length of the delay.}

\Parameter{Bit Width}{n\_bits}{Specifies the width of the real/imaginary components. Width of each component is assumed equal.}

\Parameter{Use BRAM}{use\_bram}{Set to 1 to implement the delay using BRAM. If 0, the delay will be implemented using SLR16 elements.}

\end{ParameterTable}



\begin{PortTable}

\Port{in}{in}{???}{The complex signal to be delayed.}

\Port{out}{out}{???}{The delayed complex signal.}

\end{PortTable}



\BlockDesc{A delay block that treats its input as complex, splits it into real and imaginary components, delays each component by a specified amount, and then re-joins them into a complex output. The underlying storage is user-selectable (either BRAM or SLR16 elements). The reason for this is wide (36 bit) delays make adjacent multipliers in multiplier-bram pairs unusable.}