% Software Register block
% Last modified: 2007/06/24

\Block{Software Register}{software register}{softwareregister}
{Pierre-Yves Droz}{Henry Chen}
{Inserts a unidirectional 32-bit register shared between the FPGA design and
the PowerPC bus.}

\begin{ParameterTable}

\Parameter{I/O direction}{io\_dir}
{Chooses whether register writes {\em to processor} or reads {\em from
processor}.}

\Parameter{Data Type}{arith\_type}
{Specifies data type of register.}

\Parameter{Data bitwidth}{bitwidth}
{Specifies data bitwidth. Hard-coded at 32 bits.}

\Parameter{Data binary point}{bin\_pt}
{Specifies the binary point position of data.}

\Parameter{Sample period}{sample\_period}
{Specifies sample period of interface.}

\end{ParameterTable}


\begin{PortTable}

\Port{reg\_out}{in}{inherited}
{Output from design to processor bus. Only in {\em To Processor} mode.}

\Port{sim\_out}{out}{double}
{Simulation output of register value. Only in {\em To Processor} mode.}

\Port{sim\_in}{in}{double}
{Simulation input of register value. Only in {\em From Processor} mode.}

\Port{reg\_in}{out}{inherited}
{Input from processor bus to design. Only in {\em From Processor} mode.}

\end{PortTable}

\BlockDesc{A software register is a {\em shared} interface, meaning that it is
attached to both the FPGA fabric of the System Generator design as well as the
PowerPC bus. The registers are unidirectional; the user must choose at design-%
time whether the register is in {\em To Processor} mode (written by the FPGA
fabric and read by the PowerPC) or in {\em From Processor} mode (written by the
PowerPC and read by the FPGA fabric).

The bitwidth is fixed at 32 bits, as it is attached to a 32-bit bus, but the
Simulink interpretation of the data type and binary point is controllable by
the user. The data type and binary point parameters entered into the mask are
enforced by the block; the block will cast to the specified data type and
binary point going in both directions.
}
