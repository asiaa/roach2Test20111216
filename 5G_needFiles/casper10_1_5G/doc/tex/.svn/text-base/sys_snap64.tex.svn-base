%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%Snap64 Block%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



\Block{64 Bit Snapshot}{snap64}{snap64}{Aaron Parsons}{Aaron Parsons, Ben Blackman}{The snap block provides a packaged solution to capturing data from the FPGA fabric and making it accessible from the CPU. snap64 captures to 2x32 bit wide shared BRAMs to effect a 64 bit capture.}

\begin{ParameterTable}
\Parameter{No. of Samples ($2^?$)}{nsamples}{Specifies the depth of the Shared BRAM(s); i.e. the number of 64bit samples which are stored per capture.}
\end{ParameterTable}

\begin{PortTable}
\Port{din}{IN}{unsigned\_64\_0}{The data to be captured. Regardless of type, the bit-level representation of these numbers are written as 64bit values to the Shared BRAMs.}
\Port{trig}{IN}{boolean}{When high, triggers the beginning of a data capture. Thereafter, every enabled data is written to the shared BRAM until it is full.}
\Port{we}{IN}{boolean}{After a trigger is begun, enables a write to Shared BRAM.}
\end{PortTable}

\BlockDesc{
\paragraph{Usage}
Under TinySH/BORPH, this device will have 3 sub-devices: \textit{ctrl}, \textit{bram\_msb}, \textit{bram\_lsb}, and \textit{addr}. \textit{ctrl} is an input register. Bit 0, when driven from low to high, enables a trigger/data capture to occur. Bit 1, when high, overrides \textit{trig} to trigger instantly. Bit 2, when high, overrides \textit{we} to always write data to bram. \textit{addr} is an output register and records the last address of bram to which data was written. \textit{bram\_msb} and \textit{bram\_lsb} are 32 bit wide Shared BRAMs of the depth specified in \textit{Parameters}. \textit{bram\_msb} holds the upper 32 bits of \textit{din} while \textit{bram\_lsb} holds the lower 32 bits of \textit{din}.
}
