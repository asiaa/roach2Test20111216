Model {
  Name			  "pfb_fir"
  Version		  7.0
  MdlSubVersion		  0
  GraphicalInterface {
    NumRootInports	    0
    NumRootOutports	    0
    ParameterArgumentNames  ""
    ComputedModelVersion    "1.11"
    NumModelReferences	    0
    NumTestPointedSignals   0
  }
  SavedCharacterEncoding  "ibm-5348_P100-1997"
  SaveDefaultBlockParams  on
  SampleTimeColors	  off
  LibraryLinkDisplay	  "user"
  WideLines		  off
  ShowLineDimensions	  off
  ShowPortDataTypes	  on
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  ShowStorageClass	  off
  ShowTestPointIcons	  on
  ShowViewerIcons	  on
  SortedOrder		  off
  ExecutionContextIcon	  off
  ShowLinearizationAnnotations on
  ScopeRefreshTime	  0.035000
  OverrideScopeRefreshTime on
  DisableAllScopes	  off
  DataTypeOverride	  "UseLocalSettings"
  MinMaxOverflowLogging	  "UseLocalSettings"
  MinMaxOverflowArchiveMode "Overwrite"
  BlockNameDataTip	  off
  BlockParametersDataTip  off
  BlockDescriptionStringDataTip	off
  ToolBar		  on
  StatusBar		  on
  BrowserShowLibraryLinks on
  BrowserLookUnderMasks	  on
  Created		  "Mon May 15 11:05:45 2006"
  Creator		  "homin"
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedByFormat	  "%<Auto>"
  LastModifiedBy	  "homin"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Thu Aug 26 15:04:23 2010"
  RTWModifiedTimeStamp	  0
  ModelVersionFormat	  "1.%<AutoIncrement:11>"
  ConfigurationManager	  "None"
  SimulationMode	  "normal"
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  AccelSystemTargetFile	  "accel.tlc"
  AccelTemplateMakefile	  "accel_default_tmf"
  AccelMakeCommand	  "make_rtw"
  TryForcingSFcnDF	  off
  RecordCoverage	  off
  CovPath		  "/"
  CovSaveName		  "covdata"
  CovMetricSettings	  "dw"
  CovNameIncrementing	  off
  CovHtmlReporting	  on
  covSaveCumulativeToWorkspaceVar on
  CovSaveSingleToWorkspaceVar on
  CovCumulativeVarName	  "covCumulativeData"
  CovCumulativeReport	  off
  CovReportOnPause	  on
  ExtModeBatchMode	  off
  ExtModeEnableFloating	  on
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigDurationFloating "auto"
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock on
  BufferReuse		  on
  ShowModelReferenceBlockVersion off
  ShowModelReferenceBlockIO off
  Array {
    Type		    "Handle"
    Dimension		    1
    Simulink.ConfigSet {
      $ObjectID		      1
      Version		      "1.3.0"
      Array {
	Type			"Handle"
	Dimension		7
	Simulink.SolverCC {
	  $ObjectID		  2
	  Version		  "1.3.0"
	  StartTime		  "0.0"
	  StopTime		  "10.0"
	  AbsTol		  "auto"
	  FixedStep		  "auto"
	  InitialStep		  "auto"
	  MaxNumMinSteps	  "-1"
	  MaxOrder		  5
	  ConsecutiveZCsStepRelTol "10*128*eps"
	  MaxConsecutiveZCs	  "1000"
	  ExtrapolationOrder	  4
	  NumberNewtonIterations  1
	  MaxStep		  "auto"
	  MinStep		  "auto"
	  MaxConsecutiveMinStep	  "1"
	  RelTol		  "1e-3"
	  SolverMode		  "SingleTasking"
	  Solver		  "FixedStepDiscrete"
	  SolverName		  "FixedStepDiscrete"
	  ZeroCrossControl	  "UseLocalSettings"
	  AlgebraicLoopSolver	  "TrustRegion"
	  SolverResetMethod	  "Fast"
	  PositivePriorityOrder	  off
	  AutoInsertRateTranBlk	  off
	  SampleTimeConstraint	  "Unconstrained"
	  RateTranMode		  "Deterministic"
	}
	Simulink.DataIOCC {
	  $ObjectID		  3
	  Version		  "1.3.0"
	  Decimation		  "1"
	  ExternalInput		  "[t, u]"
	  FinalStateName	  "xFinal"
	  InitialState		  "xInitial"
	  LimitDataPoints	  on
	  MaxDataPoints		  "1000"
	  LoadExternalInput	  off
	  LoadInitialState	  off
	  SaveFinalState	  off
	  SaveFormat		  "Array"
	  SaveOutput		  on
	  SaveState		  off
	  SignalLogging		  on
	  InspectSignalLogs	  off
	  SaveTime		  on
	  StateSaveName		  "xout"
	  TimeSaveName		  "tout"
	  OutputSaveName	  "yout"
	  SignalLoggingName	  "logsout"
	  OutputOption		  "RefineOutputTimes"
	  OutputTimes		  "[]"
	  Refine		  "1"
	}
	Simulink.OptimizationCC {
	  $ObjectID		  4
	  Array {
	    Type		    "Cell"
	    Dimension		    5
	    Cell		    "ZeroExternalMemoryAtStartup"
	    Cell		    "ZeroInternalMemoryAtStartup"
	    Cell		    "InitFltsAndDblsToZero"
	    Cell		    "OptimizeModelRefInitCode"
	    Cell		    "NoFixptDivByZeroProtection"
	    PropName		    "DisabledProps"
	  }
	  Version		  "1.3.0"
	  BlockReduction	  on
	  BooleanDataType	  on
	  ConditionallyExecuteInputs on
	  InlineParams		  off
	  InlineInvariantSignals  off
	  OptimizeBlockIOStorage  on
	  BufferReuse		  on
	  EnforceIntegerDowncast  on
	  ExpressionFolding	  on
	  ExpressionDepthLimit	  2147483647
	  FoldNonRolledExpr	  on
	  LocalBlockOutputs	  on
	  RollThreshold		  5
	  SystemCodeInlineAuto	  off
	  StateBitsets		  off
	  DataBitsets		  off
	  UseTempVars		  off
	  ZeroExternalMemoryAtStartup on
	  ZeroInternalMemoryAtStartup on
	  InitFltsAndDblsToZero	  on
	  NoFixptDivByZeroProtection off
	  EfficientFloat2IntCast  off
	  OptimizeModelRefInitCode off
	  LifeSpan		  "inf"
	  BufferReusableBoundary  on
	  SimCompilerOptimization "Off"
	  AccelVerboseBuild	  off
	}
	Simulink.DebuggingCC {
	  $ObjectID		  5
	  Version		  "1.3.0"
	  RTPrefix		  "error"
	  ConsistencyChecking	  "none"
	  ArrayBoundsChecking	  "none"
	  SignalInfNanChecking	  "none"
	  SignalRangeChecking	  "none"
	  ReadBeforeWriteMsg	  "UseLocalSettings"
	  WriteAfterWriteMsg	  "UseLocalSettings"
	  WriteAfterReadMsg	  "UseLocalSettings"
	  AlgebraicLoopMsg	  "warning"
	  ArtificialAlgebraicLoopMsg "warning"
	  SaveWithDisabledLinksMsg "warning"
	  SaveWithParameterizedLinksMsg	"none"
	  CheckSSInitialOutputMsg on
	  CheckExecutionContextPreStartOutputMsg off
	  CheckExecutionContextRuntimeOutputMsg	off
	  SignalResolutionControl "TryResolveAllWithWarning"
	  BlockPriorityViolationMsg "warning"
	  MinStepSizeMsg	  "warning"
	  TimeAdjustmentMsg	  "none"
	  MaxConsecutiveZCsMsg	  "error"
	  SolverPrmCheckMsg	  "warning"
	  InheritedTsInSrcMsg	  "warning"
	  DiscreteInheritContinuousMsg "warning"
	  MultiTaskDSMMsg	  "warning"
	  MultiTaskCondExecSysMsg "none"
	  MultiTaskRateTransMsg	  "error"
	  SingleTaskRateTransMsg  "none"
	  TasksWithSamePriorityMsg "warning"
	  SigSpecEnsureSampleTimeMsg "warning"
	  CheckMatrixSingularityMsg "none"
	  IntegerOverflowMsg	  "warning"
	  Int32ToFloatConvMsg	  "warning"
	  ParameterDowncastMsg	  "error"
	  ParameterOverflowMsg	  "error"
	  ParameterUnderflowMsg	  "none"
	  ParameterPrecisionLossMsg "warning"
	  ParameterTunabilityLossMsg "warning"
	  UnderSpecifiedDataTypeMsg "none"
	  UnnecessaryDatatypeConvMsg "none"
	  VectorMatrixConversionMsg "none"
	  InvalidFcnCallConnMsg	  "error"
	  FcnCallInpInsideContextMsg "Use local settings"
	  SignalLabelMismatchMsg  "none"
	  UnconnectedInputMsg	  "warning"
	  UnconnectedOutputMsg	  "warning"
	  UnconnectedLineMsg	  "warning"
	  SFcnCompatibilityMsg	  "none"
	  UniqueDataStoreMsg	  "none"
	  BusObjectLabelMismatch  "warning"
	  RootOutportRequireBusObject "warning"
	  AssertControl		  "UseLocalSettings"
	  EnableOverflowDetection off
	  ModelReferenceIOMsg	  "none"
	  ModelReferenceVersionMismatchMessage "none"
	  ModelReferenceIOMismatchMessage "none"
	  ModelReferenceCSMismatchMessage "none"
	  ModelReferenceSimTargetVerbose off
	  UnknownTsInhSupMsg	  "warning"
	  ModelReferenceDataLoggingMessage "warning"
	  ModelReferenceSymbolNameMessage "warning"
	  ModelReferenceExtraNoncontSigs "error"
	  StateNameClashWarn	  "warning"
	  StrictBusMsg		  "None"
	  LoggingUnavailableSignals "error"
	}
	Simulink.HardwareCC {
	  $ObjectID		  6
	  Version		  "1.3.0"
	  ProdBitPerChar	  8
	  ProdBitPerShort	  16
	  ProdBitPerInt		  32
	  ProdBitPerLong	  32
	  ProdIntDivRoundTo	  "Undefined"
	  ProdEndianess		  "Unspecified"
	  ProdWordSize		  32
	  ProdShiftRightIntArith  on
	  ProdHWDeviceType	  "32-bit Generic"
	  TargetBitPerChar	  8
	  TargetBitPerShort	  16
	  TargetBitPerInt	  32
	  TargetBitPerLong	  32
	  TargetShiftRightIntArith on
	  TargetIntDivRoundTo	  "Undefined"
	  TargetEndianess	  "Unspecified"
	  TargetWordSize	  32
	  TargetTypeEmulationWarnSuppressLevel 0
	  TargetPreprocMaxBitsSint 32
	  TargetPreprocMaxBitsUint 32
	  TargetHWDeviceType	  "Specified"
	  TargetUnknown		  off
	  ProdEqTarget		  on
	}
	Simulink.ModelReferenceCC {
	  $ObjectID		  7
	  Version		  "1.3.0"
	  UpdateModelReferenceTargets "IfOutOfDateOrStructuralChange"
	  CheckModelReferenceTargetMessage "error"
	  ModelReferenceNumInstancesAllowed "Multi"
	  ModelReferencePassRootInputsByReference on
	  ModelReferenceMinAlgLoopOccurrences off
	}
	Simulink.RTWCC {
	  $BackupClass		  "Simulink.RTWCC"
	  $ObjectID		  8
	  Array {
	    Type		    "Cell"
	    Dimension		    1
	    Cell		    "IncludeHyperlinkInReport"
	    PropName		    "DisabledProps"
	  }
	  Version		  "1.3.0"
	  SystemTargetFile	  "grt.tlc"
	  GenCodeOnly		  off
	  MakeCommand		  "make_rtw"
	  GenerateMakefile	  on
	  TemplateMakefile	  "grt_default_tmf"
	  GenerateReport	  off
	  SaveLog		  off
	  RTWVerbose		  on
	  RetainRTWFile		  off
	  ProfileTLC		  off
	  TLCDebug		  off
	  TLCCoverage		  off
	  TLCAssert		  off
	  ProcessScriptMode	  "Default"
	  ConfigurationMode	  "Optimized"
	  ConfigAtBuild		  off
	  IncludeHyperlinkInReport off
	  LaunchReport		  off
	  TargetLang		  "C"
	  IncludeBusHierarchyInRTWFileBlockHierarchyMap	off
	  IncludeERTFirstTime	  on
	  GenerateTraceInfo	  off
	  RTWCompilerOptimization "Off"
	  Array {
	    Type		    "Handle"
	    Dimension		    2
	    Simulink.CodeAppCC {
	      $ObjectID		      9
	      Array {
		Type			"Cell"
		Dimension		9
		Cell			"IgnoreCustomStorageClasses"
		Cell			"InsertBlockDesc"
		Cell			"SFDataObjDesc"
		Cell			"SimulinkDataObjDesc"
		Cell			"DefineNamingRule"
		Cell			"SignalNamingRule"
		Cell			"ParamNamingRule"
		Cell			"InlinedPrmAccess"
		Cell			"CustomSymbolStr"
		PropName		"DisabledProps"
	      }
	      Version		      "1.3.0"
	      ForceParamTrailComments off
	      GenerateComments	      on
	      IgnoreCustomStorageClasses on
	      IncHierarchyInIds	      off
	      MaxIdLength	      31
	      PreserveName	      off
	      PreserveNameWithParent  off
	      ShowEliminatedStatement off
	      IncAutoGenComments      off
	      SimulinkDataObjDesc     off
	      SFDataObjDesc	      off
	      IncDataTypeInIds	      off
	      MangleLength	      1
	      CustomSymbolStrGlobalVar "$R$N$M"
	      CustomSymbolStrType     "$N$R$M"
	      CustomSymbolStrField    "$N$M"
	      CustomSymbolStrFcn      "$R$N$M$F"
	      CustomSymbolStrBlkIO    "rtb_$N$M"
	      CustomSymbolStrTmpVar   "$N$M"
	      CustomSymbolStrMacro    "$R$N$M"
	      DefineNamingRule	      "None"
	      ParamNamingRule	      "None"
	      SignalNamingRule	      "None"
	      InsertBlockDesc	      off
	      SimulinkBlockComments   on
	      EnableCustomComments    off
	      InlinedPrmAccess	      "Literals"
	      ReqsInCode	      off
	    }
	    Simulink.GRTTargetCC {
	      $BackupClass	      "Simulink.TargetCC"
	      $ObjectID		      10
	      Array {
		Type			"Cell"
		Dimension		12
		Cell			"IncludeMdlTerminateFcn"
		Cell			"CombineOutputUpdateFcns"
		Cell			"SuppressErrorStatus"
		Cell			"ERTCustomFileBanners"
		Cell			"GenerateSampleERTMain"
		Cell			"MultiInstanceERTCode"
		Cell			"PurelyIntegerCode"
		Cell			"SupportNonFinite"
		Cell			"SupportComplex"
		Cell			"SupportAbsoluteTime"
		Cell			"SupportContinuousTime"
		Cell			"SupportNonInlinedSFcns"
		PropName		"DisabledProps"
	      }
	      Version		      "1.3.0"
	      TargetFcnLib	      "ansi_tfl_tmw.mat"
	      TargetLibSuffix	      ""
	      TargetPreCompLibLocation ""
	      GenFloatMathFcnCalls    "ANSI_C"
	      UtilityFuncGeneration   "Auto"
	      GenerateFullHeader      on
	      GenerateSampleERTMain   off
	      GenerateTestInterfaces  off
	      IsPILTarget	      off
	      ModelReferenceCompliant on
	      CompOptLevelCompliant   on
	      IncludeMdlTerminateFcn  on
	      CombineOutputUpdateFcns off
	      SuppressErrorStatus     off
	      IncludeFileDelimiter    "Auto"
	      ERTCustomFileBanners    off
	      SupportAbsoluteTime     on
	      LogVarNameModifier      "rt_"
	      MatFileLogging	      on
	      MultiInstanceERTCode    off
	      SupportNonFinite	      on
	      SupportComplex	      on
	      PurelyIntegerCode	      off
	      SupportContinuousTime   on
	      SupportNonInlinedSFcns  on
	      EnableShiftOperators    on
	      ParenthesesLevel	      "Nominal"
	      PortableWordSizes	      off
	      ModelStepFunctionPrototypeControlCompliant off
	      ExtMode		      off
	      ExtModeStaticAlloc      off
	      ExtModeTesting	      off
	      ExtModeStaticAllocSize  1000000
	      ExtModeTransport	      0
	      ExtModeMexFile	      "ext_comm"
	      ExtModeIntrfLevel	      "Level1"
	      RTWCAPISignals	      off
	      RTWCAPIParams	      off
	      RTWCAPIStates	      off
	      GenerateASAP2	      off
	    }
	    PropName		    "Components"
	  }
	}
	PropName		"Components"
      }
      Name		      "Configuration"
      CurrentDlgPage	      "Solver"
    }
    PropName		    "ConfigurationSets"
  }
  Simulink.ConfigSet {
    $PropName		    "ActiveConfigurationSet"
    $ObjectID		    1
  }
  BlockDefaults {
    Orientation		    "right"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
  }
  BlockParameterDefaults {
    Block {
      BlockType		      Inport
      Port		      "1"
      UseBusObject	      off
      BusObject		      "BusObject"
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      SampleTime	      "-1"
      OutMin		      "[]"
      OutMax		      "[]"
      DataType		      "auto"
      OutDataType	      "fixdt(1,16,0)"
      OutScaling	      "[]"
      SignalType	      "auto"
      SamplingMode	      "auto"
      LatchByDelayingOutsideSignal off
      LatchByCopyingInsideSignal off
      Interpolate	      on
    }
    Block {
      BlockType		      Outport
      Port		      "1"
      UseBusObject	      off
      BusObject		      "BusObject"
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      SampleTime	      "-1"
      OutMin		      "[]"
      OutMax		      "[]"
      DataType		      "auto"
      OutDataType	      "fixdt(1,16,0)"
      OutScaling	      "[]"
      SignalType	      "auto"
      SamplingMode	      "auto"
      OutputWhenDisabled      "held"
      InitialOutput	      "[]"
    }
    Block {
      BlockType		      "S-Function"
      FunctionName	      "system"
      SFunctionModules	      "''"
      PortCounts	      "[]"
    }
    Block {
      BlockType		      SubSystem
      ShowPortLabels	      "FromPortIcon"
      Permissions	      "ReadWrite"
      PermitHierarchicalResolution "All"
      TreatAsAtomicUnit	      off
      SystemSampleTime	      "-1"
      RTWFcnNameOpts	      "Auto"
      RTWFileNameOpts	      "Auto"
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      SimViewingDevice	      off
      DataTypeOverride	      "UseLocalSettings"
      MinMaxOverflowLogging   "UseLocalSettings"
    }
    Block {
      BlockType		      Terminator
    }
    Block {
      BlockType		      Constant
      Value		      "1"
      VectorParams1D	      on
      SamplingMode	      "Sample based"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeMode	      "Inherit from 'Constant value'"
      OutDataType	      "fixdt(1,16,0)"
      ConRadixGroup	      "Use specified scaling"
      OutScaling	      "[]"
      SampleTime	      "inf"
      FramePeriod	      "inf"
    }
    Block {
      BlockType		      DiscretePulseGenerator
      PulseType		      "Sample based"
      TimeSource	      "Use simulation time"
      Amplitude		      "1"
      Period		      "2"
      PulseWidth	      "1"
      PhaseDelay	      "0"
      SampleTime	      "1"
      VectorParams1D	      on
    }
  }
  AnnotationDefaults {
    HorizontalAlignment	    "center"
    VerticalAlignment	    "middle"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    UseDisplayTextAsClickCallback off
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  System {
    Name		    "pfb_fir"
    Location		    [345, 246, 1443, 743]
    Open		    on
    ModelBrowserVisibility  on
    ModelBrowserWidth	    212
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "usletter"
    PaperUnits		    "inches"
    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
    TiledPageScale	    1
    ShowPageBoundaries	    off
    ZoomFactor		    "100"
    ReportName		    "simulink-default.rpt"
    Block {
      BlockType		      Reference
      Name		      " System Generator"
      Tag		      "genX"
      Ports		      []
      Position		      [97, 33, 148, 83]
      ShowName		      off
      AttributesFormatString  "System\\nGenerator"
      UserDataPersistent      on
      UserData		      "DataTag0"
      SourceBlock	      "xbsIndex_r4/ System Generator"
      SourceType	      "Xilinx System Generator Block"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      infoedit		      " System Generator"
      xilinxfamily	      "Virtex2P"
      part		      "xc2vp40"
      speed		      "-6"
      package		      "ff1152"
      synthesis_tool	      "XST"
      clock_wrapper	      "Clock Enables"
      directory		      "./pfb_fir_core"
      testbench		      off
      simulink_period	      "1"
      sysclk_period	      "100"
      dcm_input_clock_period  "100"
      incr_netlist	      off
      trim_vbits	      "Everywhere in SubSystem"
      dbl_ovrd		      "According to Block Masks"
      core_generation	      "According to Block Masks"
      run_coregen	      off
      deprecated_control      off
      eval_field	      "0"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "sysgen"
      block_version	      "10.1.3"
      sg_icon_stat	      "51,50,-1,-1,red,beige,0,07734,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 51 51 0 ],[0 0 50 50 ],[0.93 0.92 0.86]);\npatch([12 4 16 4 12 25 29 33 47 36 25 17 29 17 25 36 47 33 29 25 12 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.6 0.2 0.25]);\nplot([0 51 51 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant"
      Position		      [85, 390, 115, 420]
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant1"
      Position		      [85, 190, 115, 220]
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant2"
      Position		      [85, 320, 115, 350]
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
    }
    Block {
      BlockType		      Terminator
      Name		      "Terminator"
      Position		      [660, 395, 680, 415]
    }
    Block {
      BlockType		      Terminator
      Name		      "Terminator1"
      Position		      [660, 195, 680, 215]
    }
    Block {
      BlockType		      Terminator
      Name		      "Terminator2"
      Position		      [660, 325, 680, 345]
    }
    Block {
      BlockType		      Terminator
      Name		      "Terminator4"
      Position		      [470, 230, 480, 240]
      ShowName		      off
    }
    Block {
      BlockType		      SubSystem
      Name		      "fir_1"
      Ports		      [2, 2]
      Position		      [365, 192, 455, 248]
      BackgroundColor	      "[0.501961, 1.000000, 0.501961]"
      AttributesFormatString  "6 taps\n9_8 coefs\n8_7 in\n9_7 out"
      AncestorBlock	      "newfft_library/FIR/fir"
      UserDataPersistent      on
      UserData		      "DataTag1"
      MinAlgLoopOccurrences   off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      MaskType		      "FIR Filter"
      MaskDescription	      "A Finite Impluse Response Filter.  This FIR filter does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter.\n\nThis Finite Impluse Response Filter does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nCoefficiant(s) (coefs): Matrix of real double(s) to use as coefficient(s).\nOne column per tap.  Multiple rows will create a WOLA filter.\nThese should be specified as doubles.  They will be rounded/saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Bits Out (n_bits_o): Specifies the width of the output (overflow wraps).\nThe internal adders will use a bit width of (n_bits_o-bin_pt_o+bin_pt_c+bin_pt_d).\n\nBinary Point Out (bin_pt_o): Specifies the binary point of the output (quantization truncates).\nThe internal adders will use a binary point of (bin_pt_c+bin_pt_d).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n</pre>"
      MaskPromptString	      "Tap Coefficients|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Bits Out|Binary Point Out|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Show Sub-Block Options|Sub-Block Masks"
      MaskStyleString	      "edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox,popup(Keep|DumbDown|Unmask)"
      MaskTunableValueString  "on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskCallbackString      "|||||||||||mvs=get_param(gcb,'MaskVisibilityString');\nif strcmp(get_param(gcb,'show_sbo'),'on')\n  onoff='on';\nelse\n  onoff='off';\nend\nmvs=regexprep(mvs,'o[nf]*$',onoff);\nset_param(gcb,'MaskVisibilityString',mvs);\n|"
      MaskEnableString	      "on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskVisibilityString    "on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskToolTipString	      "on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskVarAliasString      ",,,,,,,,,,,,"
      MaskVariables	      "coefs=@1;n_bits_c=@2;bin_pt_c=@3;n_bits_d=@4;bin_pt_d=@5;n_bits_o=@6;bin_pt_o=@7;coef_bram=@8;delay_bram=@9;mult_latency=@10;add_latency=@11;show_sbo=@12;munge_submasks=@13;"
      MaskInitialization      "tic\nfir_init(gcb, ...\n  coefs, ...\n  n_bits_c, ...\n  bin_pt_c, ...\n  n_bits_d, ...\n  bin_pt_d, ...\n  n_bits_o, ...\n  bin_pt_o, ...\n  coef_bram, ...\n  delay_bram, ...\n  mult_latency, ...\n  add_latency, ...\n  lower(get_param(gcb,'munge_submasks')) );\ndisp('fir_init complete.');\ntoc"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "pfb_coefs(1024,6)|9|8|8|7|9|7|on|on|3|1|on|DumbDown"
      MaskTabNameString	      ",,,,,,,,,,,,"
      System {
	Name			"fir_1"
	Location		[282, 135, 1062, 821]
	Open			on
	ModelBrowserVisibility	on
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in"
	  Position		  [25, 13, 55, 27]
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Inport
	  Name			  "sync_in"
	  Position		  [25, 83, 55, 97]
	  Port			  "2"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Constant"
	  Ports			  [0, 1]
	  Position		  [70, 48, 85, 62]
	  ShowName		  off
	  SourceBlock		  "xbsIndex_r4/Constant"
	  SourceType		  "Xilinx Constant Block Block"
	  arith_type		  "Unsigned"
	  const			  "0"
	  n_bits		  "34"
	  bin_pt		  "0"
	  explicit_period	  on
	  period		  "1"
	  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
	  equ			  "P=C"
	  opselect		  "C"
	  inp2			  "PCIN>>17"
	  opr			  "+"
	  inp1			  "P"
	  carry			  "CIN"
	  dbl_ovrd		  off
	  has_advanced_control	  "0"
	  sggui_pos		  "-1,-1,-1,-1"
	  block_type		  "constant"
	  block_version		  "10.1.3"
	  sg_icon_stat		  "15,14,1,1,white,blue,0,72d575a1,right"
	  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 15 15 0 ],[0 0 14 14 ],[0.77 0.82 0.91]);\npatch([3 1 4 1 3 7 8 9 13 10 7 5 8 5 7 10 13 9 8 7 3 ],[2 4 7 10 12 12 11 12 12 9 12 10 7 4 2 5 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 15 15 0 0 ],[0 0 14 14 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'0');\nfprintf('','COMMENT: end icon text');\n"
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_quantize"
	  Ports			  [3, 2]
	  Position		  [1000, 30, 1100, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "17_15 in\n9_7 out\nround even"
	  UserDataPersistent	  on
	  UserData		  "DataTag2"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Quantizer"
	  MaskDescription	  "A Finite Impluse Response Filter ouput quantizer.  This FIR filter output quantizer rounds the sum_in value to the precision specified by n_bits and bin_pt.  Overflow wraps, but quantization rounds to even if input binary point is greater than output binary point, otherwise quantization tuncates."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter ouput quantizer.  This FIR filter output quantizer\nrounds the sum_in value to the precision specified by n_bits and bin_pt.\n\nOverflow wraps, but quantization rounds to even if input binary point is greater\nthan output binary point, otherwise quantization tuncates.\n\nMask Parameters::\n\nNumber of Bits In (n_bits_s): Specifies the width of the sum_in input.\n\nBinary Point In (bin_pt_s): Specifies the binary point of the sum_in input.\n\nNumber of Bits Out (n_bits_o): Specifies the width of the output (overflow wraps).\n\nBinary Point Out (bin_pt_o): Specifies the binary point of the output (quantization rounds to even\nif input binary point is greater than output binary point, othersie quantization truncates).\n</pre>"
	  MaskPromptString	  "Number of Bits In|Binary Point In|Number of Bits Out|Binary Point Out"
	  MaskStyleString	  "edit,edit,edit,edit"
	  MaskTunableValueString  "off,off,off,off"
	  MaskCallbackString	  "|||"
	  MaskEnableString	  "off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on"
	  MaskToolTipString	  "on,on,on,on"
	  MaskVarAliasString	  ",,,"
	  MaskVariables		  "n_bits_s=&1;bin_pt_s=&2;n_bits_o=&3;bin_pt_o=&4;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "17|15|9|7"
	  MaskTabNameString	  ",,,"
	  System {
	    Name		    "fir_quantize"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_term"
	      Position		      [30, 18, 60, 32]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 78, 60, 92]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 143, 60, 157]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Terminator
	      Name		      "Terminator"
	      Position		      [450, 20, 460, 30]
	      ShowName		      off
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "c_to_ri"
	      Ports		      [1, 2]
	      Position		      [120, 64, 160, 106]
	      AttributesFormatString  "17_15 r/i"
	      UserDataPersistent      on
	      UserData		      "DataTag3"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Complex to Real-Imag"
	      MaskDescription	      "Outputs real and imaginary components of a complex input."
	      MaskHelp		      "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
	      MaskPromptString	      "Bit Width|Binary Point"
	      MaskStyleString	      "edit,edit"
	      MaskTunableValueString  "off,off"
	      MaskCallbackString      "|"
	      MaskEnableString	      "off,off"
	      MaskVisibilityString    "on,on"
	      MaskToolTipString	      "on,on"
	      MaskVarAliasString      ","
	      MaskVariables	      "n_bits=&1;bin_pt=&2;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "17|15"
	      MaskTabNameString	      ","
	      System {
		Name			"c_to_ri"
		Location		[567, 157, 837, 310]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "c"
		  Position		  [20, 63, 50, 77]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Reference
		  Name			  "force_im"
		  Ports			  [1, 1]
		  Position		  [150, 79, 190, 111]
		  SourceBlock		  "xbsIndex_r4/Reinterpret"
		  SourceType		  "Xilinx Type Reinterpreter Block"
		  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		  force_arith_type	  on
		  arith_type		  "Signed  (2's comp)"
		  force_bin_pt		  on
		  bin_pt		  "15"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "reinterpret"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "40,32,1,1,white,blue,0,8982c1db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "force_re"
		  Ports			  [1, 1]
		  Position		  [150, 29, 190, 61]
		  SourceBlock		  "xbsIndex_r4/Reinterpret"
		  SourceType		  "Xilinx Type Reinterpreter Block"
		  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		  force_arith_type	  on
		  arith_type		  "Signed  (2's comp)"
		  force_bin_pt		  on
		  bin_pt		  "15"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "reinterpret"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "40,32,1,1,white,blue,0,8982c1db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "slice_im"
		  Ports			  [1, 1]
		  Position		  [80, 81, 125, 109]
		  SourceBlock		  "xbsIndex_r4/Slice"
		  SourceType		  "Xilinx Bit Slice Extractor Block"
		  infoedit		  "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		  nbits			  "17"
		  boolean_output	  off
		  mode			  "Lower Bit Location + Width"
		  bit1			  "0"
		  base1			  "MSB of Input"
		  bit0			  "0"
		  base0			  "LSB of Input"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "slice"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,28,1,1,white,blue,0,b1026674,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "slice_re"
		  Ports			  [1, 1]
		  Position		  [80, 31, 125, 59]
		  SourceBlock		  "xbsIndex_r4/Slice"
		  SourceType		  "Xilinx Bit Slice Extractor Block"
		  infoedit		  "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		  nbits			  "17"
		  boolean_output	  off
		  mode			  "Upper Bit Location + Width"
		  bit1			  "0"
		  base1			  "MSB of Input"
		  bit0			  "0"
		  base0			  "LSB of Input"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "slice"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,28,1,1,white,blue,0,b1026674,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "re"
		  Position		  [215, 38, 245, 52]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "im"
		  Position		  [215, 88, 245, 102]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "slice_re"
		  SrcPort		  1
		  DstBlock		  "force_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "slice_im"
		  SrcPort		  1
		  DstBlock		  "force_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "force_re"
		  SrcPort		  1
		  DstBlock		  "re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "force_im"
		  SrcPort		  1
		  DstBlock		  "im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c"
		  SrcPort		  1
		  Points		  [5, 0]
		  Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		  }
		  Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		  }
		}
	      }
	    }
	    Block {
	      BlockType		      Reference
	      Name		      "delay"
	      Ports		      [1, 1]
	      Position		      [230, 139, 275, 161]
	      SourceBlock	      "xbsIndex_r4/Delay"
	      SourceType	      "Xilinx Delay Block"
	      infoedit		      "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
	      en		      off
	      latency		      "3"
	      dbl_ovrd		      off
	      reg_retiming	      off
	      xl_use_area	      off
	      xl_area		      "[0, 0, 0, 0, 0, 0, 0]"
	      has_advanced_control    "0"
	      sggui_pos		      "-1,-1,-1,-1"
	      block_type	      "delay"
	      block_version	      "10.1.3"
	      sg_icon_stat	      "45,22,1,1,white,blue,0,eabd56db,right"
	      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 22 22 ],[0.77 0.82 0.91]);\npatch([17 13 18 13 17 23 25 27 33 28 23 20 26 20 23 28 33 27 25 23 17 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
	    }
	    Block {
	      BlockType		      Reference
	      Name		      "quantize_im"
	      Ports		      [1, 1]
	      Position		      [225, 86, 275, 104]
	      SourceBlock	      "xbsIndex_r4/Convert"
	      SourceType	      "Xilinx Type Converter Block"
	      infoedit		      "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
	      arith_type	      "Signed  (2's comp)"
	      n_bits		      "9"
	      bin_pt		      "7"
	      quantization	      "Round  (unbiased: Even Values)"
	      overflow		      "Wrap"
	      latency		      "3"
	      dbl_ovrd		      off
	      pipeline		      on
	      xl_use_area	      off
	      xl_area		      "[0, 0, 0, 0, 0, 0, 0]"
	      has_advanced_control    "0"
	      sggui_pos		      "-1,-1,-1,-1"
	      block_type	      "convert"
	      block_version	      "10.1.3"
	      sg_icon_stat	      "50,18,1,1,white,blue,0,0b13ee9b,right"
	      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\ncolor('black');disp('\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
	    }
	    Block {
	      BlockType		      Reference
	      Name		      "quantize_re"
	      Ports		      [1, 1]
	      Position		      [225, 66, 275, 84]
	      NamePlacement	      "alternate"
	      SourceBlock	      "xbsIndex_r4/Convert"
	      SourceType	      "Xilinx Type Converter Block"
	      infoedit		      "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
	      arith_type	      "Signed  (2's comp)"
	      n_bits		      "9"
	      bin_pt		      "7"
	      quantization	      "Round  (unbiased: Even Values)"
	      overflow		      "Wrap"
	      latency		      "3"
	      dbl_ovrd		      off
	      pipeline		      on
	      xl_use_area	      off
	      xl_area		      "[0, 0, 0, 0, 0, 0, 0]"
	      has_advanced_control    "0"
	      sggui_pos		      "-1,-1,-1,-1"
	      block_type	      "convert"
	      block_version	      "10.1.3"
	      sg_icon_stat	      "50,18,1,1,white,blue,0,0b13ee9b,right"
	      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\ncolor('black');disp('\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "ri_to_c"
	      Ports		      [2, 1]
	      Position		      [335, 64, 375, 106]
	      UserDataPersistent      on
	      UserData		      "DataTag4"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Real-Imag to Complex"
	      MaskDescription	      "Concatenates real and imaginary inputs into a complex output."
	      MaskHelp		      "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
	      MaskInitialization      "ri_to_c_init(gcb);"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      System {
		Name			"ri_to_c"
		Location		[512, 132, 787, 285]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "re"
		  Position		  [25, 38, 55, 52]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "im"
		  Position		  [25, 88, 55, 102]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Reference
		  Name			  "concat"
		  Ports			  [2, 1]
		  Position		  [145, 40, 195, 95]
		  SourceBlock		  "xbsIndex_r4/Concat"
		  SourceType		  "Xilinx Bus Concatenator Block"
		  infoedit		  "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		  num_inputs		  "2"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "concat"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "50,55,1,1,white,blue,0,df1e5aba,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "force_im"
		  Ports			  [1, 1]
		  Position		  [80, 79, 120, 111]
		  SourceBlock		  "xbsIndex_r4/Reinterpret"
		  SourceType		  "Xilinx Type Reinterpreter Block"
		  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		  force_arith_type	  on
		  arith_type		  "Unsigned"
		  force_bin_pt		  on
		  bin_pt		  "0"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "reinterpret"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "40,32,1,1,white,blue,0,8982c1db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "force_re"
		  Ports			  [1, 1]
		  Position		  [80, 29, 120, 61]
		  SourceBlock		  "xbsIndex_r4/Reinterpret"
		  SourceType		  "Xilinx Type Reinterpreter Block"
		  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		  force_arith_type	  on
		  arith_type		  "Unsigned"
		  force_bin_pt		  on
		  bin_pt		  "0"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "reinterpret"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "40,32,1,1,white,blue,0,8982c1db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "c"
		  Position		  [220, 63, 250, 77]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "im"
		  SrcPort		  1
		  DstBlock		  "force_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "concat"
		  SrcPort		  1
		  DstBlock		  "c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "re"
		  SrcPort		  1
		  DstBlock		  "force_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "force_im"
		  SrcPort		  1
		  Points		  [0, -15]
		  DstBlock		  "concat"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "force_re"
		  SrcPort		  1
		  Points		  [0, 10]
		  DstBlock		  "concat"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [440, 78, 470, 92]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [440, 143, 470, 157]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "data_term"
	      SrcPort		      1
	      DstBlock		      "Terminator"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "delay"
	      SrcPort		      1
	      Points		      [0, 0]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      DstBlock		      "delay"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "quantize_im"
	      SrcPort		      1
	      Points		      [0, 0]
	      DstBlock		      "ri_to_c"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "c_to_ri"
	      SrcPort		      2
	      DstBlock		      "quantize_im"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "quantize_re"
	      SrcPort		      1
	      Points		      [0, 0]
	      DstBlock		      "ri_to_c"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "c_to_ri"
	      SrcPort		      1
	      DstBlock		      "quantize_re"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "ri_to_c"
	      SrcPort		      1
	      Points		      [0, 0]
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "c_to_ri"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_tap_1"
	  Ports			  [3, 3]
	  Position		  [100, 30, 200, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "delay 1024 in bram\n1024 coefs in bram\\nno adder"
	  UserDataPersistent	  on
	  UserData		  "DataTag5"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Tap (Real Coefficients)"
	  MaskDescription	  "A Finite Impluse Response Filter tap with real coefficients.  This FIR filter tap does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter tap with real coefficients.\n\nThis Finite Impluse Response Filter tap is designed to be daisy chained together\nto form a multi-tap FIR filter.  This FIR filter tap does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nTap Coefficiant(s) (coef): The coefficient(s) for this tap.  For a regular FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nUsually, delay==length(coef), but this is not required.  These should be specified as doubles. \nThey will be rounded and saturated according to the specified number of bits (n_bits_c) and\nbinary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	  MaskPromptString	  "Tap Delay|Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	  MaskStyleString	  "edit,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "||||||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,,,,"
	  MaskVariables		  "delay=&1;coef=&2;n_bits_c=&3;bin_pt_c=&4;n_bits_d=&5;bin_pt_d=&6;n_bits_s=&7;bin_pt_s=&8;coef_bram=&9;delay_bram=&10;mult_latency=&11;add_latency=&12;add_bypass=&13;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "1024|[7.55822333239443e-005;0.000226337373781674;0.000376546527419557;0.000526209439676531;0.000675325864794748;0.000823895565799559;0.000971918314479012;0.00111939389136366;0.00126632208570627;0.00141270269546109;0.00155853552726339;0.00170382039640892;0.00184855712683285;0.00199274555108931;0.00213638551033019;0.0022794768542842;0.00242201944123601;0.00256401313800475;0.00270545781992298;0.00284635337081542;0.00298669968297734;0.00312649665715319;0.00326574420251518;0.00340444223664131;0.00354259068549404;0.00368018948339813;0.00381723857301899;0.00395373790534074;0.00408968743964404;0.00422508714348402;0.00435993699266828;0.00449423697123439;0.00462798707142765;0.00476118729367882;0.00489383764658139;0.00502593814686929;0.00515748881939405;0.00528848969710218;0.00541894082101253;0.00554884224019323;0.00567819401173886;0.00580699620074764;0.00593524888029807;0.006062952131426;0.0061901060431015;0.00631671071220536;0.00644276624350604;0.00656827274963604;0.00669323035106852;0.00681763917609391;0.00694149936079604;0.00706481104902866;0.00718757439239176;0.00730978955020755;0.00743145668949677;0.00755257598495482;0.00767314761892755;0.00779317178138749;0.00791264866990946;0.00803157848964654;0.00814996145330591;0.00826779778112436;0.00838508770084402;0.00850183144768805;0.00861802926433593;0.00873368140089908;0.00884878811489629;0.00896334967122888;0.00907736634215623;0.00919083840727075;0.00930376615347321;0.0094161498749479;0.00952798987313748;0.00963928645671813;0.00975003994157455;0.00986025065077467;0.00996991891454458;0.0100790450702434;0.0101876294623378;0.0102956724423769;0.0104031743689668;0.010510135607745;0.0106165565313551;0.0107224375194214;0.0108277789585228;0.010932581242168;0.0110368447707688;0.0111405699516152;0.0112437571988492;0.0113464069334393;0.0114485195831541;0.0115500955825369;0.0116511353728793;0.0117516394021958;0.0118516081251968;0.0119510420032635;0.012049941504421;0.0121483071033125;0.0122461392811728;0.0123434385258024;0.0124402053315406;0.0125364401992397;0.0126321436362382;0.0127273161563346;0.0128219582797607;0.0129160705331552;0.0130096534495371;0.013102707568279;0.0131952334350806;0.0132872316019417;0.013378702627136;0.0134696470751837;0.0135600655168253;0.0136499585289943;0.0137393266947904;0.0138281706034528;0.0139164908503332;0.0140042880368685;0.0140915627705541;0.0141783156649169;0.0142645473394878;0.0143502584197752;0.014435449537237;0.0145201213292544;0.0146042744391039;0.0146879095159304;0.0147710272147199;0.014853628196272;0.014935713127173;0.0150172826797681;0.0150983375321339;0.0151788783680517;0.0152589058769791;0.0153384207540233;0.0154174236999132;0.0154959154209719;0.0155738966290892;0.015651368041694;0.0157283303817268;0.0158047843776117;0.0158807307632293;0.0159561702778886;0.0160311036662993;0.0161055316785444;0.016179455070052;0.0162528746015679;0.0163257910391276;0.0163982051540287;0.0164701177228029;0.0165415295271879;0.0166124413541001;0.0166828539956064;0.016752768248896;0.0168221849162531;0.0168911048050285;0.0169595287276116;0.0170274575014029;0.0170948919487855;0.0171618328970972;0.0172282811786028;0.0172942376304655;0.0173597030947194;0.0174246784182411;0.0174891644527217;0.0175531620546388;0.0176166720852282;0.0176796954104559;0.01774223290099;0.0178042854321725;0.0178658538839913;0.0179269391410516;0.0179875420925484;0.0180476636322377;0.0181073046584087;0.0181664660738554;0.0182251487858485;0.0182833537061072;0.018341081750771;0.0183983338403711;0.018455110899803;0.0185114138582973;0.0185672436493922;0.0186226012109047;0.0186774874849029;0.0187319034176773;0.0187858499597128;0.0188393280656603;0.0188923386943085;0.0189448828085557;0.0189969613753813;0.0190485753658179;0.0190997257549227;0.0191504135217495;0.0192006396493202;0.0192504051245967;0.0192997109384527;0.019348558085645;0.0193969475647859;0.0194448803783146;0.0194923575324687;0.0195393800372564;0.0195859489064282;0.0196320651574482;0.0196777298114666;0.0197229438932907;0.0197677084313573;0.0198120244577041;0.0198558930079418;0.0198993151212255;0.0199422918402268;0.0199848242111055;0.0200269132834817;0.0200685601104072;0.0201097657483373;0.0201505312571035;0.020190857699884;0.020230746143177;0.0202701976567714;0.0203092133137194;0.0203477941903082;0.0203859413660319;0.0204236559235634;0.0204609389487264;0.0204977915304673;0.0205342147608274;0.0205702097349146;0.0206057775508754;0.0206409193098672;0.02067563611603;0.0207099290764587;0.0207437993011751;0.0207772479030999;0.0208102759980249;0.020842884704585;0.0208750751442305;0.0209068484411992;0.0209382057224885;0.0209691481178275;0.0209996767596496;0.0210297927830643;0.0210594973258299;0.0210887915283252;0.0211176765335223;0.0211461534869588;0.02117422353671;0.0212018878333615;0.0212291475299812;0.0212560037820922;0.0212824577476449;0.0213085105869897;0.0213341634628491;0.0213594175402908;0.0213842739866995;0.0214087339717505;0.021432798667381;0.0214564692477637;0.0214797468892794;0.0215026327704889;0.0215251280721066;0.0215472339769727;0.0215689516700262;0.0215902823382775;0.0216112271707815;0.0216317873586099;0.021651964094825;0.0216717585744516;0.0216911719944508;0.0217102055536922;0.0217288604529277;0.0217471378947638;0.0217650390836353;0.0217825652257779;0.0217997175292016;0.0218164972036641;0.0218329054606434;0.0218489435133116;0.0218646125765079;0.021879913866712;0.0218948486020174;0.0219094180021051;0.0219236232882163;0.0219374656831268;0.0219509464111195;0.021964066697959;0.0219768277708642;0.0219892308584827;0.0220012771908637;0.0220129679994325;0.0220243045169635;0.0220352879775545;0.0220459196166004;0.0220562006707666;0.0220661323779637;0.0220757159773207;0.0220849527091593;0.0220938438149682;0.0221023905373766;0.0221105941201285;0.0221184558080573;0.0221259768470592;0.0221331584840681;0.0221400019670297;0.0221465085448756;0.022152679467498;0.0221585159857239;0.0221640193512895;0.0221691908168152;0.0221740316357794;0.0221785430624938;0.0221827263520777;0.0221865827604326;0.0221901135442173;0.0221933199608223;0.0221962032683452;0.022198764725565;0.0222010055919171;0.0222029271274689;0.0222045305928941;0.0222058172494483;0.0222067883589439;0.0222074451837253;0.0222077889866442;0.0222078210310349;0.0222075425806899;0.0222069548998346;0.0222060592531036;0.0222048569055155;0.0222033491224491;0.0222015371696183;0.0221994223130485;0.0221970058190519;0.0221942889542031;0.0221912729853155;0.0221879591794167;0.0221843488037246;0.0221804431256237;0.0221762434126404;0.02217175093242;0.0221669669527021;0.0221618927412975;0.0221565295660639;0.0221508786948827;0.0221449413956349;0.0221387189361781;0.0221322125843227;0.0221254236078085;0.0221183532742814;0.02211100285127;0.0221033736061624;0.0220954668061832;0.0220872837183699;0.0220788256095504;0.0220700937463195;0.0220610893950162;0.0220518138217011;0.0220422682921327;0.0220324540717458;0.0220223724256277;0.0220120246184963;0.0220014119146775;0.021990535578082;0.0219793968721838;0.021967997059997;0.0219563374040542;0.0219444191663836;0.0219322436084871;0.0219198119913184;0.0219071255752605;0.021894185620104;0.021880993385025;0.0218675501285635;0.0218538571086012;0.0218399155823402;0.021825726806281;0.021811292036201;0.0217966125271333;0.0217816895333444;0.0217665243083139;0.0217511181047122;0.02173547217438;0.0217195877683065;0.0217034661366086;0.0216871085285099;0.0216705161923194;0.0216536903754111;0.0216366323242026;0.0216193432841346;0.0216018244996503;0.0215840772141744;0.021566102670093;0.0215479021087327;0.0215294767703405;0.0215108278940632;0.0214919567179271;0.0214728644788182;0.0214535524124615;0.0214340217534013;0.0214142737349813;0.0213943095893242;0.0213741305473122;0.0213537378385675;0.0213331326914318;0.0213123163329474;0.0212912899888375;0.0212700548834864;0.0212486122399205;0.0212269632797886;0.0212051092233429;0.0211830512894198;0.0211607906954207;0.021138328657293;0.0211156663895112;0.0210928051050577;0.0210697460154048;0.0210464903304949;0.0210230392587226;0.0209993940069161;0.0209755557803181;0.0209515257825682;0.0209273052156838;0.0209028952800423;0.020878297174363;0.0208535120956883;0.0208285412393665;0.0208033857990334;0.0207780469665943;0.0207525259322066;0.0207268238842619;0.0207009420093679;0.0206748814923318;0.020648643516142;0.0206222292619508;0.0205956399090575;0.0205688766348906;0.0205419406149913;0.0205148330229955;0.0204875550306177;0.0204601078076336;0.020432492521863;0.0204047103391538;0.0203767624233645;0.0203486499363482;0.0203203740379356;0.020291935885919;0.0202633366360355;0.020234577441951;0.020205659455244;0.0201765838253892;0.0201473516997418;0.0201179642235214;0.0200884225397961;0.0200587277894667;0.020028881111251;0.0199988836416682;0.0199687365150233;0.0199384408633918;0.0199079978166042;0.0198774085022304;0.0198466740455651;0.0198157955696123;0.0197847741950701;0.0197536110403162;0.0197223072213925;0.0196908638519908;0.0196592820434375;0.0196275629046798;0.0195957075422703;0.0195637170603529;0.0195315925606485;0.0194993351424409;0.0194669459025618;0.0194344259353776;0.0194017763327749;0.0193689981841464;0.0193360925763775;0.0193030605938321;0.0192699033183391;0.0192366218291787;0.019203217203069;0.0191696905141523;0.0191360428339821;0.0191022752315096;0.0190683887730704;0.0190343845223718;0.0190002635404793;0.018966026885804;0.0189316756140897;0.0188972107784002;0.0188626334291062;0.0188279446138735;0.0187931453776497;0.0187582367626523;0.0187232198083563;0.0186880955514817;0.0186528650259817;0.0186175292630303;0.0185820892910106;0.0185465461355029;0.0185109008192725;0.0184751543622587;0.0184393077815623;0.0184033620914347;0.0183673183032665;0.0183311774255754;0.0182949404639958;0.0182586084212671;0.0182221822972225;0.0181856630887784;0.0181490517899233;0.0181123493917068;0.0180755568822289;0.0180386752466294;0.0180017054670774;0.0179646485227607;0.0179275053898754;0.0178902770416155;0.0178529644481627;0.0178155685766767;0.0177780903912842;0.01774053085307;0.0177028909200663;0.0176651715472435;0.0176273736864999;0.0175894982866526;0.0175515462934279;0.0175135186494514;0.0174754162942395;0.0174372401641892;0.0173989911925696;0.0173606703095124;0.0173222784420034;0.0172838165138729;0.0172452854457875;0.0172066861552411;0.0171680195565462;0.0171292865608255;0.0170904880760033;0.0170516250067972;0.0170126982547098;0.0169737087180206;0.0169346572917774;0.0168955448677892;0.0168563723346172;0.0168171405775676;0.016777850478684;0.0167385029167391;0.0166990987672274;0.016659638902358;0.0166201241910468;0.0165805554989092;0.0165409336882532;0.0165012596180719;0.0164615341440367;0.01642175811849;0.0163819323904387;0.0163420578055472;0.0163021352061308;0.0162621654311489;0.0162221493161987;0.0161820876935087;0.0161419813919321;0.016101831236941;0.0160616380506197;0.0160214026516591;0.0159811258553503;0.015940808473579;0.0159004513148196;0.0158600551841291;0.015819620883142;0.0157791492100646;0.015738640959669;0.0156980969232886;0.0156575178888119;0.0156169046406781;0.0155762579598713;0.0155355786239159;0.0154948674068714;0.0154541250793279;0.0154133524084007;0.0153725501577262;0.015331719087457;0.0152908599542575;0.0152499735112994;0.0152090605082574;0.0151681216913049;0.0151271578031099;0.0150861695828308;0.0150451577661127;0.0150041230850829;0.0149630662683479;0.0149219880409888;0.0148808891245584;0.0148397702370772;0.0147986320930298;0.0147574754033622;0.0147163008754775;0.0146751092132337;0.0146339011169396;0.0145926772833527;0.0145514384056753;0.0145101851735525;0.0144689182730687;0.0144276383867453;0.0143863461935379;0.014345042368834;0.0143037275844501;0.0142624025086298;0.0142210678060412;0.014179724137775;0.0141383721613421;0.0140970125306716;0.014055645896109;0.0140142729044144;0.0139728941987605;0.0139315104187309;0.0138901222003188;0.0138487301759252;0.0138073349743574;0.0137659372208281;0.0137245375369534;0.0136831365407524;0.0136417348466455;0.0136003330654535;0.013558931804397;0.0135175316670951;0.0134761332535648;0.0134347371602205;0.013393343979873;0.0133519543017293;0.013310568711392;0.0132691877908589;0.013227812118523;0.0131864422691718;0.0131450788139878;0.0131037223205477;0.0130623733528234;0.0130210324711811;0.0129797002323824;0.0129383771895841;0.0128970638923385;0.0128557608865941;0.0128144687146963;0.0127731879153873;0.0127319190238077;0.0126906625714966;0.0126494190863927;0.0126081890928351;0.0125669731115647;0.0125257716597247;0.0124845852508622;0.0124434143949294;0.0124022595982848;0.0123611213636946;0.0123200001903342;0.0122788965737901;0.0122378110060608;0.0121967439755595;0.0121556959671148;0.0121146674619735;0.0120736589378022;0.0120326708686893;0.0119917037251469;0.0119507579741136;0.0119098340789561;0.011868932499472;0.0118280536918919;0.0117871981088822;0.0117463661995474;0.0117055584094329;0.0116647751805277;0.011624016951267;0.0115832841565354;0.0115425772276698;0.0115018965924621;0.0114612426751627;0.0114206158964832;0.0113800166736003;0.0113394454201587;0.0112989025462742;0.011258388458538;0.0112179035600195;0.0111774482502703;0.0111370229253276;0.0110966279777186;0.0110562637964633;0.0110159307670795;0.010975629271586;0.010935359688507;0.0108951223928764;0.0108549177562413;0.0108147461466673;0.0107746079287419;0.0107345034635795;0.0106944331088256;0.0106543972186615;0.0106143961438089;0.0105744302315346;0.0105344998256552;0.0104946052665421;0.0104547468911263;0.0104149250329032;0.0103751400219381;0.0103353921848709;0.0102956818449215;0.0102560093218952;0.0102163749321875;0.01017677898879;0.0101372218012957;0.0100977036759047;0.0100582249154293;0.0100187858193002;0.00997938668357203;0.0099400278009291;0.00990070946069135;0.00986143194882025;0.00982219554792484;0.00978300053726775;0.00974384719277134;0.00970473578702392;0.00966566658928605;0.00962663986549678;0.00958765587828016;0.00954871488695155;0.00950981714752431;0.00947096291271629;0.0094321524319565;0.00939338595139185;0.00935466371389393;0.0093159859590658;0.00927735292324897;0.00923876483953036;0.00920022193774929;0.00916172444450464;0.00912327258316188;0.00908486657386049;0.00904650663352107;0.00900819297585279;0.00896992581136071;0.00893170534735332;0.00889353178795001;0.0088554053340887;0.00881732618353346;0.00877929453088222;0.00874131056757457;0.00870337448189951;0.00866548645900342;0.00862764668089797;0.0085898553264681;0.0085521125714801;0.00851441858858978;0.00847677354735049;0.00843917761422159;0.00840163095257653;0.00836413372271132;0.0083266860818529;0.00828928818416756;0.00825194018076957;0.00821464221972963;0.00817739444608359;0.00814019700184109;0.00810305002599434;0.00806595365452684;0.00802890802042233;0.00799191325367362;0.00795496948129161;0.00791807682731424;0.00788123541281559;0.00784444535591502;0.00780770677178631;0.00777101977266688;0.00773438446786714;0.00769780096377973;0.00766126936388893;0.00762478976878012;0.00758836227614927;0.00755198698081245;0.00751566397471543;0.00747939334694328;0.00744317518373013;0.00740700956846889;0.00737089658172098;0.00733483630122624;0.00729882880191279;0.00726287415590692;0.00722697243254317;0.00719112369837428;0.00715532801718132;0.00711958544998381;0.00708389605504983;0.00704825988790636;0.00701267700134947;0.00697714744545466;0.00694167126758721;0.00690624851241261;0.00687087922190698;0.00683556343536762;0.00680030118942352;0.00676509251804594;0.00672993745255913;0.00669483602165082;0.00665978825138318;0.00662479416520342;0.00658985378395465;0.00655496712588674;0.00652013420666724;0.00648535503939221;0.00645062963459735;0.00641595800026893;0.00638134014185485;0.00634677606227583;0.0063122657619364;0.00627780923873624;0.00624340648808137;0.00620905750289535;0.00617476227363066;0.00614052078828002;0.00610633303238773;0.0060721989890612;0.00603811863898232;0.00600409196041901;0.00597011892923675;0.0059361995189101;0.00590233370053443;0.00586852144283747;0.00583476271219105;0.00580105747262281;0.00576740568582796;0.00573380731118106;0.0057002623057479;0.00566677062429732;0.00563333221931314;0.00559994704100609;0.00556661503732576;0.00553333615397264;0.00550011033441016;0.00546693751987671;0.00543381764939783;0.00540075065979826;0.00536773648571416;0.00533477505960533;0.00530186631176739;0.0052690101703441;0.00523620656133964;0.00520345540863088;0.00517075663397987;0.0051381101570461;0.00510551589539899;0.00507297376453033;0.00504048367786674;0.00500804554678217;0.00497565928061048;0.00494332478665798;0.00491104197021601;0.00487881073457359;0.00484663098103001;0.00481450260890759;0.00478242551556433;0.00475039959640664;0.0047184247449021;0.00468650085259228;0.00465462780910543;0.00462280550216948;0.00459103381762476;0.00455931263943696;0.00452764184970998;0.00449602132869889;0.00446445095482291;0.00443293060467832;0.00440146015305152;0.00437003947293203;0.00433866843552555;0.00430734691026696;0.00427607476483351;0.00424485186515788;0.00421367807544131;0.00418255325816677;0.00415147727411206;0.00412044998236316;0.00408947124032728;0.0040585409037462;0.00402765882670945;0.00399682486166768;0.00396603885944579;0.00393530066925641;0.00390461013871314;0.00387396711384388;0.00384337143910425;0.00381282295739088;0.00378232151005492;0.00375186693691537;0.00372145907627252;0.00369109776492143;0.00366078283816534;0.00363051412982916;0.00360029147227299;0.0035701146964056;0.00353998363169792;0.00350989810619665;0.00347985794653768;0.0034498629779598;0.00341991302431814;0.00339000790809786;0.00336014745042765;0.00333033147109343;0.00330055978855185;0.00327083221994408;0.00324114858110932;0.00321150868659852;0.00318191234968804;0.00315235938239325;0.00312284959548233;0.00309338279848989;0.00306395879973069;0.00303457740631335;0.00300523842415407;0.00297594165799033;0.00294668691139467;0.00291747398678844;0.00288830268545549;0.00285917280755598;0.00283008415214012;0.00280103651716193;0.00277202969949308;0.00274306349493657;0.00271413769824061;0.00268525210311237;0.00265640650223175;0.00262760068726523;0.00259883444887969;0.00257010757675613;0.00254141985960361;0.00251277108517291;0.0024841610402705;0.00245558951077227;0.00242705628163739;0.00239856113692212;0.00237010385979366;0.00234168423254391;0.00231330203660339;0.00228495705255503;0.002256649060148;0.00222837783831153;0.00220014316516874;0.00217194481805049;0.00214378257350922;0.00211565620733274;0.00208756549455806;0.00205951020948525;0.00203149012569121;0.00200350501604353;0.00197555465271432;0.00194763880719397;0.001919757250305;0.00189190975221584;0.00186409608245468;0.00183631600992321;0.00180856930291045;0.00178085572910654;0.00175317505561652;0.00172552704897407;0.00169791147515534;0.00167032809959269;0.00164277668718846;0.00161525700232871;0.00158776880889696;0.00156031187028796;0.00153288594942139;0.0015054908087556;0.00147812621030134;0.00145079191563545;0.00142348768591449;0.00139621328188859;0.00136896846391498;0.00134175299197172;0.0013145666256714;0.00128740912427467;0.00126028024670401;0.00123317975155729;0.00120610739712138;0.0011790629413858;0.00115204614205629;0.00112505675656834;0.00109809454210086;0.00107115925558966;0.00104425065374103;0.00101736849304526;0.000990512529790111;0.000963682520074419;0.000936878219821494;0.000910099384792634;0.000883345770600572;0.00085661713272294;0.000829913226515637;0.000803233807226332;0.000776578630007802;0.000749947449931329;0.00072334002200008;0.000696756101162392;0.000670195442325197;0.000643657800367275;0.000617142930152563;0.000590650586543436;0.000564180524413982;0.00053773249866318;0.000511306264228219;0.000484901576097635;0.000458518189324518;0.000432155859039685;0.000405814340464771;0.00037949338892544;0.000353192759864432;0.00032691220885466;0.000300651491612275;0.00027441036400972;0.000248188582088693;0.000221985902073233;0.000195802080382638;0.000169636873644433;0.000143490038707315;0.000117361332654004;9.12505128142159e-005;6.51573367774649e-005;3.90815624059165e-005;1.30229478472013e-005]|9|8|8|7|17|15|on|on|3|1|on"
	  MaskTabNameString	  ",,,,,,,,,,,,"
	  System {
	    Name		    "fir_tap_1"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_in"
	      Position		      [30, 23, 60, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 58, 60, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 93, 60, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_coef"
	      Ports		      [3, 4]
	      Position		      [115, 29, 205, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "1024 coefs in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag6"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Coefficient Generator"
	      MaskDescription	      "A Finite Impluse Response filter coefficient generator.  This FIR filter coefficient generator outputs real coefficients.  It can output one coefficient or cycle through a vector of coefficients for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response filter coefficient generator.\nThis FIR filter coefficient generator outputs real coefficients.\nIt can output one coefficient or cycle through a vector of coefficients for WOLA\n(Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Coefficiant(s) (coef): The coefficient(s) to output.  For a \"regular\" FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nThese should be specified as doubles.   They will be rounded and saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nUse BRAM for Coefficients (use_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n</pre>"
	      MaskPromptString	      "Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Use BRAM for Coefficients"
	      MaskStyleString	      "edit,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "coef=&1;n_bits_c=&2;bin_pt_c=&3;use_bram=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "[7.55822333239443e-005;0.000226337373781674;0.000376546527419557;0.000526209439676531;0.000675325864794748;0.000823895565799559;0.000971918314479012;0.00111939389136366;0.00126632208570627;0.00141270269546109;0.00155853552726339;0.00170382039640892;0.00184855712683285;0.00199274555108931;0.00213638551033019;0.0022794768542842;0.00242201944123601;0.00256401313800475;0.00270545781992298;0.00284635337081542;0.00298669968297734;0.00312649665715319;0.00326574420251518;0.00340444223664131;0.00354259068549404;0.00368018948339813;0.00381723857301899;0.00395373790534074;0.00408968743964404;0.00422508714348402;0.00435993699266828;0.00449423697123439;0.00462798707142765;0.00476118729367882;0.00489383764658139;0.00502593814686929;0.00515748881939405;0.00528848969710218;0.00541894082101253;0.00554884224019323;0.00567819401173886;0.00580699620074764;0.00593524888029807;0.006062952131426;0.0061901060431015;0.00631671071220536;0.00644276624350604;0.00656827274963604;0.00669323035106852;0.00681763917609391;0.00694149936079604;0.00706481104902866;0.00718757439239176;0.00730978955020755;0.00743145668949677;0.00755257598495482;0.00767314761892755;0.00779317178138749;0.00791264866990946;0.00803157848964654;0.00814996145330591;0.00826779778112436;0.00838508770084402;0.00850183144768805;0.00861802926433593;0.00873368140089908;0.00884878811489629;0.00896334967122888;0.00907736634215623;0.00919083840727075;0.00930376615347321;0.0094161498749479;0.00952798987313748;0.00963928645671813;0.00975003994157455;0.00986025065077467;0.00996991891454458;0.0100790450702434;0.0101876294623378;0.0102956724423769;0.0104031743689668;0.010510135607745;0.0106165565313551;0.0107224375194214;0.0108277789585228;0.010932581242168;0.0110368447707688;0.0111405699516152;0.0112437571988492;0.0113464069334393;0.0114485195831541;0.0115500955825369;0.0116511353728793;0.0117516394021958;0.0118516081251968;0.0119510420032635;0.012049941504421;0.0121483071033125;0.0122461392811728;0.0123434385258024;0.0124402053315406;0.0125364401992397;0.0126321436362382;0.0127273161563346;0.0128219582797607;0.0129160705331552;0.0130096534495371;0.013102707568279;0.0131952334350806;0.0132872316019417;0.013378702627136;0.0134696470751837;0.0135600655168253;0.0136499585289943;0.0137393266947904;0.0138281706034528;0.0139164908503332;0.0140042880368685;0.0140915627705541;0.0141783156649169;0.0142645473394878;0.0143502584197752;0.014435449537237;0.0145201213292544;0.0146042744391039;0.0146879095159304;0.0147710272147199;0.014853628196272;0.014935713127173;0.0150172826797681;0.0150983375321339;0.0151788783680517;0.0152589058769791;0.0153384207540233;0.0154174236999132;0.0154959154209719;0.0155738966290892;0.015651368041694;0.0157283303817268;0.0158047843776117;0.0158807307632293;0.0159561702778886;0.0160311036662993;0.0161055316785444;0.016179455070052;0.0162528746015679;0.0163257910391276;0.0163982051540287;0.0164701177228029;0.0165415295271879;0.0166124413541001;0.0166828539956064;0.016752768248896;0.0168221849162531;0.0168911048050285;0.0169595287276116;0.0170274575014029;0.0170948919487855;0.0171618328970972;0.0172282811786028;0.0172942376304655;0.0173597030947194;0.0174246784182411;0.0174891644527217;0.0175531620546388;0.0176166720852282;0.0176796954104559;0.01774223290099;0.0178042854321725;0.0178658538839913;0.0179269391410516;0.0179875420925484;0.0180476636322377;0.0181073046584087;0.0181664660738554;0.0182251487858485;0.0182833537061072;0.018341081750771;0.0183983338403711;0.018455110899803;0.0185114138582973;0.0185672436493922;0.0186226012109047;0.0186774874849029;0.0187319034176773;0.0187858499597128;0.0188393280656603;0.0188923386943085;0.0189448828085557;0.0189969613753813;0.0190485753658179;0.0190997257549227;0.0191504135217495;0.0192006396493202;0.0192504051245967;0.0192997109384527;0.019348558085645;0.0193969475647859;0.0194448803783146;0.0194923575324687;0.0195393800372564;0.0195859489064282;0.0196320651574482;0.0196777298114666;0.0197229438932907;0.0197677084313573;0.0198120244577041;0.0198558930079418;0.0198993151212255;0.0199422918402268;0.0199848242111055;0.0200269132834817;0.0200685601104072;0.0201097657483373;0.0201505312571035;0.020190857699884;0.020230746143177;0.0202701976567714;0.0203092133137194;0.0203477941903082;0.0203859413660319;0.0204236559235634;0.0204609389487264;0.0204977915304673;0.0205342147608274;0.0205702097349146;0.0206057775508754;0.0206409193098672;0.02067563611603;0.0207099290764587;0.0207437993011751;0.0207772479030999;0.0208102759980249;0.020842884704585;0.0208750751442305;0.0209068484411992;0.0209382057224885;0.0209691481178275;0.0209996767596496;0.0210297927830643;0.0210594973258299;0.0210887915283252;0.0211176765335223;0.0211461534869588;0.02117422353671;0.0212018878333615;0.0212291475299812;0.0212560037820922;0.0212824577476449;0.0213085105869897;0.0213341634628491;0.0213594175402908;0.0213842739866995;0.0214087339717505;0.021432798667381;0.0214564692477637;0.0214797468892794;0.0215026327704889;0.0215251280721066;0.0215472339769727;0.0215689516700262;0.0215902823382775;0.0216112271707815;0.0216317873586099;0.021651964094825;0.0216717585744516;0.0216911719944508;0.0217102055536922;0.0217288604529277;0.0217471378947638;0.0217650390836353;0.0217825652257779;0.0217997175292016;0.0218164972036641;0.0218329054606434;0.0218489435133116;0.0218646125765079;0.021879913866712;0.0218948486020174;0.0219094180021051;0.0219236232882163;0.0219374656831268;0.0219509464111195;0.021964066697959;0.0219768277708642;0.0219892308584827;0.0220012771908637;0.0220129679994325;0.0220243045169635;0.0220352879775545;0.0220459196166004;0.0220562006707666;0.0220661323779637;0.0220757159773207;0.0220849527091593;0.0220938438149682;0.0221023905373766;0.0221105941201285;0.0221184558080573;0.0221259768470592;0.0221331584840681;0.0221400019670297;0.0221465085448756;0.022152679467498;0.0221585159857239;0.0221640193512895;0.0221691908168152;0.0221740316357794;0.0221785430624938;0.0221827263520777;0.0221865827604326;0.0221901135442173;0.0221933199608223;0.0221962032683452;0.022198764725565;0.0222010055919171;0.0222029271274689;0.0222045305928941;0.0222058172494483;0.0222067883589439;0.0222074451837253;0.0222077889866442;0.0222078210310349;0.0222075425806899;0.0222069548998346;0.0222060592531036;0.0222048569055155;0.0222033491224491;0.0222015371696183;0.0221994223130485;0.0221970058190519;0.0221942889542031;0.0221912729853155;0.0221879591794167;0.0221843488037246;0.0221804431256237;0.0221762434126404;0.02217175093242;0.0221669669527021;0.0221618927412975;0.0221565295660639;0.0221508786948827;0.0221449413956349;0.0221387189361781;0.0221322125843227;0.0221254236078085;0.0221183532742814;0.02211100285127;0.0221033736061624;0.0220954668061832;0.0220872837183699;0.0220788256095504;0.0220700937463195;0.0220610893950162;0.0220518138217011;0.0220422682921327;0.0220324540717458;0.0220223724256277;0.0220120246184963;0.0220014119146775;0.021990535578082;0.0219793968721838;0.021967997059997;0.0219563374040542;0.0219444191663836;0.0219322436084871;0.0219198119913184;0.0219071255752605;0.021894185620104;0.021880993385025;0.0218675501285635;0.0218538571086012;0.0218399155823402;0.021825726806281;0.021811292036201;0.0217966125271333;0.0217816895333444;0.0217665243083139;0.0217511181047122;0.02173547217438;0.0217195877683065;0.0217034661366086;0.0216871085285099;0.0216705161923194;0.0216536903754111;0.0216366323242026;0.0216193432841346;0.0216018244996503;0.0215840772141744;0.021566102670093;0.0215479021087327;0.0215294767703405;0.0215108278940632;0.0214919567179271;0.0214728644788182;0.0214535524124615;0.0214340217534013;0.0214142737349813;0.0213943095893242;0.0213741305473122;0.0213537378385675;0.0213331326914318;0.0213123163329474;0.0212912899888375;0.0212700548834864;0.0212486122399205;0.0212269632797886;0.0212051092233429;0.0211830512894198;0.0211607906954207;0.021138328657293;0.0211156663895112;0.0210928051050577;0.0210697460154048;0.0210464903304949;0.0210230392587226;0.0209993940069161;0.0209755557803181;0.0209515257825682;0.0209273052156838;0.0209028952800423;0.020878297174363;0.0208535120956883;0.0208285412393665;0.0208033857990334;0.0207780469665943;0.0207525259322066;0.0207268238842619;0.0207009420093679;0.0206748814923318;0.020648643516142;0.0206222292619508;0.0205956399090575;0.0205688766348906;0.0205419406149913;0.0205148330229955;0.0204875550306177;0.0204601078076336;0.020432492521863;0.0204047103391538;0.0203767624233645;0.0203486499363482;0.0203203740379356;0.020291935885919;0.0202633366360355;0.020234577441951;0.020205659455244;0.0201765838253892;0.0201473516997418;0.0201179642235214;0.0200884225397961;0.0200587277894667;0.020028881111251;0.0199988836416682;0.0199687365150233;0.0199384408633918;0.0199079978166042;0.0198774085022304;0.0198466740455651;0.0198157955696123;0.0197847741950701;0.0197536110403162;0.0197223072213925;0.0196908638519908;0.0196592820434375;0.0196275629046798;0.0195957075422703;0.0195637170603529;0.0195315925606485;0.0194993351424409;0.0194669459025618;0.0194344259353776;0.0194017763327749;0.0193689981841464;0.0193360925763775;0.0193030605938321;0.0192699033183391;0.0192366218291787;0.019203217203069;0.0191696905141523;0.0191360428339821;0.0191022752315096;0.0190683887730704;0.0190343845223718;0.0190002635404793;0.018966026885804;0.0189316756140897;0.0188972107784002;0.0188626334291062;0.0188279446138735;0.0187931453776497;0.0187582367626523;0.0187232198083563;0.0186880955514817;0.0186528650259817;0.0186175292630303;0.0185820892910106;0.0185465461355029;0.0185109008192725;0.0184751543622587;0.0184393077815623;0.0184033620914347;0.0183673183032665;0.0183311774255754;0.0182949404639958;0.0182586084212671;0.0182221822972225;0.0181856630887784;0.0181490517899233;0.0181123493917068;0.0180755568822289;0.0180386752466294;0.0180017054670774;0.0179646485227607;0.0179275053898754;0.0178902770416155;0.0178529644481627;0.0178155685766767;0.0177780903912842;0.01774053085307;0.0177028909200663;0.0176651715472435;0.0176273736864999;0.0175894982866526;0.0175515462934279;0.0175135186494514;0.0174754162942395;0.0174372401641892;0.0173989911925696;0.0173606703095124;0.0173222784420034;0.0172838165138729;0.0172452854457875;0.0172066861552411;0.0171680195565462;0.0171292865608255;0.0170904880760033;0.0170516250067972;0.0170126982547098;0.0169737087180206;0.0169346572917774;0.0168955448677892;0.0168563723346172;0.0168171405775676;0.016777850478684;0.0167385029167391;0.0166990987672274;0.016659638902358;0.0166201241910468;0.0165805554989092;0.0165409336882532;0.0165012596180719;0.0164615341440367;0.01642175811849;0.0163819323904387;0.0163420578055472;0.0163021352061308;0.0162621654311489;0.0162221493161987;0.0161820876935087;0.0161419813919321;0.016101831236941;0.0160616380506197;0.0160214026516591;0.0159811258553503;0.015940808473579;0.0159004513148196;0.0158600551841291;0.015819620883142;0.0157791492100646;0.015738640959669;0.0156980969232886;0.0156575178888119;0.0156169046406781;0.0155762579598713;0.0155355786239159;0.0154948674068714;0.0154541250793279;0.0154133524084007;0.0153725501577262;0.015331719087457;0.0152908599542575;0.0152499735112994;0.0152090605082574;0.0151681216913049;0.0151271578031099;0.0150861695828308;0.0150451577661127;0.0150041230850829;0.0149630662683479;0.0149219880409888;0.0148808891245584;0.0148397702370772;0.0147986320930298;0.0147574754033622;0.0147163008754775;0.0146751092132337;0.0146339011169396;0.0145926772833527;0.0145514384056753;0.0145101851735525;0.0144689182730687;0.0144276383867453;0.0143863461935379;0.014345042368834;0.0143037275844501;0.0142624025086298;0.0142210678060412;0.014179724137775;0.0141383721613421;0.0140970125306716;0.014055645896109;0.0140142729044144;0.0139728941987605;0.0139315104187309;0.0138901222003188;0.0138487301759252;0.0138073349743574;0.0137659372208281;0.0137245375369534;0.0136831365407524;0.0136417348466455;0.0136003330654535;0.013558931804397;0.0135175316670951;0.0134761332535648;0.0134347371602205;0.013393343979873;0.0133519543017293;0.013310568711392;0.0132691877908589;0.013227812118523;0.0131864422691718;0.0131450788139878;0.0131037223205477;0.0130623733528234;0.0130210324711811;0.0129797002323824;0.0129383771895841;0.0128970638923385;0.0128557608865941;0.0128144687146963;0.0127731879153873;0.0127319190238077;0.0126906625714966;0.0126494190863927;0.0126081890928351;0.0125669731115647;0.0125257716597247;0.0124845852508622;0.0124434143949294;0.0124022595982848;0.0123611213636946;0.0123200001903342;0.0122788965737901;0.0122378110060608;0.0121967439755595;0.0121556959671148;0.0121146674619735;0.0120736589378022;0.0120326708686893;0.0119917037251469;0.0119507579741136;0.0119098340789561;0.011868932499472;0.0118280536918919;0.0117871981088822;0.0117463661995474;0.0117055584094329;0.0116647751805277;0.011624016951267;0.0115832841565354;0.0115425772276698;0.0115018965924621;0.0114612426751627;0.0114206158964832;0.0113800166736003;0.0113394454201587;0.0112989025462742;0.011258388458538;0.0112179035600195;0.0111774482502703;0.0111370229253276;0.0110966279777186;0.0110562637964633;0.0110159307670795;0.010975629271586;0.010935359688507;0.0108951223928764;0.0108549177562413;0.0108147461466673;0.0107746079287419;0.0107345034635795;0.0106944331088256;0.0106543972186615;0.0106143961438089;0.0105744302315346;0.0105344998256552;0.0104946052665421;0.0104547468911263;0.0104149250329032;0.0103751400219381;0.0103353921848709;0.0102956818449215;0.0102560093218952;0.0102163749321875;0.01017677898879;0.0101372218012957;0.0100977036759047;0.0100582249154293;0.0100187858193002;0.00997938668357203;0.0099400278009291;0.00990070946069135;0.00986143194882025;0.00982219554792484;0.00978300053726775;0.00974384719277134;0.00970473578702392;0.00966566658928605;0.00962663986549678;0.00958765587828016;0.00954871488695155;0.00950981714752431;0.00947096291271629;0.0094321524319565;0.00939338595139185;0.00935466371389393;0.0093159859590658;0.00927735292324897;0.00923876483953036;0.00920022193774929;0.00916172444450464;0.00912327258316188;0.00908486657386049;0.00904650663352107;0.00900819297585279;0.00896992581136071;0.00893170534735332;0.00889353178795001;0.0088554053340887;0.00881732618353346;0.00877929453088222;0.00874131056757457;0.00870337448189951;0.00866548645900342;0.00862764668089797;0.0085898553264681;0.0085521125714801;0.00851441858858978;0.00847677354735049;0.00843917761422159;0.00840163095257653;0.00836413372271132;0.0083266860818529;0.00828928818416756;0.00825194018076957;0.00821464221972963;0.00817739444608359;0.00814019700184109;0.00810305002599434;0.00806595365452684;0.00802890802042233;0.00799191325367362;0.00795496948129161;0.00791807682731424;0.00788123541281559;0.00784444535591502;0.00780770677178631;0.00777101977266688;0.00773438446786714;0.00769780096377973;0.00766126936388893;0.00762478976878012;0.00758836227614927;0.00755198698081245;0.00751566397471543;0.00747939334694328;0.00744317518373013;0.00740700956846889;0.00737089658172098;0.00733483630122624;0.00729882880191279;0.00726287415590692;0.00722697243254317;0.00719112369837428;0.00715532801718132;0.00711958544998381;0.00708389605504983;0.00704825988790636;0.00701267700134947;0.00697714744545466;0.00694167126758721;0.00690624851241261;0.00687087922190698;0.00683556343536762;0.00680030118942352;0.00676509251804594;0.00672993745255913;0.00669483602165082;0.00665978825138318;0.00662479416520342;0.00658985378395465;0.00655496712588674;0.00652013420666724;0.00648535503939221;0.00645062963459735;0.00641595800026893;0.00638134014185485;0.00634677606227583;0.0063122657619364;0.00627780923873624;0.00624340648808137;0.00620905750289535;0.00617476227363066;0.00614052078828002;0.00610633303238773;0.0060721989890612;0.00603811863898232;0.00600409196041901;0.00597011892923675;0.0059361995189101;0.00590233370053443;0.00586852144283747;0.00583476271219105;0.00580105747262281;0.00576740568582796;0.00573380731118106;0.0057002623057479;0.00566677062429732;0.00563333221931314;0.00559994704100609;0.00556661503732576;0.00553333615397264;0.00550011033441016;0.00546693751987671;0.00543381764939783;0.00540075065979826;0.00536773648571416;0.00533477505960533;0.00530186631176739;0.0052690101703441;0.00523620656133964;0.00520345540863088;0.00517075663397987;0.0051381101570461;0.00510551589539899;0.00507297376453033;0.00504048367786674;0.00500804554678217;0.00497565928061048;0.00494332478665798;0.00491104197021601;0.00487881073457359;0.00484663098103001;0.00481450260890759;0.00478242551556433;0.00475039959640664;0.0047184247449021;0.00468650085259228;0.00465462780910543;0.00462280550216948;0.00459103381762476;0.00455931263943696;0.00452764184970998;0.00449602132869889;0.00446445095482291;0.00443293060467832;0.00440146015305152;0.00437003947293203;0.00433866843552555;0.00430734691026696;0.00427607476483351;0.00424485186515788;0.00421367807544131;0.00418255325816677;0.00415147727411206;0.00412044998236316;0.00408947124032728;0.0040585409037462;0.00402765882670945;0.00399682486166768;0.00396603885944579;0.00393530066925641;0.00390461013871314;0.00387396711384388;0.00384337143910425;0.00381282295739088;0.00378232151005492;0.00375186693691537;0.00372145907627252;0.00369109776492143;0.00366078283816534;0.00363051412982916;0.00360029147227299;0.0035701146964056;0.00353998363169792;0.00350989810619665;0.00347985794653768;0.0034498629779598;0.00341991302431814;0.00339000790809786;0.00336014745042765;0.00333033147109343;0.00330055978855185;0.00327083221994408;0.00324114858110932;0.00321150868659852;0.00318191234968804;0.00315235938239325;0.00312284959548233;0.00309338279848989;0.00306395879973069;0.00303457740631335;0.00300523842415407;0.00297594165799033;0.00294668691139467;0.00291747398678844;0.00288830268545549;0.00285917280755598;0.00283008415214012;0.00280103651716193;0.00277202969949308;0.00274306349493657;0.00271413769824061;0.00268525210311237;0.00265640650223175;0.00262760068726523;0.00259883444887969;0.00257010757675613;0.00254141985960361;0.00251277108517291;0.0024841610402705;0.00245558951077227;0.00242705628163739;0.00239856113692212;0.00237010385979366;0.00234168423254391;0.00231330203660339;0.00228495705255503;0.002256649060148;0.00222837783831153;0.00220014316516874;0.00217194481805049;0.00214378257350922;0.00211565620733274;0.00208756549455806;0.00205951020948525;0.00203149012569121;0.00200350501604353;0.00197555465271432;0.00194763880719397;0.001919757250305;0.00189190975221584;0.00186409608245468;0.00183631600992321;0.00180856930291045;0.00178085572910654;0.00175317505561652;0.00172552704897407;0.00169791147515534;0.00167032809959269;0.00164277668718846;0.00161525700232871;0.00158776880889696;0.00156031187028796;0.00153288594942139;0.0015054908087556;0.00147812621030134;0.00145079191563545;0.00142348768591449;0.00139621328188859;0.00136896846391498;0.00134175299197172;0.0013145666256714;0.00128740912427467;0.00126028024670401;0.00123317975155729;0.00120610739712138;0.0011790629413858;0.00115204614205629;0.00112505675656834;0.00109809454210086;0.00107115925558966;0.00104425065374103;0.00101736849304526;0.000990512529790111;0.000963682520074419;0.000936878219821494;0.000910099384792634;0.000883345770600572;0.00085661713272294;0.000829913226515637;0.000803233807226332;0.000776578630007802;0.000749947449931329;0.00072334002200008;0.000696756101162392;0.000670195442325197;0.000643657800367275;0.000617142930152563;0.000590650586543436;0.000564180524413982;0.00053773249866318;0.000511306264228219;0.000484901576097635;0.000458518189324518;0.000432155859039685;0.000405814340464771;0.00037949338892544;0.000353192759864432;0.00032691220885466;0.000300651491612275;0.00027441036400972;0.000248188582088693;0.000221985902073233;0.000195802080382638;0.000169636873644433;0.000143490038707315;0.000117361332654004;9.12505128142159e-005;6.51573367774649e-005;3.90815624059165e-005;1.30229478472013e-005]|9|8|on"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"fir_coef"
		Location		[609, 271, 1389, 957]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 68, 60, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 193, 60, 207]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_gen"
		  Ports			  [1, 1]
		  Position		  [130, 109, 220, 141]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "1024 coefs in bram\n9_8 out/1"
		  UserDataPersistent	  on
		  UserData		  "DataTag7"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Coefficient Generator"
		  MaskDescription	  "A coefficient generator."
		  MaskHelp		  "<pre>\nDescription::\n\nA coefficient generator.\n\nMask Parameters::\n\nCoefficiants (coefs): The coefficients to output.  These should be specified as doubles.\nThey will be rounded/saturated according to the specified number of bits (n_bits)\nand binary point (bin_pt).\n\nNumber of Coefficient Bits (n_bits): The number of bits used for the fixed point binary\nrepresentation of the coefficients.\n\nCoefficient Binary Point (bin_pt): The binary point of the fixed point binary representation\nof the coefficients.\n\nLog2 Cycles per Coefficient (log2_cpc): The log2 value of the number of cycles per coefficient.\nMust be a non-negative integer (i.e. cycles per coefficient must be a power of 2).  \n\nUse BRAM (use_bram): Check this checkbox to store coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Coefficients|Number of Bits|Binary Point|Log2 Cycles per Coefficient|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off"
		  MaskCallbackString	  "||||"
		  MaskEnableString	  "off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on"
		  MaskVarAliasString	  ",,,,"
		  MaskVariables		  "coefs=&1;n_bits=&2;bin_pt=&3;log2_cpc=&4;use_bram=&5;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "[7.55822333239443e-005;0.000226337373781674;0.000376546527419557;0.000526209439676531;0.000675325864794748;0.000823895565799559;0.000971918314479012;0.00111939389136366;0.00126632208570627;0.00141270269546109;0.00155853552726339;0.00170382039640892;0.00184855712683285;0.00199274555108931;0.00213638551033019;0.0022794768542842;0.00242201944123601;0.00256401313800475;0.00270545781992298;0.00284635337081542;0.00298669968297734;0.00312649665715319;0.00326574420251518;0.00340444223664131;0.00354259068549404;0.00368018948339813;0.00381723857301899;0.00395373790534074;0.00408968743964404;0.00422508714348402;0.00435993699266828;0.00449423697123439;0.00462798707142765;0.00476118729367882;0.00489383764658139;0.00502593814686929;0.00515748881939405;0.00528848969710218;0.00541894082101253;0.00554884224019323;0.00567819401173886;0.00580699620074764;0.00593524888029807;0.006062952131426;0.0061901060431015;0.00631671071220536;0.00644276624350604;0.00656827274963604;0.00669323035106852;0.00681763917609391;0.00694149936079604;0.00706481104902866;0.00718757439239176;0.00730978955020755;0.00743145668949677;0.00755257598495482;0.00767314761892755;0.00779317178138749;0.00791264866990946;0.00803157848964654;0.00814996145330591;0.00826779778112436;0.00838508770084402;0.00850183144768805;0.00861802926433593;0.00873368140089908;0.00884878811489629;0.00896334967122888;0.00907736634215623;0.00919083840727075;0.00930376615347321;0.0094161498749479;0.00952798987313748;0.00963928645671813;0.00975003994157455;0.00986025065077467;0.00996991891454458;0.0100790450702434;0.0101876294623378;0.0102956724423769;0.0104031743689668;0.010510135607745;0.0106165565313551;0.0107224375194214;0.0108277789585228;0.010932581242168;0.0110368447707688;0.0111405699516152;0.0112437571988492;0.0113464069334393;0.0114485195831541;0.0115500955825369;0.0116511353728793;0.0117516394021958;0.0118516081251968;0.0119510420032635;0.012049941504421;0.0121483071033125;0.0122461392811728;0.0123434385258024;0.0124402053315406;0.0125364401992397;0.0126321436362382;0.0127273161563346;0.0128219582797607;0.0129160705331552;0.0130096534495371;0.013102707568279;0.0131952334350806;0.0132872316019417;0.013378702627136;0.0134696470751837;0.0135600655168253;0.0136499585289943;0.0137393266947904;0.0138281706034528;0.0139164908503332;0.0140042880368685;0.0140915627705541;0.0141783156649169;0.0142645473394878;0.0143502584197752;0.014435449537237;0.0145201213292544;0.0146042744391039;0.0146879095159304;0.0147710272147199;0.014853628196272;0.014935713127173;0.0150172826797681;0.0150983375321339;0.0151788783680517;0.0152589058769791;0.0153384207540233;0.0154174236999132;0.0154959154209719;0.0155738966290892;0.015651368041694;0.0157283303817268;0.0158047843776117;0.0158807307632293;0.0159561702778886;0.0160311036662993;0.0161055316785444;0.016179455070052;0.0162528746015679;0.0163257910391276;0.0163982051540287;0.0164701177228029;0.0165415295271879;0.0166124413541001;0.0166828539956064;0.016752768248896;0.0168221849162531;0.0168911048050285;0.0169595287276116;0.0170274575014029;0.0170948919487855;0.0171618328970972;0.0172282811786028;0.0172942376304655;0.0173597030947194;0.0174246784182411;0.0174891644527217;0.0175531620546388;0.0176166720852282;0.0176796954104559;0.01774223290099;0.0178042854321725;0.0178658538839913;0.0179269391410516;0.0179875420925484;0.0180476636322377;0.0181073046584087;0.0181664660738554;0.0182251487858485;0.0182833537061072;0.018341081750771;0.0183983338403711;0.018455110899803;0.0185114138582973;0.0185672436493922;0.0186226012109047;0.0186774874849029;0.0187319034176773;0.0187858499597128;0.0188393280656603;0.0188923386943085;0.0189448828085557;0.0189969613753813;0.0190485753658179;0.0190997257549227;0.0191504135217495;0.0192006396493202;0.0192504051245967;0.0192997109384527;0.019348558085645;0.0193969475647859;0.0194448803783146;0.0194923575324687;0.0195393800372564;0.0195859489064282;0.0196320651574482;0.0196777298114666;0.0197229438932907;0.0197677084313573;0.0198120244577041;0.0198558930079418;0.0198993151212255;0.0199422918402268;0.0199848242111055;0.0200269132834817;0.0200685601104072;0.0201097657483373;0.0201505312571035;0.020190857699884;0.020230746143177;0.0202701976567714;0.0203092133137194;0.0203477941903082;0.0203859413660319;0.0204236559235634;0.0204609389487264;0.0204977915304673;0.0205342147608274;0.0205702097349146;0.0206057775508754;0.0206409193098672;0.02067563611603;0.0207099290764587;0.0207437993011751;0.0207772479030999;0.0208102759980249;0.020842884704585;0.0208750751442305;0.0209068484411992;0.0209382057224885;0.0209691481178275;0.0209996767596496;0.0210297927830643;0.0210594973258299;0.0210887915283252;0.0211176765335223;0.0211461534869588;0.02117422353671;0.0212018878333615;0.0212291475299812;0.0212560037820922;0.0212824577476449;0.0213085105869897;0.0213341634628491;0.0213594175402908;0.0213842739866995;0.0214087339717505;0.021432798667381;0.0214564692477637;0.0214797468892794;0.0215026327704889;0.0215251280721066;0.0215472339769727;0.0215689516700262;0.0215902823382775;0.0216112271707815;0.0216317873586099;0.021651964094825;0.0216717585744516;0.0216911719944508;0.0217102055536922;0.0217288604529277;0.0217471378947638;0.0217650390836353;0.0217825652257779;0.0217997175292016;0.0218164972036641;0.0218329054606434;0.0218489435133116;0.0218646125765079;0.021879913866712;0.0218948486020174;0.0219094180021051;0.0219236232882163;0.0219374656831268;0.0219509464111195;0.021964066697959;0.0219768277708642;0.0219892308584827;0.0220012771908637;0.0220129679994325;0.0220243045169635;0.0220352879775545;0.0220459196166004;0.0220562006707666;0.0220661323779637;0.0220757159773207;0.0220849527091593;0.0220938438149682;0.0221023905373766;0.0221105941201285;0.0221184558080573;0.0221259768470592;0.0221331584840681;0.0221400019670297;0.0221465085448756;0.022152679467498;0.0221585159857239;0.0221640193512895;0.0221691908168152;0.0221740316357794;0.0221785430624938;0.0221827263520777;0.0221865827604326;0.0221901135442173;0.0221933199608223;0.0221962032683452;0.022198764725565;0.0222010055919171;0.0222029271274689;0.0222045305928941;0.0222058172494483;0.0222067883589439;0.0222074451837253;0.0222077889866442;0.0222078210310349;0.0222075425806899;0.0222069548998346;0.0222060592531036;0.0222048569055155;0.0222033491224491;0.0222015371696183;0.0221994223130485;0.0221970058190519;0.0221942889542031;0.0221912729853155;0.0221879591794167;0.0221843488037246;0.0221804431256237;0.0221762434126404;0.02217175093242;0.0221669669527021;0.0221618927412975;0.0221565295660639;0.0221508786948827;0.0221449413956349;0.0221387189361781;0.0221322125843227;0.0221254236078085;0.0221183532742814;0.02211100285127;0.0221033736061624;0.0220954668061832;0.0220872837183699;0.0220788256095504;0.0220700937463195;0.0220610893950162;0.0220518138217011;0.0220422682921327;0.0220324540717458;0.0220223724256277;0.0220120246184963;0.0220014119146775;0.021990535578082;0.0219793968721838;0.021967997059997;0.0219563374040542;0.0219444191663836;0.0219322436084871;0.0219198119913184;0.0219071255752605;0.021894185620104;0.021880993385025;0.0218675501285635;0.0218538571086012;0.0218399155823402;0.021825726806281;0.021811292036201;0.0217966125271333;0.0217816895333444;0.0217665243083139;0.0217511181047122;0.02173547217438;0.0217195877683065;0.0217034661366086;0.0216871085285099;0.0216705161923194;0.0216536903754111;0.0216366323242026;0.0216193432841346;0.0216018244996503;0.0215840772141744;0.021566102670093;0.0215479021087327;0.0215294767703405;0.0215108278940632;0.0214919567179271;0.0214728644788182;0.0214535524124615;0.0214340217534013;0.0214142737349813;0.0213943095893242;0.0213741305473122;0.0213537378385675;0.0213331326914318;0.0213123163329474;0.0212912899888375;0.0212700548834864;0.0212486122399205;0.0212269632797886;0.0212051092233429;0.0211830512894198;0.0211607906954207;0.021138328657293;0.0211156663895112;0.0210928051050577;0.0210697460154048;0.0210464903304949;0.0210230392587226;0.0209993940069161;0.0209755557803181;0.0209515257825682;0.0209273052156838;0.0209028952800423;0.020878297174363;0.0208535120956883;0.0208285412393665;0.0208033857990334;0.0207780469665943;0.0207525259322066;0.0207268238842619;0.0207009420093679;0.0206748814923318;0.020648643516142;0.0206222292619508;0.0205956399090575;0.0205688766348906;0.0205419406149913;0.0205148330229955;0.0204875550306177;0.0204601078076336;0.020432492521863;0.0204047103391538;0.0203767624233645;0.0203486499363482;0.0203203740379356;0.020291935885919;0.0202633366360355;0.020234577441951;0.020205659455244;0.0201765838253892;0.0201473516997418;0.0201179642235214;0.0200884225397961;0.0200587277894667;0.020028881111251;0.0199988836416682;0.0199687365150233;0.0199384408633918;0.0199079978166042;0.0198774085022304;0.0198466740455651;0.0198157955696123;0.0197847741950701;0.0197536110403162;0.0197223072213925;0.0196908638519908;0.0196592820434375;0.0196275629046798;0.0195957075422703;0.0195637170603529;0.0195315925606485;0.0194993351424409;0.0194669459025618;0.0194344259353776;0.0194017763327749;0.0193689981841464;0.0193360925763775;0.0193030605938321;0.0192699033183391;0.0192366218291787;0.019203217203069;0.0191696905141523;0.0191360428339821;0.0191022752315096;0.0190683887730704;0.0190343845223718;0.0190002635404793;0.018966026885804;0.0189316756140897;0.0188972107784002;0.0188626334291062;0.0188279446138735;0.0187931453776497;0.0187582367626523;0.0187232198083563;0.0186880955514817;0.0186528650259817;0.0186175292630303;0.0185820892910106;0.0185465461355029;0.0185109008192725;0.0184751543622587;0.0184393077815623;0.0184033620914347;0.0183673183032665;0.0183311774255754;0.0182949404639958;0.0182586084212671;0.0182221822972225;0.0181856630887784;0.0181490517899233;0.0181123493917068;0.0180755568822289;0.0180386752466294;0.0180017054670774;0.0179646485227607;0.0179275053898754;0.0178902770416155;0.0178529644481627;0.0178155685766767;0.0177780903912842;0.01774053085307;0.0177028909200663;0.0176651715472435;0.0176273736864999;0.0175894982866526;0.0175515462934279;0.0175135186494514;0.0174754162942395;0.0174372401641892;0.0173989911925696;0.0173606703095124;0.0173222784420034;0.0172838165138729;0.0172452854457875;0.0172066861552411;0.0171680195565462;0.0171292865608255;0.0170904880760033;0.0170516250067972;0.0170126982547098;0.0169737087180206;0.0169346572917774;0.0168955448677892;0.0168563723346172;0.0168171405775676;0.016777850478684;0.0167385029167391;0.0166990987672274;0.016659638902358;0.0166201241910468;0.0165805554989092;0.0165409336882532;0.0165012596180719;0.0164615341440367;0.01642175811849;0.0163819323904387;0.0163420578055472;0.0163021352061308;0.0162621654311489;0.0162221493161987;0.0161820876935087;0.0161419813919321;0.016101831236941;0.0160616380506197;0.0160214026516591;0.0159811258553503;0.015940808473579;0.0159004513148196;0.0158600551841291;0.015819620883142;0.0157791492100646;0.015738640959669;0.0156980969232886;0.0156575178888119;0.0156169046406781;0.0155762579598713;0.0155355786239159;0.0154948674068714;0.0154541250793279;0.0154133524084007;0.0153725501577262;0.015331719087457;0.0152908599542575;0.0152499735112994;0.0152090605082574;0.0151681216913049;0.0151271578031099;0.0150861695828308;0.0150451577661127;0.0150041230850829;0.0149630662683479;0.0149219880409888;0.0148808891245584;0.0148397702370772;0.0147986320930298;0.0147574754033622;0.0147163008754775;0.0146751092132337;0.0146339011169396;0.0145926772833527;0.0145514384056753;0.0145101851735525;0.0144689182730687;0.0144276383867453;0.0143863461935379;0.014345042368834;0.0143037275844501;0.0142624025086298;0.0142210678060412;0.014179724137775;0.0141383721613421;0.0140970125306716;0.014055645896109;0.0140142729044144;0.0139728941987605;0.0139315104187309;0.0138901222003188;0.0138487301759252;0.0138073349743574;0.0137659372208281;0.0137245375369534;0.0136831365407524;0.0136417348466455;0.0136003330654535;0.013558931804397;0.0135175316670951;0.0134761332535648;0.0134347371602205;0.013393343979873;0.0133519543017293;0.013310568711392;0.0132691877908589;0.013227812118523;0.0131864422691718;0.0131450788139878;0.0131037223205477;0.0130623733528234;0.0130210324711811;0.0129797002323824;0.0129383771895841;0.0128970638923385;0.0128557608865941;0.0128144687146963;0.0127731879153873;0.0127319190238077;0.0126906625714966;0.0126494190863927;0.0126081890928351;0.0125669731115647;0.0125257716597247;0.0124845852508622;0.0124434143949294;0.0124022595982848;0.0123611213636946;0.0123200001903342;0.0122788965737901;0.0122378110060608;0.0121967439755595;0.0121556959671148;0.0121146674619735;0.0120736589378022;0.0120326708686893;0.0119917037251469;0.0119507579741136;0.0119098340789561;0.011868932499472;0.0118280536918919;0.0117871981088822;0.0117463661995474;0.0117055584094329;0.0116647751805277;0.011624016951267;0.0115832841565354;0.0115425772276698;0.0115018965924621;0.0114612426751627;0.0114206158964832;0.0113800166736003;0.0113394454201587;0.0112989025462742;0.011258388458538;0.0112179035600195;0.0111774482502703;0.0111370229253276;0.0110966279777186;0.0110562637964633;0.0110159307670795;0.010975629271586;0.010935359688507;0.0108951223928764;0.0108549177562413;0.0108147461466673;0.0107746079287419;0.0107345034635795;0.0106944331088256;0.0106543972186615;0.0106143961438089;0.0105744302315346;0.0105344998256552;0.0104946052665421;0.0104547468911263;0.0104149250329032;0.0103751400219381;0.0103353921848709;0.0102956818449215;0.0102560093218952;0.0102163749321875;0.01017677898879;0.0101372218012957;0.0100977036759047;0.0100582249154293;0.0100187858193002;0.00997938668357203;0.0099400278009291;0.00990070946069135;0.00986143194882025;0.00982219554792484;0.00978300053726775;0.00974384719277134;0.00970473578702392;0.00966566658928605;0.00962663986549678;0.00958765587828016;0.00954871488695155;0.00950981714752431;0.00947096291271629;0.0094321524319565;0.00939338595139185;0.00935466371389393;0.0093159859590658;0.00927735292324897;0.00923876483953036;0.00920022193774929;0.00916172444450464;0.00912327258316188;0.00908486657386049;0.00904650663352107;0.00900819297585279;0.00896992581136071;0.00893170534735332;0.00889353178795001;0.0088554053340887;0.00881732618353346;0.00877929453088222;0.00874131056757457;0.00870337448189951;0.00866548645900342;0.00862764668089797;0.0085898553264681;0.0085521125714801;0.00851441858858978;0.00847677354735049;0.00843917761422159;0.00840163095257653;0.00836413372271132;0.0083266860818529;0.00828928818416756;0.00825194018076957;0.00821464221972963;0.00817739444608359;0.00814019700184109;0.00810305002599434;0.00806595365452684;0.00802890802042233;0.00799191325367362;0.00795496948129161;0.00791807682731424;0.00788123541281559;0.00784444535591502;0.00780770677178631;0.00777101977266688;0.00773438446786714;0.00769780096377973;0.00766126936388893;0.00762478976878012;0.00758836227614927;0.00755198698081245;0.00751566397471543;0.00747939334694328;0.00744317518373013;0.00740700956846889;0.00737089658172098;0.00733483630122624;0.00729882880191279;0.00726287415590692;0.00722697243254317;0.00719112369837428;0.00715532801718132;0.00711958544998381;0.00708389605504983;0.00704825988790636;0.00701267700134947;0.00697714744545466;0.00694167126758721;0.00690624851241261;0.00687087922190698;0.00683556343536762;0.00680030118942352;0.00676509251804594;0.00672993745255913;0.00669483602165082;0.00665978825138318;0.00662479416520342;0.00658985378395465;0.00655496712588674;0.00652013420666724;0.00648535503939221;0.00645062963459735;0.00641595800026893;0.00638134014185485;0.00634677606227583;0.0063122657619364;0.00627780923873624;0.00624340648808137;0.00620905750289535;0.00617476227363066;0.00614052078828002;0.00610633303238773;0.0060721989890612;0.00603811863898232;0.00600409196041901;0.00597011892923675;0.0059361995189101;0.00590233370053443;0.00586852144283747;0.00583476271219105;0.00580105747262281;0.00576740568582796;0.00573380731118106;0.0057002623057479;0.00566677062429732;0.00563333221931314;0.00559994704100609;0.00556661503732576;0.00553333615397264;0.00550011033441016;0.00546693751987671;0.00543381764939783;0.00540075065979826;0.00536773648571416;0.00533477505960533;0.00530186631176739;0.0052690101703441;0.00523620656133964;0.00520345540863088;0.00517075663397987;0.0051381101570461;0.00510551589539899;0.00507297376453033;0.00504048367786674;0.00500804554678217;0.00497565928061048;0.00494332478665798;0.00491104197021601;0.00487881073457359;0.00484663098103001;0.00481450260890759;0.00478242551556433;0.00475039959640664;0.0047184247449021;0.00468650085259228;0.00465462780910543;0.00462280550216948;0.00459103381762476;0.00455931263943696;0.00452764184970998;0.00449602132869889;0.00446445095482291;0.00443293060467832;0.00440146015305152;0.00437003947293203;0.00433866843552555;0.00430734691026696;0.00427607476483351;0.00424485186515788;0.00421367807544131;0.00418255325816677;0.00415147727411206;0.00412044998236316;0.00408947124032728;0.0040585409037462;0.00402765882670945;0.00399682486166768;0.00396603885944579;0.00393530066925641;0.00390461013871314;0.00387396711384388;0.00384337143910425;0.00381282295739088;0.00378232151005492;0.00375186693691537;0.00372145907627252;0.00369109776492143;0.00366078283816534;0.00363051412982916;0.00360029147227299;0.0035701146964056;0.00353998363169792;0.00350989810619665;0.00347985794653768;0.0034498629779598;0.00341991302431814;0.00339000790809786;0.00336014745042765;0.00333033147109343;0.00330055978855185;0.00327083221994408;0.00324114858110932;0.00321150868659852;0.00318191234968804;0.00315235938239325;0.00312284959548233;0.00309338279848989;0.00306395879973069;0.00303457740631335;0.00300523842415407;0.00297594165799033;0.00294668691139467;0.00291747398678844;0.00288830268545549;0.00285917280755598;0.00283008415214012;0.00280103651716193;0.00277202969949308;0.00274306349493657;0.00271413769824061;0.00268525210311237;0.00265640650223175;0.00262760068726523;0.00259883444887969;0.00257010757675613;0.00254141985960361;0.00251277108517291;0.0024841610402705;0.00245558951077227;0.00242705628163739;0.00239856113692212;0.00237010385979366;0.00234168423254391;0.00231330203660339;0.00228495705255503;0.002256649060148;0.00222837783831153;0.00220014316516874;0.00217194481805049;0.00214378257350922;0.00211565620733274;0.00208756549455806;0.00205951020948525;0.00203149012569121;0.00200350501604353;0.00197555465271432;0.00194763880719397;0.001919757250305;0.00189190975221584;0.00186409608245468;0.00183631600992321;0.00180856930291045;0.00178085572910654;0.00175317505561652;0.00172552704897407;0.00169791147515534;0.00167032809959269;0.00164277668718846;0.00161525700232871;0.00158776880889696;0.00156031187028796;0.00153288594942139;0.0015054908087556;0.00147812621030134;0.00145079191563545;0.00142348768591449;0.00139621328188859;0.00136896846391498;0.00134175299197172;0.0013145666256714;0.00128740912427467;0.00126028024670401;0.00123317975155729;0.00120610739712138;0.0011790629413858;0.00115204614205629;0.00112505675656834;0.00109809454210086;0.00107115925558966;0.00104425065374103;0.00101736849304526;0.000990512529790111;0.000963682520074419;0.000936878219821494;0.000910099384792634;0.000883345770600572;0.00085661713272294;0.000829913226515637;0.000803233807226332;0.000776578630007802;0.000749947449931329;0.00072334002200008;0.000696756101162392;0.000670195442325197;0.000643657800367275;0.000617142930152563;0.000590650586543436;0.000564180524413982;0.00053773249866318;0.000511306264228219;0.000484901576097635;0.000458518189324518;0.000432155859039685;0.000405814340464771;0.00037949338892544;0.000353192759864432;0.00032691220885466;0.000300651491612275;0.00027441036400972;0.000248188582088693;0.000221985902073233;0.000195802080382638;0.000169636873644433;0.000143490038707315;0.000117361332654004;9.12505128142159e-005;6.51573367774649e-005;3.90815624059165e-005;1.30229478472013e-005]|9|8|0|on"
		  MaskTabNameString	  ",,,,"
		  System {
		    Name		    "c_gen"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1023"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 50 50 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "1024"
		    initVector		    "[0;0;0;0;0;0;0;0;0;0;0;0;0;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0]"
		    distributed_mem	    "Block RAM"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "8"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[7 15 27 39 47 47 43 47 47 36 47 39 27 15 7 18 7 7 11 7 7 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "coef_out"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mem"
		    SrcPort		    1
		    DstBlock		    "coef_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "data_delay"
		  Ports			  [1, 1]
		  Position		  [145, 17, 200, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sum_delay"
		  Ports			  [1, 1]
		  Position		  [145, 62, 200, 88]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [145, 187, 200, 213]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [295, 23, 325, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [295, 68, 325, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "coef"
		  Position		  [295, 118, 325, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [295, 193, 325, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_gen"
		  SrcPort		  1
		  DstBlock		  "coef"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_delay"
		  SrcPort		  1
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "sum_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [25, 0]
		  Branch {
		    Points		    [0, -75]
		    DstBlock		    "c_gen"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "sync_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_delay"
		  SrcPort		  1
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  DstBlock		  "data_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_core"
	      Ports		      [4, 3]
	      Position		      [270, 29, 360, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "delay 1024 in bram\\nno adder"
	      UserDataPersistent      on
	      UserData		      "DataTag8"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Core"
	      MaskDescription	      "A Finite Impluse Response Filter core with complex inputs and real coefficients.  This FIR filter core does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter core with complex inputs and real coefficients.\n\nThis Finite Impluse Response Filter core is designed to be paired with a FIR Coefficient Generator \nto form a FIR filter tap.  This FIR filter core does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (use_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	      MaskPromptString	      "Tap Delay|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	      MaskStyleString	      "edit,edit,edit,edit,edit,checkbox,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "delay=&1;n_bits_d=&2;bin_pt_d=&3;n_bits_s=&4;bin_pt_s=&5;use_bram=&6;mult_latency=&7;add_latency=&8;add_bypass=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "1024|8|7|17|15|on|3|1|on"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"fir_core"
		Location		[282, 135, 1062, 821]
		Open			on
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 223, 60, 237]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "coef"
		  Position		  [30, 183, 60, 197]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 278, 60, 292]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_d"
		  Ports			  [1, 2]
		  Position		  [120, 69, 160, 111]
		  AttributesFormatString  "8_7 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag9"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|7"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_d"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_s"
		  Ports			  [1, 2]
		  Position		  [120, 209, 160, 251]
		  AttributesFormatString  "17_15 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag10"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "17|15"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_s"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_im"
		  Ports			  [1, 1]
		  Position		  [345, 175, 390, 205]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_re"
		  Ports			  [1, 1]
		  Position		  [345, 80, 390, 110]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "dout_delay"
		  Ports			  [1, 1]
		  Position		  [255, 17, 310, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "3"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,eabd56db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_im"
		  Ports			  [3, 1]
		  Position		  [255, 164, 305, 216]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b\nlatency = 3"
		  UserDataPersistent	  on
		  UserData		  "DataTag11"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|on"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_im"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Terminator
		    Name		    "Terminator"
		    Position		    [290, 145, 300, 155]
		    ShowName		    off
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [0, 0]
		    Branch {
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    DstBlock		    "Terminator"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_re"
		  Ports			  [3, 1]
		  Position		  [255, 69, 305, 121]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b\nlatency = 3"
		  UserDataPersistent	  on
		  UserData		  "DataTag12"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|on"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_re"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Terminator
		    Name		    "Terminator"
		    Position		    [290, 145, 300, 155]
		    ShowName		    off
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [0, 0]
		    Branch {
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    DstBlock		    "Terminator"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [455, 119, 495, 161]
		  UserDataPersistent	  on
		  UserData		  "DataTag13"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskInitialization	  "ri_to_c_init(gcb);"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [255, 272, 310, 298]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "3"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,eabd56db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "tap_delay"
		  Ports			  [1, 1]
		  Position		  [440, 14, 500, 46]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "bram depth = 1024"
		  UserDataPersistent	  on
		  UserData		  "DataTag14"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "BRAM Delay"
		  MaskDescription	  "A delay block that uses BRAM for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses BRAM for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n\nBuffer Latency (buffer_latency): The latency of the underlying storage.\n\nBuffer Latency defaults to 1 and cannot be changed via the block's dialog box.\nFuture versions may enable the setting of that parameter from the dialog.\n</pre>"
		  MaskPromptString	  "Delay Depth|Buffer Latency"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,off"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "delay_depth=&1;buffer_latency=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "1024|"
		  MaskTabNameString	  ","
		  System {
		    Name		    "tap_delay"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Constant"
		    Ports		    [0, 1]
		    Position		    [165, 133, 180, 147]
		    ShowName		    off
		    SourceBlock		    "xbsIndex_r4/Constant"
		    SourceType		    "Xilinx Constant Block Block"
		    arith_type		    "Boolean"
		    const		    "1"
		    n_bits		    "1"
		    bin_pt		    "0"
		    explicit_period	    on
		    period		    "1"
		    dsp48_infoedit	    "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		    equ			    "P=C"
		    opselect		    "C"
		    inp2		    "PCIN>>17"
		    opr			    "+"
		    inp1		    "P"
		    carry		    "CIN"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "constant"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "15,14,1,1,white,blue,0,06094819,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 15 15 0 ],[0 0 14 14 ],[0.77 0.82 0.91]);\npatch([3 1 4 1 3 7 8 9 13 10 7 5 8 5 7 10 13 9 8 7 3 ],[2 4 7 10 12 12 11 12 12 9 12 10 7 4 2 5 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 15 15 0 0 ],[0 0 14 14 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [0, 1]
		    Position		    [130, 71, 180, 89]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1022"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    off
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,a170c862,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bram"
		    Ports		    [3, 1]
		    Position		    [230, 61, 295, 159]
		    SourceBlock		    "xbsIndex_r4/Single Port RAM"
		    SourceType		    "Xilinx Single Port Random Access Memory Block"
		    depth		    "1024"
		    initVector		    "0"
		    distributed_mem	    "Block RAM"
		    write_mode		    "Read Before Write"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "spram"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "65,98,1,1,white,blue,0,90951842,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 98 98 ],[0.77 0.82 0.91]);\npatch([15 4 19 4 15 32 37 42 60 45 31 21 36 21 31 45 60 42 37 32 15 ],[24 35 50 65 76 76 71 76 76 61 75 65 50 35 25 39 24 24 29 24 24 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 98 98 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Constant"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    3
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "bram"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [555, 23, 585, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [555, 133, 585, 147]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 278, 585, 292]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "convert_im"
		  SrcPort		  1
		  Points		  [20, 0; 0, -40]
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "convert_re"
		  SrcPort		  1
		  Points		  [20, 0; 0, 35]
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "tap_delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_im"
		  SrcPort		  1
		  DstBlock		  "convert_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_re"
		  SrcPort		  1
		  DstBlock		  "convert_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  2
		  Points		  [75, 0]
		  DstBlock		  "mult_add_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  1
		  Points		  [75, 0]
		  DstBlock		  "mult_add_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "c_to_ri_s"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "coef"
		  SrcPort		  1
		  Points		  [140, 0]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "mult_add_re"
		    DstPort		    2
		  }
		  Branch {
		    DstBlock		    "mult_add_im"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  2
		  Points		  [20, 0; 0, 75]
		  DstBlock		  "mult_add_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  1
		  DstBlock		  "mult_add_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  Points		  [35, 0]
		  Branch {
		    Points		    [0, 60]
		    DstBlock		    "c_to_ri_d"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "dout_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "dout_delay"
		  SrcPort		  1
		  DstBlock		  "tap_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "data_out"
	      Position		      [435, 23, 465, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [435, 58, 465, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [435, 93, 465, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      3
	      Points		      [25, 0; 0, 15]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      2
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      1
	      Points		      [25, 0; 0, -15]
	      DstBlock		      "data_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, -15]
	      DstBlock		      "fir_coef"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "fir_coef"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "data_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, 15]
	      DstBlock		      "fir_coef"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      4
	      DstBlock		      "fir_core"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      3
	      DstBlock		      "fir_core"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      2
	      DstBlock		      "fir_core"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      1
	      DstBlock		      "fir_core"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_tap_2"
	  Ports			  [3, 3]
	  Position		  [250, 30, 350, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "delay 1024 in bram\n1024 coefs in bram"
	  UserDataPersistent	  on
	  UserData		  "DataTag15"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Tap (Real Coefficients)"
	  MaskDescription	  "A Finite Impluse Response Filter tap with real coefficients.  This FIR filter tap does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter tap with real coefficients.\n\nThis Finite Impluse Response Filter tap is designed to be daisy chained together\nto form a multi-tap FIR filter.  This FIR filter tap does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nTap Coefficiant(s) (coef): The coefficient(s) for this tap.  For a regular FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nUsually, delay==length(coef), but this is not required.  These should be specified as doubles. \nThey will be rounded and saturated according to the specified number of bits (n_bits_c) and\nbinary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	  MaskPromptString	  "Tap Delay|Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	  MaskStyleString	  "edit,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "||||||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,,,,"
	  MaskVariables		  "delay=&1;coef=&2;n_bits_c=&3;bin_pt_c=&4;n_bits_d=&5;bin_pt_d=&6;n_bits_s=&7;bin_pt_s=&8;coef_bram=&9;delay_bram=&10;mult_latency=&11;add_latency=&12;add_bypass=&13;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "1024|[-0.000375660323525046;-0.00112528207646786;-0.00187263770065757;-0.00261772609063303;-0.00336054616203061;-0.00410109685156988;-0.00483937711704019;-0.00557538593728603;-0.00630912231219222;-0.00704058526266978;-0.00776977383064064;-0.00849668707902262;-0.00922132409171369;-0.00994368397357705;-0.0106637658504249;-0.0113815688690025;-0.0120970921969721;-0.0128103350228962;-0.0135212965562215;-0.0142299760272615;-0.0149363726871797;-0.0156404858079725;-0.0163423146824514;-0.0170418586242254;-0.0177391169676835;-0.0184340890679761;-0.0191267743009973;-0.0198171720633655;-0.0205052817724058;-0.0211911028661302;-0.0218746348032188;-0.0225558770630009;-0.0232348291454347;-0.0239114905710882;-0.0245858608811188;-0.0252579396372536;-0.0259277264217688;-0.0265952208374693;-0.0272604225076676;-0.0279233310761635;-0.0285839462072226;-0.0292422675855545;-0.0298982949162921;-0.0305520279249694;-0.0312034663574997;-0.031852609980153;-0.0324994585795345;-0.0331440119625613;-0.0337862699564402;-0.0344262324086442;-0.0350638991868898;-0.0356992701791137;-0.0363323452934489;-0.0369631244582015;-0.0375916076218262;-0.0382177947529027;-0.0388416858401109;-0.0394632808922069;-0.0400825799379981;-0.0406995830263182;-0.0413142902260021;-0.0419267016258609;-0.0425368173346564;-0.0431446374810749;-0.0437501622137022;-0.0443533917009969;-0.0449543261312647;-0.0455529657126312;-0.0461493106730163;-0.0467433612601067;-0.047335117741329;-0.0479245804038229;-0.0485117495544134;-0.0490966255195838;-0.0496792086454471;-0.0502594992977191;-0.0508374978616896;-0.0514132047421944;-0.0519866203635867;-0.0525577451697087;-0.0531265796238626;-0.0536931242087811;-0.0542573794265993;-0.0548193457988244;-0.0553790238663066;-0.0559364141892089;-0.0564915173469777;-0.0570443339383125;-0.0575948645811356;-0.0581431099125613;-0.058689070588866;-0.0592327472854569;-0.0597741406968409;-0.0603132515365938;-0.0608500805373288;-0.0613846284506648;-0.0619168960471949;-0.0624468841164546;-0.0629745934668896;-0.0635000249258237;-0.064023179339426;-0.0645440575726791;-0.0650626605093458;-0.0655789890519362;-0.0660930441216749;-0.0666048266584676;-0.0671143376208679;-0.067621577986043;-0.0681265487497408;-0.0686292509262558;-0.0691296855483946;-0.0696278536674418;-0.0701237563531258;-0.0706173946935843;-0.071108769795329;-0.071597882783211;-0.0720847348003859;-0.0725693270082785;-0.0730516605865468;-0.0735317367330474;-0.0740095566637989;-0.0744851216129466;-0.0749584328327259;-0.0754294915934268;-0.0758982991833568;-0.0763648569088048;-0.0768291660940042;-0.0772912280810962;-0.0777510442300928;-0.0782086159188393;-0.0786639445429775;-0.0791170315159078;-0.0795678782687517;-0.0800164862503141;-0.0804628569270452;-0.0809069917830028;-0.0813488923198131;-0.0817885600566336;-0.0822259965301136;-0.0826612032943558;-0.0830941819208773;-0.0835249339985711;-0.0839534611336661;-0.0843797649496887;-0.0848038470874227;-0.0852257092048699;-0.0856453529772106;-0.0860627800967632;-0.0864779922729447;-0.0868909912322302;-0.0873017787181127;-0.0877103564910625;-0.0881167263284868;-0.0885208900246886;-0.0889228493908263;-0.0893226062548723;-0.0897201624615717;-0.0901155198724016;-0.0905086803655288;-0.0908996458357691;-0.0912884181945446;-0.0916749993698427;-0.0920593913061736;-0.0924415959645284;-0.0928216153223364;-0.0931994513734234;-0.0935751061279683;-0.0939485816124612;-0.09431987986966;-0.0946890029585477;-0.0950559529542894;-0.0954207319481889;-0.0957833420476455;-0.0961437853761105;-0.0965020640730433;-0.0968581802938682;-0.0972121362099301;-0.0975639340084509;-0.0979135758924848;-0.0982610640808748;-0.0986064008082076;-0.0989495883247697;-0.0992906288965024;-0.0996295248049575;-0.0999662783472516;-0.100300891836022;-0.100633367599381;-0.100963707980872;-0.101291915339421;-0.101617992049296;-0.101941940500055;-0.102263763096507;-0.102583462258662;-0.102901040421687;-0.103216500035856;-0.103529843566511;-0.103841073494009;-0.104150192313679;-0.104457202535775;-0.104762106685429;-0.105064907302604;-0.105365606942047;-0.105664208173243;-0.105960713580369;-0.106255125762242;-0.106547447332278;-0.10683768091844;-0.107125829163193;-0.107411894723454;-0.107695880270546;-0.107977788490152;-0.108257622082262;-0.108535383761131;-0.108811076255224;-0.109084702307174;-0.109356264673732;-0.109625766125715;-0.109893209447962;-0.110158597439284;-0.110421932912413;-0.110683218693955;-0.110942457624343;-0.111199652557785;-0.111454806362214;-0.111707921919243;-0.111959002124111;-0.112208049885639;-0.112455068126173;-0.112700059781542;-0.112943027801003;-0.113183975147195;-0.113422904796084;-0.11365981973692;-0.113894722972181;-0.114127617517525;-0.11435850640174;-0.114587392666694;-0.114814279367284;-0.115039169571384;-0.115262066359796;-0.115482972826202;-0.115701892077107;-0.115918827231792;-0.116133781422266;-0.116346757793206;-0.116557759501917;-0.116766789718271;-0.116973851624663;-0.117178948415955;-0.117382083299426;-0.117583259494722;-0.117782480233803;-0.117979748760891;-0.118175068332418;-0.118368442216977;-0.118559873695267;-0.118749366060041;-0.118936922616057;-0.119122546680023;-0.119306241580546;-0.11948801065808;-0.119667857264872;-0.119845784764912;-0.12002179653388;-0.120195895959092;-0.120368086439447;-0.120538371385378;-0.120706754218796;-0.120873238373037;-0.121037827292813;-0.121200524434153;-0.121361333264356;-0.121520257261934;-0.12167729991656;-0.121832464729017;-0.121985755211139;-0.122137174885766;-0.122286727286684;-0.122434415958572;-0.122580244456954;-0.122724216348138;-0.122866335209169;-0.123006604627771;-0.123145028202296;-0.123281609541668;-0.12341635226533;-0.123549260003193;-0.123680336395576;-0.123809585093158;-0.12393700975692;-0.124062614058095;-0.124186401678108;-0.124308376308528;-0.124428541651009;-0.124546901417241;-0.124663459328888;-0.124778219117541;-0.12489118452466;-0.125002359301522;-0.125111747209161;-0.125219352018322;-0.125325177509398;-0.12542922747238;-0.125531505706804;-0.12563201602169;-0.125730762235494;-0.125827748176048;-0.125922977680511;-0.126016454595306;-0.126108182776074;-0.126198166087613;-0.126286408403824;-0.126372913607659;-0.126457685591063;-0.126540728254919;-0.126622045508995;-0.126701641271888;-0.126779519470967;-0.126855684042321;-0.126930138930701;-0.127002888089467;-0.12707393548053;-0.1271432850743;-0.127210940849628;-0.127276906793752;-0.127341186902242;-0.127403785178944;-0.127464705635923;-0.12752395229341;-0.127581529179746;-0.127637440331325;-0.127691689792542;-0.127744281615732;-0.12779521986112;-0.127844508596762;-0.12789215189849;-0.127938153849857;-0.127982518542083;-0.128025250073994;-0.128066352551973;-0.1281058300899;-0.128143686809098;-0.128179926838275;-0.128214554313474;-0.128247573378009;-0.128278988182416;-0.128308802884396;-0.128337021648755;-0.128363648647355;-0.128388688059053;-0.128412144069646;-0.128434020871817;-0.128454322665079;-0.128473053655717;-0.128490218056735;-0.128505820087798;-0.128519863975179;-0.128532353951698;-0.128543294256673;-0.128552689135858;-0.12856054284139;-0.128566859631735;-0.128571643771628;-0.128574899532022;-0.128576631190026;-0.128576843028855;-0.128575539337773;-0.128572724412033;-0.128568402552826;-0.128562578067225;-0.128555255268125;-0.128546438474192;-0.128536132009803;-0.128524340204996;-0.128511067395406;-0.128496317922217;-0.128480096132103;-0.128462406377172;-0.128443253014909;-0.128422640408125;-0.128400572924896;-0.12837705493851;-0.128352090827411;-0.128325684975145;-0.1282978417703;-0.128268565606454;-0.12823786088212;-0.128205732000685;-0.128172183370362;-0.12813721940413;-0.128100844519676;-0.128063063139347;-0.128023879690088;-0.127983298603389;-0.127941324315228;-0.127897961266018;-0.127853213900551;-0.127807086667941;-0.12775958402157;-0.127710710419032;-0.127660470322078;-0.127608868196561;-0.127555908512382;-0.127501595743429;-0.127445934367531;-0.127388928866395;-0.127330583725555;-0.127270903434314;-0.127209892485693;-0.127147555376371;-0.127083896606635;-0.12701892068032;-0.12695263210476;-0.126885035390726;-0.126816135052377;-0.126745935607204;-0.12667444157597;-0.126601657482665;-0.126527587854441;-0.126452237221565;-0.126375610117361;-0.126297711078153;-0.126218544643217;-0.12613811535472;-0.126056427757669;-0.125973486399857;-0.125889295831806;-0.125803860606714;-0.1257171852804;-0.125629274411252;-0.12554013256017;-0.125449764290513;-0.125358174168047;-0.125265366760885;-0.12517134663944;-0.125076118376365;-0.124979686546505;-0.124882055726836;-0.124783230496419;-0.12468321543634;-0.124582015129658;-0.124479634161354;-0.124376077118273;-0.124271348589074;-0.124165453164175;-0.124058395435699;-0.123950179997422;-0.123840811444718;-0.123730294374506;-0.1236186333852;-0.12350583307665;-0.123391898050093;-0.123276832908101;-0.123160642254522;-0.123043330694433;-0.122924902834086;-0.122805363280853;-0.122684716643174;-0.122562967530506;-0.122440120553267;-0.122316180322788;-0.122191151451255;-0.122065038551663;-0.121937846237758;-0.121809579123986;-0.121680241825444;-0.121549838957822;-0.121418375137358;-0.12128585498078;-0.121152283105255;-0.121017664128342;-0.120882002667932;-0.120745303342203;-0.120607570769567;-0.120468809568615;-0.120329024358068;-0.120188219756726;-0.120046400383417;-0.119903570856942;-0.119759735796028;-0.119614899819273;-0.1194690675451;-0.1193222435917;-0.119174432576984;-0.119025639118535;-0.118875867833551;-0.118725123338799;-0.118573410250562;-0.118420733184589;-0.118267096756046;-0.118112505579464;-0.117956964268688;-0.117800477436828;-0.117643049696209;-0.117484685658321;-0.117325389933767;-0.117165167132216;-0.117004021862351;-0.11684195873182;-0.116678982347186;-0.116515097313878;-0.116350308236141;-0.116184619716987;-0.116018036358147;-0.115850562760017;-0.115682203521616;-0.115512963240528;-0.115342846512864;-0.115171857933203;-0.115000002094548;-0.114827283588279;-0.1146537070041;-0.114479276929993;-0.11430399795217;-0.114127874655023;-0.113950911621077;-0.113773113430942;-0.113594484663264;-0.113415029894677;-0.113234753699757;-0.113053660650972;-0.112871755318635;-0.112689042270857;-0.112505526073501;-0.11232121129013;-0.112136102481964;-0.111950204207832;-0.111763521024123;-0.111576057484741;-0.111387818141058;-0.111198807541867;-0.111009030233334;-0.110818490758952;-0.110627193659497;-0.110435143472979;-0.110242344734596;-0.110048801976688;-0.109854519728693;-0.109659502517097;-0.109463754865391;-0.109267281294027;-0.109070086320367;-0.108872174458642;-0.108673550219905;-0.108474218111987;-0.108274182639448;-0.108073448303537;-0.107872019602144;-0.107669901029754;-0.107467097077407;-0.107263612232647;-0.107059450979484;-0.106854617798343;-0.106649117166026;-0.106442953555663;-0.10623613143667;-0.106028655274704;-0.105820529531622;-0.105611758665433;-0.105402347130257;-0.105192299376281;-0.104981619849715;-0.104770312992751;-0.104558383243515;-0.10434583503603;-0.104132672800167;-0.103918900961607;-0.103704523941797;-0.103489546157905;-0.10327397202278;-0.10305780594491;-0.102841052328376;-0.102623715572817;-0.102405800073379;-0.102187310220681;-0.101968250400767;-0.101748624995071;-0.101528438380368;-0.101307694928738;-0.101086399007525;-0.10086455497929;-0.100642167201777;-0.100419240027867;-0.100195777805541;-0.0999717848778359;-0.0997472655828066;-0.099522224253484;-0.0992966652178355;-0.0990705927987245;-0.0988440113138705;-0.0986169250758091;-0.0983893383918524;-0.0981612555640488;-0.0979326808891443;-0.0977036186585424;-0.0974740731582651;-0.0972440486689138;-0.09701354946563;-0.0967825798180567;-0.0965511439902998;-0.0963192462408885;-0.0960868908227382;-0.095854081983111;-0.095620823963578;-0.0953871209999812;-0.095152977322395;-0.0949183971550889;-0.0946833847164898;-0.0944479442191439;-0.0942120798696797;-0.0939757958687704;-0.0937390964110971;-0.0935019856853112;-0.093264467873998;-0.0930265471536394;-0.0927882276945778;-0.0925495136609791;-0.0923104092107966;-0.0920709184957346;-0.0918310456612125;-0.0915907948463285;-0.091350170183824;-0.0911091758000479;-0.0908678158149208;-0.0906260943418998;-0.0903840154879432;-0.0901415833534753;-0.0898988020323511;-0.0896556756118219;-0.0894122081725004;-0.0891684037883258;-0.0889242665265297;-0.0886798004476017;-0.0884350096052548;-0.0881898980463924;-0.0879444698110729;-0.0876987289324774;-0.0874526794368749;-0.0872063253435898;-0.0869596706649676;-0.0867127194063427;-0.0864654755660042;-0.0862179431351643;-0.0859701260979243;-0.0857220284312427;-0.0854736541049025;-0.0852250070814789;-0.0849760913163068;-0.0847269107574494;-0.0844774693456655;-0.0842277710143782;-0.0839778196896433;-0.0837276192901176;-0.0834771737270274;-0.083226486904138;-0.0829755627177218;-0.0827244050565279;-0.0824730178017513;-0.082221404827002;-0.0819695699982751;-0.0817175171739195;-0.0814652502046088;-0.0812127729333109;-0.0809600891952574;-0.0807072028179151;-0.0804541176209555;-0.0802008374162255;-0.0799473660077185;-0.0796937071915449;-0.079439864755903;-0.0791858424810506;-0.0789316441392758;-0.0786772734948688;-0.0784227343040934;-0.0781680303151585;-0.0779131652681904;-0.0776581428952044;-0.0774029669200773;-0.0771476410585198;-0.0768921690180486;-0.0766365544979593;-0.0763808011892994;-0.0761249127748406;-0.0758688929290526;-0.0756127453180758;-0.075356473599695;-0.0751000814233127;-0.0748435724299231;-0.0745869502520857;-0.0743302185138991;-0.0740733808309759;-0.0738164408104159;-0.0735594020507816;-0.073302268142072;-0.0730450426656978;-0.0727877291944562;-0.0725303312925058;-0.0722728525153421;-0.0720152964097724;-0.0717576665138918;-0.0714999663570587;-0.0712421994598703;-0.0709843693341391;-0.0707264794828686;-0.0704685334002297;-0.0702105345715372;-0.0699524864732263;-0.0696943925728293;-0.0694362563289528;-0.0691780811912541;-0.068919870600419;-0.0686616279881388;-0.0684033567770881;-0.0681450603809021;-0.0678867422041547;-0.0676284056423361;-0.0673700540818315;-0.0671116908998989;-0.0668533194646474;-0.0665949431350165;-0.0663365652607541;-0.0660781891823955;-0.0658198182312429;-0.0655614557293443;-0.0653031049894726;-0.0650447693151055;-0.0647864520004051;-0.0645281563301975;-0.064269885579953;-0.0640116430157661;-0.0637534318943358;-0.0634952554629463;-0.0632371169594469;-0.0629790196122337;-0.0627209666402297;-0.0624629612528662;-0.0622050066500641;-0.061947106022215;-0.061689262550163;-0.0614314794051863;-0.0611737597489788;-0.0609161067336326;-0.0606585235016196;-0.0604010131857741;-0.0601435789092752;-0.0598862237856295;-0.0596289509186537;-0.0593717634024577;-0.0591146643214275;-0.0588576567502086;-0.0586007437536894;-0.0583439283869845;-0.0580872136954188;-0.0578306027145112;-0.0575740984699583;-0.0573177039776189;-0.0570614222434986;-0.0568052562637336;-0.0565492090245758;-0.0562932835023776;-0.0560374826635766;-0.0557818094646811;-0.0555262668522548;-0.0552708577629027;-0.0550155851232567;-0.0547604518499607;-0.0545054608496575;-0.0542506150189739;-0.0539959172445073;-0.0537413704028122;-0.0534869773603863;-0.0532327409736577;-0.0529786640889713;-0.0527247495425758;-0.0524710001606109;-0.0522174187590951;-0.0519640081439119;-0.0517107711107988;-0.0514577104453342;-0.0512048289229253;-0.0509521293087968;-0.0506996143579782;-0.0504472868152932;-0.0501951494153474;-0.0499432048825173;-0.0496914559309391;-0.049439905264498;-0.0491885555768165;-0.0489374095512447;-0.0486864698608494;-0.0484357391684033;-0.0481852201263752;-0.0479349153769199;-0.0476848275518681;-0.0474349592727168;-0.0471853131506194;-0.0469358917863767;-0.0466866977704272;-0.046437733682838;-0.0461890020932959;-0.0459405055610986;-0.0456922466351457;-0.0454442278539307;-0.045196451745532;-0.044948920827605;-0.0447016376073741;-0.0444546045816244;-0.0442078242366945;-0.0439612990484682;-0.0437150314823675;-0.0434690239933452;-0.0432232790258777;-0.0429777990139576;-0.0427325863810878;-0.0424876435402736;-0.0422429728940172;-0.0419985768343105;-0.0417544577426293;-0.0415106179899271;-0.0412670599366292;-0.0410237859326265;-0.0407807983172704;-0.0405380994193671;-0.0402956915571721;-0.0400535770383852;-0.0398117581601453;-0.0395702372090256;-0.039329016461029;-0.0390880981815831;-0.0388474846255361;-0.0386071780371525;-0.0383671806501086;-0.038127494687489;-0.0378881223617824;-0.037649065874878;-0.0374103274180622;-0.0371719091720144;-0.0369338133068049;-0.0366960419818909;-0.036458597346114;-0.036221481537697;-0.0359846966842419;-0.0357482449027266;-0.035512128299503;-0.0352763489702948;-0.0350409090001953;-0.0348058104636656;-0.0345710554245323;-0.0343366459359869;-0.0341025840405833;-0.0338688717702371;-0.0336355111462241;-0.0334025041791795;-0.0331698528690966;-0.0329375592053265;-0.0327056251665774;-0.0324740527209136;-0.0322428438257562;-0.0320120004278819;-0.0317815244634236;-0.0315514178578704;-0.0313216825260677;-0.0310923203722177;-0.03086333328988;-0.0306347231619722;-0.0304064918607708;-0.0301786412479123;-0.0299511731743939;-0.0297240894805752;-0.0294973919961793;-0.0292710825402948;-0.029045162921377;-0.0288196349372498;-0.0285945003751079;-0.0283697610115189;-0.0281454186124251;-0.0279214749331467;-0.0276979317183836;-0.0274747907022183;-0.0272520536081191;-0.0270297221489423;-0.026807798026936;-0.026586282933743;-0.0263651785504042;-0.026144486547362;-0.0259242085844644;-0.0257043463109681;-0.0254849013655432;-0.0252658753762764;-0.025047269960676;-0.0248290867256759;-0.0246113272676396;-0.024393993172366;-0.0241770860150929;-0.0239606073605024;-0.0237445587627263;-0.0235289417653507;-0.0233137579014212;-0.0230990086934489;-0.0228846956534157;-0.0226708202827797;-0.0224573840724814;-0.0222443885029495;-0.022031835044107;-0.0218197251553776;-0.0216080602856917;-0.0213968418734932;-0.0211860713467461;-0.0209757501229411;-0.0207658796091025;-0.0205564612017955;-0.020347496287133;-0.0201389862407831;-0.0199309324279764;-0.0197233362035136;-0.0195161989117731;-0.019309521886719;-0.0191033064519087;-0.0188975539205014;-0.0186922655952659;-0.018487442768589;-0.0182830867224842;-0.0180791987285998;-0.0178757800482282;-0.0176728319323143;-0.0174703556214645;-0.0172683523459559;-0.0170668233257453;-0.0168657697704791;-0.016665192879502;-0.0164650938418669;-0.016265473836345;-0.016066334031435;-0.0158676755853733;-0.0156694996461444;-0.0154718073514906;-0.0152745998289226;-0.01507787819573;-0.0148816435589916;-0.0146858970155864;-0.0144906396522044;-0.0142958725453573;-0.0141015967613896;-0.0139078133564902;-0.013714523376703;-0.0135217278579391;-0.0133294278259877;-0.013137624296528;-0.0129463182751411;-0.0127555107573218;-0.0125652027284904;-0.0123753951640054;-0.0121860890291751;-0.0119972852792704;-0.0118089848595372;-0.0116211887052088;-0.011433897741519;-0.0112471128837145;-0.0110608350370682;-0.0108750650968923;-0.0106898039485508;-0.010505052467474;-0.0103208115191707;-0.0101370819592425;-0.00995386463339719;-0.00977116037746245;-0.0095889700173997;-0.00940729436931827;-0.00922613423948933;-0.00904549042435999;-0.00886536371056795;-0.00868575487495546;-0.0085066646845843;-0.00832809389675017;-0.00815004325899737;-0.0079725135091339;-0.00779550537524631;-0.00761901957571464;-0.00744305681922785;-0.00726761780479901;-0.00709270322178053;-0.00691831374988003;-0.00674445005917552;-0.00657111281013151;-0.00639830265361464;-0.00622602023090949;-0.00605426617373492;-0.00588304110426002;-0.00571234563512023;-0.00554218036943399;-0.00537254590081901;-0.00520344281340873;-0.00503487168186923;-0.00486683307141569;-0.00469932753782952;-0.0045323556274752;-0.00436591787731722;-0.00420001481493748;-0.00403464695855241;-0.00386981481703025;-0.00370551888990871;-0.00354175966741245;-0.00337853763047057;-0.00321585325073467;-0.00305370699059638;-0.00289209930320557;-0.00273103063248833;-0.00257050141316491;-0.00241051207076825;-0.0022510630216622;-0.0020921546730598;-0.00193378742304204;-0.00177596166057639;-0.00161867776553536;-0.00146193610871559;-0.00130573705185642;-0.00115008094765919;-0.000994968139806186;-0.000840398962979647;-0.000686373742881339;-0.000532892796251757;-0.000379956430889435;-0.000227564945670749;-7.57186305694141e-005]|9|8|8|7|17|15|on|on|3|1|off"
	  MaskTabNameString	  ",,,,,,,,,,,,"
	  System {
	    Name		    "fir_tap_2"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_in"
	      Position		      [30, 23, 60, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 58, 60, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 93, 60, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_coef"
	      Ports		      [3, 4]
	      Position		      [115, 29, 205, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "1024 coefs in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag16"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Coefficient Generator"
	      MaskDescription	      "A Finite Impluse Response filter coefficient generator.  This FIR filter coefficient generator outputs real coefficients.  It can output one coefficient or cycle through a vector of coefficients for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response filter coefficient generator.\nThis FIR filter coefficient generator outputs real coefficients.\nIt can output one coefficient or cycle through a vector of coefficients for WOLA\n(Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Coefficiant(s) (coef): The coefficient(s) to output.  For a \"regular\" FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nThese should be specified as doubles.   They will be rounded and saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nUse BRAM for Coefficients (use_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n</pre>"
	      MaskPromptString	      "Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Use BRAM for Coefficients"
	      MaskStyleString	      "edit,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "coef=&1;n_bits_c=&2;bin_pt_c=&3;use_bram=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "[-0.000375660323525046;-0.00112528207646786;-0.00187263770065757;-0.00261772609063303;-0.00336054616203061;-0.00410109685156988;-0.00483937711704019;-0.00557538593728603;-0.00630912231219222;-0.00704058526266978;-0.00776977383064064;-0.00849668707902262;-0.00922132409171369;-0.00994368397357705;-0.0106637658504249;-0.0113815688690025;-0.0120970921969721;-0.0128103350228962;-0.0135212965562215;-0.0142299760272615;-0.0149363726871797;-0.0156404858079725;-0.0163423146824514;-0.0170418586242254;-0.0177391169676835;-0.0184340890679761;-0.0191267743009973;-0.0198171720633655;-0.0205052817724058;-0.0211911028661302;-0.0218746348032188;-0.0225558770630009;-0.0232348291454347;-0.0239114905710882;-0.0245858608811188;-0.0252579396372536;-0.0259277264217688;-0.0265952208374693;-0.0272604225076676;-0.0279233310761635;-0.0285839462072226;-0.0292422675855545;-0.0298982949162921;-0.0305520279249694;-0.0312034663574997;-0.031852609980153;-0.0324994585795345;-0.0331440119625613;-0.0337862699564402;-0.0344262324086442;-0.0350638991868898;-0.0356992701791137;-0.0363323452934489;-0.0369631244582015;-0.0375916076218262;-0.0382177947529027;-0.0388416858401109;-0.0394632808922069;-0.0400825799379981;-0.0406995830263182;-0.0413142902260021;-0.0419267016258609;-0.0425368173346564;-0.0431446374810749;-0.0437501622137022;-0.0443533917009969;-0.0449543261312647;-0.0455529657126312;-0.0461493106730163;-0.0467433612601067;-0.047335117741329;-0.0479245804038229;-0.0485117495544134;-0.0490966255195838;-0.0496792086454471;-0.0502594992977191;-0.0508374978616896;-0.0514132047421944;-0.0519866203635867;-0.0525577451697087;-0.0531265796238626;-0.0536931242087811;-0.0542573794265993;-0.0548193457988244;-0.0553790238663066;-0.0559364141892089;-0.0564915173469777;-0.0570443339383125;-0.0575948645811356;-0.0581431099125613;-0.058689070588866;-0.0592327472854569;-0.0597741406968409;-0.0603132515365938;-0.0608500805373288;-0.0613846284506648;-0.0619168960471949;-0.0624468841164546;-0.0629745934668896;-0.0635000249258237;-0.064023179339426;-0.0645440575726791;-0.0650626605093458;-0.0655789890519362;-0.0660930441216749;-0.0666048266584676;-0.0671143376208679;-0.067621577986043;-0.0681265487497408;-0.0686292509262558;-0.0691296855483946;-0.0696278536674418;-0.0701237563531258;-0.0706173946935843;-0.071108769795329;-0.071597882783211;-0.0720847348003859;-0.0725693270082785;-0.0730516605865468;-0.0735317367330474;-0.0740095566637989;-0.0744851216129466;-0.0749584328327259;-0.0754294915934268;-0.0758982991833568;-0.0763648569088048;-0.0768291660940042;-0.0772912280810962;-0.0777510442300928;-0.0782086159188393;-0.0786639445429775;-0.0791170315159078;-0.0795678782687517;-0.0800164862503141;-0.0804628569270452;-0.0809069917830028;-0.0813488923198131;-0.0817885600566336;-0.0822259965301136;-0.0826612032943558;-0.0830941819208773;-0.0835249339985711;-0.0839534611336661;-0.0843797649496887;-0.0848038470874227;-0.0852257092048699;-0.0856453529772106;-0.0860627800967632;-0.0864779922729447;-0.0868909912322302;-0.0873017787181127;-0.0877103564910625;-0.0881167263284868;-0.0885208900246886;-0.0889228493908263;-0.0893226062548723;-0.0897201624615717;-0.0901155198724016;-0.0905086803655288;-0.0908996458357691;-0.0912884181945446;-0.0916749993698427;-0.0920593913061736;-0.0924415959645284;-0.0928216153223364;-0.0931994513734234;-0.0935751061279683;-0.0939485816124612;-0.09431987986966;-0.0946890029585477;-0.0950559529542894;-0.0954207319481889;-0.0957833420476455;-0.0961437853761105;-0.0965020640730433;-0.0968581802938682;-0.0972121362099301;-0.0975639340084509;-0.0979135758924848;-0.0982610640808748;-0.0986064008082076;-0.0989495883247697;-0.0992906288965024;-0.0996295248049575;-0.0999662783472516;-0.100300891836022;-0.100633367599381;-0.100963707980872;-0.101291915339421;-0.101617992049296;-0.101941940500055;-0.102263763096507;-0.102583462258662;-0.102901040421687;-0.103216500035856;-0.103529843566511;-0.103841073494009;-0.104150192313679;-0.104457202535775;-0.104762106685429;-0.105064907302604;-0.105365606942047;-0.105664208173243;-0.105960713580369;-0.106255125762242;-0.106547447332278;-0.10683768091844;-0.107125829163193;-0.107411894723454;-0.107695880270546;-0.107977788490152;-0.108257622082262;-0.108535383761131;-0.108811076255224;-0.109084702307174;-0.109356264673732;-0.109625766125715;-0.109893209447962;-0.110158597439284;-0.110421932912413;-0.110683218693955;-0.110942457624343;-0.111199652557785;-0.111454806362214;-0.111707921919243;-0.111959002124111;-0.112208049885639;-0.112455068126173;-0.112700059781542;-0.112943027801003;-0.113183975147195;-0.113422904796084;-0.11365981973692;-0.113894722972181;-0.114127617517525;-0.11435850640174;-0.114587392666694;-0.114814279367284;-0.115039169571384;-0.115262066359796;-0.115482972826202;-0.115701892077107;-0.115918827231792;-0.116133781422266;-0.116346757793206;-0.116557759501917;-0.116766789718271;-0.116973851624663;-0.117178948415955;-0.117382083299426;-0.117583259494722;-0.117782480233803;-0.117979748760891;-0.118175068332418;-0.118368442216977;-0.118559873695267;-0.118749366060041;-0.118936922616057;-0.119122546680023;-0.119306241580546;-0.11948801065808;-0.119667857264872;-0.119845784764912;-0.12002179653388;-0.120195895959092;-0.120368086439447;-0.120538371385378;-0.120706754218796;-0.120873238373037;-0.121037827292813;-0.121200524434153;-0.121361333264356;-0.121520257261934;-0.12167729991656;-0.121832464729017;-0.121985755211139;-0.122137174885766;-0.122286727286684;-0.122434415958572;-0.122580244456954;-0.122724216348138;-0.122866335209169;-0.123006604627771;-0.123145028202296;-0.123281609541668;-0.12341635226533;-0.123549260003193;-0.123680336395576;-0.123809585093158;-0.12393700975692;-0.124062614058095;-0.124186401678108;-0.124308376308528;-0.124428541651009;-0.124546901417241;-0.124663459328888;-0.124778219117541;-0.12489118452466;-0.125002359301522;-0.125111747209161;-0.125219352018322;-0.125325177509398;-0.12542922747238;-0.125531505706804;-0.12563201602169;-0.125730762235494;-0.125827748176048;-0.125922977680511;-0.126016454595306;-0.126108182776074;-0.126198166087613;-0.126286408403824;-0.126372913607659;-0.126457685591063;-0.126540728254919;-0.126622045508995;-0.126701641271888;-0.126779519470967;-0.126855684042321;-0.126930138930701;-0.127002888089467;-0.12707393548053;-0.1271432850743;-0.127210940849628;-0.127276906793752;-0.127341186902242;-0.127403785178944;-0.127464705635923;-0.12752395229341;-0.127581529179746;-0.127637440331325;-0.127691689792542;-0.127744281615732;-0.12779521986112;-0.127844508596762;-0.12789215189849;-0.127938153849857;-0.127982518542083;-0.128025250073994;-0.128066352551973;-0.1281058300899;-0.128143686809098;-0.128179926838275;-0.128214554313474;-0.128247573378009;-0.128278988182416;-0.128308802884396;-0.128337021648755;-0.128363648647355;-0.128388688059053;-0.128412144069646;-0.128434020871817;-0.128454322665079;-0.128473053655717;-0.128490218056735;-0.128505820087798;-0.128519863975179;-0.128532353951698;-0.128543294256673;-0.128552689135858;-0.12856054284139;-0.128566859631735;-0.128571643771628;-0.128574899532022;-0.128576631190026;-0.128576843028855;-0.128575539337773;-0.128572724412033;-0.128568402552826;-0.128562578067225;-0.128555255268125;-0.128546438474192;-0.128536132009803;-0.128524340204996;-0.128511067395406;-0.128496317922217;-0.128480096132103;-0.128462406377172;-0.128443253014909;-0.128422640408125;-0.128400572924896;-0.12837705493851;-0.128352090827411;-0.128325684975145;-0.1282978417703;-0.128268565606454;-0.12823786088212;-0.128205732000685;-0.128172183370362;-0.12813721940413;-0.128100844519676;-0.128063063139347;-0.128023879690088;-0.127983298603389;-0.127941324315228;-0.127897961266018;-0.127853213900551;-0.127807086667941;-0.12775958402157;-0.127710710419032;-0.127660470322078;-0.127608868196561;-0.127555908512382;-0.127501595743429;-0.127445934367531;-0.127388928866395;-0.127330583725555;-0.127270903434314;-0.127209892485693;-0.127147555376371;-0.127083896606635;-0.12701892068032;-0.12695263210476;-0.126885035390726;-0.126816135052377;-0.126745935607204;-0.12667444157597;-0.126601657482665;-0.126527587854441;-0.126452237221565;-0.126375610117361;-0.126297711078153;-0.126218544643217;-0.12613811535472;-0.126056427757669;-0.125973486399857;-0.125889295831806;-0.125803860606714;-0.1257171852804;-0.125629274411252;-0.12554013256017;-0.125449764290513;-0.125358174168047;-0.125265366760885;-0.12517134663944;-0.125076118376365;-0.124979686546505;-0.124882055726836;-0.124783230496419;-0.12468321543634;-0.124582015129658;-0.124479634161354;-0.124376077118273;-0.124271348589074;-0.124165453164175;-0.124058395435699;-0.123950179997422;-0.123840811444718;-0.123730294374506;-0.1236186333852;-0.12350583307665;-0.123391898050093;-0.123276832908101;-0.123160642254522;-0.123043330694433;-0.122924902834086;-0.122805363280853;-0.122684716643174;-0.122562967530506;-0.122440120553267;-0.122316180322788;-0.122191151451255;-0.122065038551663;-0.121937846237758;-0.121809579123986;-0.121680241825444;-0.121549838957822;-0.121418375137358;-0.12128585498078;-0.121152283105255;-0.121017664128342;-0.120882002667932;-0.120745303342203;-0.120607570769567;-0.120468809568615;-0.120329024358068;-0.120188219756726;-0.120046400383417;-0.119903570856942;-0.119759735796028;-0.119614899819273;-0.1194690675451;-0.1193222435917;-0.119174432576984;-0.119025639118535;-0.118875867833551;-0.118725123338799;-0.118573410250562;-0.118420733184589;-0.118267096756046;-0.118112505579464;-0.117956964268688;-0.117800477436828;-0.117643049696209;-0.117484685658321;-0.117325389933767;-0.117165167132216;-0.117004021862351;-0.11684195873182;-0.116678982347186;-0.116515097313878;-0.116350308236141;-0.116184619716987;-0.116018036358147;-0.115850562760017;-0.115682203521616;-0.115512963240528;-0.115342846512864;-0.115171857933203;-0.115000002094548;-0.114827283588279;-0.1146537070041;-0.114479276929993;-0.11430399795217;-0.114127874655023;-0.113950911621077;-0.113773113430942;-0.113594484663264;-0.113415029894677;-0.113234753699757;-0.113053660650972;-0.112871755318635;-0.112689042270857;-0.112505526073501;-0.11232121129013;-0.112136102481964;-0.111950204207832;-0.111763521024123;-0.111576057484741;-0.111387818141058;-0.111198807541867;-0.111009030233334;-0.110818490758952;-0.110627193659497;-0.110435143472979;-0.110242344734596;-0.110048801976688;-0.109854519728693;-0.109659502517097;-0.109463754865391;-0.109267281294027;-0.109070086320367;-0.108872174458642;-0.108673550219905;-0.108474218111987;-0.108274182639448;-0.108073448303537;-0.107872019602144;-0.107669901029754;-0.107467097077407;-0.107263612232647;-0.107059450979484;-0.106854617798343;-0.106649117166026;-0.106442953555663;-0.10623613143667;-0.106028655274704;-0.105820529531622;-0.105611758665433;-0.105402347130257;-0.105192299376281;-0.104981619849715;-0.104770312992751;-0.104558383243515;-0.10434583503603;-0.104132672800167;-0.103918900961607;-0.103704523941797;-0.103489546157905;-0.10327397202278;-0.10305780594491;-0.102841052328376;-0.102623715572817;-0.102405800073379;-0.102187310220681;-0.101968250400767;-0.101748624995071;-0.101528438380368;-0.101307694928738;-0.101086399007525;-0.10086455497929;-0.100642167201777;-0.100419240027867;-0.100195777805541;-0.0999717848778359;-0.0997472655828066;-0.099522224253484;-0.0992966652178355;-0.0990705927987245;-0.0988440113138705;-0.0986169250758091;-0.0983893383918524;-0.0981612555640488;-0.0979326808891443;-0.0977036186585424;-0.0974740731582651;-0.0972440486689138;-0.09701354946563;-0.0967825798180567;-0.0965511439902998;-0.0963192462408885;-0.0960868908227382;-0.095854081983111;-0.095620823963578;-0.0953871209999812;-0.095152977322395;-0.0949183971550889;-0.0946833847164898;-0.0944479442191439;-0.0942120798696797;-0.0939757958687704;-0.0937390964110971;-0.0935019856853112;-0.093264467873998;-0.0930265471536394;-0.0927882276945778;-0.0925495136609791;-0.0923104092107966;-0.0920709184957346;-0.0918310456612125;-0.0915907948463285;-0.091350170183824;-0.0911091758000479;-0.0908678158149208;-0.0906260943418998;-0.0903840154879432;-0.0901415833534753;-0.0898988020323511;-0.0896556756118219;-0.0894122081725004;-0.0891684037883258;-0.0889242665265297;-0.0886798004476017;-0.0884350096052548;-0.0881898980463924;-0.0879444698110729;-0.0876987289324774;-0.0874526794368749;-0.0872063253435898;-0.0869596706649676;-0.0867127194063427;-0.0864654755660042;-0.0862179431351643;-0.0859701260979243;-0.0857220284312427;-0.0854736541049025;-0.0852250070814789;-0.0849760913163068;-0.0847269107574494;-0.0844774693456655;-0.0842277710143782;-0.0839778196896433;-0.0837276192901176;-0.0834771737270274;-0.083226486904138;-0.0829755627177218;-0.0827244050565279;-0.0824730178017513;-0.082221404827002;-0.0819695699982751;-0.0817175171739195;-0.0814652502046088;-0.0812127729333109;-0.0809600891952574;-0.0807072028179151;-0.0804541176209555;-0.0802008374162255;-0.0799473660077185;-0.0796937071915449;-0.079439864755903;-0.0791858424810506;-0.0789316441392758;-0.0786772734948688;-0.0784227343040934;-0.0781680303151585;-0.0779131652681904;-0.0776581428952044;-0.0774029669200773;-0.0771476410585198;-0.0768921690180486;-0.0766365544979593;-0.0763808011892994;-0.0761249127748406;-0.0758688929290526;-0.0756127453180758;-0.075356473599695;-0.0751000814233127;-0.0748435724299231;-0.0745869502520857;-0.0743302185138991;-0.0740733808309759;-0.0738164408104159;-0.0735594020507816;-0.073302268142072;-0.0730450426656978;-0.0727877291944562;-0.0725303312925058;-0.0722728525153421;-0.0720152964097724;-0.0717576665138918;-0.0714999663570587;-0.0712421994598703;-0.0709843693341391;-0.0707264794828686;-0.0704685334002297;-0.0702105345715372;-0.0699524864732263;-0.0696943925728293;-0.0694362563289528;-0.0691780811912541;-0.068919870600419;-0.0686616279881388;-0.0684033567770881;-0.0681450603809021;-0.0678867422041547;-0.0676284056423361;-0.0673700540818315;-0.0671116908998989;-0.0668533194646474;-0.0665949431350165;-0.0663365652607541;-0.0660781891823955;-0.0658198182312429;-0.0655614557293443;-0.0653031049894726;-0.0650447693151055;-0.0647864520004051;-0.0645281563301975;-0.064269885579953;-0.0640116430157661;-0.0637534318943358;-0.0634952554629463;-0.0632371169594469;-0.0629790196122337;-0.0627209666402297;-0.0624629612528662;-0.0622050066500641;-0.061947106022215;-0.061689262550163;-0.0614314794051863;-0.0611737597489788;-0.0609161067336326;-0.0606585235016196;-0.0604010131857741;-0.0601435789092752;-0.0598862237856295;-0.0596289509186537;-0.0593717634024577;-0.0591146643214275;-0.0588576567502086;-0.0586007437536894;-0.0583439283869845;-0.0580872136954188;-0.0578306027145112;-0.0575740984699583;-0.0573177039776189;-0.0570614222434986;-0.0568052562637336;-0.0565492090245758;-0.0562932835023776;-0.0560374826635766;-0.0557818094646811;-0.0555262668522548;-0.0552708577629027;-0.0550155851232567;-0.0547604518499607;-0.0545054608496575;-0.0542506150189739;-0.0539959172445073;-0.0537413704028122;-0.0534869773603863;-0.0532327409736577;-0.0529786640889713;-0.0527247495425758;-0.0524710001606109;-0.0522174187590951;-0.0519640081439119;-0.0517107711107988;-0.0514577104453342;-0.0512048289229253;-0.0509521293087968;-0.0506996143579782;-0.0504472868152932;-0.0501951494153474;-0.0499432048825173;-0.0496914559309391;-0.049439905264498;-0.0491885555768165;-0.0489374095512447;-0.0486864698608494;-0.0484357391684033;-0.0481852201263752;-0.0479349153769199;-0.0476848275518681;-0.0474349592727168;-0.0471853131506194;-0.0469358917863767;-0.0466866977704272;-0.046437733682838;-0.0461890020932959;-0.0459405055610986;-0.0456922466351457;-0.0454442278539307;-0.045196451745532;-0.044948920827605;-0.0447016376073741;-0.0444546045816244;-0.0442078242366945;-0.0439612990484682;-0.0437150314823675;-0.0434690239933452;-0.0432232790258777;-0.0429777990139576;-0.0427325863810878;-0.0424876435402736;-0.0422429728940172;-0.0419985768343105;-0.0417544577426293;-0.0415106179899271;-0.0412670599366292;-0.0410237859326265;-0.0407807983172704;-0.0405380994193671;-0.0402956915571721;-0.0400535770383852;-0.0398117581601453;-0.0395702372090256;-0.039329016461029;-0.0390880981815831;-0.0388474846255361;-0.0386071780371525;-0.0383671806501086;-0.038127494687489;-0.0378881223617824;-0.037649065874878;-0.0374103274180622;-0.0371719091720144;-0.0369338133068049;-0.0366960419818909;-0.036458597346114;-0.036221481537697;-0.0359846966842419;-0.0357482449027266;-0.035512128299503;-0.0352763489702948;-0.0350409090001953;-0.0348058104636656;-0.0345710554245323;-0.0343366459359869;-0.0341025840405833;-0.0338688717702371;-0.0336355111462241;-0.0334025041791795;-0.0331698528690966;-0.0329375592053265;-0.0327056251665774;-0.0324740527209136;-0.0322428438257562;-0.0320120004278819;-0.0317815244634236;-0.0315514178578704;-0.0313216825260677;-0.0310923203722177;-0.03086333328988;-0.0306347231619722;-0.0304064918607708;-0.0301786412479123;-0.0299511731743939;-0.0297240894805752;-0.0294973919961793;-0.0292710825402948;-0.029045162921377;-0.0288196349372498;-0.0285945003751079;-0.0283697610115189;-0.0281454186124251;-0.0279214749331467;-0.0276979317183836;-0.0274747907022183;-0.0272520536081191;-0.0270297221489423;-0.026807798026936;-0.026586282933743;-0.0263651785504042;-0.026144486547362;-0.0259242085844644;-0.0257043463109681;-0.0254849013655432;-0.0252658753762764;-0.025047269960676;-0.0248290867256759;-0.0246113272676396;-0.024393993172366;-0.0241770860150929;-0.0239606073605024;-0.0237445587627263;-0.0235289417653507;-0.0233137579014212;-0.0230990086934489;-0.0228846956534157;-0.0226708202827797;-0.0224573840724814;-0.0222443885029495;-0.022031835044107;-0.0218197251553776;-0.0216080602856917;-0.0213968418734932;-0.0211860713467461;-0.0209757501229411;-0.0207658796091025;-0.0205564612017955;-0.020347496287133;-0.0201389862407831;-0.0199309324279764;-0.0197233362035136;-0.0195161989117731;-0.019309521886719;-0.0191033064519087;-0.0188975539205014;-0.0186922655952659;-0.018487442768589;-0.0182830867224842;-0.0180791987285998;-0.0178757800482282;-0.0176728319323143;-0.0174703556214645;-0.0172683523459559;-0.0170668233257453;-0.0168657697704791;-0.016665192879502;-0.0164650938418669;-0.016265473836345;-0.016066334031435;-0.0158676755853733;-0.0156694996461444;-0.0154718073514906;-0.0152745998289226;-0.01507787819573;-0.0148816435589916;-0.0146858970155864;-0.0144906396522044;-0.0142958725453573;-0.0141015967613896;-0.0139078133564902;-0.013714523376703;-0.0135217278579391;-0.0133294278259877;-0.013137624296528;-0.0129463182751411;-0.0127555107573218;-0.0125652027284904;-0.0123753951640054;-0.0121860890291751;-0.0119972852792704;-0.0118089848595372;-0.0116211887052088;-0.011433897741519;-0.0112471128837145;-0.0110608350370682;-0.0108750650968923;-0.0106898039485508;-0.010505052467474;-0.0103208115191707;-0.0101370819592425;-0.00995386463339719;-0.00977116037746245;-0.0095889700173997;-0.00940729436931827;-0.00922613423948933;-0.00904549042435999;-0.00886536371056795;-0.00868575487495546;-0.0085066646845843;-0.00832809389675017;-0.00815004325899737;-0.0079725135091339;-0.00779550537524631;-0.00761901957571464;-0.00744305681922785;-0.00726761780479901;-0.00709270322178053;-0.00691831374988003;-0.00674445005917552;-0.00657111281013151;-0.00639830265361464;-0.00622602023090949;-0.00605426617373492;-0.00588304110426002;-0.00571234563512023;-0.00554218036943399;-0.00537254590081901;-0.00520344281340873;-0.00503487168186923;-0.00486683307141569;-0.00469932753782952;-0.0045323556274752;-0.00436591787731722;-0.00420001481493748;-0.00403464695855241;-0.00386981481703025;-0.00370551888990871;-0.00354175966741245;-0.00337853763047057;-0.00321585325073467;-0.00305370699059638;-0.00289209930320557;-0.00273103063248833;-0.00257050141316491;-0.00241051207076825;-0.0022510630216622;-0.0020921546730598;-0.00193378742304204;-0.00177596166057639;-0.00161867776553536;-0.00146193610871559;-0.00130573705185642;-0.00115008094765919;-0.000994968139806186;-0.000840398962979647;-0.000686373742881339;-0.000532892796251757;-0.000379956430889435;-0.000227564945670749;-7.57186305694141e-005]|9|8|on"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"fir_coef"
		Location		[609, 271, 1389, 957]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 68, 60, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 193, 60, 207]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_gen"
		  Ports			  [1, 1]
		  Position		  [130, 109, 220, 141]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "1024 coefs in bram\n9_8 out/1"
		  UserDataPersistent	  on
		  UserData		  "DataTag17"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Coefficient Generator"
		  MaskDescription	  "A coefficient generator."
		  MaskHelp		  "<pre>\nDescription::\n\nA coefficient generator.\n\nMask Parameters::\n\nCoefficiants (coefs): The coefficients to output.  These should be specified as doubles.\nThey will be rounded/saturated according to the specified number of bits (n_bits)\nand binary point (bin_pt).\n\nNumber of Coefficient Bits (n_bits): The number of bits used for the fixed point binary\nrepresentation of the coefficients.\n\nCoefficient Binary Point (bin_pt): The binary point of the fixed point binary representation\nof the coefficients.\n\nLog2 Cycles per Coefficient (log2_cpc): The log2 value of the number of cycles per coefficient.\nMust be a non-negative integer (i.e. cycles per coefficient must be a power of 2).  \n\nUse BRAM (use_bram): Check this checkbox to store coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Coefficients|Number of Bits|Binary Point|Log2 Cycles per Coefficient|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off"
		  MaskCallbackString	  "||||"
		  MaskEnableString	  "off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on"
		  MaskVarAliasString	  ",,,,"
		  MaskVariables		  "coefs=&1;n_bits=&2;bin_pt=&3;log2_cpc=&4;use_bram=&5;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "[-0.000375660323525046;-0.00112528207646786;-0.00187263770065757;-0.00261772609063303;-0.00336054616203061;-0.00410109685156988;-0.00483937711704019;-0.00557538593728603;-0.00630912231219222;-0.00704058526266978;-0.00776977383064064;-0.00849668707902262;-0.00922132409171369;-0.00994368397357705;-0.0106637658504249;-0.0113815688690025;-0.0120970921969721;-0.0128103350228962;-0.0135212965562215;-0.0142299760272615;-0.0149363726871797;-0.0156404858079725;-0.0163423146824514;-0.0170418586242254;-0.0177391169676835;-0.0184340890679761;-0.0191267743009973;-0.0198171720633655;-0.0205052817724058;-0.0211911028661302;-0.0218746348032188;-0.0225558770630009;-0.0232348291454347;-0.0239114905710882;-0.0245858608811188;-0.0252579396372536;-0.0259277264217688;-0.0265952208374693;-0.0272604225076676;-0.0279233310761635;-0.0285839462072226;-0.0292422675855545;-0.0298982949162921;-0.0305520279249694;-0.0312034663574997;-0.031852609980153;-0.0324994585795345;-0.0331440119625613;-0.0337862699564402;-0.0344262324086442;-0.0350638991868898;-0.0356992701791137;-0.0363323452934489;-0.0369631244582015;-0.0375916076218262;-0.0382177947529027;-0.0388416858401109;-0.0394632808922069;-0.0400825799379981;-0.0406995830263182;-0.0413142902260021;-0.0419267016258609;-0.0425368173346564;-0.0431446374810749;-0.0437501622137022;-0.0443533917009969;-0.0449543261312647;-0.0455529657126312;-0.0461493106730163;-0.0467433612601067;-0.047335117741329;-0.0479245804038229;-0.0485117495544134;-0.0490966255195838;-0.0496792086454471;-0.0502594992977191;-0.0508374978616896;-0.0514132047421944;-0.0519866203635867;-0.0525577451697087;-0.0531265796238626;-0.0536931242087811;-0.0542573794265993;-0.0548193457988244;-0.0553790238663066;-0.0559364141892089;-0.0564915173469777;-0.0570443339383125;-0.0575948645811356;-0.0581431099125613;-0.058689070588866;-0.0592327472854569;-0.0597741406968409;-0.0603132515365938;-0.0608500805373288;-0.0613846284506648;-0.0619168960471949;-0.0624468841164546;-0.0629745934668896;-0.0635000249258237;-0.064023179339426;-0.0645440575726791;-0.0650626605093458;-0.0655789890519362;-0.0660930441216749;-0.0666048266584676;-0.0671143376208679;-0.067621577986043;-0.0681265487497408;-0.0686292509262558;-0.0691296855483946;-0.0696278536674418;-0.0701237563531258;-0.0706173946935843;-0.071108769795329;-0.071597882783211;-0.0720847348003859;-0.0725693270082785;-0.0730516605865468;-0.0735317367330474;-0.0740095566637989;-0.0744851216129466;-0.0749584328327259;-0.0754294915934268;-0.0758982991833568;-0.0763648569088048;-0.0768291660940042;-0.0772912280810962;-0.0777510442300928;-0.0782086159188393;-0.0786639445429775;-0.0791170315159078;-0.0795678782687517;-0.0800164862503141;-0.0804628569270452;-0.0809069917830028;-0.0813488923198131;-0.0817885600566336;-0.0822259965301136;-0.0826612032943558;-0.0830941819208773;-0.0835249339985711;-0.0839534611336661;-0.0843797649496887;-0.0848038470874227;-0.0852257092048699;-0.0856453529772106;-0.0860627800967632;-0.0864779922729447;-0.0868909912322302;-0.0873017787181127;-0.0877103564910625;-0.0881167263284868;-0.0885208900246886;-0.0889228493908263;-0.0893226062548723;-0.0897201624615717;-0.0901155198724016;-0.0905086803655288;-0.0908996458357691;-0.0912884181945446;-0.0916749993698427;-0.0920593913061736;-0.0924415959645284;-0.0928216153223364;-0.0931994513734234;-0.0935751061279683;-0.0939485816124612;-0.09431987986966;-0.0946890029585477;-0.0950559529542894;-0.0954207319481889;-0.0957833420476455;-0.0961437853761105;-0.0965020640730433;-0.0968581802938682;-0.0972121362099301;-0.0975639340084509;-0.0979135758924848;-0.0982610640808748;-0.0986064008082076;-0.0989495883247697;-0.0992906288965024;-0.0996295248049575;-0.0999662783472516;-0.100300891836022;-0.100633367599381;-0.100963707980872;-0.101291915339421;-0.101617992049296;-0.101941940500055;-0.102263763096507;-0.102583462258662;-0.102901040421687;-0.103216500035856;-0.103529843566511;-0.103841073494009;-0.104150192313679;-0.104457202535775;-0.104762106685429;-0.105064907302604;-0.105365606942047;-0.105664208173243;-0.105960713580369;-0.106255125762242;-0.106547447332278;-0.10683768091844;-0.107125829163193;-0.107411894723454;-0.107695880270546;-0.107977788490152;-0.108257622082262;-0.108535383761131;-0.108811076255224;-0.109084702307174;-0.109356264673732;-0.109625766125715;-0.109893209447962;-0.110158597439284;-0.110421932912413;-0.110683218693955;-0.110942457624343;-0.111199652557785;-0.111454806362214;-0.111707921919243;-0.111959002124111;-0.112208049885639;-0.112455068126173;-0.112700059781542;-0.112943027801003;-0.113183975147195;-0.113422904796084;-0.11365981973692;-0.113894722972181;-0.114127617517525;-0.11435850640174;-0.114587392666694;-0.114814279367284;-0.115039169571384;-0.115262066359796;-0.115482972826202;-0.115701892077107;-0.115918827231792;-0.116133781422266;-0.116346757793206;-0.116557759501917;-0.116766789718271;-0.116973851624663;-0.117178948415955;-0.117382083299426;-0.117583259494722;-0.117782480233803;-0.117979748760891;-0.118175068332418;-0.118368442216977;-0.118559873695267;-0.118749366060041;-0.118936922616057;-0.119122546680023;-0.119306241580546;-0.11948801065808;-0.119667857264872;-0.119845784764912;-0.12002179653388;-0.120195895959092;-0.120368086439447;-0.120538371385378;-0.120706754218796;-0.120873238373037;-0.121037827292813;-0.121200524434153;-0.121361333264356;-0.121520257261934;-0.12167729991656;-0.121832464729017;-0.121985755211139;-0.122137174885766;-0.122286727286684;-0.122434415958572;-0.122580244456954;-0.122724216348138;-0.122866335209169;-0.123006604627771;-0.123145028202296;-0.123281609541668;-0.12341635226533;-0.123549260003193;-0.123680336395576;-0.123809585093158;-0.12393700975692;-0.124062614058095;-0.124186401678108;-0.124308376308528;-0.124428541651009;-0.124546901417241;-0.124663459328888;-0.124778219117541;-0.12489118452466;-0.125002359301522;-0.125111747209161;-0.125219352018322;-0.125325177509398;-0.12542922747238;-0.125531505706804;-0.12563201602169;-0.125730762235494;-0.125827748176048;-0.125922977680511;-0.126016454595306;-0.126108182776074;-0.126198166087613;-0.126286408403824;-0.126372913607659;-0.126457685591063;-0.126540728254919;-0.126622045508995;-0.126701641271888;-0.126779519470967;-0.126855684042321;-0.126930138930701;-0.127002888089467;-0.12707393548053;-0.1271432850743;-0.127210940849628;-0.127276906793752;-0.127341186902242;-0.127403785178944;-0.127464705635923;-0.12752395229341;-0.127581529179746;-0.127637440331325;-0.127691689792542;-0.127744281615732;-0.12779521986112;-0.127844508596762;-0.12789215189849;-0.127938153849857;-0.127982518542083;-0.128025250073994;-0.128066352551973;-0.1281058300899;-0.128143686809098;-0.128179926838275;-0.128214554313474;-0.128247573378009;-0.128278988182416;-0.128308802884396;-0.128337021648755;-0.128363648647355;-0.128388688059053;-0.128412144069646;-0.128434020871817;-0.128454322665079;-0.128473053655717;-0.128490218056735;-0.128505820087798;-0.128519863975179;-0.128532353951698;-0.128543294256673;-0.128552689135858;-0.12856054284139;-0.128566859631735;-0.128571643771628;-0.128574899532022;-0.128576631190026;-0.128576843028855;-0.128575539337773;-0.128572724412033;-0.128568402552826;-0.128562578067225;-0.128555255268125;-0.128546438474192;-0.128536132009803;-0.128524340204996;-0.128511067395406;-0.128496317922217;-0.128480096132103;-0.128462406377172;-0.128443253014909;-0.128422640408125;-0.128400572924896;-0.12837705493851;-0.128352090827411;-0.128325684975145;-0.1282978417703;-0.128268565606454;-0.12823786088212;-0.128205732000685;-0.128172183370362;-0.12813721940413;-0.128100844519676;-0.128063063139347;-0.128023879690088;-0.127983298603389;-0.127941324315228;-0.127897961266018;-0.127853213900551;-0.127807086667941;-0.12775958402157;-0.127710710419032;-0.127660470322078;-0.127608868196561;-0.127555908512382;-0.127501595743429;-0.127445934367531;-0.127388928866395;-0.127330583725555;-0.127270903434314;-0.127209892485693;-0.127147555376371;-0.127083896606635;-0.12701892068032;-0.12695263210476;-0.126885035390726;-0.126816135052377;-0.126745935607204;-0.12667444157597;-0.126601657482665;-0.126527587854441;-0.126452237221565;-0.126375610117361;-0.126297711078153;-0.126218544643217;-0.12613811535472;-0.126056427757669;-0.125973486399857;-0.125889295831806;-0.125803860606714;-0.1257171852804;-0.125629274411252;-0.12554013256017;-0.125449764290513;-0.125358174168047;-0.125265366760885;-0.12517134663944;-0.125076118376365;-0.124979686546505;-0.124882055726836;-0.124783230496419;-0.12468321543634;-0.124582015129658;-0.124479634161354;-0.124376077118273;-0.124271348589074;-0.124165453164175;-0.124058395435699;-0.123950179997422;-0.123840811444718;-0.123730294374506;-0.1236186333852;-0.12350583307665;-0.123391898050093;-0.123276832908101;-0.123160642254522;-0.123043330694433;-0.122924902834086;-0.122805363280853;-0.122684716643174;-0.122562967530506;-0.122440120553267;-0.122316180322788;-0.122191151451255;-0.122065038551663;-0.121937846237758;-0.121809579123986;-0.121680241825444;-0.121549838957822;-0.121418375137358;-0.12128585498078;-0.121152283105255;-0.121017664128342;-0.120882002667932;-0.120745303342203;-0.120607570769567;-0.120468809568615;-0.120329024358068;-0.120188219756726;-0.120046400383417;-0.119903570856942;-0.119759735796028;-0.119614899819273;-0.1194690675451;-0.1193222435917;-0.119174432576984;-0.119025639118535;-0.118875867833551;-0.118725123338799;-0.118573410250562;-0.118420733184589;-0.118267096756046;-0.118112505579464;-0.117956964268688;-0.117800477436828;-0.117643049696209;-0.117484685658321;-0.117325389933767;-0.117165167132216;-0.117004021862351;-0.11684195873182;-0.116678982347186;-0.116515097313878;-0.116350308236141;-0.116184619716987;-0.116018036358147;-0.115850562760017;-0.115682203521616;-0.115512963240528;-0.115342846512864;-0.115171857933203;-0.115000002094548;-0.114827283588279;-0.1146537070041;-0.114479276929993;-0.11430399795217;-0.114127874655023;-0.113950911621077;-0.113773113430942;-0.113594484663264;-0.113415029894677;-0.113234753699757;-0.113053660650972;-0.112871755318635;-0.112689042270857;-0.112505526073501;-0.11232121129013;-0.112136102481964;-0.111950204207832;-0.111763521024123;-0.111576057484741;-0.111387818141058;-0.111198807541867;-0.111009030233334;-0.110818490758952;-0.110627193659497;-0.110435143472979;-0.110242344734596;-0.110048801976688;-0.109854519728693;-0.109659502517097;-0.109463754865391;-0.109267281294027;-0.109070086320367;-0.108872174458642;-0.108673550219905;-0.108474218111987;-0.108274182639448;-0.108073448303537;-0.107872019602144;-0.107669901029754;-0.107467097077407;-0.107263612232647;-0.107059450979484;-0.106854617798343;-0.106649117166026;-0.106442953555663;-0.10623613143667;-0.106028655274704;-0.105820529531622;-0.105611758665433;-0.105402347130257;-0.105192299376281;-0.104981619849715;-0.104770312992751;-0.104558383243515;-0.10434583503603;-0.104132672800167;-0.103918900961607;-0.103704523941797;-0.103489546157905;-0.10327397202278;-0.10305780594491;-0.102841052328376;-0.102623715572817;-0.102405800073379;-0.102187310220681;-0.101968250400767;-0.101748624995071;-0.101528438380368;-0.101307694928738;-0.101086399007525;-0.10086455497929;-0.100642167201777;-0.100419240027867;-0.100195777805541;-0.0999717848778359;-0.0997472655828066;-0.099522224253484;-0.0992966652178355;-0.0990705927987245;-0.0988440113138705;-0.0986169250758091;-0.0983893383918524;-0.0981612555640488;-0.0979326808891443;-0.0977036186585424;-0.0974740731582651;-0.0972440486689138;-0.09701354946563;-0.0967825798180567;-0.0965511439902998;-0.0963192462408885;-0.0960868908227382;-0.095854081983111;-0.095620823963578;-0.0953871209999812;-0.095152977322395;-0.0949183971550889;-0.0946833847164898;-0.0944479442191439;-0.0942120798696797;-0.0939757958687704;-0.0937390964110971;-0.0935019856853112;-0.093264467873998;-0.0930265471536394;-0.0927882276945778;-0.0925495136609791;-0.0923104092107966;-0.0920709184957346;-0.0918310456612125;-0.0915907948463285;-0.091350170183824;-0.0911091758000479;-0.0908678158149208;-0.0906260943418998;-0.0903840154879432;-0.0901415833534753;-0.0898988020323511;-0.0896556756118219;-0.0894122081725004;-0.0891684037883258;-0.0889242665265297;-0.0886798004476017;-0.0884350096052548;-0.0881898980463924;-0.0879444698110729;-0.0876987289324774;-0.0874526794368749;-0.0872063253435898;-0.0869596706649676;-0.0867127194063427;-0.0864654755660042;-0.0862179431351643;-0.0859701260979243;-0.0857220284312427;-0.0854736541049025;-0.0852250070814789;-0.0849760913163068;-0.0847269107574494;-0.0844774693456655;-0.0842277710143782;-0.0839778196896433;-0.0837276192901176;-0.0834771737270274;-0.083226486904138;-0.0829755627177218;-0.0827244050565279;-0.0824730178017513;-0.082221404827002;-0.0819695699982751;-0.0817175171739195;-0.0814652502046088;-0.0812127729333109;-0.0809600891952574;-0.0807072028179151;-0.0804541176209555;-0.0802008374162255;-0.0799473660077185;-0.0796937071915449;-0.079439864755903;-0.0791858424810506;-0.0789316441392758;-0.0786772734948688;-0.0784227343040934;-0.0781680303151585;-0.0779131652681904;-0.0776581428952044;-0.0774029669200773;-0.0771476410585198;-0.0768921690180486;-0.0766365544979593;-0.0763808011892994;-0.0761249127748406;-0.0758688929290526;-0.0756127453180758;-0.075356473599695;-0.0751000814233127;-0.0748435724299231;-0.0745869502520857;-0.0743302185138991;-0.0740733808309759;-0.0738164408104159;-0.0735594020507816;-0.073302268142072;-0.0730450426656978;-0.0727877291944562;-0.0725303312925058;-0.0722728525153421;-0.0720152964097724;-0.0717576665138918;-0.0714999663570587;-0.0712421994598703;-0.0709843693341391;-0.0707264794828686;-0.0704685334002297;-0.0702105345715372;-0.0699524864732263;-0.0696943925728293;-0.0694362563289528;-0.0691780811912541;-0.068919870600419;-0.0686616279881388;-0.0684033567770881;-0.0681450603809021;-0.0678867422041547;-0.0676284056423361;-0.0673700540818315;-0.0671116908998989;-0.0668533194646474;-0.0665949431350165;-0.0663365652607541;-0.0660781891823955;-0.0658198182312429;-0.0655614557293443;-0.0653031049894726;-0.0650447693151055;-0.0647864520004051;-0.0645281563301975;-0.064269885579953;-0.0640116430157661;-0.0637534318943358;-0.0634952554629463;-0.0632371169594469;-0.0629790196122337;-0.0627209666402297;-0.0624629612528662;-0.0622050066500641;-0.061947106022215;-0.061689262550163;-0.0614314794051863;-0.0611737597489788;-0.0609161067336326;-0.0606585235016196;-0.0604010131857741;-0.0601435789092752;-0.0598862237856295;-0.0596289509186537;-0.0593717634024577;-0.0591146643214275;-0.0588576567502086;-0.0586007437536894;-0.0583439283869845;-0.0580872136954188;-0.0578306027145112;-0.0575740984699583;-0.0573177039776189;-0.0570614222434986;-0.0568052562637336;-0.0565492090245758;-0.0562932835023776;-0.0560374826635766;-0.0557818094646811;-0.0555262668522548;-0.0552708577629027;-0.0550155851232567;-0.0547604518499607;-0.0545054608496575;-0.0542506150189739;-0.0539959172445073;-0.0537413704028122;-0.0534869773603863;-0.0532327409736577;-0.0529786640889713;-0.0527247495425758;-0.0524710001606109;-0.0522174187590951;-0.0519640081439119;-0.0517107711107988;-0.0514577104453342;-0.0512048289229253;-0.0509521293087968;-0.0506996143579782;-0.0504472868152932;-0.0501951494153474;-0.0499432048825173;-0.0496914559309391;-0.049439905264498;-0.0491885555768165;-0.0489374095512447;-0.0486864698608494;-0.0484357391684033;-0.0481852201263752;-0.0479349153769199;-0.0476848275518681;-0.0474349592727168;-0.0471853131506194;-0.0469358917863767;-0.0466866977704272;-0.046437733682838;-0.0461890020932959;-0.0459405055610986;-0.0456922466351457;-0.0454442278539307;-0.045196451745532;-0.044948920827605;-0.0447016376073741;-0.0444546045816244;-0.0442078242366945;-0.0439612990484682;-0.0437150314823675;-0.0434690239933452;-0.0432232790258777;-0.0429777990139576;-0.0427325863810878;-0.0424876435402736;-0.0422429728940172;-0.0419985768343105;-0.0417544577426293;-0.0415106179899271;-0.0412670599366292;-0.0410237859326265;-0.0407807983172704;-0.0405380994193671;-0.0402956915571721;-0.0400535770383852;-0.0398117581601453;-0.0395702372090256;-0.039329016461029;-0.0390880981815831;-0.0388474846255361;-0.0386071780371525;-0.0383671806501086;-0.038127494687489;-0.0378881223617824;-0.037649065874878;-0.0374103274180622;-0.0371719091720144;-0.0369338133068049;-0.0366960419818909;-0.036458597346114;-0.036221481537697;-0.0359846966842419;-0.0357482449027266;-0.035512128299503;-0.0352763489702948;-0.0350409090001953;-0.0348058104636656;-0.0345710554245323;-0.0343366459359869;-0.0341025840405833;-0.0338688717702371;-0.0336355111462241;-0.0334025041791795;-0.0331698528690966;-0.0329375592053265;-0.0327056251665774;-0.0324740527209136;-0.0322428438257562;-0.0320120004278819;-0.0317815244634236;-0.0315514178578704;-0.0313216825260677;-0.0310923203722177;-0.03086333328988;-0.0306347231619722;-0.0304064918607708;-0.0301786412479123;-0.0299511731743939;-0.0297240894805752;-0.0294973919961793;-0.0292710825402948;-0.029045162921377;-0.0288196349372498;-0.0285945003751079;-0.0283697610115189;-0.0281454186124251;-0.0279214749331467;-0.0276979317183836;-0.0274747907022183;-0.0272520536081191;-0.0270297221489423;-0.026807798026936;-0.026586282933743;-0.0263651785504042;-0.026144486547362;-0.0259242085844644;-0.0257043463109681;-0.0254849013655432;-0.0252658753762764;-0.025047269960676;-0.0248290867256759;-0.0246113272676396;-0.024393993172366;-0.0241770860150929;-0.0239606073605024;-0.0237445587627263;-0.0235289417653507;-0.0233137579014212;-0.0230990086934489;-0.0228846956534157;-0.0226708202827797;-0.0224573840724814;-0.0222443885029495;-0.022031835044107;-0.0218197251553776;-0.0216080602856917;-0.0213968418734932;-0.0211860713467461;-0.0209757501229411;-0.0207658796091025;-0.0205564612017955;-0.020347496287133;-0.0201389862407831;-0.0199309324279764;-0.0197233362035136;-0.0195161989117731;-0.019309521886719;-0.0191033064519087;-0.0188975539205014;-0.0186922655952659;-0.018487442768589;-0.0182830867224842;-0.0180791987285998;-0.0178757800482282;-0.0176728319323143;-0.0174703556214645;-0.0172683523459559;-0.0170668233257453;-0.0168657697704791;-0.016665192879502;-0.0164650938418669;-0.016265473836345;-0.016066334031435;-0.0158676755853733;-0.0156694996461444;-0.0154718073514906;-0.0152745998289226;-0.01507787819573;-0.0148816435589916;-0.0146858970155864;-0.0144906396522044;-0.0142958725453573;-0.0141015967613896;-0.0139078133564902;-0.013714523376703;-0.0135217278579391;-0.0133294278259877;-0.013137624296528;-0.0129463182751411;-0.0127555107573218;-0.0125652027284904;-0.0123753951640054;-0.0121860890291751;-0.0119972852792704;-0.0118089848595372;-0.0116211887052088;-0.011433897741519;-0.0112471128837145;-0.0110608350370682;-0.0108750650968923;-0.0106898039485508;-0.010505052467474;-0.0103208115191707;-0.0101370819592425;-0.00995386463339719;-0.00977116037746245;-0.0095889700173997;-0.00940729436931827;-0.00922613423948933;-0.00904549042435999;-0.00886536371056795;-0.00868575487495546;-0.0085066646845843;-0.00832809389675017;-0.00815004325899737;-0.0079725135091339;-0.00779550537524631;-0.00761901957571464;-0.00744305681922785;-0.00726761780479901;-0.00709270322178053;-0.00691831374988003;-0.00674445005917552;-0.00657111281013151;-0.00639830265361464;-0.00622602023090949;-0.00605426617373492;-0.00588304110426002;-0.00571234563512023;-0.00554218036943399;-0.00537254590081901;-0.00520344281340873;-0.00503487168186923;-0.00486683307141569;-0.00469932753782952;-0.0045323556274752;-0.00436591787731722;-0.00420001481493748;-0.00403464695855241;-0.00386981481703025;-0.00370551888990871;-0.00354175966741245;-0.00337853763047057;-0.00321585325073467;-0.00305370699059638;-0.00289209930320557;-0.00273103063248833;-0.00257050141316491;-0.00241051207076825;-0.0022510630216622;-0.0020921546730598;-0.00193378742304204;-0.00177596166057639;-0.00161867776553536;-0.00146193610871559;-0.00130573705185642;-0.00115008094765919;-0.000994968139806186;-0.000840398962979647;-0.000686373742881339;-0.000532892796251757;-0.000379956430889435;-0.000227564945670749;-7.57186305694141e-005]|9|8|0|on"
		  MaskTabNameString	  ",,,,"
		  System {
		    Name		    "c_gen"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1023"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 50 50 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "1024"
		    initVector		    "[0;0;0;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;0;0;0;0;0;0;0;0;0;0;0;0;0]"
		    distributed_mem	    "Block RAM"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "8"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[7 15 27 39 47 47 43 47 47 36 47 39 27 15 7 18 7 7 11 7 7 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "coef_out"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mem"
		    SrcPort		    1
		    DstBlock		    "coef_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "data_delay"
		  Ports			  [1, 1]
		  Position		  [145, 17, 200, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sum_delay"
		  Ports			  [1, 1]
		  Position		  [145, 62, 200, 88]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [145, 187, 200, 213]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [295, 23, 325, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [295, 68, 325, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "coef"
		  Position		  [295, 118, 325, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [295, 193, 325, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_gen"
		  SrcPort		  1
		  DstBlock		  "coef"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_delay"
		  SrcPort		  1
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "sum_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [25, 0]
		  Branch {
		    Points		    [0, -75]
		    DstBlock		    "c_gen"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "sync_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_delay"
		  SrcPort		  1
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  DstBlock		  "data_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_core"
	      Ports		      [4, 3]
	      Position		      [270, 29, 360, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "delay 1024 in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag18"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Core"
	      MaskDescription	      "A Finite Impluse Response Filter core with complex inputs and real coefficients.  This FIR filter core does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter core with complex inputs and real coefficients.\n\nThis Finite Impluse Response Filter core is designed to be paired with a FIR Coefficient Generator \nto form a FIR filter tap.  This FIR filter core does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (use_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	      MaskPromptString	      "Tap Delay|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	      MaskStyleString	      "edit,edit,edit,edit,edit,checkbox,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "delay=&1;n_bits_d=&2;bin_pt_d=&3;n_bits_s=&4;bin_pt_s=&5;use_bram=&6;mult_latency=&7;add_latency=&8;add_bypass=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "1024|8|7|17|15|on|3|1|off"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"fir_core"
		Location		[282, 135, 1062, 821]
		Open			on
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 223, 60, 237]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "coef"
		  Position		  [30, 183, 60, 197]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 278, 60, 292]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_d"
		  Ports			  [1, 2]
		  Position		  [120, 69, 160, 111]
		  AttributesFormatString  "8_7 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag19"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|7"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_d"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_s"
		  Ports			  [1, 2]
		  Position		  [120, 209, 160, 251]
		  AttributesFormatString  "17_15 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag20"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "17|15"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_s"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_im"
		  Ports			  [1, 1]
		  Position		  [345, 175, 390, 205]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_re"
		  Ports			  [1, 1]
		  Position		  [345, 80, 390, 110]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "dout_delay"
		  Ports			  [1, 1]
		  Position		  [255, 17, 310, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_im"
		  Ports			  [3, 1]
		  Position		  [255, 164, 305, 216]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag21"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_im"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_re"
		  Ports			  [3, 1]
		  Position		  [255, 69, 305, 121]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag22"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_re"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [455, 119, 495, 161]
		  UserDataPersistent	  on
		  UserData		  "DataTag23"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskInitialization	  "ri_to_c_init(gcb);"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [255, 272, 310, 298]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "tap_delay"
		  Ports			  [1, 1]
		  Position		  [440, 14, 500, 46]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "bram depth = 1024"
		  UserDataPersistent	  on
		  UserData		  "DataTag24"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "BRAM Delay"
		  MaskDescription	  "A delay block that uses BRAM for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses BRAM for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n\nBuffer Latency (buffer_latency): The latency of the underlying storage.\n\nBuffer Latency defaults to 1 and cannot be changed via the block's dialog box.\nFuture versions may enable the setting of that parameter from the dialog.\n</pre>"
		  MaskPromptString	  "Delay Depth|Buffer Latency"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,off"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "delay_depth=&1;buffer_latency=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "1024|"
		  MaskTabNameString	  ","
		  System {
		    Name		    "tap_delay"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Constant"
		    Ports		    [0, 1]
		    Position		    [165, 133, 180, 147]
		    ShowName		    off
		    SourceBlock		    "xbsIndex_r4/Constant"
		    SourceType		    "Xilinx Constant Block Block"
		    arith_type		    "Boolean"
		    const		    "1"
		    n_bits		    "1"
		    bin_pt		    "0"
		    explicit_period	    on
		    period		    "1"
		    dsp48_infoedit	    "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		    equ			    "P=C"
		    opselect		    "C"
		    inp2		    "PCIN>>17"
		    opr			    "+"
		    inp1		    "P"
		    carry		    "CIN"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "constant"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "15,14,1,1,white,blue,0,06094819,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 15 15 0 ],[0 0 14 14 ],[0.77 0.82 0.91]);\npatch([3 1 4 1 3 7 8 9 13 10 7 5 8 5 7 10 13 9 8 7 3 ],[2 4 7 10 12 12 11 12 12 9 12 10 7 4 2 5 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 15 15 0 0 ],[0 0 14 14 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [0, 1]
		    Position		    [130, 71, 180, 89]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1022"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    off
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,a170c862,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bram"
		    Ports		    [3, 1]
		    Position		    [230, 61, 295, 159]
		    SourceBlock		    "xbsIndex_r4/Single Port RAM"
		    SourceType		    "Xilinx Single Port Random Access Memory Block"
		    depth		    "1024"
		    initVector		    "0"
		    distributed_mem	    "Block RAM"
		    write_mode		    "Read Before Write"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "spram"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "65,98,1,1,white,blue,0,90951842,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 98 98 ],[0.77 0.82 0.91]);\npatch([15 4 19 4 15 32 37 42 60 45 31 21 36 21 31 45 60 42 37 32 15 ],[24 35 50 65 76 76 71 76 76 61 75 65 50 35 25 39 24 24 29 24 24 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 98 98 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Constant"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    3
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "bram"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [555, 23, 585, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [555, 133, 585, 147]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 278, 585, 292]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "convert_im"
		  SrcPort		  1
		  Points		  [20, 0; 0, -40]
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "convert_re"
		  SrcPort		  1
		  Points		  [20, 0; 0, 35]
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "tap_delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_im"
		  SrcPort		  1
		  DstBlock		  "convert_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_re"
		  SrcPort		  1
		  DstBlock		  "convert_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  2
		  Points		  [75, 0]
		  DstBlock		  "mult_add_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  1
		  Points		  [75, 0]
		  DstBlock		  "mult_add_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "c_to_ri_s"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "coef"
		  SrcPort		  1
		  Points		  [140, 0]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "mult_add_re"
		    DstPort		    2
		  }
		  Branch {
		    DstBlock		    "mult_add_im"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  2
		  Points		  [20, 0; 0, 75]
		  DstBlock		  "mult_add_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  1
		  DstBlock		  "mult_add_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  Points		  [35, 0]
		  Branch {
		    Points		    [0, 60]
		    DstBlock		    "c_to_ri_d"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "dout_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "dout_delay"
		  SrcPort		  1
		  DstBlock		  "tap_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "data_out"
	      Position		      [435, 23, 465, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [435, 58, 465, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [435, 93, 465, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      3
	      Points		      [25, 0; 0, 15]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      2
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      1
	      Points		      [25, 0; 0, -15]
	      DstBlock		      "data_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, -15]
	      DstBlock		      "fir_coef"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "fir_coef"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "data_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, 15]
	      DstBlock		      "fir_coef"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      4
	      DstBlock		      "fir_core"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      3
	      DstBlock		      "fir_core"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      2
	      DstBlock		      "fir_core"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      1
	      DstBlock		      "fir_core"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_tap_3"
	  Ports			  [3, 3]
	  Position		  [400, 30, 500, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "delay 1024 in bram\n1024 coefs in bram"
	  UserDataPersistent	  on
	  UserData		  "DataTag25"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Tap (Real Coefficients)"
	  MaskDescription	  "A Finite Impluse Response Filter tap with real coefficients.  This FIR filter tap does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter tap with real coefficients.\n\nThis Finite Impluse Response Filter tap is designed to be daisy chained together\nto form a multi-tap FIR filter.  This FIR filter tap does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nTap Coefficiant(s) (coef): The coefficient(s) for this tap.  For a regular FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nUsually, delay==length(coef), but this is not required.  These should be specified as doubles. \nThey will be rounded and saturated according to the specified number of bits (n_bits_c) and\nbinary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	  MaskPromptString	  "Tap Delay|Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	  MaskStyleString	  "edit,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "||||||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,,,,"
	  MaskVariables		  "delay=&1;coef=&2;n_bits_c=&3;bin_pt_c=&4;n_bits_d=&5;bin_pt_d=&6;n_bits_s=&7;bin_pt_s=&8;coef_bram=&9;delay_bram=&10;mult_latency=&11;add_latency=&12;add_bypass=&13;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "1024|[0.999999547662946;0.999995928971626;0.999988691616268;0.999977835651433;0.999963361158965;0.999945268247983;0.999923557054889;0.99989822774336;0.999869280504348;0.999836715556079;0.999800533144051;0.99976073354103;0.999717317047049;0.999670283989403;0.999619634722648;0.999565369628596;0.999507489116311;0.999445993622108;0.999380883609544;0.999312159569415;0.999239822019754;0.999163871505822;0.999084308600105;0.999001133902306;0.998914348039344;0.998823951665339;0.998729945461616;0.99863233013669;0.998531106426262;0.998426275093213;0.998317836927595;0.998205792746621;0.998090143394661;0.997970889743233;0.99784803269099;0.997721573163716;0.997591512114315;0.997457850522799;0.997320589396285;0.997179729768976;0.997035272702159;0.99688721928419;0.996735570630482;0.996580327883498;0.996421492212737;0.996259064814724;0.996093046912996;0.99592343975809;0.995750244627533;0.995573462825828;0.99539309568444;0.995209144561783;0.995021610843209;0.994830495940991;0.99463580129431;0.994437528369243;0.994235678658745;0.994030253682635;0.993821254987582;0.993608684147091;0.993392542761483;0.993172832457882;0.992949554890201;0.99272271173912;0.992492304712073;0.992258335543232;0.992020805993488;0.991779717850431;0.991535072928337;0.991286873068149;0.991035120137455;0.990779816030475;0.990520962668036;0.990258561997559;0.989992615993036;0.989723126655011;0.989450096010561;0.989173526113274;0.988893419043231;0.988609776906985;0.988322601837537;0.98803189599432;0.987737661563173;0.987439900756322;0.987138615812356;0.986833808996206;0.986525482599124;0.986213638938657;0.985898280358627;0.985579409229105;0.98525702794639;0.984931138932984;0.984601744637569;0.984268847534979;0.98393245012618;0.983592554938246;0.983249164524326;0.98290228146363;0.982551908361392;0.982198047848854;0.981840702583234;0.9814798752477;0.981115568551347;0.980747785229165;0.980376528042017;0.98000179977661;0.979623603245462;0.979241941286885;0.978856816764947;0.978468232569446;0.978076191615887;0.977680696845445;0.977281751224942;0.976879357746813;0.97647351942908;0.976064239315321;0.975651520474639;0.975235366001631;0.97481577901636;0.974392762664321;0.973966320116415;0.973536454568909;0.973103169243412;0.972666467386842;0.972226352271389;0.971782827194488;0.971335895478783;0.970885560472097;0.970431825547395;0.969974694102756;0.969514169561332;0.969050255371323;0.968582955005935;0.96811227196335;0.967638209766689;0.967160771963981;0.966679962128122;0.966195783856846;0.965708240772684;0.965217336522932;0.964723074779614;0.964225459239442;0.963724493623787;0.963220181678634;0.962712527174551;0.962201533906649;0.961687205694544;0.961169546382321;0.960648559838497;0.960124249955978;0.959596620652025;0.959065675868214;0.958531419570396;0.95799385574866;0.957452988417292;0.956908821614734;0.956361359403548;0.955810605870372;0.955256565125884;0.954699241304754;0.954138638565613;0.953574761091004;0.953007613087343;0.952437198784881;0.951863522437655;0.951286588323455;0.950706400743774;0.950122964023769;0.949536282512219;0.948946360581481;0.948353202627446;0.947756813069498;0.947157196350468;0.946554356936591;0.945948299317464;0.945339028005997;0.944726547538374;0.944110862474005;0.943491977395482;0.942869896908532;0.942244625641977;0.941616168247679;0.940984529400506;0.940349713798277;0.939711726161716;0.939070571234412;0.938426253782768;0.937778778595951;0.937128150485851;0.936474374287031;0.935817454856679;0.935157397074559;0.934494205842967;0.933827886086677;0.933158442752899;0.932485880811225;0.931810205253583;0.931131421094187;0.930449533369489;0.929764547138127;0.929076467480875;0.928385299500598;0.927691048322198;0.92699371909256;0.926293316980511;0.925589847176761;0.924883314893854;0.924173725366119;0.923461083849616;0.922745395622088;0.922026665982904;0.92130490025301;0.920580103774877;0.919852281912448;0.919121440051086;0.918387583597519;0.91765071797979;0.9169108486472;0.916167981070258;0.915422120740627;0.914673273171068;0.913921443895387;0.913166638468382;0.912408862465787;0.911648121484216;0.910884421141112;0.91011776707469;0.90934816494388;0.908575620428275;0.907800139228072;0.907021727064019;0.906240389677357;0.905456132829764;0.9046689623033;0.90387888390035;0.903085903443565;0.902290026775807;0.901491259760094;0.900689608279537;0.899885078237288;0.899077675556479;0.898267406180164;0.897454276071263;0.896638291212503;0.895819457606359;0.894997781274994;0.894173268260203;0.893345924623353;0.892515756445321;0.89168276982644;0.890846970886435;0.890008365764364;0.88916696061856;0.888322761626568;0.887475774985088;0.886626006909912;0.885773463635865;0.884918151416742;0.884060076525249;0.883199245252942;0.882335663910164;0.881469338825985;0.880600276348139;0.879728482842962;0.878853964695334;0.877976728308609;0.877096780104561;0.876214126523317;0.875328774023292;0.874440729081133;0.873549998191649;0.872656587867754;0.871760504640396;0.870861755058503;0.869960345688909;0.869056283116299;0.86814957394314;0.867240224789617;0.866328242293574;0.865413633110439;0.864496403913169;0.863576561392183;0.862654112255293;0.861729063227642;0.86080142105164;0.859871192486895;0.85893838431015;0.858003003315215;0.857065056312905;0.85612455013097;0.855181491614029;0.854235887623507;0.853287745037565;0.852337070751035;0.851383871675352;0.850428154738489;0.849469926884886;0.84850919507539;0.847545966287178;0.846580247513697;0.845612045764594;0.844641368065647;0.843668221458696;0.84269261300158;0.841714549768064;0.840734038847771;0.839751087346116;0.838765702384234;0.837777891098914;0.836787660642529;0.835795018182967;0.834799970903559;0.833802526003016;0.832802690695352;0.831800472209821;0.830795877790843;0.829788914697934;0.828779590205639;0.827767911603459;0.826753886195782;0.825737521301814;0.824718824255502;0.823697802405475;0.822674463114959;0.821648813761719;0.820620861737978;0.819590614450354;0.81855807931978;0.817523263781442;0.8164861752847;0.815446821293019;0.814405209283897;0.813361346748796;0.812315241193064;0.811266900135868;0.810216331110119;0.8091635416624;0.808108539352896;0.807051331755317;0.805991926456828;0.804930331057977;0.80386655317262;0.802800600427848;0.801732480463917;0.800662200934169;0.799589769504963;0.798515193855602;0.797438481678257;0.796359640677891;0.795278678572193;0.794195603091497;0.793110421978709;0.792023142989237;0.790933773890911;0.789842322463913;0.788748796500701;0.787653203805936;0.786555552196404;0.785455849500942;0.784354103560369;0.783250322227402;0.782144513366589;0.781036684854226;0.779926844578291;0.77881500043836;0.777701160345539;0.776585332222382;0.775467524002819;0.774347743632081;0.773225999066623;0.772102298274047;0.770976649233028;0.769849059933236;0.768719538375264;0.767588092570547;0.766454730541287;0.765319460320378;0.764182289951332;0.763043227488195;0.761902280995477;0.760759458548073;0.759614768231187;0.758468218140255;0.757319816380865;0.756169571068687;0.755017490329388;0.753863582298562;0.752707855121646;0.751550316953849;0.750390975960072;0.749229840314828;0.748066918202168;0.746902217815605;0.74573574735803;0.744567515041641;0.743397529087861;0.742225797727262;0.741052329199488;0.739877131753174;0.73870021364587;0.737521583143965;0.736341248522604;0.735159218065615;0.733975500065425;0.732790102822989;0.731603034647704;0.730414303857337;0.729223918777942;0.728031887743784;0.72683821909726;0.725642921188819;0.724446002376885;0.723247471027779;0.722047335515636;0.720845604222332;0.7196422855374;0.718437387857955;0.717230919588611;0.716022889141407;0.714813304935724;0.713602175398207;0.712389508962686;0.711175314070098;0.709959599168404;0.708742372712514;0.707523643164207;0.706303418992049;0.705081708671316;0.703858520683914;0.702633863518298;0.701407745669397;0.700180175638527;0.69895116193332;0.697720713067638;0.696488837561496;0.695255543940982;0.694020840738178;0.692784736491078;0.691547239743511;0.69030835904506;0.689068102950982;0.687826480022128;0.686583498824865;0.685339167930993;0.684093495917668;0.682846491367321;0.681598162867577;0.680348519011176;0.679097568395895;0.677845319624464;0.676591781304489;0.675336962048371;0.674080870473226;0.672823515200804;0.671564904857411;0.670305048073829;0.669043953485231;0.667781629731109;0.666518085455186;0.66525332930534;0.663987369933525;0.662720215995689;0.66145187615169;0.660182359065225;0.658911673403742;0.657639827838363;0.656366831043801;0.655092691698287;0.65381741848348;0.652541020084396;0.651263505189319;0.64998488248973;0.64870516068022;0.647424348458412;0.646142454524881;0.644859487583075;0.643575456339231;0.642290369502301;0.641004235783867;0.63971706389806;0.638428862561485;0.637139640493137;0.635849406414322;0.634558169048576;0.633265937121587;0.631972719361113;0.630678524496902;0.629383361260614;0.628087238385739;0.626790164607517;0.62549214866286;0.624193199290268;0.622893325229755;0.621592535222764;0.620290838012088;0.618988242341793;0.617684756957135;0.616380390604481;0.61507515203123;0.613769049985734;0.612462093217214;0.611154290475686;0.609845650511876;0.608536182077146;0.607225893923408;0.605914794803051;0.604602893468854;0.603290198673914;0.60197671917156;0.60066246371528;0.599347441058636;0.598031659955185;0.596715129158405;0.595397857421609;0.594079853497869;0.592761126139939;0.591441684100169;0.590121536130435;0.588800690982049;0.587479157405691;0.586156944151322;0.584834059968109;0.583510513604344;0.582186313807366;0.580861469323482;0.579535988897889;0.578209881274593;0.576883155196333;0.575555819404501;0.574227882639063;0.572899353638481;0.571570241139634;0.570240553877741;0.568910300586281;0.567579489996916;0.566248130839409;0.564916231841552;0.563583801729084;0.562250849225612;0.560917383052535;0.559583411928966;0.558248944571653;0.556913989694902;0.555578556010497;0.554242652227627;0.552906287052803;0.551569469189783;0.550232207339496;0.54889451019996;0.547556386466211;0.546217844830218;0.544878893980812;0.543539542603607;0.542199799380921;0.5408596729917;0.539519172111444;0.538178305412124;0.536837081562112;0.535495509226098;0.534153597065018;0.532811353735976;0.531468787892165;0.530125908182794;0.52878272325301;0.527439241743822;0.526095472292026;0.524751423530125;0.523407104086258;0.52206252258412;0.52071768764289;0.51937260787715;0.518027291896815;0.516681748307053;0.515335985708212;0.513990012695743;0.512643837860127;0.511297469786796;0.509950917056061;0.508604188243036;0.507257291917563;0.505910236644137;0.50456303098183;0.503215683484219;0.50186820269931;0.500520597169462;0.499172875431316;0.497825046015716;0.49647711744764;0.495129098246122;0.49378099692418;0.49243282198874;0.491084581940566;0.489736285274183;0.488387940477802;0.487039556033253;0.485691140415903;0.484342702094591;0.482994249531548;0.481645791182329;0.480297335495736;0.478948890913749;0.477600465871449;0.47625206879695;0.474903708111322;0.473555392228522;0.47220712955532;0.470858928491227;0.469510797428423;0.468162744751687;0.46681477883832;0.465466908058079;0.464119140773102;0.462771485337837;0.461423950098973;0.460076543395366;0.458729273557966;0.457382148909753;0.456035177765659;0.4546883684325;0.453341729208906;0.451995268385251;0.450648994243579;0.449302915057537;0.447957039092305;0.446611374604524;0.445265929842227;0.44392071304477;0.44257573244276;0.441230996257989;0.439886512703362;0.438542289982828;0.437198336291311;0.435854659814643;0.434511268729492;0.433168171203296;0.431825375394191;0.430482889450948;0.429140721512899;0.427798879709872;0.426457372162121;0.425116206980262;0.423775392265199;0.422434936108063;0.42109484659014;0.419755131782804;0.418415799747454;0.417076858535439;0.415738316188001;0.414400180736199;0.413062460200849;0.411725162592453;0.410388295911137;0.409051868146579;0.40771588727795;0.406380361273841;0.405045298092203;0.403710705680279;0.402376591974537;0.401042964900608;0.399709832373217;0.398377202296122;0.397045082562048;0.395713481052618;0.394382405638295;0.393051864178314;0.391721864520617;0.390392414501793;0.389063521947008;0.387735194669947;0.386407440472746;0.385080267145932;0.383753682468358;0.382427694207139;0.381102310117591;0.379777537943166;0.378453385415392;0.377129860253808;0.375806970165902;0.374484722847052;0.373163125980459;0.371842187237087;0.370521914275606;0.369202314742321;0.367883396271121;0.366565166483408;0.365247632988046;0.363930803381291;0.362614685246735;0.361299286155246;0.359984613664905;0.358670675320949;0.357357478655706;0.356045031188542;0.354733340425795;0.353422413860719;0.352112258973424;0.350802883230817;0.349494294086542;0.348186498980922;0.3468795053409;0.345573320579982;0.344267952098176;0.342963407281936;0.341659693504104;0.34035681812385;0.339054788486619;0.337753611924068;0.336453295754014;0.335153847280371;0.333855273793101;0.33255758256815;0.331260780867396;0.329964875938589;0.328669875015299;0.327375785316859;0.326082614048306;0.324790368400329;0.323499055549212;0.322208682656779;0.320919256870341;0.319630785322636;0.318343275131781;0.317056733401212;0.315771167219632;0.314486583660959;0.313202989784267;0.311920392633738;0.310638799238603;0.309358216613093;0.308078651756386;0.306800111652548;0.305522603270488;0.304246133563902;0.302970709471217;0.301696337915547;0.300423025804634;0.299150780030799;0.29787960747089;0.296609514986232;0.295340509422572;0.294072597610032;0.292805786363058;0.291540082480364;0.290275492744891;0.289012023923747;0.287749682768163;0.286488476013441;0.285228410378907;0.283969492567857;0.282711729267511;0.281455127148964;0.280199692867136;0.278945433060723;0.27769235435215;0.276440463347524;0.27518976663658;0.273940270792641;0.272691982372566;0.271444907916702;0.270199053948839;0.268954426976162;0.267711033489204;0.266468879961801;0.265227972851043;0.26398831859723;0.262749923623824;0.261512794337407;0.260276937127629;0.25904235836717;0.25780906441169;0.256577061599786;0.255346356252946;0.254116954675506;0.252888863154604;0.251662087960139;0.250436635344722;0.249212511543637;0.247989722774796;0.246768275238695;0.245548175118373;0.244329428579365;0.243112041769665;0.241896020819679;0.240681371842184;0.23946810093229;0.23825621416739;0.237045717607127;0.235836617293348;0.234628919250063;0.233422629483406;0.232217753981592;0.231014298714879;0.229812269635527;0.228611672677756;0.227412513757708;0.226214798773408;0.225018533604724;0.223823724113326;0.222630376142649;0.221438495517857;0.220248088045796;0.219059159514965;0.217871715695474;0.216685762339004;0.215501305178773;0.214318349929498;0.213136902287355;0.211956967929945;0.210778552516257;0.209601661686629;0.208426301062716;0.207252476247449;0.206080192825002;0.204909456360757;0.203740272401268;0.202572646474221;0.201406584088409;0.200242090733689;0.199079171880949;0.197917832982076;0.196758079469921;0.195599916758264;0.194443350241782;0.193288385296015;0.192135027277332;0.190983281522898;0.189833153350645;0.188684648059233;0.187537770928023;0.186392527217044;0.185248922166959;0.184106960999035;0.182966648915113;0.181827991097572;0.180690992709306;0.179555658893686;0.178421994774532;0.177290005456083;0.176159696022971;0.175031071540182;0.173904137053034;0.172778897587147;0.171655358148411;0.170533523722959;0.169413399277137;0.168294989757478;0.167178300090671;0.166063335183536;0.164950099922995;0.163838599176042;0.162728837789721;0.161620820591094;0.160514552387217;0.159410037965114;0.158307282091748;0.157206289513996;0.156107064958625;0.155009613132265;0.153913938721383;0.152820046392257;0.151727940790955;0.150637626543306;0.149549108254878;0.148462390510953;0.147377477876504;0.146294374896168;0.145213086094228;0.144133615974584;0.143055969020734;0.141980149695748;0.140906162442248;0.139834011682386;0.138763701817818;0.137695237229687;0.136628622278597;0.135563861304595;0.134500958627148;0.133439918545122;0.132380745336762;0.131323443259671;0.13026801655079;0.129214469426379;0.128162806081993;0.12711303069247;0.126065147411903;0.125019160373628;0.123975073690202;0.122932891453382;0.121892617734113;0.120854256582503;0.11981781202781;0.118783288078423;0.117750688721843;0.116720017924666;0.11569127963257;0.114664477770291;0.113639616241614;0.112616698929352;0.111595729695331;0.110576712380376;0.109559650804292;0.108544548765853;0.107531410042783;0.106520238391741;0.105511037548312;0.104503811226986;0.103498563121147;0.102495296903059;0.10149401622385;0.100494724713505;0.0994974259808421;0.0985021236135104;0.0975088211779706;0.0965175222194845;0.0955282302621025;0.094540948808652;0.0935556813407251;0.0925724313186671;0.091591202181565;0.0906119973472373;0.0896348202122217;0.0886596741517658;0.0876865625198155;0.0867154886490061;0.0857464558506515;0.0847794674147343;0.0838145266098974;0.0828516366834338;0.081890800861278;0.0809320223479969;0.0799753043267821;0.0790206499594406;0.0780680623863875;0.0771175447266376;0.0761691000777984;0.0752227315160621;0.0742784420961991;0.0733362348515507;0.0723961127940227;0.0714580789140785;0.0705221361807334;0.069588287541549;0.0686565359226264;0.0677268842286013;0.066799335342639;0.0658738921264291;0.0649505574201807;0.0640293340426176;0.0631102247909746;0.062193232440993;0.0612783597469165;0.0603656094414881;0.0594549842359465;0.0585464868200229;0.0576401198619378;0.0567358860083988;0.055833787884598;0.0549338280942094;0.0540360092193872;0.0531403338207642;0.0522468044374499;0.0513554235870291;0.0504661937655611;0.0495791174475793;0.0486941970860893;0.0478114351125697;0.0469308339369715;0.0460523959477181;0.0451761235117054;0.0443020189743029;0.0434300846593541;0.0425603228691775;0.0416927358845677;0.0408273259647971;0.0399640953476175;0.0391030462492619;0.0382441808644464;0.0373875013663734;0.0365330099067331;0.035680708615707;0.0348305996019707;0.0339826849526973;0.0331369667335609;0.0322934469887399;0.0314521277409214;0.0306130109913055;0.0297760987196091;0.0289413928840709;0.0281088954214566;0.0272786082470629;0.026450533254724;0.0256246723168164;0.0248010272842649;0.0239795999865484;0.0231603922317064;0.022343405806345;0.0215286424756441;0.0207161039833637;0.019905792051851;0.0190977083820486;0.0182918546535009;0.0174882325243625;0.0166868436314057;0.0158876895900297;0.0150907719942678;0.0142960924167967;0.0135036524089452;0.0127134535007037;0.0119254972007329;0.0111397849963734;0.0103563183536561;0.00957509871731131;0.00879612751077952;0.00801940613622144;0.00724493597452914;0.00647271838533626;0.00570275470702945;0.00493504625675948;0.00416959433045314;0.00340640020282435;0.00264546512738635;0.00188679033646423;0.00113037704120664;0.000376226431598763]|9|8|8|7|17|15|on|on|3|1|off"
	  MaskTabNameString	  ",,,,,,,,,,,,"
	  System {
	    Name		    "fir_tap_3"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_in"
	      Position		      [30, 23, 60, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 58, 60, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 93, 60, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_coef"
	      Ports		      [3, 4]
	      Position		      [115, 29, 205, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "1024 coefs in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag26"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Coefficient Generator"
	      MaskDescription	      "A Finite Impluse Response filter coefficient generator.  This FIR filter coefficient generator outputs real coefficients.  It can output one coefficient or cycle through a vector of coefficients for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response filter coefficient generator.\nThis FIR filter coefficient generator outputs real coefficients.\nIt can output one coefficient or cycle through a vector of coefficients for WOLA\n(Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Coefficiant(s) (coef): The coefficient(s) to output.  For a \"regular\" FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nThese should be specified as doubles.   They will be rounded and saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nUse BRAM for Coefficients (use_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n</pre>"
	      MaskPromptString	      "Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Use BRAM for Coefficients"
	      MaskStyleString	      "edit,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "coef=&1;n_bits_c=&2;bin_pt_c=&3;use_bram=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "[0.999999547662946;0.999995928971626;0.999988691616268;0.999977835651433;0.999963361158965;0.999945268247983;0.999923557054889;0.99989822774336;0.999869280504348;0.999836715556079;0.999800533144051;0.99976073354103;0.999717317047049;0.999670283989403;0.999619634722648;0.999565369628596;0.999507489116311;0.999445993622108;0.999380883609544;0.999312159569415;0.999239822019754;0.999163871505822;0.999084308600105;0.999001133902306;0.998914348039344;0.998823951665339;0.998729945461616;0.99863233013669;0.998531106426262;0.998426275093213;0.998317836927595;0.998205792746621;0.998090143394661;0.997970889743233;0.99784803269099;0.997721573163716;0.997591512114315;0.997457850522799;0.997320589396285;0.997179729768976;0.997035272702159;0.99688721928419;0.996735570630482;0.996580327883498;0.996421492212737;0.996259064814724;0.996093046912996;0.99592343975809;0.995750244627533;0.995573462825828;0.99539309568444;0.995209144561783;0.995021610843209;0.994830495940991;0.99463580129431;0.994437528369243;0.994235678658745;0.994030253682635;0.993821254987582;0.993608684147091;0.993392542761483;0.993172832457882;0.992949554890201;0.99272271173912;0.992492304712073;0.992258335543232;0.992020805993488;0.991779717850431;0.991535072928337;0.991286873068149;0.991035120137455;0.990779816030475;0.990520962668036;0.990258561997559;0.989992615993036;0.989723126655011;0.989450096010561;0.989173526113274;0.988893419043231;0.988609776906985;0.988322601837537;0.98803189599432;0.987737661563173;0.987439900756322;0.987138615812356;0.986833808996206;0.986525482599124;0.986213638938657;0.985898280358627;0.985579409229105;0.98525702794639;0.984931138932984;0.984601744637569;0.984268847534979;0.98393245012618;0.983592554938246;0.983249164524326;0.98290228146363;0.982551908361392;0.982198047848854;0.981840702583234;0.9814798752477;0.981115568551347;0.980747785229165;0.980376528042017;0.98000179977661;0.979623603245462;0.979241941286885;0.978856816764947;0.978468232569446;0.978076191615887;0.977680696845445;0.977281751224942;0.976879357746813;0.97647351942908;0.976064239315321;0.975651520474639;0.975235366001631;0.97481577901636;0.974392762664321;0.973966320116415;0.973536454568909;0.973103169243412;0.972666467386842;0.972226352271389;0.971782827194488;0.971335895478783;0.970885560472097;0.970431825547395;0.969974694102756;0.969514169561332;0.969050255371323;0.968582955005935;0.96811227196335;0.967638209766689;0.967160771963981;0.966679962128122;0.966195783856846;0.965708240772684;0.965217336522932;0.964723074779614;0.964225459239442;0.963724493623787;0.963220181678634;0.962712527174551;0.962201533906649;0.961687205694544;0.961169546382321;0.960648559838497;0.960124249955978;0.959596620652025;0.959065675868214;0.958531419570396;0.95799385574866;0.957452988417292;0.956908821614734;0.956361359403548;0.955810605870372;0.955256565125884;0.954699241304754;0.954138638565613;0.953574761091004;0.953007613087343;0.952437198784881;0.951863522437655;0.951286588323455;0.950706400743774;0.950122964023769;0.949536282512219;0.948946360581481;0.948353202627446;0.947756813069498;0.947157196350468;0.946554356936591;0.945948299317464;0.945339028005997;0.944726547538374;0.944110862474005;0.943491977395482;0.942869896908532;0.942244625641977;0.941616168247679;0.940984529400506;0.940349713798277;0.939711726161716;0.939070571234412;0.938426253782768;0.937778778595951;0.937128150485851;0.936474374287031;0.935817454856679;0.935157397074559;0.934494205842967;0.933827886086677;0.933158442752899;0.932485880811225;0.931810205253583;0.931131421094187;0.930449533369489;0.929764547138127;0.929076467480875;0.928385299500598;0.927691048322198;0.92699371909256;0.926293316980511;0.925589847176761;0.924883314893854;0.924173725366119;0.923461083849616;0.922745395622088;0.922026665982904;0.92130490025301;0.920580103774877;0.919852281912448;0.919121440051086;0.918387583597519;0.91765071797979;0.9169108486472;0.916167981070258;0.915422120740627;0.914673273171068;0.913921443895387;0.913166638468382;0.912408862465787;0.911648121484216;0.910884421141112;0.91011776707469;0.90934816494388;0.908575620428275;0.907800139228072;0.907021727064019;0.906240389677357;0.905456132829764;0.9046689623033;0.90387888390035;0.903085903443565;0.902290026775807;0.901491259760094;0.900689608279537;0.899885078237288;0.899077675556479;0.898267406180164;0.897454276071263;0.896638291212503;0.895819457606359;0.894997781274994;0.894173268260203;0.893345924623353;0.892515756445321;0.89168276982644;0.890846970886435;0.890008365764364;0.88916696061856;0.888322761626568;0.887475774985088;0.886626006909912;0.885773463635865;0.884918151416742;0.884060076525249;0.883199245252942;0.882335663910164;0.881469338825985;0.880600276348139;0.879728482842962;0.878853964695334;0.877976728308609;0.877096780104561;0.876214126523317;0.875328774023292;0.874440729081133;0.873549998191649;0.872656587867754;0.871760504640396;0.870861755058503;0.869960345688909;0.869056283116299;0.86814957394314;0.867240224789617;0.866328242293574;0.865413633110439;0.864496403913169;0.863576561392183;0.862654112255293;0.861729063227642;0.86080142105164;0.859871192486895;0.85893838431015;0.858003003315215;0.857065056312905;0.85612455013097;0.855181491614029;0.854235887623507;0.853287745037565;0.852337070751035;0.851383871675352;0.850428154738489;0.849469926884886;0.84850919507539;0.847545966287178;0.846580247513697;0.845612045764594;0.844641368065647;0.843668221458696;0.84269261300158;0.841714549768064;0.840734038847771;0.839751087346116;0.838765702384234;0.837777891098914;0.836787660642529;0.835795018182967;0.834799970903559;0.833802526003016;0.832802690695352;0.831800472209821;0.830795877790843;0.829788914697934;0.828779590205639;0.827767911603459;0.826753886195782;0.825737521301814;0.824718824255502;0.823697802405475;0.822674463114959;0.821648813761719;0.820620861737978;0.819590614450354;0.81855807931978;0.817523263781442;0.8164861752847;0.815446821293019;0.814405209283897;0.813361346748796;0.812315241193064;0.811266900135868;0.810216331110119;0.8091635416624;0.808108539352896;0.807051331755317;0.805991926456828;0.804930331057977;0.80386655317262;0.802800600427848;0.801732480463917;0.800662200934169;0.799589769504963;0.798515193855602;0.797438481678257;0.796359640677891;0.795278678572193;0.794195603091497;0.793110421978709;0.792023142989237;0.790933773890911;0.789842322463913;0.788748796500701;0.787653203805936;0.786555552196404;0.785455849500942;0.784354103560369;0.783250322227402;0.782144513366589;0.781036684854226;0.779926844578291;0.77881500043836;0.777701160345539;0.776585332222382;0.775467524002819;0.774347743632081;0.773225999066623;0.772102298274047;0.770976649233028;0.769849059933236;0.768719538375264;0.767588092570547;0.766454730541287;0.765319460320378;0.764182289951332;0.763043227488195;0.761902280995477;0.760759458548073;0.759614768231187;0.758468218140255;0.757319816380865;0.756169571068687;0.755017490329388;0.753863582298562;0.752707855121646;0.751550316953849;0.750390975960072;0.749229840314828;0.748066918202168;0.746902217815605;0.74573574735803;0.744567515041641;0.743397529087861;0.742225797727262;0.741052329199488;0.739877131753174;0.73870021364587;0.737521583143965;0.736341248522604;0.735159218065615;0.733975500065425;0.732790102822989;0.731603034647704;0.730414303857337;0.729223918777942;0.728031887743784;0.72683821909726;0.725642921188819;0.724446002376885;0.723247471027779;0.722047335515636;0.720845604222332;0.7196422855374;0.718437387857955;0.717230919588611;0.716022889141407;0.714813304935724;0.713602175398207;0.712389508962686;0.711175314070098;0.709959599168404;0.708742372712514;0.707523643164207;0.706303418992049;0.705081708671316;0.703858520683914;0.702633863518298;0.701407745669397;0.700180175638527;0.69895116193332;0.697720713067638;0.696488837561496;0.695255543940982;0.694020840738178;0.692784736491078;0.691547239743511;0.69030835904506;0.689068102950982;0.687826480022128;0.686583498824865;0.685339167930993;0.684093495917668;0.682846491367321;0.681598162867577;0.680348519011176;0.679097568395895;0.677845319624464;0.676591781304489;0.675336962048371;0.674080870473226;0.672823515200804;0.671564904857411;0.670305048073829;0.669043953485231;0.667781629731109;0.666518085455186;0.66525332930534;0.663987369933525;0.662720215995689;0.66145187615169;0.660182359065225;0.658911673403742;0.657639827838363;0.656366831043801;0.655092691698287;0.65381741848348;0.652541020084396;0.651263505189319;0.64998488248973;0.64870516068022;0.647424348458412;0.646142454524881;0.644859487583075;0.643575456339231;0.642290369502301;0.641004235783867;0.63971706389806;0.638428862561485;0.637139640493137;0.635849406414322;0.634558169048576;0.633265937121587;0.631972719361113;0.630678524496902;0.629383361260614;0.628087238385739;0.626790164607517;0.62549214866286;0.624193199290268;0.622893325229755;0.621592535222764;0.620290838012088;0.618988242341793;0.617684756957135;0.616380390604481;0.61507515203123;0.613769049985734;0.612462093217214;0.611154290475686;0.609845650511876;0.608536182077146;0.607225893923408;0.605914794803051;0.604602893468854;0.603290198673914;0.60197671917156;0.60066246371528;0.599347441058636;0.598031659955185;0.596715129158405;0.595397857421609;0.594079853497869;0.592761126139939;0.591441684100169;0.590121536130435;0.588800690982049;0.587479157405691;0.586156944151322;0.584834059968109;0.583510513604344;0.582186313807366;0.580861469323482;0.579535988897889;0.578209881274593;0.576883155196333;0.575555819404501;0.574227882639063;0.572899353638481;0.571570241139634;0.570240553877741;0.568910300586281;0.567579489996916;0.566248130839409;0.564916231841552;0.563583801729084;0.562250849225612;0.560917383052535;0.559583411928966;0.558248944571653;0.556913989694902;0.555578556010497;0.554242652227627;0.552906287052803;0.551569469189783;0.550232207339496;0.54889451019996;0.547556386466211;0.546217844830218;0.544878893980812;0.543539542603607;0.542199799380921;0.5408596729917;0.539519172111444;0.538178305412124;0.536837081562112;0.535495509226098;0.534153597065018;0.532811353735976;0.531468787892165;0.530125908182794;0.52878272325301;0.527439241743822;0.526095472292026;0.524751423530125;0.523407104086258;0.52206252258412;0.52071768764289;0.51937260787715;0.518027291896815;0.516681748307053;0.515335985708212;0.513990012695743;0.512643837860127;0.511297469786796;0.509950917056061;0.508604188243036;0.507257291917563;0.505910236644137;0.50456303098183;0.503215683484219;0.50186820269931;0.500520597169462;0.499172875431316;0.497825046015716;0.49647711744764;0.495129098246122;0.49378099692418;0.49243282198874;0.491084581940566;0.489736285274183;0.488387940477802;0.487039556033253;0.485691140415903;0.484342702094591;0.482994249531548;0.481645791182329;0.480297335495736;0.478948890913749;0.477600465871449;0.47625206879695;0.474903708111322;0.473555392228522;0.47220712955532;0.470858928491227;0.469510797428423;0.468162744751687;0.46681477883832;0.465466908058079;0.464119140773102;0.462771485337837;0.461423950098973;0.460076543395366;0.458729273557966;0.457382148909753;0.456035177765659;0.4546883684325;0.453341729208906;0.451995268385251;0.450648994243579;0.449302915057537;0.447957039092305;0.446611374604524;0.445265929842227;0.44392071304477;0.44257573244276;0.441230996257989;0.439886512703362;0.438542289982828;0.437198336291311;0.435854659814643;0.434511268729492;0.433168171203296;0.431825375394191;0.430482889450948;0.429140721512899;0.427798879709872;0.426457372162121;0.425116206980262;0.423775392265199;0.422434936108063;0.42109484659014;0.419755131782804;0.418415799747454;0.417076858535439;0.415738316188001;0.414400180736199;0.413062460200849;0.411725162592453;0.410388295911137;0.409051868146579;0.40771588727795;0.406380361273841;0.405045298092203;0.403710705680279;0.402376591974537;0.401042964900608;0.399709832373217;0.398377202296122;0.397045082562048;0.395713481052618;0.394382405638295;0.393051864178314;0.391721864520617;0.390392414501793;0.389063521947008;0.387735194669947;0.386407440472746;0.385080267145932;0.383753682468358;0.382427694207139;0.381102310117591;0.379777537943166;0.378453385415392;0.377129860253808;0.375806970165902;0.374484722847052;0.373163125980459;0.371842187237087;0.370521914275606;0.369202314742321;0.367883396271121;0.366565166483408;0.365247632988046;0.363930803381291;0.362614685246735;0.361299286155246;0.359984613664905;0.358670675320949;0.357357478655706;0.356045031188542;0.354733340425795;0.353422413860719;0.352112258973424;0.350802883230817;0.349494294086542;0.348186498980922;0.3468795053409;0.345573320579982;0.344267952098176;0.342963407281936;0.341659693504104;0.34035681812385;0.339054788486619;0.337753611924068;0.336453295754014;0.335153847280371;0.333855273793101;0.33255758256815;0.331260780867396;0.329964875938589;0.328669875015299;0.327375785316859;0.326082614048306;0.324790368400329;0.323499055549212;0.322208682656779;0.320919256870341;0.319630785322636;0.318343275131781;0.317056733401212;0.315771167219632;0.314486583660959;0.313202989784267;0.311920392633738;0.310638799238603;0.309358216613093;0.308078651756386;0.306800111652548;0.305522603270488;0.304246133563902;0.302970709471217;0.301696337915547;0.300423025804634;0.299150780030799;0.29787960747089;0.296609514986232;0.295340509422572;0.294072597610032;0.292805786363058;0.291540082480364;0.290275492744891;0.289012023923747;0.287749682768163;0.286488476013441;0.285228410378907;0.283969492567857;0.282711729267511;0.281455127148964;0.280199692867136;0.278945433060723;0.27769235435215;0.276440463347524;0.27518976663658;0.273940270792641;0.272691982372566;0.271444907916702;0.270199053948839;0.268954426976162;0.267711033489204;0.266468879961801;0.265227972851043;0.26398831859723;0.262749923623824;0.261512794337407;0.260276937127629;0.25904235836717;0.25780906441169;0.256577061599786;0.255346356252946;0.254116954675506;0.252888863154604;0.251662087960139;0.250436635344722;0.249212511543637;0.247989722774796;0.246768275238695;0.245548175118373;0.244329428579365;0.243112041769665;0.241896020819679;0.240681371842184;0.23946810093229;0.23825621416739;0.237045717607127;0.235836617293348;0.234628919250063;0.233422629483406;0.232217753981592;0.231014298714879;0.229812269635527;0.228611672677756;0.227412513757708;0.226214798773408;0.225018533604724;0.223823724113326;0.222630376142649;0.221438495517857;0.220248088045796;0.219059159514965;0.217871715695474;0.216685762339004;0.215501305178773;0.214318349929498;0.213136902287355;0.211956967929945;0.210778552516257;0.209601661686629;0.208426301062716;0.207252476247449;0.206080192825002;0.204909456360757;0.203740272401268;0.202572646474221;0.201406584088409;0.200242090733689;0.199079171880949;0.197917832982076;0.196758079469921;0.195599916758264;0.194443350241782;0.193288385296015;0.192135027277332;0.190983281522898;0.189833153350645;0.188684648059233;0.187537770928023;0.186392527217044;0.185248922166959;0.184106960999035;0.182966648915113;0.181827991097572;0.180690992709306;0.179555658893686;0.178421994774532;0.177290005456083;0.176159696022971;0.175031071540182;0.173904137053034;0.172778897587147;0.171655358148411;0.170533523722959;0.169413399277137;0.168294989757478;0.167178300090671;0.166063335183536;0.164950099922995;0.163838599176042;0.162728837789721;0.161620820591094;0.160514552387217;0.159410037965114;0.158307282091748;0.157206289513996;0.156107064958625;0.155009613132265;0.153913938721383;0.152820046392257;0.151727940790955;0.150637626543306;0.149549108254878;0.148462390510953;0.147377477876504;0.146294374896168;0.145213086094228;0.144133615974584;0.143055969020734;0.141980149695748;0.140906162442248;0.139834011682386;0.138763701817818;0.137695237229687;0.136628622278597;0.135563861304595;0.134500958627148;0.133439918545122;0.132380745336762;0.131323443259671;0.13026801655079;0.129214469426379;0.128162806081993;0.12711303069247;0.126065147411903;0.125019160373628;0.123975073690202;0.122932891453382;0.121892617734113;0.120854256582503;0.11981781202781;0.118783288078423;0.117750688721843;0.116720017924666;0.11569127963257;0.114664477770291;0.113639616241614;0.112616698929352;0.111595729695331;0.110576712380376;0.109559650804292;0.108544548765853;0.107531410042783;0.106520238391741;0.105511037548312;0.104503811226986;0.103498563121147;0.102495296903059;0.10149401622385;0.100494724713505;0.0994974259808421;0.0985021236135104;0.0975088211779706;0.0965175222194845;0.0955282302621025;0.094540948808652;0.0935556813407251;0.0925724313186671;0.091591202181565;0.0906119973472373;0.0896348202122217;0.0886596741517658;0.0876865625198155;0.0867154886490061;0.0857464558506515;0.0847794674147343;0.0838145266098974;0.0828516366834338;0.081890800861278;0.0809320223479969;0.0799753043267821;0.0790206499594406;0.0780680623863875;0.0771175447266376;0.0761691000777984;0.0752227315160621;0.0742784420961991;0.0733362348515507;0.0723961127940227;0.0714580789140785;0.0705221361807334;0.069588287541549;0.0686565359226264;0.0677268842286013;0.066799335342639;0.0658738921264291;0.0649505574201807;0.0640293340426176;0.0631102247909746;0.062193232440993;0.0612783597469165;0.0603656094414881;0.0594549842359465;0.0585464868200229;0.0576401198619378;0.0567358860083988;0.055833787884598;0.0549338280942094;0.0540360092193872;0.0531403338207642;0.0522468044374499;0.0513554235870291;0.0504661937655611;0.0495791174475793;0.0486941970860893;0.0478114351125697;0.0469308339369715;0.0460523959477181;0.0451761235117054;0.0443020189743029;0.0434300846593541;0.0425603228691775;0.0416927358845677;0.0408273259647971;0.0399640953476175;0.0391030462492619;0.0382441808644464;0.0373875013663734;0.0365330099067331;0.035680708615707;0.0348305996019707;0.0339826849526973;0.0331369667335609;0.0322934469887399;0.0314521277409214;0.0306130109913055;0.0297760987196091;0.0289413928840709;0.0281088954214566;0.0272786082470629;0.026450533254724;0.0256246723168164;0.0248010272842649;0.0239795999865484;0.0231603922317064;0.022343405806345;0.0215286424756441;0.0207161039833637;0.019905792051851;0.0190977083820486;0.0182918546535009;0.0174882325243625;0.0166868436314057;0.0158876895900297;0.0150907719942678;0.0142960924167967;0.0135036524089452;0.0127134535007037;0.0119254972007329;0.0111397849963734;0.0103563183536561;0.00957509871731131;0.00879612751077952;0.00801940613622144;0.00724493597452914;0.00647271838533626;0.00570275470702945;0.00493504625675948;0.00416959433045314;0.00340640020282435;0.00264546512738635;0.00188679033646423;0.00113037704120664;0.000376226431598763]|9|8|on"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"fir_coef"
		Location		[609, 271, 1389, 957]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 68, 60, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 193, 60, 207]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_gen"
		  Ports			  [1, 1]
		  Position		  [130, 109, 220, 141]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "1024 coefs in bram\n9_8 out/1"
		  UserDataPersistent	  on
		  UserData		  "DataTag27"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Coefficient Generator"
		  MaskDescription	  "A coefficient generator."
		  MaskHelp		  "<pre>\nDescription::\n\nA coefficient generator.\n\nMask Parameters::\n\nCoefficiants (coefs): The coefficients to output.  These should be specified as doubles.\nThey will be rounded/saturated according to the specified number of bits (n_bits)\nand binary point (bin_pt).\n\nNumber of Coefficient Bits (n_bits): The number of bits used for the fixed point binary\nrepresentation of the coefficients.\n\nCoefficient Binary Point (bin_pt): The binary point of the fixed point binary representation\nof the coefficients.\n\nLog2 Cycles per Coefficient (log2_cpc): The log2 value of the number of cycles per coefficient.\nMust be a non-negative integer (i.e. cycles per coefficient must be a power of 2).  \n\nUse BRAM (use_bram): Check this checkbox to store coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Coefficients|Number of Bits|Binary Point|Log2 Cycles per Coefficient|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off"
		  MaskCallbackString	  "||||"
		  MaskEnableString	  "off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on"
		  MaskVarAliasString	  ",,,,"
		  MaskVariables		  "coefs=&1;n_bits=&2;bin_pt=&3;log2_cpc=&4;use_bram=&5;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "[0.999999547662946;0.999995928971626;0.999988691616268;0.999977835651433;0.999963361158965;0.999945268247983;0.999923557054889;0.99989822774336;0.999869280504348;0.999836715556079;0.999800533144051;0.99976073354103;0.999717317047049;0.999670283989403;0.999619634722648;0.999565369628596;0.999507489116311;0.999445993622108;0.999380883609544;0.999312159569415;0.999239822019754;0.999163871505822;0.999084308600105;0.999001133902306;0.998914348039344;0.998823951665339;0.998729945461616;0.99863233013669;0.998531106426262;0.998426275093213;0.998317836927595;0.998205792746621;0.998090143394661;0.997970889743233;0.99784803269099;0.997721573163716;0.997591512114315;0.997457850522799;0.997320589396285;0.997179729768976;0.997035272702159;0.99688721928419;0.996735570630482;0.996580327883498;0.996421492212737;0.996259064814724;0.996093046912996;0.99592343975809;0.995750244627533;0.995573462825828;0.99539309568444;0.995209144561783;0.995021610843209;0.994830495940991;0.99463580129431;0.994437528369243;0.994235678658745;0.994030253682635;0.993821254987582;0.993608684147091;0.993392542761483;0.993172832457882;0.992949554890201;0.99272271173912;0.992492304712073;0.992258335543232;0.992020805993488;0.991779717850431;0.991535072928337;0.991286873068149;0.991035120137455;0.990779816030475;0.990520962668036;0.990258561997559;0.989992615993036;0.989723126655011;0.989450096010561;0.989173526113274;0.988893419043231;0.988609776906985;0.988322601837537;0.98803189599432;0.987737661563173;0.987439900756322;0.987138615812356;0.986833808996206;0.986525482599124;0.986213638938657;0.985898280358627;0.985579409229105;0.98525702794639;0.984931138932984;0.984601744637569;0.984268847534979;0.98393245012618;0.983592554938246;0.983249164524326;0.98290228146363;0.982551908361392;0.982198047848854;0.981840702583234;0.9814798752477;0.981115568551347;0.980747785229165;0.980376528042017;0.98000179977661;0.979623603245462;0.979241941286885;0.978856816764947;0.978468232569446;0.978076191615887;0.977680696845445;0.977281751224942;0.976879357746813;0.97647351942908;0.976064239315321;0.975651520474639;0.975235366001631;0.97481577901636;0.974392762664321;0.973966320116415;0.973536454568909;0.973103169243412;0.972666467386842;0.972226352271389;0.971782827194488;0.971335895478783;0.970885560472097;0.970431825547395;0.969974694102756;0.969514169561332;0.969050255371323;0.968582955005935;0.96811227196335;0.967638209766689;0.967160771963981;0.966679962128122;0.966195783856846;0.965708240772684;0.965217336522932;0.964723074779614;0.964225459239442;0.963724493623787;0.963220181678634;0.962712527174551;0.962201533906649;0.961687205694544;0.961169546382321;0.960648559838497;0.960124249955978;0.959596620652025;0.959065675868214;0.958531419570396;0.95799385574866;0.957452988417292;0.956908821614734;0.956361359403548;0.955810605870372;0.955256565125884;0.954699241304754;0.954138638565613;0.953574761091004;0.953007613087343;0.952437198784881;0.951863522437655;0.951286588323455;0.950706400743774;0.950122964023769;0.949536282512219;0.948946360581481;0.948353202627446;0.947756813069498;0.947157196350468;0.946554356936591;0.945948299317464;0.945339028005997;0.944726547538374;0.944110862474005;0.943491977395482;0.942869896908532;0.942244625641977;0.941616168247679;0.940984529400506;0.940349713798277;0.939711726161716;0.939070571234412;0.938426253782768;0.937778778595951;0.937128150485851;0.936474374287031;0.935817454856679;0.935157397074559;0.934494205842967;0.933827886086677;0.933158442752899;0.932485880811225;0.931810205253583;0.931131421094187;0.930449533369489;0.929764547138127;0.929076467480875;0.928385299500598;0.927691048322198;0.92699371909256;0.926293316980511;0.925589847176761;0.924883314893854;0.924173725366119;0.923461083849616;0.922745395622088;0.922026665982904;0.92130490025301;0.920580103774877;0.919852281912448;0.919121440051086;0.918387583597519;0.91765071797979;0.9169108486472;0.916167981070258;0.915422120740627;0.914673273171068;0.913921443895387;0.913166638468382;0.912408862465787;0.911648121484216;0.910884421141112;0.91011776707469;0.90934816494388;0.908575620428275;0.907800139228072;0.907021727064019;0.906240389677357;0.905456132829764;0.9046689623033;0.90387888390035;0.903085903443565;0.902290026775807;0.901491259760094;0.900689608279537;0.899885078237288;0.899077675556479;0.898267406180164;0.897454276071263;0.896638291212503;0.895819457606359;0.894997781274994;0.894173268260203;0.893345924623353;0.892515756445321;0.89168276982644;0.890846970886435;0.890008365764364;0.88916696061856;0.888322761626568;0.887475774985088;0.886626006909912;0.885773463635865;0.884918151416742;0.884060076525249;0.883199245252942;0.882335663910164;0.881469338825985;0.880600276348139;0.879728482842962;0.878853964695334;0.877976728308609;0.877096780104561;0.876214126523317;0.875328774023292;0.874440729081133;0.873549998191649;0.872656587867754;0.871760504640396;0.870861755058503;0.869960345688909;0.869056283116299;0.86814957394314;0.867240224789617;0.866328242293574;0.865413633110439;0.864496403913169;0.863576561392183;0.862654112255293;0.861729063227642;0.86080142105164;0.859871192486895;0.85893838431015;0.858003003315215;0.857065056312905;0.85612455013097;0.855181491614029;0.854235887623507;0.853287745037565;0.852337070751035;0.851383871675352;0.850428154738489;0.849469926884886;0.84850919507539;0.847545966287178;0.846580247513697;0.845612045764594;0.844641368065647;0.843668221458696;0.84269261300158;0.841714549768064;0.840734038847771;0.839751087346116;0.838765702384234;0.837777891098914;0.836787660642529;0.835795018182967;0.834799970903559;0.833802526003016;0.832802690695352;0.831800472209821;0.830795877790843;0.829788914697934;0.828779590205639;0.827767911603459;0.826753886195782;0.825737521301814;0.824718824255502;0.823697802405475;0.822674463114959;0.821648813761719;0.820620861737978;0.819590614450354;0.81855807931978;0.817523263781442;0.8164861752847;0.815446821293019;0.814405209283897;0.813361346748796;0.812315241193064;0.811266900135868;0.810216331110119;0.8091635416624;0.808108539352896;0.807051331755317;0.805991926456828;0.804930331057977;0.80386655317262;0.802800600427848;0.801732480463917;0.800662200934169;0.799589769504963;0.798515193855602;0.797438481678257;0.796359640677891;0.795278678572193;0.794195603091497;0.793110421978709;0.792023142989237;0.790933773890911;0.789842322463913;0.788748796500701;0.787653203805936;0.786555552196404;0.785455849500942;0.784354103560369;0.783250322227402;0.782144513366589;0.781036684854226;0.779926844578291;0.77881500043836;0.777701160345539;0.776585332222382;0.775467524002819;0.774347743632081;0.773225999066623;0.772102298274047;0.770976649233028;0.769849059933236;0.768719538375264;0.767588092570547;0.766454730541287;0.765319460320378;0.764182289951332;0.763043227488195;0.761902280995477;0.760759458548073;0.759614768231187;0.758468218140255;0.757319816380865;0.756169571068687;0.755017490329388;0.753863582298562;0.752707855121646;0.751550316953849;0.750390975960072;0.749229840314828;0.748066918202168;0.746902217815605;0.74573574735803;0.744567515041641;0.743397529087861;0.742225797727262;0.741052329199488;0.739877131753174;0.73870021364587;0.737521583143965;0.736341248522604;0.735159218065615;0.733975500065425;0.732790102822989;0.731603034647704;0.730414303857337;0.729223918777942;0.728031887743784;0.72683821909726;0.725642921188819;0.724446002376885;0.723247471027779;0.722047335515636;0.720845604222332;0.7196422855374;0.718437387857955;0.717230919588611;0.716022889141407;0.714813304935724;0.713602175398207;0.712389508962686;0.711175314070098;0.709959599168404;0.708742372712514;0.707523643164207;0.706303418992049;0.705081708671316;0.703858520683914;0.702633863518298;0.701407745669397;0.700180175638527;0.69895116193332;0.697720713067638;0.696488837561496;0.695255543940982;0.694020840738178;0.692784736491078;0.691547239743511;0.69030835904506;0.689068102950982;0.687826480022128;0.686583498824865;0.685339167930993;0.684093495917668;0.682846491367321;0.681598162867577;0.680348519011176;0.679097568395895;0.677845319624464;0.676591781304489;0.675336962048371;0.674080870473226;0.672823515200804;0.671564904857411;0.670305048073829;0.669043953485231;0.667781629731109;0.666518085455186;0.66525332930534;0.663987369933525;0.662720215995689;0.66145187615169;0.660182359065225;0.658911673403742;0.657639827838363;0.656366831043801;0.655092691698287;0.65381741848348;0.652541020084396;0.651263505189319;0.64998488248973;0.64870516068022;0.647424348458412;0.646142454524881;0.644859487583075;0.643575456339231;0.642290369502301;0.641004235783867;0.63971706389806;0.638428862561485;0.637139640493137;0.635849406414322;0.634558169048576;0.633265937121587;0.631972719361113;0.630678524496902;0.629383361260614;0.628087238385739;0.626790164607517;0.62549214866286;0.624193199290268;0.622893325229755;0.621592535222764;0.620290838012088;0.618988242341793;0.617684756957135;0.616380390604481;0.61507515203123;0.613769049985734;0.612462093217214;0.611154290475686;0.609845650511876;0.608536182077146;0.607225893923408;0.605914794803051;0.604602893468854;0.603290198673914;0.60197671917156;0.60066246371528;0.599347441058636;0.598031659955185;0.596715129158405;0.595397857421609;0.594079853497869;0.592761126139939;0.591441684100169;0.590121536130435;0.588800690982049;0.587479157405691;0.586156944151322;0.584834059968109;0.583510513604344;0.582186313807366;0.580861469323482;0.579535988897889;0.578209881274593;0.576883155196333;0.575555819404501;0.574227882639063;0.572899353638481;0.571570241139634;0.570240553877741;0.568910300586281;0.567579489996916;0.566248130839409;0.564916231841552;0.563583801729084;0.562250849225612;0.560917383052535;0.559583411928966;0.558248944571653;0.556913989694902;0.555578556010497;0.554242652227627;0.552906287052803;0.551569469189783;0.550232207339496;0.54889451019996;0.547556386466211;0.546217844830218;0.544878893980812;0.543539542603607;0.542199799380921;0.5408596729917;0.539519172111444;0.538178305412124;0.536837081562112;0.535495509226098;0.534153597065018;0.532811353735976;0.531468787892165;0.530125908182794;0.52878272325301;0.527439241743822;0.526095472292026;0.524751423530125;0.523407104086258;0.52206252258412;0.52071768764289;0.51937260787715;0.518027291896815;0.516681748307053;0.515335985708212;0.513990012695743;0.512643837860127;0.511297469786796;0.509950917056061;0.508604188243036;0.507257291917563;0.505910236644137;0.50456303098183;0.503215683484219;0.50186820269931;0.500520597169462;0.499172875431316;0.497825046015716;0.49647711744764;0.495129098246122;0.49378099692418;0.49243282198874;0.491084581940566;0.489736285274183;0.488387940477802;0.487039556033253;0.485691140415903;0.484342702094591;0.482994249531548;0.481645791182329;0.480297335495736;0.478948890913749;0.477600465871449;0.47625206879695;0.474903708111322;0.473555392228522;0.47220712955532;0.470858928491227;0.469510797428423;0.468162744751687;0.46681477883832;0.465466908058079;0.464119140773102;0.462771485337837;0.461423950098973;0.460076543395366;0.458729273557966;0.457382148909753;0.456035177765659;0.4546883684325;0.453341729208906;0.451995268385251;0.450648994243579;0.449302915057537;0.447957039092305;0.446611374604524;0.445265929842227;0.44392071304477;0.44257573244276;0.441230996257989;0.439886512703362;0.438542289982828;0.437198336291311;0.435854659814643;0.434511268729492;0.433168171203296;0.431825375394191;0.430482889450948;0.429140721512899;0.427798879709872;0.426457372162121;0.425116206980262;0.423775392265199;0.422434936108063;0.42109484659014;0.419755131782804;0.418415799747454;0.417076858535439;0.415738316188001;0.414400180736199;0.413062460200849;0.411725162592453;0.410388295911137;0.409051868146579;0.40771588727795;0.406380361273841;0.405045298092203;0.403710705680279;0.402376591974537;0.401042964900608;0.399709832373217;0.398377202296122;0.397045082562048;0.395713481052618;0.394382405638295;0.393051864178314;0.391721864520617;0.390392414501793;0.389063521947008;0.387735194669947;0.386407440472746;0.385080267145932;0.383753682468358;0.382427694207139;0.381102310117591;0.379777537943166;0.378453385415392;0.377129860253808;0.375806970165902;0.374484722847052;0.373163125980459;0.371842187237087;0.370521914275606;0.369202314742321;0.367883396271121;0.366565166483408;0.365247632988046;0.363930803381291;0.362614685246735;0.361299286155246;0.359984613664905;0.358670675320949;0.357357478655706;0.356045031188542;0.354733340425795;0.353422413860719;0.352112258973424;0.350802883230817;0.349494294086542;0.348186498980922;0.3468795053409;0.345573320579982;0.344267952098176;0.342963407281936;0.341659693504104;0.34035681812385;0.339054788486619;0.337753611924068;0.336453295754014;0.335153847280371;0.333855273793101;0.33255758256815;0.331260780867396;0.329964875938589;0.328669875015299;0.327375785316859;0.326082614048306;0.324790368400329;0.323499055549212;0.322208682656779;0.320919256870341;0.319630785322636;0.318343275131781;0.317056733401212;0.315771167219632;0.314486583660959;0.313202989784267;0.311920392633738;0.310638799238603;0.309358216613093;0.308078651756386;0.306800111652548;0.305522603270488;0.304246133563902;0.302970709471217;0.301696337915547;0.300423025804634;0.299150780030799;0.29787960747089;0.296609514986232;0.295340509422572;0.294072597610032;0.292805786363058;0.291540082480364;0.290275492744891;0.289012023923747;0.287749682768163;0.286488476013441;0.285228410378907;0.283969492567857;0.282711729267511;0.281455127148964;0.280199692867136;0.278945433060723;0.27769235435215;0.276440463347524;0.27518976663658;0.273940270792641;0.272691982372566;0.271444907916702;0.270199053948839;0.268954426976162;0.267711033489204;0.266468879961801;0.265227972851043;0.26398831859723;0.262749923623824;0.261512794337407;0.260276937127629;0.25904235836717;0.25780906441169;0.256577061599786;0.255346356252946;0.254116954675506;0.252888863154604;0.251662087960139;0.250436635344722;0.249212511543637;0.247989722774796;0.246768275238695;0.245548175118373;0.244329428579365;0.243112041769665;0.241896020819679;0.240681371842184;0.23946810093229;0.23825621416739;0.237045717607127;0.235836617293348;0.234628919250063;0.233422629483406;0.232217753981592;0.231014298714879;0.229812269635527;0.228611672677756;0.227412513757708;0.226214798773408;0.225018533604724;0.223823724113326;0.222630376142649;0.221438495517857;0.220248088045796;0.219059159514965;0.217871715695474;0.216685762339004;0.215501305178773;0.214318349929498;0.213136902287355;0.211956967929945;0.210778552516257;0.209601661686629;0.208426301062716;0.207252476247449;0.206080192825002;0.204909456360757;0.203740272401268;0.202572646474221;0.201406584088409;0.200242090733689;0.199079171880949;0.197917832982076;0.196758079469921;0.195599916758264;0.194443350241782;0.193288385296015;0.192135027277332;0.190983281522898;0.189833153350645;0.188684648059233;0.187537770928023;0.186392527217044;0.185248922166959;0.184106960999035;0.182966648915113;0.181827991097572;0.180690992709306;0.179555658893686;0.178421994774532;0.177290005456083;0.176159696022971;0.175031071540182;0.173904137053034;0.172778897587147;0.171655358148411;0.170533523722959;0.169413399277137;0.168294989757478;0.167178300090671;0.166063335183536;0.164950099922995;0.163838599176042;0.162728837789721;0.161620820591094;0.160514552387217;0.159410037965114;0.158307282091748;0.157206289513996;0.156107064958625;0.155009613132265;0.153913938721383;0.152820046392257;0.151727940790955;0.150637626543306;0.149549108254878;0.148462390510953;0.147377477876504;0.146294374896168;0.145213086094228;0.144133615974584;0.143055969020734;0.141980149695748;0.140906162442248;0.139834011682386;0.138763701817818;0.137695237229687;0.136628622278597;0.135563861304595;0.134500958627148;0.133439918545122;0.132380745336762;0.131323443259671;0.13026801655079;0.129214469426379;0.128162806081993;0.12711303069247;0.126065147411903;0.125019160373628;0.123975073690202;0.122932891453382;0.121892617734113;0.120854256582503;0.11981781202781;0.118783288078423;0.117750688721843;0.116720017924666;0.11569127963257;0.114664477770291;0.113639616241614;0.112616698929352;0.111595729695331;0.110576712380376;0.109559650804292;0.108544548765853;0.107531410042783;0.106520238391741;0.105511037548312;0.104503811226986;0.103498563121147;0.102495296903059;0.10149401622385;0.100494724713505;0.0994974259808421;0.0985021236135104;0.0975088211779706;0.0965175222194845;0.0955282302621025;0.094540948808652;0.0935556813407251;0.0925724313186671;0.091591202181565;0.0906119973472373;0.0896348202122217;0.0886596741517658;0.0876865625198155;0.0867154886490061;0.0857464558506515;0.0847794674147343;0.0838145266098974;0.0828516366834338;0.081890800861278;0.0809320223479969;0.0799753043267821;0.0790206499594406;0.0780680623863875;0.0771175447266376;0.0761691000777984;0.0752227315160621;0.0742784420961991;0.0733362348515507;0.0723961127940227;0.0714580789140785;0.0705221361807334;0.069588287541549;0.0686565359226264;0.0677268842286013;0.066799335342639;0.0658738921264291;0.0649505574201807;0.0640293340426176;0.0631102247909746;0.062193232440993;0.0612783597469165;0.0603656094414881;0.0594549842359465;0.0585464868200229;0.0576401198619378;0.0567358860083988;0.055833787884598;0.0549338280942094;0.0540360092193872;0.0531403338207642;0.0522468044374499;0.0513554235870291;0.0504661937655611;0.0495791174475793;0.0486941970860893;0.0478114351125697;0.0469308339369715;0.0460523959477181;0.0451761235117054;0.0443020189743029;0.0434300846593541;0.0425603228691775;0.0416927358845677;0.0408273259647971;0.0399640953476175;0.0391030462492619;0.0382441808644464;0.0373875013663734;0.0365330099067331;0.035680708615707;0.0348305996019707;0.0339826849526973;0.0331369667335609;0.0322934469887399;0.0314521277409214;0.0306130109913055;0.0297760987196091;0.0289413928840709;0.0281088954214566;0.0272786082470629;0.026450533254724;0.0256246723168164;0.0248010272842649;0.0239795999865484;0.0231603922317064;0.022343405806345;0.0215286424756441;0.0207161039833637;0.019905792051851;0.0190977083820486;0.0182918546535009;0.0174882325243625;0.0166868436314057;0.0158876895900297;0.0150907719942678;0.0142960924167967;0.0135036524089452;0.0127134535007037;0.0119254972007329;0.0111397849963734;0.0103563183536561;0.00957509871731131;0.00879612751077952;0.00801940613622144;0.00724493597452914;0.00647271838533626;0.00570275470702945;0.00493504625675948;0.00416959433045314;0.00340640020282435;0.00264546512738635;0.00188679033646423;0.00113037704120664;0.000376226431598763]|9|8|0|on"
		  MaskTabNameString	  ",,,,"
		  System {
		    Name		    "c_gen"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1023"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 50 50 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "1024"
		    initVector		
		    distributed_mem	    "Block RAM"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "8"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[7 15 27 39 47 47 43 47 47 36 47 39 27 15 7 18 7 7 11 7 7 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "coef_out"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mem"
		    SrcPort		    1
		    DstBlock		    "coef_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "data_delay"
		  Ports			  [1, 1]
		  Position		  [145, 17, 200, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sum_delay"
		  Ports			  [1, 1]
		  Position		  [145, 62, 200, 88]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [145, 187, 200, 213]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [295, 23, 325, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [295, 68, 325, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "coef"
		  Position		  [295, 118, 325, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [295, 193, 325, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_gen"
		  SrcPort		  1
		  DstBlock		  "coef"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_delay"
		  SrcPort		  1
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "sum_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [25, 0]
		  Branch {
		    Points		    [0, -75]
		    DstBlock		    "c_gen"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "sync_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_delay"
		  SrcPort		  1
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  DstBlock		  "data_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_core"
	      Ports		      [4, 3]
	      Position		      [270, 29, 360, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "delay 1024 in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag28"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Core"
	      MaskDescription	      "A Finite Impluse Response Filter core with complex inputs and real coefficients.  This FIR filter core does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter core with complex inputs and real coefficients.\n\nThis Finite Impluse Response Filter core is designed to be paired with a FIR Coefficient Generator \nto form a FIR filter tap.  This FIR filter core does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (use_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	      MaskPromptString	      "Tap Delay|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	      MaskStyleString	      "edit,edit,edit,edit,edit,checkbox,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "delay=&1;n_bits_d=&2;bin_pt_d=&3;n_bits_s=&4;bin_pt_s=&5;use_bram=&6;mult_latency=&7;add_latency=&8;add_bypass=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "1024|8|7|17|15|on|3|1|off"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"fir_core"
		Location		[282, 135, 1062, 821]
		Open			on
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 223, 60, 237]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "coef"
		  Position		  [30, 183, 60, 197]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 278, 60, 292]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_d"
		  Ports			  [1, 2]
		  Position		  [120, 69, 160, 111]
		  AttributesFormatString  "8_7 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag29"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|7"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_d"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_s"
		  Ports			  [1, 2]
		  Position		  [120, 209, 160, 251]
		  AttributesFormatString  "17_15 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag30"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "17|15"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_s"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_im"
		  Ports			  [1, 1]
		  Position		  [345, 175, 390, 205]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_re"
		  Ports			  [1, 1]
		  Position		  [345, 80, 390, 110]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "dout_delay"
		  Ports			  [1, 1]
		  Position		  [255, 17, 310, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_im"
		  Ports			  [3, 1]
		  Position		  [255, 164, 305, 216]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag31"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_im"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_re"
		  Ports			  [3, 1]
		  Position		  [255, 69, 305, 121]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag32"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_re"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [455, 119, 495, 161]
		  UserDataPersistent	  on
		  UserData		  "DataTag33"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskInitialization	  "ri_to_c_init(gcb);"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [255, 272, 310, 298]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "tap_delay"
		  Ports			  [1, 1]
		  Position		  [440, 14, 500, 46]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "bram depth = 1024"
		  UserDataPersistent	  on
		  UserData		  "DataTag34"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "BRAM Delay"
		  MaskDescription	  "A delay block that uses BRAM for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses BRAM for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n\nBuffer Latency (buffer_latency): The latency of the underlying storage.\n\nBuffer Latency defaults to 1 and cannot be changed via the block's dialog box.\nFuture versions may enable the setting of that parameter from the dialog.\n</pre>"
		  MaskPromptString	  "Delay Depth|Buffer Latency"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,off"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "delay_depth=&1;buffer_latency=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "1024|"
		  MaskTabNameString	  ","
		  System {
		    Name		    "tap_delay"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Constant"
		    Ports		    [0, 1]
		    Position		    [165, 133, 180, 147]
		    ShowName		    off
		    SourceBlock		    "xbsIndex_r4/Constant"
		    SourceType		    "Xilinx Constant Block Block"
		    arith_type		    "Boolean"
		    const		    "1"
		    n_bits		    "1"
		    bin_pt		    "0"
		    explicit_period	    on
		    period		    "1"
		    dsp48_infoedit	    "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		    equ			    "P=C"
		    opselect		    "C"
		    inp2		    "PCIN>>17"
		    opr			    "+"
		    inp1		    "P"
		    carry		    "CIN"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "constant"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "15,14,1,1,white,blue,0,06094819,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 15 15 0 ],[0 0 14 14 ],[0.77 0.82 0.91]);\npatch([3 1 4 1 3 7 8 9 13 10 7 5 8 5 7 10 13 9 8 7 3 ],[2 4 7 10 12 12 11 12 12 9 12 10 7 4 2 5 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 15 15 0 0 ],[0 0 14 14 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [0, 1]
		    Position		    [130, 71, 180, 89]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1022"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    off
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,a170c862,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bram"
		    Ports		    [3, 1]
		    Position		    [230, 61, 295, 159]
		    SourceBlock		    "xbsIndex_r4/Single Port RAM"
		    SourceType		    "Xilinx Single Port Random Access Memory Block"
		    depth		    "1024"
		    initVector		    "0"
		    distributed_mem	    "Block RAM"
		    write_mode		    "Read Before Write"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "spram"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "65,98,1,1,white,blue,0,90951842,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 98 98 ],[0.77 0.82 0.91]);\npatch([15 4 19 4 15 32 37 42 60 45 31 21 36 21 31 45 60 42 37 32 15 ],[24 35 50 65 76 76 71 76 76 61 75 65 50 35 25 39 24 24 29 24 24 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 98 98 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Constant"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    3
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "bram"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [555, 23, 585, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [555, 133, 585, 147]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 278, 585, 292]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "convert_im"
		  SrcPort		  1
		  Points		  [20, 0; 0, -40]
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "convert_re"
		  SrcPort		  1
		  Points		  [20, 0; 0, 35]
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "tap_delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_im"
		  SrcPort		  1
		  DstBlock		  "convert_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_re"
		  SrcPort		  1
		  DstBlock		  "convert_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  2
		  Points		  [75, 0]
		  DstBlock		  "mult_add_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  1
		  Points		  [75, 0]
		  DstBlock		  "mult_add_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "c_to_ri_s"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "coef"
		  SrcPort		  1
		  Points		  [140, 0]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "mult_add_re"
		    DstPort		    2
		  }
		  Branch {
		    DstBlock		    "mult_add_im"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  2
		  Points		  [20, 0; 0, 75]
		  DstBlock		  "mult_add_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  1
		  DstBlock		  "mult_add_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  Points		  [35, 0]
		  Branch {
		    Points		    [0, 60]
		    DstBlock		    "c_to_ri_d"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "dout_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "dout_delay"
		  SrcPort		  1
		  DstBlock		  "tap_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "data_out"
	      Position		      [435, 23, 465, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [435, 58, 465, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [435, 93, 465, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      3
	      Points		      [25, 0; 0, 15]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      2
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      1
	      Points		      [25, 0; 0, -15]
	      DstBlock		      "data_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, -15]
	      DstBlock		      "fir_coef"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "fir_coef"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "data_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, 15]
	      DstBlock		      "fir_coef"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      4
	      DstBlock		      "fir_core"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      3
	      DstBlock		      "fir_core"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      2
	      DstBlock		      "fir_core"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      1
	      DstBlock		      "fir_core"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_tap_4"
	  Ports			  [3, 3]
	  Position		  [550, 30, 650, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "delay 1024 in bram\n1024 coefs in bram"
	  UserDataPersistent	  on
	  UserData		  "DataTag35"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Tap (Real Coefficients)"
	  MaskDescription	  "A Finite Impluse Response Filter tap with real coefficients.  This FIR filter tap does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter tap with real coefficients.\n\nThis Finite Impluse Response Filter tap is designed to be daisy chained together\nto form a multi-tap FIR filter.  This FIR filter tap does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nTap Coefficiant(s) (coef): The coefficient(s) for this tap.  For a regular FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nUsually, delay==length(coef), but this is not required.  These should be specified as doubles. \nThey will be rounded and saturated according to the specified number of bits (n_bits_c) and\nbinary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	  MaskPromptString	  "Tap Delay|Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	  MaskStyleString	  "edit,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "||||||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,,,,"
	  MaskVariables		  "delay=&1;coef=&2;n_bits_c=&3;bin_pt_c=&4;n_bits_d=&5;bin_pt_d=&6;n_bits_s=&7;bin_pt_s=&8;coef_bram=&9;delay_bram=&10;mult_latency=&11;add_latency=&12;add_bypass=&13;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "1024|[0.000376226431598763;0.00113037704120664;0.00188679033646423;0.00264546512738635;0.00340640020282435;0.00416959433045314;0.00493504625675948;0.00570275470702945;0.00647271838533626;0.00724493597452914;0.00801940613622144;0.00879612751077952;0.00957509871731131;0.0103563183536561;0.0111397849963734;0.0119254972007329;0.0127134535007037;0.0135036524089452;0.0142960924167967;0.0150907719942678;0.0158876895900297;0.0166868436314057;0.0174882325243625;0.0182918546535009;0.0190977083820486;0.019905792051851;0.0207161039833637;0.0215286424756441;0.022343405806345;0.0231603922317064;0.0239795999865484;0.0248010272842649;0.0256246723168164;0.026450533254724;0.0272786082470629;0.0281088954214566;0.0289413928840709;0.0297760987196091;0.0306130109913055;0.0314521277409214;0.0322934469887399;0.0331369667335609;0.0339826849526973;0.0348305996019707;0.035680708615707;0.0365330099067331;0.0373875013663734;0.0382441808644464;0.0391030462492619;0.0399640953476175;0.0408273259647971;0.0416927358845677;0.0425603228691775;0.0434300846593541;0.0443020189743029;0.0451761235117054;0.0460523959477181;0.0469308339369715;0.0478114351125697;0.0486941970860893;0.0495791174475793;0.0504661937655611;0.0513554235870291;0.0522468044374499;0.0531403338207642;0.0540360092193872;0.0549338280942094;0.055833787884598;0.0567358860083988;0.0576401198619378;0.0585464868200229;0.0594549842359465;0.0603656094414881;0.0612783597469165;0.062193232440993;0.0631102247909746;0.0640293340426176;0.0649505574201807;0.0658738921264291;0.066799335342639;0.0677268842286013;0.0686565359226264;0.069588287541549;0.0705221361807334;0.0714580789140785;0.0723961127940227;0.0733362348515507;0.0742784420961991;0.0752227315160621;0.0761691000777984;0.0771175447266376;0.0780680623863875;0.0790206499594406;0.0799753043267821;0.0809320223479969;0.081890800861278;0.0828516366834338;0.0838145266098974;0.0847794674147343;0.0857464558506515;0.0867154886490061;0.0876865625198155;0.0886596741517658;0.0896348202122217;0.0906119973472373;0.091591202181565;0.0925724313186671;0.0935556813407251;0.094540948808652;0.0955282302621025;0.0965175222194845;0.0975088211779706;0.0985021236135104;0.0994974259808421;0.100494724713505;0.10149401622385;0.102495296903059;0.103498563121147;0.104503811226986;0.105511037548312;0.106520238391741;0.107531410042783;0.108544548765853;0.109559650804292;0.110576712380376;0.111595729695331;0.112616698929352;0.113639616241614;0.114664477770291;0.11569127963257;0.116720017924666;0.117750688721843;0.118783288078423;0.11981781202781;0.120854256582503;0.121892617734113;0.122932891453382;0.123975073690202;0.125019160373628;0.126065147411903;0.12711303069247;0.128162806081993;0.129214469426379;0.13026801655079;0.131323443259671;0.132380745336762;0.133439918545122;0.134500958627148;0.135563861304595;0.136628622278597;0.137695237229687;0.138763701817818;0.139834011682386;0.140906162442248;0.141980149695748;0.143055969020734;0.144133615974584;0.145213086094228;0.146294374896168;0.147377477876504;0.148462390510953;0.149549108254878;0.150637626543306;0.151727940790955;0.152820046392257;0.153913938721383;0.155009613132265;0.156107064958625;0.157206289513996;0.158307282091748;0.159410037965114;0.160514552387217;0.161620820591094;0.162728837789721;0.163838599176042;0.164950099922995;0.166063335183536;0.167178300090671;0.168294989757478;0.169413399277137;0.170533523722959;0.171655358148411;0.172778897587147;0.173904137053034;0.175031071540182;0.176159696022971;0.177290005456083;0.178421994774532;0.179555658893686;0.180690992709306;0.181827991097572;0.182966648915113;0.184106960999035;0.185248922166959;0.186392527217044;0.187537770928023;0.188684648059233;0.189833153350645;0.190983281522898;0.192135027277332;0.193288385296015;0.194443350241782;0.195599916758264;0.196758079469921;0.197917832982076;0.199079171880949;0.200242090733689;0.201406584088409;0.202572646474221;0.203740272401268;0.204909456360757;0.206080192825002;0.207252476247449;0.208426301062716;0.209601661686629;0.210778552516257;0.211956967929945;0.213136902287355;0.214318349929498;0.215501305178773;0.216685762339004;0.217871715695474;0.219059159514965;0.220248088045796;0.221438495517857;0.222630376142649;0.223823724113326;0.225018533604724;0.226214798773408;0.227412513757708;0.228611672677756;0.229812269635527;0.231014298714879;0.232217753981592;0.233422629483406;0.234628919250063;0.235836617293348;0.237045717607127;0.23825621416739;0.23946810093229;0.240681371842184;0.241896020819679;0.243112041769665;0.244329428579365;0.245548175118373;0.246768275238695;0.247989722774796;0.249212511543637;0.250436635344722;0.251662087960139;0.252888863154604;0.254116954675506;0.255346356252946;0.256577061599786;0.25780906441169;0.25904235836717;0.260276937127629;0.261512794337407;0.262749923623824;0.26398831859723;0.265227972851043;0.266468879961801;0.267711033489204;0.268954426976162;0.270199053948839;0.271444907916702;0.272691982372566;0.273940270792641;0.27518976663658;0.276440463347524;0.27769235435215;0.278945433060723;0.280199692867136;0.281455127148964;0.282711729267511;0.283969492567857;0.285228410378907;0.286488476013441;0.287749682768163;0.289012023923747;0.290275492744891;0.291540082480364;0.292805786363058;0.294072597610032;0.295340509422572;0.296609514986232;0.29787960747089;0.299150780030799;0.300423025804634;0.301696337915547;0.302970709471217;0.304246133563902;0.305522603270488;0.306800111652548;0.308078651756386;0.309358216613093;0.310638799238603;0.311920392633738;0.313202989784267;0.314486583660959;0.315771167219632;0.317056733401212;0.318343275131781;0.319630785322636;0.320919256870341;0.322208682656779;0.323499055549212;0.324790368400329;0.326082614048306;0.327375785316859;0.328669875015299;0.329964875938589;0.331260780867396;0.33255758256815;0.333855273793101;0.335153847280371;0.336453295754014;0.337753611924068;0.339054788486619;0.34035681812385;0.341659693504104;0.342963407281936;0.344267952098176;0.345573320579982;0.3468795053409;0.348186498980922;0.349494294086542;0.350802883230817;0.352112258973424;0.353422413860719;0.354733340425795;0.356045031188542;0.357357478655706;0.358670675320949;0.359984613664905;0.361299286155246;0.362614685246735;0.363930803381291;0.365247632988046;0.366565166483408;0.367883396271121;0.369202314742321;0.370521914275606;0.371842187237087;0.373163125980459;0.374484722847052;0.375806970165902;0.377129860253808;0.378453385415392;0.379777537943166;0.381102310117591;0.382427694207139;0.383753682468358;0.385080267145932;0.386407440472746;0.387735194669947;0.389063521947008;0.390392414501793;0.391721864520617;0.393051864178314;0.394382405638295;0.395713481052618;0.397045082562048;0.398377202296122;0.399709832373217;0.401042964900608;0.402376591974537;0.403710705680279;0.405045298092203;0.406380361273841;0.40771588727795;0.409051868146579;0.410388295911137;0.411725162592453;0.413062460200849;0.414400180736199;0.415738316188001;0.417076858535439;0.418415799747454;0.419755131782804;0.42109484659014;0.422434936108063;0.423775392265199;0.425116206980262;0.426457372162121;0.427798879709872;0.429140721512899;0.430482889450948;0.431825375394191;0.433168171203296;0.434511268729492;0.435854659814643;0.437198336291311;0.438542289982828;0.439886512703362;0.441230996257989;0.44257573244276;0.44392071304477;0.445265929842227;0.446611374604524;0.447957039092305;0.449302915057537;0.450648994243579;0.451995268385251;0.453341729208906;0.4546883684325;0.456035177765659;0.457382148909753;0.458729273557966;0.460076543395366;0.461423950098973;0.462771485337837;0.464119140773102;0.465466908058079;0.46681477883832;0.468162744751687;0.469510797428423;0.470858928491227;0.47220712955532;0.473555392228522;0.474903708111322;0.47625206879695;0.477600465871449;0.478948890913749;0.480297335495736;0.481645791182329;0.482994249531548;0.484342702094591;0.485691140415903;0.487039556033253;0.488387940477802;0.489736285274183;0.491084581940566;0.49243282198874;0.49378099692418;0.495129098246122;0.49647711744764;0.497825046015716;0.499172875431316;0.500520597169462;0.50186820269931;0.503215683484219;0.50456303098183;0.505910236644137;0.507257291917563;0.508604188243036;0.509950917056061;0.511297469786796;0.512643837860127;0.513990012695743;0.515335985708212;0.516681748307053;0.518027291896815;0.51937260787715;0.52071768764289;0.52206252258412;0.523407104086258;0.524751423530125;0.526095472292026;0.527439241743822;0.52878272325301;0.530125908182794;0.531468787892165;0.532811353735976;0.534153597065018;0.535495509226098;0.536837081562112;0.538178305412124;0.539519172111444;0.5408596729917;0.542199799380921;0.543539542603607;0.544878893980812;0.546217844830218;0.547556386466211;0.54889451019996;0.550232207339496;0.551569469189783;0.552906287052803;0.554242652227627;0.555578556010497;0.556913989694902;0.558248944571653;0.559583411928966;0.560917383052535;0.562250849225612;0.563583801729084;0.564916231841552;0.566248130839409;0.567579489996916;0.568910300586281;0.570240553877741;0.571570241139634;0.572899353638481;0.574227882639063;0.575555819404501;0.576883155196333;0.578209881274593;0.579535988897889;0.580861469323482;0.582186313807366;0.583510513604344;0.584834059968109;0.586156944151322;0.587479157405691;0.588800690982049;0.590121536130435;0.591441684100169;0.592761126139939;0.594079853497869;0.595397857421609;0.596715129158405;0.598031659955185;0.599347441058636;0.60066246371528;0.60197671917156;0.603290198673914;0.604602893468854;0.605914794803051;0.607225893923408;0.608536182077146;0.609845650511876;0.611154290475686;0.612462093217214;0.613769049985734;0.61507515203123;0.616380390604481;0.617684756957135;0.618988242341793;0.620290838012088;0.621592535222764;0.622893325229755;0.624193199290268;0.62549214866286;0.626790164607517;0.628087238385739;0.629383361260614;0.630678524496902;0.631972719361113;0.633265937121587;0.634558169048576;0.635849406414322;0.637139640493137;0.638428862561485;0.63971706389806;0.641004235783867;0.642290369502301;0.643575456339231;0.644859487583075;0.646142454524881;0.647424348458412;0.64870516068022;0.64998488248973;0.651263505189319;0.652541020084396;0.65381741848348;0.655092691698287;0.656366831043801;0.657639827838363;0.658911673403742;0.660182359065225;0.66145187615169;0.662720215995689;0.663987369933525;0.66525332930534;0.666518085455186;0.667781629731109;0.669043953485231;0.670305048073829;0.671564904857411;0.672823515200804;0.674080870473226;0.675336962048371;0.676591781304489;0.677845319624464;0.679097568395895;0.680348519011176;0.681598162867577;0.682846491367321;0.684093495917668;0.685339167930993;0.686583498824865;0.687826480022128;0.689068102950982;0.69030835904506;0.691547239743511;0.692784736491078;0.694020840738178;0.695255543940982;0.696488837561496;0.697720713067638;0.69895116193332;0.700180175638527;0.701407745669397;0.702633863518298;0.703858520683914;0.705081708671316;0.706303418992049;0.707523643164207;0.708742372712514;0.709959599168404;0.711175314070098;0.712389508962686;0.713602175398207;0.714813304935724;0.716022889141407;0.717230919588611;0.718437387857955;0.7196422855374;0.720845604222332;0.722047335515636;0.723247471027779;0.724446002376885;0.725642921188819;0.72683821909726;0.728031887743784;0.729223918777942;0.730414303857337;0.731603034647704;0.732790102822989;0.733975500065425;0.735159218065615;0.736341248522604;0.737521583143965;0.73870021364587;0.739877131753174;0.741052329199488;0.742225797727262;0.743397529087861;0.744567515041641;0.74573574735803;0.746902217815605;0.748066918202168;0.749229840314828;0.750390975960072;0.751550316953849;0.752707855121646;0.753863582298562;0.755017490329388;0.756169571068687;0.757319816380865;0.758468218140255;0.759614768231187;0.760759458548073;0.761902280995477;0.763043227488195;0.764182289951332;0.765319460320378;0.766454730541287;0.767588092570547;0.768719538375264;0.769849059933236;0.770976649233028;0.772102298274047;0.773225999066623;0.774347743632081;0.775467524002819;0.776585332222382;0.777701160345539;0.77881500043836;0.779926844578291;0.781036684854226;0.782144513366589;0.783250322227402;0.784354103560369;0.785455849500942;0.786555552196404;0.787653203805936;0.788748796500701;0.789842322463913;0.790933773890911;0.792023142989237;0.793110421978709;0.794195603091497;0.795278678572193;0.796359640677891;0.797438481678257;0.798515193855602;0.799589769504963;0.800662200934169;0.801732480463917;0.802800600427848;0.80386655317262;0.804930331057977;0.805991926456828;0.807051331755317;0.808108539352896;0.8091635416624;0.810216331110119;0.811266900135868;0.812315241193064;0.813361346748796;0.814405209283897;0.815446821293019;0.8164861752847;0.817523263781442;0.81855807931978;0.819590614450354;0.820620861737978;0.821648813761719;0.822674463114959;0.823697802405475;0.824718824255502;0.825737521301814;0.826753886195782;0.827767911603459;0.828779590205639;0.829788914697934;0.830795877790843;0.831800472209821;0.832802690695352;0.833802526003016;0.834799970903559;0.835795018182967;0.836787660642529;0.837777891098914;0.838765702384234;0.839751087346116;0.840734038847771;0.841714549768064;0.84269261300158;0.843668221458696;0.844641368065647;0.845612045764594;0.846580247513697;0.847545966287178;0.84850919507539;0.849469926884886;0.850428154738489;0.851383871675352;0.852337070751035;0.853287745037565;0.854235887623507;0.855181491614029;0.85612455013097;0.857065056312905;0.858003003315215;0.85893838431015;0.859871192486895;0.86080142105164;0.861729063227642;0.862654112255293;0.863576561392183;0.864496403913169;0.865413633110439;0.866328242293574;0.867240224789617;0.86814957394314;0.869056283116299;0.869960345688909;0.870861755058503;0.871760504640396;0.872656587867754;0.873549998191649;0.874440729081133;0.875328774023292;0.876214126523317;0.877096780104561;0.877976728308609;0.878853964695334;0.879728482842962;0.880600276348139;0.881469338825985;0.882335663910164;0.883199245252942;0.884060076525249;0.884918151416742;0.885773463635865;0.886626006909912;0.887475774985088;0.888322761626568;0.88916696061856;0.890008365764364;0.890846970886435;0.89168276982644;0.892515756445321;0.893345924623353;0.894173268260203;0.894997781274994;0.895819457606359;0.896638291212503;0.897454276071263;0.898267406180164;0.899077675556479;0.899885078237288;0.900689608279537;0.901491259760094;0.902290026775807;0.903085903443565;0.90387888390035;0.9046689623033;0.905456132829764;0.906240389677357;0.907021727064019;0.907800139228072;0.908575620428275;0.90934816494388;0.91011776707469;0.910884421141112;0.911648121484216;0.912408862465787;0.913166638468382;0.913921443895387;0.914673273171068;0.915422120740627;0.916167981070258;0.9169108486472;0.91765071797979;0.918387583597519;0.919121440051086;0.919852281912448;0.920580103774877;0.92130490025301;0.922026665982904;0.922745395622088;0.923461083849616;0.924173725366119;0.924883314893854;0.925589847176761;0.926293316980511;0.92699371909256;0.927691048322198;0.928385299500598;0.929076467480875;0.929764547138127;0.930449533369489;0.931131421094187;0.931810205253583;0.932485880811225;0.933158442752899;0.933827886086677;0.934494205842967;0.935157397074559;0.935817454856679;0.936474374287031;0.937128150485851;0.937778778595951;0.938426253782768;0.939070571234412;0.939711726161716;0.940349713798277;0.940984529400506;0.941616168247679;0.942244625641977;0.942869896908532;0.943491977395482;0.944110862474005;0.944726547538374;0.945339028005997;0.945948299317464;0.946554356936591;0.947157196350468;0.947756813069498;0.948353202627446;0.948946360581481;0.949536282512219;0.950122964023769;0.950706400743774;0.951286588323455;0.951863522437655;0.952437198784881;0.953007613087343;0.953574761091004;0.954138638565613;0.954699241304754;0.955256565125884;0.955810605870372;0.956361359403548;0.956908821614734;0.957452988417292;0.95799385574866;0.958531419570396;0.959065675868214;0.959596620652025;0.960124249955978;0.960648559838497;0.961169546382321;0.961687205694544;0.962201533906649;0.962712527174551;0.963220181678634;0.963724493623787;0.964225459239442;0.964723074779614;0.965217336522932;0.965708240772684;0.966195783856846;0.966679962128122;0.967160771963981;0.967638209766689;0.96811227196335;0.968582955005935;0.969050255371323;0.969514169561332;0.969974694102756;0.970431825547395;0.970885560472097;0.971335895478783;0.971782827194488;0.972226352271389;0.972666467386842;0.973103169243412;0.973536454568909;0.973966320116415;0.974392762664321;0.97481577901636;0.975235366001631;0.975651520474639;0.976064239315321;0.97647351942908;0.976879357746813;0.977281751224942;0.977680696845445;0.978076191615887;0.978468232569446;0.978856816764947;0.979241941286885;0.979623603245462;0.98000179977661;0.980376528042017;0.980747785229165;0.981115568551347;0.9814798752477;0.981840702583234;0.982198047848854;0.982551908361392;0.98290228146363;0.983249164524326;0.983592554938246;0.98393245012618;0.984268847534979;0.984601744637569;0.984931138932984;0.98525702794639;0.985579409229105;0.985898280358627;0.986213638938657;0.986525482599124;0.986833808996206;0.987138615812356;0.987439900756322;0.987737661563173;0.98803189599432;0.988322601837537;0.988609776906985;0.988893419043231;0.989173526113274;0.989450096010561;0.989723126655011;0.989992615993036;0.990258561997559;0.990520962668036;0.990779816030475;0.991035120137455;0.991286873068149;0.991535072928337;0.991779717850431;0.992020805993488;0.992258335543232;0.992492304712073;0.99272271173912;0.992949554890201;0.993172832457882;0.993392542761483;0.993608684147091;0.993821254987582;0.994030253682635;0.994235678658745;0.994437528369243;0.99463580129431;0.994830495940991;0.995021610843209;0.995209144561783;0.99539309568444;0.995573462825828;0.995750244627533;0.99592343975809;0.996093046912996;0.996259064814724;0.996421492212737;0.996580327883498;0.996735570630482;0.99688721928419;0.997035272702159;0.997179729768976;0.997320589396285;0.997457850522799;0.997591512114315;0.997721573163716;0.99784803269099;0.997970889743233;0.998090143394661;0.998205792746621;0.998317836927595;0.998426275093213;0.998531106426262;0.99863233013669;0.998729945461616;0.998823951665339;0.998914348039344;0.999001133902306;0.999084308600105;0.999163871505822;0.999239822019754;0.999312159569415;0.999380883609544;0.999445993622108;0.999507489116311;0.999565369628596;0.999619634722648;0.999670283989403;0.999717317047049;0.99976073354103;0.999800533144051;0.999836715556079;0.999869280504348;0.99989822774336;0.999923557054889;0.999945268247983;0.999963361158965;0.999977835651433;0.999988691616268;0.999995928971626;0.999999547662946]|9|8|8|7|17|15|on|on|3|1|off"
	  MaskTabNameString	  ",,,,,,,,,,,,"
	  System {
	    Name		    "fir_tap_4"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_in"
	      Position		      [30, 23, 60, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 58, 60, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 93, 60, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_coef"
	      Ports		      [3, 4]
	      Position		      [115, 29, 205, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "1024 coefs in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag36"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Coefficient Generator"
	      MaskDescription	      "A Finite Impluse Response filter coefficient generator.  This FIR filter coefficient generator outputs real coefficients.  It can output one coefficient or cycle through a vector of coefficients for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response filter coefficient generator.\nThis FIR filter coefficient generator outputs real coefficients.\nIt can output one coefficient or cycle through a vector of coefficients for WOLA\n(Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Coefficiant(s) (coef): The coefficient(s) to output.  For a \"regular\" FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nThese should be specified as doubles.   They will be rounded and saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nUse BRAM for Coefficients (use_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n</pre>"
	      MaskPromptString	      "Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Use BRAM for Coefficients"
	      MaskStyleString	      "edit,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "coef=&1;n_bits_c=&2;bin_pt_c=&3;use_bram=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "[0.000376226431598763;0.00113037704120664;0.00188679033646423;0.00264546512738635;0.00340640020282435;0.00416959433045314;0.00493504625675948;0.00570275470702945;0.00647271838533626;0.00724493597452914;0.00801940613622144;0.00879612751077952;0.00957509871731131;0.0103563183536561;0.0111397849963734;0.0119254972007329;0.0127134535007037;0.0135036524089452;0.0142960924167967;0.0150907719942678;0.0158876895900297;0.0166868436314057;0.0174882325243625;0.0182918546535009;0.0190977083820486;0.019905792051851;0.0207161039833637;0.0215286424756441;0.022343405806345;0.0231603922317064;0.0239795999865484;0.0248010272842649;0.0256246723168164;0.026450533254724;0.0272786082470629;0.0281088954214566;0.0289413928840709;0.0297760987196091;0.0306130109913055;0.0314521277409214;0.0322934469887399;0.0331369667335609;0.0339826849526973;0.0348305996019707;0.035680708615707;0.0365330099067331;0.0373875013663734;0.0382441808644464;0.0391030462492619;0.0399640953476175;0.0408273259647971;0.0416927358845677;0.0425603228691775;0.0434300846593541;0.0443020189743029;0.0451761235117054;0.0460523959477181;0.0469308339369715;0.0478114351125697;0.0486941970860893;0.0495791174475793;0.0504661937655611;0.0513554235870291;0.0522468044374499;0.0531403338207642;0.0540360092193872;0.0549338280942094;0.055833787884598;0.0567358860083988;0.0576401198619378;0.0585464868200229;0.0594549842359465;0.0603656094414881;0.0612783597469165;0.062193232440993;0.0631102247909746;0.0640293340426176;0.0649505574201807;0.0658738921264291;0.066799335342639;0.0677268842286013;0.0686565359226264;0.069588287541549;0.0705221361807334;0.0714580789140785;0.0723961127940227;0.0733362348515507;0.0742784420961991;0.0752227315160621;0.0761691000777984;0.0771175447266376;0.0780680623863875;0.0790206499594406;0.0799753043267821;0.0809320223479969;0.081890800861278;0.0828516366834338;0.0838145266098974;0.0847794674147343;0.0857464558506515;0.0867154886490061;0.0876865625198155;0.0886596741517658;0.0896348202122217;0.0906119973472373;0.091591202181565;0.0925724313186671;0.0935556813407251;0.094540948808652;0.0955282302621025;0.0965175222194845;0.0975088211779706;0.0985021236135104;0.0994974259808421;0.100494724713505;0.10149401622385;0.102495296903059;0.103498563121147;0.104503811226986;0.105511037548312;0.106520238391741;0.107531410042783;0.108544548765853;0.109559650804292;0.110576712380376;0.111595729695331;0.112616698929352;0.113639616241614;0.114664477770291;0.11569127963257;0.116720017924666;0.117750688721843;0.118783288078423;0.11981781202781;0.120854256582503;0.121892617734113;0.122932891453382;0.123975073690202;0.125019160373628;0.126065147411903;0.12711303069247;0.128162806081993;0.129214469426379;0.13026801655079;0.131323443259671;0.132380745336762;0.133439918545122;0.134500958627148;0.135563861304595;0.136628622278597;0.137695237229687;0.138763701817818;0.139834011682386;0.140906162442248;0.141980149695748;0.143055969020734;0.144133615974584;0.145213086094228;0.146294374896168;0.147377477876504;0.148462390510953;0.149549108254878;0.150637626543306;0.151727940790955;0.152820046392257;0.153913938721383;0.155009613132265;0.156107064958625;0.157206289513996;0.158307282091748;0.159410037965114;0.160514552387217;0.161620820591094;0.162728837789721;0.163838599176042;0.164950099922995;0.166063335183536;0.167178300090671;0.168294989757478;0.169413399277137;0.170533523722959;0.171655358148411;0.172778897587147;0.173904137053034;0.175031071540182;0.176159696022971;0.177290005456083;0.178421994774532;0.179555658893686;0.180690992709306;0.181827991097572;0.182966648915113;0.184106960999035;0.185248922166959;0.186392527217044;0.187537770928023;0.188684648059233;0.189833153350645;0.190983281522898;0.192135027277332;0.193288385296015;0.194443350241782;0.195599916758264;0.196758079469921;0.197917832982076;0.199079171880949;0.200242090733689;0.201406584088409;0.202572646474221;0.203740272401268;0.204909456360757;0.206080192825002;0.207252476247449;0.208426301062716;0.209601661686629;0.210778552516257;0.211956967929945;0.213136902287355;0.214318349929498;0.215501305178773;0.216685762339004;0.217871715695474;0.219059159514965;0.220248088045796;0.221438495517857;0.222630376142649;0.223823724113326;0.225018533604724;0.226214798773408;0.227412513757708;0.228611672677756;0.229812269635527;0.231014298714879;0.232217753981592;0.233422629483406;0.234628919250063;0.235836617293348;0.237045717607127;0.23825621416739;0.23946810093229;0.240681371842184;0.241896020819679;0.243112041769665;0.244329428579365;0.245548175118373;0.246768275238695;0.247989722774796;0.249212511543637;0.250436635344722;0.251662087960139;0.252888863154604;0.254116954675506;0.255346356252946;0.256577061599786;0.25780906441169;0.25904235836717;0.260276937127629;0.261512794337407;0.262749923623824;0.26398831859723;0.265227972851043;0.266468879961801;0.267711033489204;0.268954426976162;0.270199053948839;0.271444907916702;0.272691982372566;0.273940270792641;0.27518976663658;0.276440463347524;0.27769235435215;0.278945433060723;0.280199692867136;0.281455127148964;0.282711729267511;0.283969492567857;0.285228410378907;0.286488476013441;0.287749682768163;0.289012023923747;0.290275492744891;0.291540082480364;0.292805786363058;0.294072597610032;0.295340509422572;0.296609514986232;0.29787960747089;0.299150780030799;0.300423025804634;0.301696337915547;0.302970709471217;0.304246133563902;0.305522603270488;0.306800111652548;0.308078651756386;0.309358216613093;0.310638799238603;0.311920392633738;0.313202989784267;0.314486583660959;0.315771167219632;0.317056733401212;0.318343275131781;0.319630785322636;0.320919256870341;0.322208682656779;0.323499055549212;0.324790368400329;0.326082614048306;0.327375785316859;0.328669875015299;0.329964875938589;0.331260780867396;0.33255758256815;0.333855273793101;0.335153847280371;0.336453295754014;0.337753611924068;0.339054788486619;0.34035681812385;0.341659693504104;0.342963407281936;0.344267952098176;0.345573320579982;0.3468795053409;0.348186498980922;0.349494294086542;0.350802883230817;0.352112258973424;0.353422413860719;0.354733340425795;0.356045031188542;0.357357478655706;0.358670675320949;0.359984613664905;0.361299286155246;0.362614685246735;0.363930803381291;0.365247632988046;0.366565166483408;0.367883396271121;0.369202314742321;0.370521914275606;0.371842187237087;0.373163125980459;0.374484722847052;0.375806970165902;0.377129860253808;0.378453385415392;0.379777537943166;0.381102310117591;0.382427694207139;0.383753682468358;0.385080267145932;0.386407440472746;0.387735194669947;0.389063521947008;0.390392414501793;0.391721864520617;0.393051864178314;0.394382405638295;0.395713481052618;0.397045082562048;0.398377202296122;0.399709832373217;0.401042964900608;0.402376591974537;0.403710705680279;0.405045298092203;0.406380361273841;0.40771588727795;0.409051868146579;0.410388295911137;0.411725162592453;0.413062460200849;0.414400180736199;0.415738316188001;0.417076858535439;0.418415799747454;0.419755131782804;0.42109484659014;0.422434936108063;0.423775392265199;0.425116206980262;0.426457372162121;0.427798879709872;0.429140721512899;0.430482889450948;0.431825375394191;0.433168171203296;0.434511268729492;0.435854659814643;0.437198336291311;0.438542289982828;0.439886512703362;0.441230996257989;0.44257573244276;0.44392071304477;0.445265929842227;0.446611374604524;0.447957039092305;0.449302915057537;0.450648994243579;0.451995268385251;0.453341729208906;0.4546883684325;0.456035177765659;0.457382148909753;0.458729273557966;0.460076543395366;0.461423950098973;0.462771485337837;0.464119140773102;0.465466908058079;0.46681477883832;0.468162744751687;0.469510797428423;0.470858928491227;0.47220712955532;0.473555392228522;0.474903708111322;0.47625206879695;0.477600465871449;0.478948890913749;0.480297335495736;0.481645791182329;0.482994249531548;0.484342702094591;0.485691140415903;0.487039556033253;0.488387940477802;0.489736285274183;0.491084581940566;0.49243282198874;0.49378099692418;0.495129098246122;0.49647711744764;0.497825046015716;0.499172875431316;0.500520597169462;0.50186820269931;0.503215683484219;0.50456303098183;0.505910236644137;0.507257291917563;0.508604188243036;0.509950917056061;0.511297469786796;0.512643837860127;0.513990012695743;0.515335985708212;0.516681748307053;0.518027291896815;0.51937260787715;0.52071768764289;0.52206252258412;0.523407104086258;0.524751423530125;0.526095472292026;0.527439241743822;0.52878272325301;0.530125908182794;0.531468787892165;0.532811353735976;0.534153597065018;0.535495509226098;0.536837081562112;0.538178305412124;0.539519172111444;0.5408596729917;0.542199799380921;0.543539542603607;0.544878893980812;0.546217844830218;0.547556386466211;0.54889451019996;0.550232207339496;0.551569469189783;0.552906287052803;0.554242652227627;0.555578556010497;0.556913989694902;0.558248944571653;0.559583411928966;0.560917383052535;0.562250849225612;0.563583801729084;0.564916231841552;0.566248130839409;0.567579489996916;0.568910300586281;0.570240553877741;0.571570241139634;0.572899353638481;0.574227882639063;0.575555819404501;0.576883155196333;0.578209881274593;0.579535988897889;0.580861469323482;0.582186313807366;0.583510513604344;0.584834059968109;0.586156944151322;0.587479157405691;0.588800690982049;0.590121536130435;0.591441684100169;0.592761126139939;0.594079853497869;0.595397857421609;0.596715129158405;0.598031659955185;0.599347441058636;0.60066246371528;0.60197671917156;0.603290198673914;0.604602893468854;0.605914794803051;0.607225893923408;0.608536182077146;0.609845650511876;0.611154290475686;0.612462093217214;0.613769049985734;0.61507515203123;0.616380390604481;0.617684756957135;0.618988242341793;0.620290838012088;0.621592535222764;0.622893325229755;0.624193199290268;0.62549214866286;0.626790164607517;0.628087238385739;0.629383361260614;0.630678524496902;0.631972719361113;0.633265937121587;0.634558169048576;0.635849406414322;0.637139640493137;0.638428862561485;0.63971706389806;0.641004235783867;0.642290369502301;0.643575456339231;0.644859487583075;0.646142454524881;0.647424348458412;0.64870516068022;0.64998488248973;0.651263505189319;0.652541020084396;0.65381741848348;0.655092691698287;0.656366831043801;0.657639827838363;0.658911673403742;0.660182359065225;0.66145187615169;0.662720215995689;0.663987369933525;0.66525332930534;0.666518085455186;0.667781629731109;0.669043953485231;0.670305048073829;0.671564904857411;0.672823515200804;0.674080870473226;0.675336962048371;0.676591781304489;0.677845319624464;0.679097568395895;0.680348519011176;0.681598162867577;0.682846491367321;0.684093495917668;0.685339167930993;0.686583498824865;0.687826480022128;0.689068102950982;0.69030835904506;0.691547239743511;0.692784736491078;0.694020840738178;0.695255543940982;0.696488837561496;0.697720713067638;0.69895116193332;0.700180175638527;0.701407745669397;0.702633863518298;0.703858520683914;0.705081708671316;0.706303418992049;0.707523643164207;0.708742372712514;0.709959599168404;0.711175314070098;0.712389508962686;0.713602175398207;0.714813304935724;0.716022889141407;0.717230919588611;0.718437387857955;0.7196422855374;0.720845604222332;0.722047335515636;0.723247471027779;0.724446002376885;0.725642921188819;0.72683821909726;0.728031887743784;0.729223918777942;0.730414303857337;0.731603034647704;0.732790102822989;0.733975500065425;0.735159218065615;0.736341248522604;0.737521583143965;0.73870021364587;0.739877131753174;0.741052329199488;0.742225797727262;0.743397529087861;0.744567515041641;0.74573574735803;0.746902217815605;0.748066918202168;0.749229840314828;0.750390975960072;0.751550316953849;0.752707855121646;0.753863582298562;0.755017490329388;0.756169571068687;0.757319816380865;0.758468218140255;0.759614768231187;0.760759458548073;0.761902280995477;0.763043227488195;0.764182289951332;0.765319460320378;0.766454730541287;0.767588092570547;0.768719538375264;0.769849059933236;0.770976649233028;0.772102298274047;0.773225999066623;0.774347743632081;0.775467524002819;0.776585332222382;0.777701160345539;0.77881500043836;0.779926844578291;0.781036684854226;0.782144513366589;0.783250322227402;0.784354103560369;0.785455849500942;0.786555552196404;0.787653203805936;0.788748796500701;0.789842322463913;0.790933773890911;0.792023142989237;0.793110421978709;0.794195603091497;0.795278678572193;0.796359640677891;0.797438481678257;0.798515193855602;0.799589769504963;0.800662200934169;0.801732480463917;0.802800600427848;0.80386655317262;0.804930331057977;0.805991926456828;0.807051331755317;0.808108539352896;0.8091635416624;0.810216331110119;0.811266900135868;0.812315241193064;0.813361346748796;0.814405209283897;0.815446821293019;0.8164861752847;0.817523263781442;0.81855807931978;0.819590614450354;0.820620861737978;0.821648813761719;0.822674463114959;0.823697802405475;0.824718824255502;0.825737521301814;0.826753886195782;0.827767911603459;0.828779590205639;0.829788914697934;0.830795877790843;0.831800472209821;0.832802690695352;0.833802526003016;0.834799970903559;0.835795018182967;0.836787660642529;0.837777891098914;0.838765702384234;0.839751087346116;0.840734038847771;0.841714549768064;0.84269261300158;0.843668221458696;0.844641368065647;0.845612045764594;0.846580247513697;0.847545966287178;0.84850919507539;0.849469926884886;0.850428154738489;0.851383871675352;0.852337070751035;0.853287745037565;0.854235887623507;0.855181491614029;0.85612455013097;0.857065056312905;0.858003003315215;0.85893838431015;0.859871192486895;0.86080142105164;0.861729063227642;0.862654112255293;0.863576561392183;0.864496403913169;0.865413633110439;0.866328242293574;0.867240224789617;0.86814957394314;0.869056283116299;0.869960345688909;0.870861755058503;0.871760504640396;0.872656587867754;0.873549998191649;0.874440729081133;0.875328774023292;0.876214126523317;0.877096780104561;0.877976728308609;0.878853964695334;0.879728482842962;0.880600276348139;0.881469338825985;0.882335663910164;0.883199245252942;0.884060076525249;0.884918151416742;0.885773463635865;0.886626006909912;0.887475774985088;0.888322761626568;0.88916696061856;0.890008365764364;0.890846970886435;0.89168276982644;0.892515756445321;0.893345924623353;0.894173268260203;0.894997781274994;0.895819457606359;0.896638291212503;0.897454276071263;0.898267406180164;0.899077675556479;0.899885078237288;0.900689608279537;0.901491259760094;0.902290026775807;0.903085903443565;0.90387888390035;0.9046689623033;0.905456132829764;0.906240389677357;0.907021727064019;0.907800139228072;0.908575620428275;0.90934816494388;0.91011776707469;0.910884421141112;0.911648121484216;0.912408862465787;0.913166638468382;0.913921443895387;0.914673273171068;0.915422120740627;0.916167981070258;0.9169108486472;0.91765071797979;0.918387583597519;0.919121440051086;0.919852281912448;0.920580103774877;0.92130490025301;0.922026665982904;0.922745395622088;0.923461083849616;0.924173725366119;0.924883314893854;0.925589847176761;0.926293316980511;0.92699371909256;0.927691048322198;0.928385299500598;0.929076467480875;0.929764547138127;0.930449533369489;0.931131421094187;0.931810205253583;0.932485880811225;0.933158442752899;0.933827886086677;0.934494205842967;0.935157397074559;0.935817454856679;0.936474374287031;0.937128150485851;0.937778778595951;0.938426253782768;0.939070571234412;0.939711726161716;0.940349713798277;0.940984529400506;0.941616168247679;0.942244625641977;0.942869896908532;0.943491977395482;0.944110862474005;0.944726547538374;0.945339028005997;0.945948299317464;0.946554356936591;0.947157196350468;0.947756813069498;0.948353202627446;0.948946360581481;0.949536282512219;0.950122964023769;0.950706400743774;0.951286588323455;0.951863522437655;0.952437198784881;0.953007613087343;0.953574761091004;0.954138638565613;0.954699241304754;0.955256565125884;0.955810605870372;0.956361359403548;0.956908821614734;0.957452988417292;0.95799385574866;0.958531419570396;0.959065675868214;0.959596620652025;0.960124249955978;0.960648559838497;0.961169546382321;0.961687205694544;0.962201533906649;0.962712527174551;0.963220181678634;0.963724493623787;0.964225459239442;0.964723074779614;0.965217336522932;0.965708240772684;0.966195783856846;0.966679962128122;0.967160771963981;0.967638209766689;0.96811227196335;0.968582955005935;0.969050255371323;0.969514169561332;0.969974694102756;0.970431825547395;0.970885560472097;0.971335895478783;0.971782827194488;0.972226352271389;0.972666467386842;0.973103169243412;0.973536454568909;0.973966320116415;0.974392762664321;0.97481577901636;0.975235366001631;0.975651520474639;0.976064239315321;0.97647351942908;0.976879357746813;0.977281751224942;0.977680696845445;0.978076191615887;0.978468232569446;0.978856816764947;0.979241941286885;0.979623603245462;0.98000179977661;0.980376528042017;0.980747785229165;0.981115568551347;0.9814798752477;0.981840702583234;0.982198047848854;0.982551908361392;0.98290228146363;0.983249164524326;0.983592554938246;0.98393245012618;0.984268847534979;0.984601744637569;0.984931138932984;0.98525702794639;0.985579409229105;0.985898280358627;0.986213638938657;0.986525482599124;0.986833808996206;0.987138615812356;0.987439900756322;0.987737661563173;0.98803189599432;0.988322601837537;0.988609776906985;0.988893419043231;0.989173526113274;0.989450096010561;0.989723126655011;0.989992615993036;0.990258561997559;0.990520962668036;0.990779816030475;0.991035120137455;0.991286873068149;0.991535072928337;0.991779717850431;0.992020805993488;0.992258335543232;0.992492304712073;0.99272271173912;0.992949554890201;0.993172832457882;0.993392542761483;0.993608684147091;0.993821254987582;0.994030253682635;0.994235678658745;0.994437528369243;0.99463580129431;0.994830495940991;0.995021610843209;0.995209144561783;0.99539309568444;0.995573462825828;0.995750244627533;0.99592343975809;0.996093046912996;0.996259064814724;0.996421492212737;0.996580327883498;0.996735570630482;0.99688721928419;0.997035272702159;0.997179729768976;0.997320589396285;0.997457850522799;0.997591512114315;0.997721573163716;0.99784803269099;0.997970889743233;0.998090143394661;0.998205792746621;0.998317836927595;0.998426275093213;0.998531106426262;0.99863233013669;0.998729945461616;0.998823951665339;0.998914348039344;0.999001133902306;0.999084308600105;0.999163871505822;0.999239822019754;0.999312159569415;0.999380883609544;0.999445993622108;0.999507489116311;0.999565369628596;0.999619634722648;0.999670283989403;0.999717317047049;0.99976073354103;0.999800533144051;0.999836715556079;0.999869280504348;0.99989822774336;0.999923557054889;0.999945268247983;0.999963361158965;0.999977835651433;0.999988691616268;0.999995928971626;0.999999547662946]|9|8|on"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"fir_coef"
		Location		[609, 271, 1389, 957]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 68, 60, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 193, 60, 207]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_gen"
		  Ports			  [1, 1]
		  Position		  [130, 109, 220, 141]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "1024 coefs in bram\n9_8 out/1"
		  UserDataPersistent	  on
		  UserData		  "DataTag37"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Coefficient Generator"
		  MaskDescription	  "A coefficient generator."
		  MaskHelp		  "<pre>\nDescription::\n\nA coefficient generator.\n\nMask Parameters::\n\nCoefficiants (coefs): The coefficients to output.  These should be specified as doubles.\nThey will be rounded/saturated according to the specified number of bits (n_bits)\nand binary point (bin_pt).\n\nNumber of Coefficient Bits (n_bits): The number of bits used for the fixed point binary\nrepresentation of the coefficients.\n\nCoefficient Binary Point (bin_pt): The binary point of the fixed point binary representation\nof the coefficients.\n\nLog2 Cycles per Coefficient (log2_cpc): The log2 value of the number of cycles per coefficient.\nMust be a non-negative integer (i.e. cycles per coefficient must be a power of 2).  \n\nUse BRAM (use_bram): Check this checkbox to store coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Coefficients|Number of Bits|Binary Point|Log2 Cycles per Coefficient|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off"
		  MaskCallbackString	  "||||"
		  MaskEnableString	  "off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on"
		  MaskVarAliasString	  ",,,,"
		  MaskVariables		  "coefs=&1;n_bits=&2;bin_pt=&3;log2_cpc=&4;use_bram=&5;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "[0.000376226431598763;0.00113037704120664;0.00188679033646423;0.00264546512738635;0.00340640020282435;0.00416959433045314;0.00493504625675948;0.00570275470702945;0.00647271838533626;0.00724493597452914;0.00801940613622144;0.00879612751077952;0.00957509871731131;0.0103563183536561;0.0111397849963734;0.0119254972007329;0.0127134535007037;0.0135036524089452;0.0142960924167967;0.0150907719942678;0.0158876895900297;0.0166868436314057;0.0174882325243625;0.0182918546535009;0.0190977083820486;0.019905792051851;0.0207161039833637;0.0215286424756441;0.022343405806345;0.0231603922317064;0.0239795999865484;0.0248010272842649;0.0256246723168164;0.026450533254724;0.0272786082470629;0.0281088954214566;0.0289413928840709;0.0297760987196091;0.0306130109913055;0.0314521277409214;0.0322934469887399;0.0331369667335609;0.0339826849526973;0.0348305996019707;0.035680708615707;0.0365330099067331;0.0373875013663734;0.0382441808644464;0.0391030462492619;0.0399640953476175;0.0408273259647971;0.0416927358845677;0.0425603228691775;0.0434300846593541;0.0443020189743029;0.0451761235117054;0.0460523959477181;0.0469308339369715;0.0478114351125697;0.0486941970860893;0.0495791174475793;0.0504661937655611;0.0513554235870291;0.0522468044374499;0.0531403338207642;0.0540360092193872;0.0549338280942094;0.055833787884598;0.0567358860083988;0.0576401198619378;0.0585464868200229;0.0594549842359465;0.0603656094414881;0.0612783597469165;0.062193232440993;0.0631102247909746;0.0640293340426176;0.0649505574201807;0.0658738921264291;0.066799335342639;0.0677268842286013;0.0686565359226264;0.069588287541549;0.0705221361807334;0.0714580789140785;0.0723961127940227;0.0733362348515507;0.0742784420961991;0.0752227315160621;0.0761691000777984;0.0771175447266376;0.0780680623863875;0.0790206499594406;0.0799753043267821;0.0809320223479969;0.081890800861278;0.0828516366834338;0.0838145266098974;0.0847794674147343;0.0857464558506515;0.0867154886490061;0.0876865625198155;0.0886596741517658;0.0896348202122217;0.0906119973472373;0.091591202181565;0.0925724313186671;0.0935556813407251;0.094540948808652;0.0955282302621025;0.0965175222194845;0.0975088211779706;0.0985021236135104;0.0994974259808421;0.100494724713505;0.10149401622385;0.102495296903059;0.103498563121147;0.104503811226986;0.105511037548312;0.106520238391741;0.107531410042783;0.108544548765853;0.109559650804292;0.110576712380376;0.111595729695331;0.112616698929352;0.113639616241614;0.114664477770291;0.11569127963257;0.116720017924666;0.117750688721843;0.118783288078423;0.11981781202781;0.120854256582503;0.121892617734113;0.122932891453382;0.123975073690202;0.125019160373628;0.126065147411903;0.12711303069247;0.128162806081993;0.129214469426379;0.13026801655079;0.131323443259671;0.132380745336762;0.133439918545122;0.134500958627148;0.135563861304595;0.136628622278597;0.137695237229687;0.138763701817818;0.139834011682386;0.140906162442248;0.141980149695748;0.143055969020734;0.144133615974584;0.145213086094228;0.146294374896168;0.147377477876504;0.148462390510953;0.149549108254878;0.150637626543306;0.151727940790955;0.152820046392257;0.153913938721383;0.155009613132265;0.156107064958625;0.157206289513996;0.158307282091748;0.159410037965114;0.160514552387217;0.161620820591094;0.162728837789721;0.163838599176042;0.164950099922995;0.166063335183536;0.167178300090671;0.168294989757478;0.169413399277137;0.170533523722959;0.171655358148411;0.172778897587147;0.173904137053034;0.175031071540182;0.176159696022971;0.177290005456083;0.178421994774532;0.179555658893686;0.180690992709306;0.181827991097572;0.182966648915113;0.184106960999035;0.185248922166959;0.186392527217044;0.187537770928023;0.188684648059233;0.189833153350645;0.190983281522898;0.192135027277332;0.193288385296015;0.194443350241782;0.195599916758264;0.196758079469921;0.197917832982076;0.199079171880949;0.200242090733689;0.201406584088409;0.202572646474221;0.203740272401268;0.204909456360757;0.206080192825002;0.207252476247449;0.208426301062716;0.209601661686629;0.210778552516257;0.211956967929945;0.213136902287355;0.214318349929498;0.215501305178773;0.216685762339004;0.217871715695474;0.219059159514965;0.220248088045796;0.221438495517857;0.222630376142649;0.223823724113326;0.225018533604724;0.226214798773408;0.227412513757708;0.228611672677756;0.229812269635527;0.231014298714879;0.232217753981592;0.233422629483406;0.234628919250063;0.235836617293348;0.237045717607127;0.23825621416739;0.23946810093229;0.240681371842184;0.241896020819679;0.243112041769665;0.244329428579365;0.245548175118373;0.246768275238695;0.247989722774796;0.249212511543637;0.250436635344722;0.251662087960139;0.252888863154604;0.254116954675506;0.255346356252946;0.256577061599786;0.25780906441169;0.25904235836717;0.260276937127629;0.261512794337407;0.262749923623824;0.26398831859723;0.265227972851043;0.266468879961801;0.267711033489204;0.268954426976162;0.270199053948839;0.271444907916702;0.272691982372566;0.273940270792641;0.27518976663658;0.276440463347524;0.27769235435215;0.278945433060723;0.280199692867136;0.281455127148964;0.282711729267511;0.283969492567857;0.285228410378907;0.286488476013441;0.287749682768163;0.289012023923747;0.290275492744891;0.291540082480364;0.292805786363058;0.294072597610032;0.295340509422572;0.296609514986232;0.29787960747089;0.299150780030799;0.300423025804634;0.301696337915547;0.302970709471217;0.304246133563902;0.305522603270488;0.306800111652548;0.308078651756386;0.309358216613093;0.310638799238603;0.311920392633738;0.313202989784267;0.314486583660959;0.315771167219632;0.317056733401212;0.318343275131781;0.319630785322636;0.320919256870341;0.322208682656779;0.323499055549212;0.324790368400329;0.326082614048306;0.327375785316859;0.328669875015299;0.329964875938589;0.331260780867396;0.33255758256815;0.333855273793101;0.335153847280371;0.336453295754014;0.337753611924068;0.339054788486619;0.34035681812385;0.341659693504104;0.342963407281936;0.344267952098176;0.345573320579982;0.3468795053409;0.348186498980922;0.349494294086542;0.350802883230817;0.352112258973424;0.353422413860719;0.354733340425795;0.356045031188542;0.357357478655706;0.358670675320949;0.359984613664905;0.361299286155246;0.362614685246735;0.363930803381291;0.365247632988046;0.366565166483408;0.367883396271121;0.369202314742321;0.370521914275606;0.371842187237087;0.373163125980459;0.374484722847052;0.375806970165902;0.377129860253808;0.378453385415392;0.379777537943166;0.381102310117591;0.382427694207139;0.383753682468358;0.385080267145932;0.386407440472746;0.387735194669947;0.389063521947008;0.390392414501793;0.391721864520617;0.393051864178314;0.394382405638295;0.395713481052618;0.397045082562048;0.398377202296122;0.399709832373217;0.401042964900608;0.402376591974537;0.403710705680279;0.405045298092203;0.406380361273841;0.40771588727795;0.409051868146579;0.410388295911137;0.411725162592453;0.413062460200849;0.414400180736199;0.415738316188001;0.417076858535439;0.418415799747454;0.419755131782804;0.42109484659014;0.422434936108063;0.423775392265199;0.425116206980262;0.426457372162121;0.427798879709872;0.429140721512899;0.430482889450948;0.431825375394191;0.433168171203296;0.434511268729492;0.435854659814643;0.437198336291311;0.438542289982828;0.439886512703362;0.441230996257989;0.44257573244276;0.44392071304477;0.445265929842227;0.446611374604524;0.447957039092305;0.449302915057537;0.450648994243579;0.451995268385251;0.453341729208906;0.4546883684325;0.456035177765659;0.457382148909753;0.458729273557966;0.460076543395366;0.461423950098973;0.462771485337837;0.464119140773102;0.465466908058079;0.46681477883832;0.468162744751687;0.469510797428423;0.470858928491227;0.47220712955532;0.473555392228522;0.474903708111322;0.47625206879695;0.477600465871449;0.478948890913749;0.480297335495736;0.481645791182329;0.482994249531548;0.484342702094591;0.485691140415903;0.487039556033253;0.488387940477802;0.489736285274183;0.491084581940566;0.49243282198874;0.49378099692418;0.495129098246122;0.49647711744764;0.497825046015716;0.499172875431316;0.500520597169462;0.50186820269931;0.503215683484219;0.50456303098183;0.505910236644137;0.507257291917563;0.508604188243036;0.509950917056061;0.511297469786796;0.512643837860127;0.513990012695743;0.515335985708212;0.516681748307053;0.518027291896815;0.51937260787715;0.52071768764289;0.52206252258412;0.523407104086258;0.524751423530125;0.526095472292026;0.527439241743822;0.52878272325301;0.530125908182794;0.531468787892165;0.532811353735976;0.534153597065018;0.535495509226098;0.536837081562112;0.538178305412124;0.539519172111444;0.5408596729917;0.542199799380921;0.543539542603607;0.544878893980812;0.546217844830218;0.547556386466211;0.54889451019996;0.550232207339496;0.551569469189783;0.552906287052803;0.554242652227627;0.555578556010497;0.556913989694902;0.558248944571653;0.559583411928966;0.560917383052535;0.562250849225612;0.563583801729084;0.564916231841552;0.566248130839409;0.567579489996916;0.568910300586281;0.570240553877741;0.571570241139634;0.572899353638481;0.574227882639063;0.575555819404501;0.576883155196333;0.578209881274593;0.579535988897889;0.580861469323482;0.582186313807366;0.583510513604344;0.584834059968109;0.586156944151322;0.587479157405691;0.588800690982049;0.590121536130435;0.591441684100169;0.592761126139939;0.594079853497869;0.595397857421609;0.596715129158405;0.598031659955185;0.599347441058636;0.60066246371528;0.60197671917156;0.603290198673914;0.604602893468854;0.605914794803051;0.607225893923408;0.608536182077146;0.609845650511876;0.611154290475686;0.612462093217214;0.613769049985734;0.61507515203123;0.616380390604481;0.617684756957135;0.618988242341793;0.620290838012088;0.621592535222764;0.622893325229755;0.624193199290268;0.62549214866286;0.626790164607517;0.628087238385739;0.629383361260614;0.630678524496902;0.631972719361113;0.633265937121587;0.634558169048576;0.635849406414322;0.637139640493137;0.638428862561485;0.63971706389806;0.641004235783867;0.642290369502301;0.643575456339231;0.644859487583075;0.646142454524881;0.647424348458412;0.64870516068022;0.64998488248973;0.651263505189319;0.652541020084396;0.65381741848348;0.655092691698287;0.656366831043801;0.657639827838363;0.658911673403742;0.660182359065225;0.66145187615169;0.662720215995689;0.663987369933525;0.66525332930534;0.666518085455186;0.667781629731109;0.669043953485231;0.670305048073829;0.671564904857411;0.672823515200804;0.674080870473226;0.675336962048371;0.676591781304489;0.677845319624464;0.679097568395895;0.680348519011176;0.681598162867577;0.682846491367321;0.684093495917668;0.685339167930993;0.686583498824865;0.687826480022128;0.689068102950982;0.69030835904506;0.691547239743511;0.692784736491078;0.694020840738178;0.695255543940982;0.696488837561496;0.697720713067638;0.69895116193332;0.700180175638527;0.701407745669397;0.702633863518298;0.703858520683914;0.705081708671316;0.706303418992049;0.707523643164207;0.708742372712514;0.709959599168404;0.711175314070098;0.712389508962686;0.713602175398207;0.714813304935724;0.716022889141407;0.717230919588611;0.718437387857955;0.7196422855374;0.720845604222332;0.722047335515636;0.723247471027779;0.724446002376885;0.725642921188819;0.72683821909726;0.728031887743784;0.729223918777942;0.730414303857337;0.731603034647704;0.732790102822989;0.733975500065425;0.735159218065615;0.736341248522604;0.737521583143965;0.73870021364587;0.739877131753174;0.741052329199488;0.742225797727262;0.743397529087861;0.744567515041641;0.74573574735803;0.746902217815605;0.748066918202168;0.749229840314828;0.750390975960072;0.751550316953849;0.752707855121646;0.753863582298562;0.755017490329388;0.756169571068687;0.757319816380865;0.758468218140255;0.759614768231187;0.760759458548073;0.761902280995477;0.763043227488195;0.764182289951332;0.765319460320378;0.766454730541287;0.767588092570547;0.768719538375264;0.769849059933236;0.770976649233028;0.772102298274047;0.773225999066623;0.774347743632081;0.775467524002819;0.776585332222382;0.777701160345539;0.77881500043836;0.779926844578291;0.781036684854226;0.782144513366589;0.783250322227402;0.784354103560369;0.785455849500942;0.786555552196404;0.787653203805936;0.788748796500701;0.789842322463913;0.790933773890911;0.792023142989237;0.793110421978709;0.794195603091497;0.795278678572193;0.796359640677891;0.797438481678257;0.798515193855602;0.799589769504963;0.800662200934169;0.801732480463917;0.802800600427848;0.80386655317262;0.804930331057977;0.805991926456828;0.807051331755317;0.808108539352896;0.8091635416624;0.810216331110119;0.811266900135868;0.812315241193064;0.813361346748796;0.814405209283897;0.815446821293019;0.8164861752847;0.817523263781442;0.81855807931978;0.819590614450354;0.820620861737978;0.821648813761719;0.822674463114959;0.823697802405475;0.824718824255502;0.825737521301814;0.826753886195782;0.827767911603459;0.828779590205639;0.829788914697934;0.830795877790843;0.831800472209821;0.832802690695352;0.833802526003016;0.834799970903559;0.835795018182967;0.836787660642529;0.837777891098914;0.838765702384234;0.839751087346116;0.840734038847771;0.841714549768064;0.84269261300158;0.843668221458696;0.844641368065647;0.845612045764594;0.846580247513697;0.847545966287178;0.84850919507539;0.849469926884886;0.850428154738489;0.851383871675352;0.852337070751035;0.853287745037565;0.854235887623507;0.855181491614029;0.85612455013097;0.857065056312905;0.858003003315215;0.85893838431015;0.859871192486895;0.86080142105164;0.861729063227642;0.862654112255293;0.863576561392183;0.864496403913169;0.865413633110439;0.866328242293574;0.867240224789617;0.86814957394314;0.869056283116299;0.869960345688909;0.870861755058503;0.871760504640396;0.872656587867754;0.873549998191649;0.874440729081133;0.875328774023292;0.876214126523317;0.877096780104561;0.877976728308609;0.878853964695334;0.879728482842962;0.880600276348139;0.881469338825985;0.882335663910164;0.883199245252942;0.884060076525249;0.884918151416742;0.885773463635865;0.886626006909912;0.887475774985088;0.888322761626568;0.88916696061856;0.890008365764364;0.890846970886435;0.89168276982644;0.892515756445321;0.893345924623353;0.894173268260203;0.894997781274994;0.895819457606359;0.896638291212503;0.897454276071263;0.898267406180164;0.899077675556479;0.899885078237288;0.900689608279537;0.901491259760094;0.902290026775807;0.903085903443565;0.90387888390035;0.9046689623033;0.905456132829764;0.906240389677357;0.907021727064019;0.907800139228072;0.908575620428275;0.90934816494388;0.91011776707469;0.910884421141112;0.911648121484216;0.912408862465787;0.913166638468382;0.913921443895387;0.914673273171068;0.915422120740627;0.916167981070258;0.9169108486472;0.91765071797979;0.918387583597519;0.919121440051086;0.919852281912448;0.920580103774877;0.92130490025301;0.922026665982904;0.922745395622088;0.923461083849616;0.924173725366119;0.924883314893854;0.925589847176761;0.926293316980511;0.92699371909256;0.927691048322198;0.928385299500598;0.929076467480875;0.929764547138127;0.930449533369489;0.931131421094187;0.931810205253583;0.932485880811225;0.933158442752899;0.933827886086677;0.934494205842967;0.935157397074559;0.935817454856679;0.936474374287031;0.937128150485851;0.937778778595951;0.938426253782768;0.939070571234412;0.939711726161716;0.940349713798277;0.940984529400506;0.941616168247679;0.942244625641977;0.942869896908532;0.943491977395482;0.944110862474005;0.944726547538374;0.945339028005997;0.945948299317464;0.946554356936591;0.947157196350468;0.947756813069498;0.948353202627446;0.948946360581481;0.949536282512219;0.950122964023769;0.950706400743774;0.951286588323455;0.951863522437655;0.952437198784881;0.953007613087343;0.953574761091004;0.954138638565613;0.954699241304754;0.955256565125884;0.955810605870372;0.956361359403548;0.956908821614734;0.957452988417292;0.95799385574866;0.958531419570396;0.959065675868214;0.959596620652025;0.960124249955978;0.960648559838497;0.961169546382321;0.961687205694544;0.962201533906649;0.962712527174551;0.963220181678634;0.963724493623787;0.964225459239442;0.964723074779614;0.965217336522932;0.965708240772684;0.966195783856846;0.966679962128122;0.967160771963981;0.967638209766689;0.96811227196335;0.968582955005935;0.969050255371323;0.969514169561332;0.969974694102756;0.970431825547395;0.970885560472097;0.971335895478783;0.971782827194488;0.972226352271389;0.972666467386842;0.973103169243412;0.973536454568909;0.973966320116415;0.974392762664321;0.97481577901636;0.975235366001631;0.975651520474639;0.976064239315321;0.97647351942908;0.976879357746813;0.977281751224942;0.977680696845445;0.978076191615887;0.978468232569446;0.978856816764947;0.979241941286885;0.979623603245462;0.98000179977661;0.980376528042017;0.980747785229165;0.981115568551347;0.9814798752477;0.981840702583234;0.982198047848854;0.982551908361392;0.98290228146363;0.983249164524326;0.983592554938246;0.98393245012618;0.984268847534979;0.984601744637569;0.984931138932984;0.98525702794639;0.985579409229105;0.985898280358627;0.986213638938657;0.986525482599124;0.986833808996206;0.987138615812356;0.987439900756322;0.987737661563173;0.98803189599432;0.988322601837537;0.988609776906985;0.988893419043231;0.989173526113274;0.989450096010561;0.989723126655011;0.989992615993036;0.990258561997559;0.990520962668036;0.990779816030475;0.991035120137455;0.991286873068149;0.991535072928337;0.991779717850431;0.992020805993488;0.992258335543232;0.992492304712073;0.99272271173912;0.992949554890201;0.993172832457882;0.993392542761483;0.993608684147091;0.993821254987582;0.994030253682635;0.994235678658745;0.994437528369243;0.99463580129431;0.994830495940991;0.995021610843209;0.995209144561783;0.99539309568444;0.995573462825828;0.995750244627533;0.99592343975809;0.996093046912996;0.996259064814724;0.996421492212737;0.996580327883498;0.996735570630482;0.99688721928419;0.997035272702159;0.997179729768976;0.997320589396285;0.997457850522799;0.997591512114315;0.997721573163716;0.99784803269099;0.997970889743233;0.998090143394661;0.998205792746621;0.998317836927595;0.998426275093213;0.998531106426262;0.99863233013669;0.998729945461616;0.998823951665339;0.998914348039344;0.999001133902306;0.999084308600105;0.999163871505822;0.999239822019754;0.999312159569415;0.999380883609544;0.999445993622108;0.999507489116311;0.999565369628596;0.999619634722648;0.999670283989403;0.999717317047049;0.99976073354103;0.999800533144051;0.999836715556079;0.999869280504348;0.99989822774336;0.999923557054889;0.999945268247983;0.999963361158965;0.999977835651433;0.999988691616268;0.999995928971626;0.999999547662946]|9|8|0|on"
		  MaskTabNameString	  ",,,,"
		  System {
		    Name		    "c_gen"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1023"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 50 50 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "1024"
		    initVector		    "[0;0;0;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.015625;0.015625;0.015625;0.015625;0.015625;0.01953125;0.01953125;0.01953125;0.01953125;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.02734375;0.02734375;0.02734375;0.02734375;0.02734375;0.03125;0.03125;0.03125;0.03125;0.03125;0.03515625;0.03515625;0.03515625;0.03515625;0.0390625;0.0390625;0.0390625;0.0390625;0.0390625;0.04296875;0.04296875;0.04296875;0.04296875;0.046875;0.046875;0.046875;0.046875;0.046875;0.05078125;0.05078125;0.05078125;0.05078125;0.0546875;0.0546875;0.0546875;0.0546875;0.05859375;0.05859375;0.05859375;0.05859375;0.05859375;0.0625;0.0625;0.0625;0.0625;0.06640625;0.06640625;0.06640625;0.06640625;0.0703125;0.0703125;0.0703125;0.0703125;0.07421875;0.07421875;0.07421875;0.07421875;0.07421875;0.078125;0.078125;0.078125;0.078125;0.08203125;0.08203125;0.08203125;0.08203125;0.0859375;0.0859375;0.0859375;0.0859375;0.08984375;0.08984375;0.08984375;0.08984375;0.09375;0.09375;0.09375;0.09375;0.09765625;0.09765625;0.09765625;0.09765625;0.1015625;0.1015625;0.1015625;0.1015625;0.10546875;0.10546875;0.10546875;0.109375;0.109375;0.109375;0.109375;0.11328125;0.11328125;0.11328125;0.11328125;0.1171875;0.1171875;0.1171875;0.1171875;0.12109375;0.12109375;0.12109375;0.12109375;0.125;0.125;0.125;0.12890625;0.12890625;0.12890625;0.12890625;0.1328125;0.1328125;0.1328125;0.1328125;0.13671875;0.13671875;0.13671875;0.140625;0.140625;0.140625;0.140625;0.14453125;0.14453125;0.14453125;0.14453125;0.1484375;0.1484375;0.1484375;0.15234375;0.15234375;0.15234375;0.15234375;0.15625;0.15625;0.15625;0.16015625;0.16015625;0.16015625;0.16015625;0.1640625;0.1640625;0.1640625;0.16796875;0.16796875;0.16796875;0.16796875;0.171875;0.171875;0.171875;0.17578125;0.17578125;0.17578125;0.17578125;0.1796875;0.1796875;0.1796875;0.18359375;0.18359375;0.18359375;0.18359375;0.1875;0.1875;0.1875;0.19140625;0.19140625;0.19140625;0.19140625;0.1953125;0.1953125;0.1953125;0.19921875;0.19921875;0.19921875;0.203125;0.203125;0.203125;0.203125;0.20703125;0.20703125;0.20703125;0.2109375;0.2109375;0.2109375;0.21484375;0.21484375;0.21484375;0.21484375;0.21875;0.21875;0.21875;0.22265625;0.22265625;0.22265625;0.2265625;0.2265625;0.2265625;0.23046875;0.23046875;0.23046875;0.23046875;0.234375;0.234375;0.234375;0.23828125;0.23828125;0.23828125;0.2421875;0.2421875;0.2421875;0.24609375;0.24609375;0.24609375;0.24609375;0.25;0.25;0.25;0.25390625;0.25390625;0.25390625;0.2578125;0.2578125;0.2578125;0.26171875;0.26171875;0.26171875;0.265625;0.265625;0.265625;0.26953125;0.26953125;0.26953125;0.26953125;0.2734375;0.2734375;0.2734375;0.27734375;0.27734375;0.27734375;0.28125;0.28125;0.28125;0.28515625;0.28515625;0.28515625;0.2890625;0.2890625;0.2890625;0.29296875;0.29296875;0.29296875;0.296875;0.296875;0.296875;0.30078125;0.30078125;0.30078125;0.3046875;0.3046875;0.3046875;0.30859375;0.30859375;0.30859375;0.3125;0.3125;0.3125;0.31640625;0.31640625;0.31640625;0.31640625;0.3203125;0.3203125;0.3203125;0.32421875;0.32421875;0.32421875;0.328125;0.328125;0.328125;0.33203125;0.33203125;0.33203125;0.3359375;0.3359375;0.3359375;0.33984375;0.33984375;0.33984375;0.34375;0.34375;0.34375;0.34765625;0.34765625;0.34765625;0.3515625;0.3515625;0.3515625;0.35546875;0.35546875;0.35546875;0.359375;0.359375;0.359375;0.36328125;0.36328125;0.3671875;0.3671875;0.3671875;0.37109375;0.37109375;0.37109375;0.375;0.375;0.375;0.37890625;0.37890625;0.37890625;0.3828125;0.3828125;0.3828125;0.38671875;0.38671875;0.38671875;0.390625;0.390625;0.390625;0.39453125;0.39453125;0.39453125;0.3984375;0.3984375;0.3984375;0.40234375;0.40234375;0.40234375;0.40625;0.40625;0.40625;0.41015625;0.41015625;0.41015625;0.4140625;0.4140625;0.4140625;0.41796875;0.41796875;0.41796875;0.421875;0.421875;0.421875;0.42578125;0.42578125;0.4296875;0.4296875;0.4296875;0.43359375;0.43359375;0.43359375;0.4375;0.4375;0.4375;0.44140625;0.44140625;0.44140625;0.4453125;0.4453125;0.4453125;0.44921875;0.44921875;0.44921875;0.453125;0.453125;0.453125;0.45703125;0.45703125;0.45703125;0.4609375;0.4609375;0.4609375;0.46484375;0.46484375;0.46875;0.46875;0.46875;0.47265625;0.47265625;0.47265625;0.4765625;0.4765625;0.4765625;0.48046875;0.48046875;0.48046875;0.484375;0.484375;0.484375;0.48828125;0.48828125;0.48828125;0.4921875;0.4921875;0.4921875;0.49609375;0.49609375;0.49609375;0.5;0.5;0.5;0.50390625;0.50390625;0.5078125;0.5078125;0.5078125;0.51171875;0.51171875;0.51171875;0.515625;0.515625;0.515625;0.51953125;0.51953125;0.51953125;0.5234375;0.5234375;0.5234375;0.52734375;0.52734375;0.52734375;0.53125;0.53125;0.53125;0.53515625;0.53515625;0.53515625;0.5390625;0.5390625;0.5390625;0.54296875;0.54296875;0.54296875;0.546875;0.546875;0.55078125;0.55078125;0.55078125;0.5546875;0.5546875;0.5546875;0.55859375;0.55859375;0.55859375;0.5625;0.5625;0.5625;0.56640625;0.56640625;0.56640625;0.5703125;0.5703125;0.5703125;0.57421875;0.57421875;0.57421875;0.578125;0.578125;0.578125;0.58203125;0.58203125;0.58203125;0.5859375;0.5859375;0.5859375;0.58984375;0.58984375;0.58984375;0.59375;0.59375;0.59375;0.59765625;0.59765625;0.59765625;0.6015625;0.6015625;0.6015625;0.60546875;0.60546875;0.60546875;0.609375;0.609375;0.609375;0.61328125;0.61328125;0.61328125;0.6171875;0.6171875;0.6171875;0.62109375;0.62109375;0.62109375;0.625;0.625;0.625;0.62890625;0.62890625;0.62890625;0.6328125;0.6328125;0.6328125;0.63671875;0.63671875;0.63671875;0.640625;0.640625;0.640625;0.64453125;0.64453125;0.64453125;0.6484375;0.6484375;0.6484375;0.65234375;0.65234375;0.65234375;0.65625;0.65625;0.65625;0.66015625;0.66015625;0.66015625;0.6640625;0.6640625;0.6640625;0.66796875;0.66796875;0.66796875;0.671875;0.671875;0.671875;0.67578125;0.67578125;0.67578125;0.6796875;0.6796875;0.6796875;0.6796875;0.68359375;0.68359375;0.68359375;0.6875;0.6875;0.6875;0.69140625;0.69140625;0.69140625;0.6953125;0.6953125;0.6953125;0.69921875;0.69921875;0.69921875;0.703125;0.703125;0.703125;0.70703125;0.70703125;0.70703125;0.70703125;0.7109375;0.7109375;0.7109375;0.71484375;0.71484375;0.71484375;0.71875;0.71875;0.71875;0.72265625;0.72265625;0.72265625;0.72265625;0.7265625;0.7265625;0.7265625;0.73046875;0.73046875;0.73046875;0.734375;0.734375;0.734375;0.73828125;0.73828125;0.73828125;0.73828125;0.7421875;0.7421875;0.7421875;0.74609375;0.74609375;0.74609375;0.75;0.75;0.75;0.75;0.75390625;0.75390625;0.75390625;0.7578125;0.7578125;0.7578125;0.7578125;0.76171875;0.76171875;0.76171875;0.765625;0.765625;0.765625;0.76953125;0.76953125;0.76953125;0.76953125;0.7734375;0.7734375;0.7734375;0.77734375;0.77734375;0.77734375;0.77734375;0.78125;0.78125;0.78125;0.78515625;0.78515625;0.78515625;0.78515625;0.7890625;0.7890625;0.7890625;0.7890625;0.79296875;0.79296875;0.79296875;0.796875;0.796875;0.796875;0.796875;0.80078125;0.80078125;0.80078125;0.8046875;0.8046875;0.8046875;0.8046875;0.80859375;0.80859375;0.80859375;0.80859375;0.8125;0.8125;0.8125;0.8125;0.81640625;0.81640625;0.81640625;0.8203125;0.8203125;0.8203125;0.8203125;0.82421875;0.82421875;0.82421875;0.82421875;0.828125;0.828125;0.828125;0.828125;0.83203125;0.83203125;0.83203125;0.83203125;0.8359375;0.8359375;0.8359375;0.8359375;0.83984375;0.83984375;0.83984375;0.83984375;0.84375;0.84375;0.84375;0.84375;0.84765625;0.84765625;0.84765625;0.84765625;0.8515625;0.8515625;0.8515625;0.8515625;0.85546875;0.85546875;0.85546875;0.85546875;0.859375;0.859375;0.859375;0.859375;0.86328125;0.86328125;0.86328125;0.86328125;0.8671875;0.8671875;0.8671875;0.8671875;0.8671875;0.87109375;0.87109375;0.87109375;0.87109375;0.875;0.875;0.875;0.875;0.87890625;0.87890625;0.87890625;0.87890625;0.87890625;0.8828125;0.8828125;0.8828125;0.8828125;0.88671875;0.88671875;0.88671875;0.88671875;0.88671875;0.890625;0.890625;0.890625;0.890625;0.890625;0.89453125;0.89453125;0.89453125;0.89453125;0.8984375;0.8984375;0.8984375;0.8984375;0.8984375;0.90234375;0.90234375;0.90234375;0.90234375;0.90234375;0.90625;0.90625;0.90625;0.90625;0.90625;0.91015625;0.91015625;0.91015625;0.91015625;0.91015625;0.9140625;0.9140625;0.9140625;0.9140625;0.9140625;0.91796875;0.91796875;0.91796875;0.91796875;0.91796875;0.91796875;0.921875;0.921875;0.921875;0.921875;0.921875;0.92578125;0.92578125;0.92578125;0.92578125;0.92578125;0.92578125;0.9296875;0.9296875;0.9296875;0.9296875;0.9296875;0.93359375;0.93359375;0.93359375;0.93359375;0.93359375;0.93359375;0.9375;0.9375;0.9375;0.9375;0.9375;0.9375;0.94140625;0.94140625;0.94140625;0.94140625;0.94140625;0.94140625;0.9453125;0.9453125;0.9453125;0.9453125;0.9453125;0.9453125;0.9453125;0.94921875;0.94921875;0.94921875;0.94921875;0.94921875;0.94921875;0.953125;0.953125;0.953125;0.953125;0.953125;0.953125;0.953125;0.95703125;0.95703125;0.95703125;0.95703125;0.95703125;0.95703125;0.95703125;0.9609375;0.9609375;0.9609375;0.9609375;0.9609375;0.9609375;0.9609375;0.9609375;0.96484375;0.96484375;0.96484375;0.96484375;0.96484375;0.96484375;0.96484375;0.96484375;0.96875;0.96875;0.96875;0.96875;0.96875;0.96875;0.96875;0.96875;0.97265625;0.97265625;0.97265625;0.97265625;0.97265625;0.97265625;0.97265625;0.97265625;0.97265625;0.9765625;0.9765625;0.9765625;0.9765625;0.9765625;0.9765625;0.9765625;0.9765625;0.9765625;0.9765625;0.98046875;0.98046875;0.98046875;0.98046875;0.98046875;0.98046875;0.98046875;0.98046875;0.98046875;0.98046875;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375]"
		    distributed_mem	    "Block RAM"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "8"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[7 15 27 39 47 47 43 47 47 36 47 39 27 15 7 18 7 7 11 7 7 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "coef_out"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mem"
		    SrcPort		    1
		    DstBlock		    "coef_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "data_delay"
		  Ports			  [1, 1]
		  Position		  [145, 17, 200, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sum_delay"
		  Ports			  [1, 1]
		  Position		  [145, 62, 200, 88]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [145, 187, 200, 213]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [295, 23, 325, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [295, 68, 325, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "coef"
		  Position		  [295, 118, 325, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [295, 193, 325, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_gen"
		  SrcPort		  1
		  DstBlock		  "coef"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_delay"
		  SrcPort		  1
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "sum_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [25, 0]
		  Branch {
		    Points		    [0, -75]
		    DstBlock		    "c_gen"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "sync_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_delay"
		  SrcPort		  1
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  DstBlock		  "data_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_core"
	      Ports		      [4, 3]
	      Position		      [270, 29, 360, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "delay 1024 in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag38"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Core"
	      MaskDescription	      "A Finite Impluse Response Filter core with complex inputs and real coefficients.  This FIR filter core does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter core with complex inputs and real coefficients.\n\nThis Finite Impluse Response Filter core is designed to be paired with a FIR Coefficient Generator \nto form a FIR filter tap.  This FIR filter core does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (use_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	      MaskPromptString	      "Tap Delay|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	      MaskStyleString	      "edit,edit,edit,edit,edit,checkbox,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "delay=&1;n_bits_d=&2;bin_pt_d=&3;n_bits_s=&4;bin_pt_s=&5;use_bram=&6;mult_latency=&7;add_latency=&8;add_bypass=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "1024|8|7|17|15|on|3|1|off"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"fir_core"
		Location		[282, 135, 1062, 821]
		Open			on
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 223, 60, 237]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "coef"
		  Position		  [30, 183, 60, 197]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 278, 60, 292]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_d"
		  Ports			  [1, 2]
		  Position		  [120, 69, 160, 111]
		  AttributesFormatString  "8_7 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag39"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|7"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_d"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_s"
		  Ports			  [1, 2]
		  Position		  [120, 209, 160, 251]
		  AttributesFormatString  "17_15 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag40"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "17|15"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_s"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_im"
		  Ports			  [1, 1]
		  Position		  [345, 175, 390, 205]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_re"
		  Ports			  [1, 1]
		  Position		  [345, 80, 390, 110]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "dout_delay"
		  Ports			  [1, 1]
		  Position		  [255, 17, 310, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_im"
		  Ports			  [3, 1]
		  Position		  [255, 164, 305, 216]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag41"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_im"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_re"
		  Ports			  [3, 1]
		  Position		  [255, 69, 305, 121]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag42"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_re"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [455, 119, 495, 161]
		  UserDataPersistent	  on
		  UserData		  "DataTag43"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskInitialization	  "ri_to_c_init(gcb);"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [255, 272, 310, 298]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "tap_delay"
		  Ports			  [1, 1]
		  Position		  [440, 14, 500, 46]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "bram depth = 1024"
		  UserDataPersistent	  on
		  UserData		  "DataTag44"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "BRAM Delay"
		  MaskDescription	  "A delay block that uses BRAM for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses BRAM for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n\nBuffer Latency (buffer_latency): The latency of the underlying storage.\n\nBuffer Latency defaults to 1 and cannot be changed via the block's dialog box.\nFuture versions may enable the setting of that parameter from the dialog.\n</pre>"
		  MaskPromptString	  "Delay Depth|Buffer Latency"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,off"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "delay_depth=&1;buffer_latency=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "1024|"
		  MaskTabNameString	  ","
		  System {
		    Name		    "tap_delay"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Constant"
		    Ports		    [0, 1]
		    Position		    [165, 133, 180, 147]
		    ShowName		    off
		    SourceBlock		    "xbsIndex_r4/Constant"
		    SourceType		    "Xilinx Constant Block Block"
		    arith_type		    "Boolean"
		    const		    "1"
		    n_bits		    "1"
		    bin_pt		    "0"
		    explicit_period	    on
		    period		    "1"
		    dsp48_infoedit	    "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		    equ			    "P=C"
		    opselect		    "C"
		    inp2		    "PCIN>>17"
		    opr			    "+"
		    inp1		    "P"
		    carry		    "CIN"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "constant"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "15,14,1,1,white,blue,0,06094819,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 15 15 0 ],[0 0 14 14 ],[0.77 0.82 0.91]);\npatch([3 1 4 1 3 7 8 9 13 10 7 5 8 5 7 10 13 9 8 7 3 ],[2 4 7 10 12 12 11 12 12 9 12 10 7 4 2 5 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 15 15 0 0 ],[0 0 14 14 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [0, 1]
		    Position		    [130, 71, 180, 89]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1022"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    off
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,a170c862,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bram"
		    Ports		    [3, 1]
		    Position		    [230, 61, 295, 159]
		    SourceBlock		    "xbsIndex_r4/Single Port RAM"
		    SourceType		    "Xilinx Single Port Random Access Memory Block"
		    depth		    "1024"
		    initVector		    "0"
		    distributed_mem	    "Block RAM"
		    write_mode		    "Read Before Write"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "spram"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "65,98,1,1,white,blue,0,90951842,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 98 98 ],[0.77 0.82 0.91]);\npatch([15 4 19 4 15 32 37 42 60 45 31 21 36 21 31 45 60 42 37 32 15 ],[24 35 50 65 76 76 71 76 76 61 75 65 50 35 25 39 24 24 29 24 24 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 98 98 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Constant"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    3
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "bram"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [555, 23, 585, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [555, 133, 585, 147]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 278, 585, 292]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "convert_im"
		  SrcPort		  1
		  Points		  [20, 0; 0, -40]
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "convert_re"
		  SrcPort		  1
		  Points		  [20, 0; 0, 35]
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "tap_delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_im"
		  SrcPort		  1
		  DstBlock		  "convert_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_re"
		  SrcPort		  1
		  DstBlock		  "convert_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  2
		  Points		  [75, 0]
		  DstBlock		  "mult_add_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  1
		  Points		  [75, 0]
		  DstBlock		  "mult_add_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "c_to_ri_s"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "coef"
		  SrcPort		  1
		  Points		  [140, 0]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "mult_add_re"
		    DstPort		    2
		  }
		  Branch {
		    DstBlock		    "mult_add_im"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  2
		  Points		  [20, 0; 0, 75]
		  DstBlock		  "mult_add_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  1
		  DstBlock		  "mult_add_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  Points		  [35, 0]
		  Branch {
		    Points		    [0, 60]
		    DstBlock		    "c_to_ri_d"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "dout_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "dout_delay"
		  SrcPort		  1
		  DstBlock		  "tap_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "data_out"
	      Position		      [435, 23, 465, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [435, 58, 465, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [435, 93, 465, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      3
	      Points		      [25, 0; 0, 15]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      2
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      1
	      Points		      [25, 0; 0, -15]
	      DstBlock		      "data_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, -15]
	      DstBlock		      "fir_coef"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "fir_coef"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "data_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, 15]
	      DstBlock		      "fir_coef"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      4
	      DstBlock		      "fir_core"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      3
	      DstBlock		      "fir_core"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      2
	      DstBlock		      "fir_core"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      1
	      DstBlock		      "fir_core"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_tap_5"
	  Ports			  [3, 3]
	  Position		  [700, 30, 800, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "delay 1024 in bram\n1024 coefs in bram"
	  UserDataPersistent	  on
	  UserData		  "DataTag45"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Tap (Real Coefficients)"
	  MaskDescription	  "A Finite Impluse Response Filter tap with real coefficients.  This FIR filter tap does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter tap with real coefficients.\n\nThis Finite Impluse Response Filter tap is designed to be daisy chained together\nto form a multi-tap FIR filter.  This FIR filter tap does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nTap Coefficiant(s) (coef): The coefficient(s) for this tap.  For a regular FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nUsually, delay==length(coef), but this is not required.  These should be specified as doubles. \nThey will be rounded and saturated according to the specified number of bits (n_bits_c) and\nbinary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	  MaskPromptString	  "Tap Delay|Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	  MaskStyleString	  "edit,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "||||||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,,,,"
	  MaskVariables		  "delay=&1;coef=&2;n_bits_c=&3;bin_pt_c=&4;n_bits_d=&5;bin_pt_d=&6;n_bits_s=&7;bin_pt_s=&8;coef_bram=&9;delay_bram=&10;mult_latency=&11;add_latency=&12;add_bypass=&13;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "1024|[-7.57186305694141e-005;-0.000227564945670749;-0.000379956430889435;-0.000532892796251757;-0.000686373742881339;-0.000840398962979647;-0.000994968139806186;-0.00115008094765919;-0.00130573705185642;-0.00146193610871559;-0.00161867776553536;-0.00177596166057639;-0.00193378742304204;-0.0020921546730598;-0.0022510630216622;-0.00241051207076825;-0.00257050141316491;-0.00273103063248833;-0.00289209930320557;-0.00305370699059638;-0.00321585325073467;-0.00337853763047057;-0.00354175966741245;-0.00370551888990871;-0.00386981481703025;-0.00403464695855241;-0.00420001481493748;-0.00436591787731722;-0.0045323556274752;-0.00469932753782952;-0.00486683307141569;-0.00503487168186923;-0.00520344281340873;-0.00537254590081901;-0.00554218036943399;-0.00571234563512023;-0.00588304110426002;-0.00605426617373492;-0.00622602023090949;-0.00639830265361464;-0.00657111281013151;-0.00674445005917552;-0.00691831374988003;-0.00709270322178053;-0.00726761780479901;-0.00744305681922785;-0.00761901957571464;-0.00779550537524631;-0.0079725135091339;-0.00815004325899737;-0.00832809389675017;-0.0085066646845843;-0.00868575487495546;-0.00886536371056795;-0.00904549042435999;-0.00922613423948933;-0.00940729436931827;-0.0095889700173997;-0.00977116037746245;-0.00995386463339719;-0.0101370819592425;-0.0103208115191707;-0.010505052467474;-0.0106898039485508;-0.0108750650968923;-0.0110608350370682;-0.0112471128837145;-0.011433897741519;-0.0116211887052088;-0.0118089848595372;-0.0119972852792704;-0.0121860890291751;-0.0123753951640054;-0.0125652027284904;-0.0127555107573218;-0.0129463182751411;-0.013137624296528;-0.0133294278259877;-0.0135217278579391;-0.013714523376703;-0.0139078133564902;-0.0141015967613896;-0.0142958725453573;-0.0144906396522044;-0.0146858970155864;-0.0148816435589916;-0.01507787819573;-0.0152745998289226;-0.0154718073514906;-0.0156694996461444;-0.0158676755853733;-0.016066334031435;-0.016265473836345;-0.0164650938418669;-0.016665192879502;-0.0168657697704791;-0.0170668233257453;-0.0172683523459559;-0.0174703556214645;-0.0176728319323143;-0.0178757800482282;-0.0180791987285998;-0.0182830867224842;-0.018487442768589;-0.0186922655952659;-0.0188975539205014;-0.0191033064519087;-0.019309521886719;-0.0195161989117731;-0.0197233362035136;-0.0199309324279764;-0.0201389862407831;-0.020347496287133;-0.0205564612017955;-0.0207658796091025;-0.0209757501229411;-0.0211860713467461;-0.0213968418734932;-0.0216080602856917;-0.0218197251553776;-0.022031835044107;-0.0222443885029495;-0.0224573840724814;-0.0226708202827797;-0.0228846956534157;-0.0230990086934489;-0.0233137579014212;-0.0235289417653507;-0.0237445587627263;-0.0239606073605024;-0.0241770860150929;-0.024393993172366;-0.0246113272676396;-0.0248290867256759;-0.025047269960676;-0.0252658753762764;-0.0254849013655432;-0.0257043463109681;-0.0259242085844644;-0.026144486547362;-0.0263651785504042;-0.026586282933743;-0.026807798026936;-0.0270297221489423;-0.0272520536081191;-0.0274747907022183;-0.0276979317183836;-0.0279214749331467;-0.0281454186124251;-0.0283697610115189;-0.0285945003751079;-0.0288196349372498;-0.029045162921377;-0.0292710825402948;-0.0294973919961793;-0.0297240894805752;-0.0299511731743939;-0.0301786412479123;-0.0304064918607708;-0.0306347231619722;-0.03086333328988;-0.0310923203722177;-0.0313216825260677;-0.0315514178578704;-0.0317815244634236;-0.0320120004278819;-0.0322428438257562;-0.0324740527209136;-0.0327056251665774;-0.0329375592053265;-0.0331698528690966;-0.0334025041791795;-0.0336355111462241;-0.0338688717702371;-0.0341025840405833;-0.0343366459359869;-0.0345710554245323;-0.0348058104636656;-0.0350409090001953;-0.0352763489702948;-0.035512128299503;-0.0357482449027266;-0.0359846966842419;-0.036221481537697;-0.036458597346114;-0.0366960419818909;-0.0369338133068049;-0.0371719091720144;-0.0374103274180622;-0.037649065874878;-0.0378881223617824;-0.038127494687489;-0.0383671806501086;-0.0386071780371525;-0.0388474846255361;-0.0390880981815831;-0.039329016461029;-0.0395702372090256;-0.0398117581601453;-0.0400535770383852;-0.0402956915571721;-0.0405380994193671;-0.0407807983172704;-0.0410237859326265;-0.0412670599366292;-0.0415106179899271;-0.0417544577426293;-0.0419985768343105;-0.0422429728940172;-0.0424876435402736;-0.0427325863810878;-0.0429777990139576;-0.0432232790258777;-0.0434690239933452;-0.0437150314823675;-0.0439612990484682;-0.0442078242366945;-0.0444546045816244;-0.0447016376073741;-0.044948920827605;-0.045196451745532;-0.0454442278539307;-0.0456922466351457;-0.0459405055610986;-0.0461890020932959;-0.046437733682838;-0.0466866977704272;-0.0469358917863767;-0.0471853131506194;-0.0474349592727168;-0.0476848275518681;-0.0479349153769199;-0.0481852201263752;-0.0484357391684033;-0.0486864698608494;-0.0489374095512447;-0.0491885555768165;-0.049439905264498;-0.0496914559309391;-0.0499432048825173;-0.0501951494153474;-0.0504472868152932;-0.0506996143579782;-0.0509521293087968;-0.0512048289229253;-0.0514577104453342;-0.0517107711107988;-0.0519640081439119;-0.0522174187590951;-0.0524710001606109;-0.0527247495425758;-0.0529786640889713;-0.0532327409736577;-0.0534869773603863;-0.0537413704028122;-0.0539959172445073;-0.0542506150189739;-0.0545054608496575;-0.0547604518499607;-0.0550155851232567;-0.0552708577629027;-0.0555262668522548;-0.0557818094646811;-0.0560374826635766;-0.0562932835023776;-0.0565492090245758;-0.0568052562637336;-0.0570614222434986;-0.0573177039776189;-0.0575740984699583;-0.0578306027145112;-0.0580872136954188;-0.0583439283869845;-0.0586007437536894;-0.0588576567502086;-0.0591146643214275;-0.0593717634024577;-0.0596289509186537;-0.0598862237856295;-0.0601435789092752;-0.0604010131857741;-0.0606585235016196;-0.0609161067336326;-0.0611737597489788;-0.0614314794051863;-0.061689262550163;-0.061947106022215;-0.0622050066500641;-0.0624629612528662;-0.0627209666402297;-0.0629790196122337;-0.0632371169594469;-0.0634952554629463;-0.0637534318943358;-0.0640116430157661;-0.064269885579953;-0.0645281563301975;-0.0647864520004051;-0.0650447693151055;-0.0653031049894726;-0.0655614557293443;-0.0658198182312429;-0.0660781891823955;-0.0663365652607541;-0.0665949431350165;-0.0668533194646474;-0.0671116908998989;-0.0673700540818315;-0.0676284056423361;-0.0678867422041547;-0.0681450603809021;-0.0684033567770881;-0.0686616279881388;-0.068919870600419;-0.0691780811912541;-0.0694362563289528;-0.0696943925728293;-0.0699524864732263;-0.0702105345715372;-0.0704685334002297;-0.0707264794828686;-0.0709843693341391;-0.0712421994598703;-0.0714999663570587;-0.0717576665138918;-0.0720152964097724;-0.0722728525153421;-0.0725303312925058;-0.0727877291944562;-0.0730450426656978;-0.073302268142072;-0.0735594020507816;-0.0738164408104159;-0.0740733808309759;-0.0743302185138991;-0.0745869502520857;-0.0748435724299231;-0.0751000814233127;-0.075356473599695;-0.0756127453180758;-0.0758688929290526;-0.0761249127748406;-0.0763808011892994;-0.0766365544979593;-0.0768921690180486;-0.0771476410585198;-0.0774029669200773;-0.0776581428952044;-0.0779131652681904;-0.0781680303151585;-0.0784227343040934;-0.0786772734948688;-0.0789316441392758;-0.0791858424810506;-0.079439864755903;-0.0796937071915449;-0.0799473660077185;-0.0802008374162255;-0.0804541176209555;-0.0807072028179151;-0.0809600891952574;-0.0812127729333109;-0.0814652502046088;-0.0817175171739195;-0.0819695699982751;-0.082221404827002;-0.0824730178017513;-0.0827244050565279;-0.0829755627177218;-0.083226486904138;-0.0834771737270274;-0.0837276192901176;-0.0839778196896433;-0.0842277710143782;-0.0844774693456655;-0.0847269107574494;-0.0849760913163068;-0.0852250070814789;-0.0854736541049025;-0.0857220284312427;-0.0859701260979243;-0.0862179431351643;-0.0864654755660042;-0.0867127194063427;-0.0869596706649676;-0.0872063253435898;-0.0874526794368749;-0.0876987289324774;-0.0879444698110729;-0.0881898980463924;-0.0884350096052548;-0.0886798004476017;-0.0889242665265297;-0.0891684037883258;-0.0894122081725004;-0.0896556756118219;-0.0898988020323511;-0.0901415833534753;-0.0903840154879432;-0.0906260943418998;-0.0908678158149208;-0.0911091758000479;-0.091350170183824;-0.0915907948463285;-0.0918310456612125;-0.0920709184957346;-0.0923104092107966;-0.0925495136609791;-0.0927882276945778;-0.0930265471536394;-0.093264467873998;-0.0935019856853112;-0.0937390964110971;-0.0939757958687704;-0.0942120798696797;-0.0944479442191439;-0.0946833847164898;-0.0949183971550889;-0.095152977322395;-0.0953871209999812;-0.095620823963578;-0.095854081983111;-0.0960868908227382;-0.0963192462408885;-0.0965511439902998;-0.0967825798180567;-0.09701354946563;-0.0972440486689138;-0.0974740731582651;-0.0977036186585424;-0.0979326808891443;-0.0981612555640488;-0.0983893383918524;-0.0986169250758091;-0.0988440113138705;-0.0990705927987245;-0.0992966652178355;-0.099522224253484;-0.0997472655828066;-0.0999717848778359;-0.100195777805541;-0.100419240027867;-0.100642167201777;-0.10086455497929;-0.101086399007525;-0.101307694928738;-0.101528438380368;-0.101748624995071;-0.101968250400767;-0.102187310220681;-0.102405800073379;-0.102623715572817;-0.102841052328376;-0.10305780594491;-0.10327397202278;-0.103489546157905;-0.103704523941797;-0.103918900961607;-0.104132672800167;-0.10434583503603;-0.104558383243515;-0.104770312992751;-0.104981619849715;-0.105192299376281;-0.105402347130257;-0.105611758665433;-0.105820529531622;-0.106028655274704;-0.10623613143667;-0.106442953555663;-0.106649117166026;-0.106854617798343;-0.107059450979484;-0.107263612232647;-0.107467097077407;-0.107669901029754;-0.107872019602144;-0.108073448303537;-0.108274182639448;-0.108474218111987;-0.108673550219905;-0.108872174458642;-0.109070086320367;-0.109267281294027;-0.109463754865391;-0.109659502517097;-0.109854519728693;-0.110048801976688;-0.110242344734596;-0.110435143472979;-0.110627193659497;-0.110818490758952;-0.111009030233334;-0.111198807541867;-0.111387818141058;-0.111576057484741;-0.111763521024123;-0.111950204207832;-0.112136102481964;-0.11232121129013;-0.112505526073501;-0.112689042270857;-0.112871755318635;-0.113053660650972;-0.113234753699757;-0.113415029894677;-0.113594484663264;-0.113773113430942;-0.113950911621077;-0.114127874655023;-0.11430399795217;-0.114479276929993;-0.1146537070041;-0.114827283588279;-0.115000002094548;-0.115171857933203;-0.115342846512864;-0.115512963240528;-0.115682203521616;-0.115850562760017;-0.116018036358147;-0.116184619716987;-0.116350308236141;-0.116515097313878;-0.116678982347186;-0.11684195873182;-0.117004021862351;-0.117165167132216;-0.117325389933767;-0.117484685658321;-0.117643049696209;-0.117800477436828;-0.117956964268688;-0.118112505579464;-0.118267096756046;-0.118420733184589;-0.118573410250562;-0.118725123338799;-0.118875867833551;-0.119025639118535;-0.119174432576984;-0.1193222435917;-0.1194690675451;-0.119614899819273;-0.119759735796028;-0.119903570856942;-0.120046400383417;-0.120188219756726;-0.120329024358068;-0.120468809568615;-0.120607570769567;-0.120745303342203;-0.120882002667932;-0.121017664128342;-0.121152283105255;-0.12128585498078;-0.121418375137358;-0.121549838957822;-0.121680241825444;-0.121809579123986;-0.121937846237758;-0.122065038551663;-0.122191151451255;-0.122316180322788;-0.122440120553267;-0.122562967530506;-0.122684716643174;-0.122805363280853;-0.122924902834086;-0.123043330694433;-0.123160642254522;-0.123276832908101;-0.123391898050093;-0.12350583307665;-0.1236186333852;-0.123730294374506;-0.123840811444718;-0.123950179997422;-0.124058395435699;-0.124165453164175;-0.124271348589074;-0.124376077118273;-0.124479634161354;-0.124582015129658;-0.12468321543634;-0.124783230496419;-0.124882055726836;-0.124979686546505;-0.125076118376365;-0.12517134663944;-0.125265366760885;-0.125358174168047;-0.125449764290513;-0.12554013256017;-0.125629274411252;-0.1257171852804;-0.125803860606714;-0.125889295831806;-0.125973486399857;-0.126056427757669;-0.12613811535472;-0.126218544643217;-0.126297711078153;-0.126375610117361;-0.126452237221565;-0.126527587854441;-0.126601657482665;-0.12667444157597;-0.126745935607204;-0.126816135052377;-0.126885035390726;-0.12695263210476;-0.12701892068032;-0.127083896606635;-0.127147555376371;-0.127209892485693;-0.127270903434314;-0.127330583725555;-0.127388928866395;-0.127445934367531;-0.127501595743429;-0.127555908512382;-0.127608868196561;-0.127660470322078;-0.127710710419032;-0.12775958402157;-0.127807086667941;-0.127853213900551;-0.127897961266018;-0.127941324315228;-0.127983298603389;-0.128023879690088;-0.128063063139347;-0.128100844519676;-0.12813721940413;-0.128172183370362;-0.128205732000685;-0.12823786088212;-0.128268565606454;-0.1282978417703;-0.128325684975145;-0.128352090827411;-0.12837705493851;-0.128400572924896;-0.128422640408125;-0.128443253014909;-0.128462406377172;-0.128480096132103;-0.128496317922217;-0.128511067395406;-0.128524340204996;-0.128536132009803;-0.128546438474192;-0.128555255268125;-0.128562578067225;-0.128568402552826;-0.128572724412033;-0.128575539337773;-0.128576843028855;-0.128576631190026;-0.128574899532022;-0.128571643771628;-0.128566859631735;-0.12856054284139;-0.128552689135858;-0.128543294256673;-0.128532353951698;-0.128519863975179;-0.128505820087798;-0.128490218056735;-0.128473053655717;-0.128454322665079;-0.128434020871817;-0.128412144069646;-0.128388688059053;-0.128363648647355;-0.128337021648755;-0.128308802884396;-0.128278988182416;-0.128247573378009;-0.128214554313474;-0.128179926838275;-0.128143686809098;-0.1281058300899;-0.128066352551973;-0.128025250073994;-0.127982518542083;-0.127938153849857;-0.12789215189849;-0.127844508596762;-0.12779521986112;-0.127744281615732;-0.127691689792542;-0.127637440331325;-0.127581529179746;-0.12752395229341;-0.127464705635923;-0.127403785178944;-0.127341186902242;-0.127276906793752;-0.127210940849628;-0.1271432850743;-0.12707393548053;-0.127002888089467;-0.126930138930701;-0.126855684042321;-0.126779519470967;-0.126701641271888;-0.126622045508995;-0.126540728254919;-0.126457685591063;-0.126372913607659;-0.126286408403824;-0.126198166087613;-0.126108182776074;-0.126016454595306;-0.125922977680511;-0.125827748176048;-0.125730762235494;-0.12563201602169;-0.125531505706804;-0.12542922747238;-0.125325177509398;-0.125219352018322;-0.125111747209161;-0.125002359301522;-0.12489118452466;-0.124778219117541;-0.124663459328888;-0.124546901417241;-0.124428541651009;-0.124308376308528;-0.124186401678108;-0.124062614058095;-0.12393700975692;-0.123809585093158;-0.123680336395576;-0.123549260003193;-0.12341635226533;-0.123281609541668;-0.123145028202296;-0.123006604627771;-0.122866335209169;-0.122724216348138;-0.122580244456954;-0.122434415958572;-0.122286727286684;-0.122137174885766;-0.121985755211139;-0.121832464729017;-0.12167729991656;-0.121520257261934;-0.121361333264356;-0.121200524434153;-0.121037827292813;-0.120873238373037;-0.120706754218796;-0.120538371385378;-0.120368086439447;-0.120195895959092;-0.12002179653388;-0.119845784764912;-0.119667857264872;-0.11948801065808;-0.119306241580546;-0.119122546680023;-0.118936922616057;-0.118749366060041;-0.118559873695267;-0.118368442216977;-0.118175068332418;-0.117979748760891;-0.117782480233803;-0.117583259494722;-0.117382083299426;-0.117178948415955;-0.116973851624663;-0.116766789718271;-0.116557759501917;-0.116346757793206;-0.116133781422266;-0.115918827231792;-0.115701892077107;-0.115482972826202;-0.115262066359796;-0.115039169571384;-0.114814279367284;-0.114587392666694;-0.11435850640174;-0.114127617517525;-0.113894722972181;-0.11365981973692;-0.113422904796084;-0.113183975147195;-0.112943027801003;-0.112700059781542;-0.112455068126173;-0.112208049885639;-0.111959002124111;-0.111707921919243;-0.111454806362214;-0.111199652557785;-0.110942457624343;-0.110683218693955;-0.110421932912413;-0.110158597439284;-0.109893209447962;-0.109625766125715;-0.109356264673732;-0.109084702307174;-0.108811076255224;-0.108535383761131;-0.108257622082262;-0.107977788490152;-0.107695880270546;-0.107411894723454;-0.107125829163193;-0.10683768091844;-0.106547447332278;-0.106255125762242;-0.105960713580369;-0.105664208173243;-0.105365606942047;-0.105064907302604;-0.104762106685429;-0.104457202535775;-0.104150192313679;-0.103841073494009;-0.103529843566511;-0.103216500035856;-0.102901040421687;-0.102583462258662;-0.102263763096507;-0.101941940500055;-0.101617992049296;-0.101291915339421;-0.100963707980872;-0.100633367599381;-0.100300891836022;-0.0999662783472516;-0.0996295248049575;-0.0992906288965024;-0.0989495883247697;-0.0986064008082076;-0.0982610640808748;-0.0979135758924848;-0.0975639340084509;-0.0972121362099301;-0.0968581802938682;-0.0965020640730433;-0.0961437853761105;-0.0957833420476455;-0.0954207319481889;-0.0950559529542894;-0.0946890029585477;-0.09431987986966;-0.0939485816124612;-0.0935751061279683;-0.0931994513734234;-0.0928216153223364;-0.0924415959645284;-0.0920593913061736;-0.0916749993698427;-0.0912884181945446;-0.0908996458357691;-0.0905086803655288;-0.0901155198724016;-0.0897201624615717;-0.0893226062548723;-0.0889228493908263;-0.0885208900246886;-0.0881167263284868;-0.0877103564910625;-0.0873017787181127;-0.0868909912322302;-0.0864779922729447;-0.0860627800967632;-0.0856453529772106;-0.0852257092048699;-0.0848038470874227;-0.0843797649496887;-0.0839534611336661;-0.0835249339985711;-0.0830941819208773;-0.0826612032943558;-0.0822259965301136;-0.0817885600566336;-0.0813488923198131;-0.0809069917830028;-0.0804628569270452;-0.0800164862503141;-0.0795678782687517;-0.0791170315159078;-0.0786639445429775;-0.0782086159188393;-0.0777510442300928;-0.0772912280810962;-0.0768291660940042;-0.0763648569088048;-0.0758982991833568;-0.0754294915934268;-0.0749584328327259;-0.0744851216129466;-0.0740095566637989;-0.0735317367330474;-0.0730516605865468;-0.0725693270082785;-0.0720847348003859;-0.071597882783211;-0.071108769795329;-0.0706173946935843;-0.0701237563531258;-0.0696278536674418;-0.0691296855483946;-0.0686292509262558;-0.0681265487497408;-0.067621577986043;-0.0671143376208679;-0.0666048266584676;-0.0660930441216749;-0.0655789890519362;-0.0650626605093458;-0.0645440575726791;-0.064023179339426;-0.0635000249258237;-0.0629745934668896;-0.0624468841164546;-0.0619168960471949;-0.0613846284506648;-0.0608500805373288;-0.0603132515365938;-0.0597741406968409;-0.0592327472854569;-0.058689070588866;-0.0581431099125613;-0.0575948645811356;-0.0570443339383125;-0.0564915173469777;-0.0559364141892089;-0.0553790238663066;-0.0548193457988244;-0.0542573794265993;-0.0536931242087811;-0.0531265796238626;-0.0525577451697087;-0.0519866203635867;-0.0514132047421944;-0.0508374978616896;-0.0502594992977191;-0.0496792086454471;-0.0490966255195838;-0.0485117495544134;-0.0479245804038229;-0.047335117741329;-0.0467433612601067;-0.0461493106730163;-0.0455529657126312;-0.0449543261312647;-0.0443533917009969;-0.0437501622137022;-0.0431446374810749;-0.0425368173346564;-0.0419267016258609;-0.0413142902260021;-0.0406995830263182;-0.0400825799379981;-0.0394632808922069;-0.0388416858401109;-0.0382177947529027;-0.0375916076218262;-0.0369631244582015;-0.0363323452934489;-0.0356992701791137;-0.0350638991868898;-0.0344262324086442;-0.0337862699564402;-0.0331440119625613;-0.0324994585795345;-0.031852609980153;-0.0312034663574997;-0.0305520279249694;-0.0298982949162921;-0.0292422675855545;-0.0285839462072226;-0.0279233310761635;-0.0272604225076676;-0.0265952208374693;-0.0259277264217688;-0.0252579396372536;-0.0245858608811188;-0.0239114905710882;-0.0232348291454347;-0.0225558770630009;-0.0218746348032188;-0.0211911028661302;-0.0205052817724058;-0.0198171720633655;-0.0191267743009973;-0.0184340890679761;-0.0177391169676835;-0.0170418586242254;-0.0163423146824514;-0.0156404858079725;-0.0149363726871797;-0.0142299760272615;-0.0135212965562215;-0.0128103350228962;-0.0120970921969721;-0.0113815688690025;-0.0106637658504249;-0.00994368397357705;-0.00922132409171369;-0.00849668707902262;-0.00776977383064064;-0.00704058526266978;-0.00630912231219222;-0.00557538593728603;-0.00483937711704019;-0.00410109685156988;-0.00336054616203061;-0.00261772609063303;-0.00187263770065757;-0.00112528207646786;-0.000375660323525046]|9|8|8|7|17|15|on|on|3|1|off"
	  MaskTabNameString	  ",,,,,,,,,,,,"
	  System {
	    Name		    "fir_tap_5"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_in"
	      Position		      [30, 23, 60, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 58, 60, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 93, 60, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_coef"
	      Ports		      [3, 4]
	      Position		      [115, 29, 205, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "1024 coefs in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag46"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Coefficient Generator"
	      MaskDescription	      "A Finite Impluse Response filter coefficient generator.  This FIR filter coefficient generator outputs real coefficients.  It can output one coefficient or cycle through a vector of coefficients for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response filter coefficient generator.\nThis FIR filter coefficient generator outputs real coefficients.\nIt can output one coefficient or cycle through a vector of coefficients for WOLA\n(Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Coefficiant(s) (coef): The coefficient(s) to output.  For a \"regular\" FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nThese should be specified as doubles.   They will be rounded and saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nUse BRAM for Coefficients (use_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n</pre>"
	      MaskPromptString	      "Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Use BRAM for Coefficients"
	      MaskStyleString	      "edit,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "coef=&1;n_bits_c=&2;bin_pt_c=&3;use_bram=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "[-7.57186305694141e-005;-0.000227564945670749;-0.000379956430889435;-0.000532892796251757;-0.000686373742881339;-0.000840398962979647;-0.000994968139806186;-0.00115008094765919;-0.00130573705185642;-0.00146193610871559;-0.00161867776553536;-0.00177596166057639;-0.00193378742304204;-0.0020921546730598;-0.0022510630216622;-0.00241051207076825;-0.00257050141316491;-0.00273103063248833;-0.00289209930320557;-0.00305370699059638;-0.00321585325073467;-0.00337853763047057;-0.00354175966741245;-0.00370551888990871;-0.00386981481703025;-0.00403464695855241;-0.00420001481493748;-0.00436591787731722;-0.0045323556274752;-0.00469932753782952;-0.00486683307141569;-0.00503487168186923;-0.00520344281340873;-0.00537254590081901;-0.00554218036943399;-0.00571234563512023;-0.00588304110426002;-0.00605426617373492;-0.00622602023090949;-0.00639830265361464;-0.00657111281013151;-0.00674445005917552;-0.00691831374988003;-0.00709270322178053;-0.00726761780479901;-0.00744305681922785;-0.00761901957571464;-0.00779550537524631;-0.0079725135091339;-0.00815004325899737;-0.00832809389675017;-0.0085066646845843;-0.00868575487495546;-0.00886536371056795;-0.00904549042435999;-0.00922613423948933;-0.00940729436931827;-0.0095889700173997;-0.00977116037746245;-0.00995386463339719;-0.0101370819592425;-0.0103208115191707;-0.010505052467474;-0.0106898039485508;-0.0108750650968923;-0.0110608350370682;-0.0112471128837145;-0.011433897741519;-0.0116211887052088;-0.0118089848595372;-0.0119972852792704;-0.0121860890291751;-0.0123753951640054;-0.0125652027284904;-0.0127555107573218;-0.0129463182751411;-0.013137624296528;-0.0133294278259877;-0.0135217278579391;-0.013714523376703;-0.0139078133564902;-0.0141015967613896;-0.0142958725453573;-0.0144906396522044;-0.0146858970155864;-0.0148816435589916;-0.01507787819573;-0.0152745998289226;-0.0154718073514906;-0.0156694996461444;-0.0158676755853733;-0.016066334031435;-0.016265473836345;-0.0164650938418669;-0.016665192879502;-0.0168657697704791;-0.0170668233257453;-0.0172683523459559;-0.0174703556214645;-0.0176728319323143;-0.0178757800482282;-0.0180791987285998;-0.0182830867224842;-0.018487442768589;-0.0186922655952659;-0.0188975539205014;-0.0191033064519087;-0.019309521886719;-0.0195161989117731;-0.0197233362035136;-0.0199309324279764;-0.0201389862407831;-0.020347496287133;-0.0205564612017955;-0.0207658796091025;-0.0209757501229411;-0.0211860713467461;-0.0213968418734932;-0.0216080602856917;-0.0218197251553776;-0.022031835044107;-0.0222443885029495;-0.0224573840724814;-0.0226708202827797;-0.0228846956534157;-0.0230990086934489;-0.0233137579014212;-0.0235289417653507;-0.0237445587627263;-0.0239606073605024;-0.0241770860150929;-0.024393993172366;-0.0246113272676396;-0.0248290867256759;-0.025047269960676;-0.0252658753762764;-0.0254849013655432;-0.0257043463109681;-0.0259242085844644;-0.026144486547362;-0.0263651785504042;-0.026586282933743;-0.026807798026936;-0.0270297221489423;-0.0272520536081191;-0.0274747907022183;-0.0276979317183836;-0.0279214749331467;-0.0281454186124251;-0.0283697610115189;-0.0285945003751079;-0.0288196349372498;-0.029045162921377;-0.0292710825402948;-0.0294973919961793;-0.0297240894805752;-0.0299511731743939;-0.0301786412479123;-0.0304064918607708;-0.0306347231619722;-0.03086333328988;-0.0310923203722177;-0.0313216825260677;-0.0315514178578704;-0.0317815244634236;-0.0320120004278819;-0.0322428438257562;-0.0324740527209136;-0.0327056251665774;-0.0329375592053265;-0.0331698528690966;-0.0334025041791795;-0.0336355111462241;-0.0338688717702371;-0.0341025840405833;-0.0343366459359869;-0.0345710554245323;-0.0348058104636656;-0.0350409090001953;-0.0352763489702948;-0.035512128299503;-0.0357482449027266;-0.0359846966842419;-0.036221481537697;-0.036458597346114;-0.0366960419818909;-0.0369338133068049;-0.0371719091720144;-0.0374103274180622;-0.037649065874878;-0.0378881223617824;-0.038127494687489;-0.0383671806501086;-0.0386071780371525;-0.0388474846255361;-0.0390880981815831;-0.039329016461029;-0.0395702372090256;-0.0398117581601453;-0.0400535770383852;-0.0402956915571721;-0.0405380994193671;-0.0407807983172704;-0.0410237859326265;-0.0412670599366292;-0.0415106179899271;-0.0417544577426293;-0.0419985768343105;-0.0422429728940172;-0.0424876435402736;-0.0427325863810878;-0.0429777990139576;-0.0432232790258777;-0.0434690239933452;-0.0437150314823675;-0.0439612990484682;-0.0442078242366945;-0.0444546045816244;-0.0447016376073741;-0.044948920827605;-0.045196451745532;-0.0454442278539307;-0.0456922466351457;-0.0459405055610986;-0.0461890020932959;-0.046437733682838;-0.0466866977704272;-0.0469358917863767;-0.0471853131506194;-0.0474349592727168;-0.0476848275518681;-0.0479349153769199;-0.0481852201263752;-0.0484357391684033;-0.0486864698608494;-0.0489374095512447;-0.0491885555768165;-0.049439905264498;-0.0496914559309391;-0.0499432048825173;-0.0501951494153474;-0.0504472868152932;-0.0506996143579782;-0.0509521293087968;-0.0512048289229253;-0.0514577104453342;-0.0517107711107988;-0.0519640081439119;-0.0522174187590951;-0.0524710001606109;-0.0527247495425758;-0.0529786640889713;-0.0532327409736577;-0.0534869773603863;-0.0537413704028122;-0.0539959172445073;-0.0542506150189739;-0.0545054608496575;-0.0547604518499607;-0.0550155851232567;-0.0552708577629027;-0.0555262668522548;-0.0557818094646811;-0.0560374826635766;-0.0562932835023776;-0.0565492090245758;-0.0568052562637336;-0.0570614222434986;-0.0573177039776189;-0.0575740984699583;-0.0578306027145112;-0.0580872136954188;-0.0583439283869845;-0.0586007437536894;-0.0588576567502086;-0.0591146643214275;-0.0593717634024577;-0.0596289509186537;-0.0598862237856295;-0.0601435789092752;-0.0604010131857741;-0.0606585235016196;-0.0609161067336326;-0.0611737597489788;-0.0614314794051863;-0.061689262550163;-0.061947106022215;-0.0622050066500641;-0.0624629612528662;-0.0627209666402297;-0.0629790196122337;-0.0632371169594469;-0.0634952554629463;-0.0637534318943358;-0.0640116430157661;-0.064269885579953;-0.0645281563301975;-0.0647864520004051;-0.0650447693151055;-0.0653031049894726;-0.0655614557293443;-0.0658198182312429;-0.0660781891823955;-0.0663365652607541;-0.0665949431350165;-0.0668533194646474;-0.0671116908998989;-0.0673700540818315;-0.0676284056423361;-0.0678867422041547;-0.0681450603809021;-0.0684033567770881;-0.0686616279881388;-0.068919870600419;-0.0691780811912541;-0.0694362563289528;-0.0696943925728293;-0.0699524864732263;-0.0702105345715372;-0.0704685334002297;-0.0707264794828686;-0.0709843693341391;-0.0712421994598703;-0.0714999663570587;-0.0717576665138918;-0.0720152964097724;-0.0722728525153421;-0.0725303312925058;-0.0727877291944562;-0.0730450426656978;-0.073302268142072;-0.0735594020507816;-0.0738164408104159;-0.0740733808309759;-0.0743302185138991;-0.0745869502520857;-0.0748435724299231;-0.0751000814233127;-0.075356473599695;-0.0756127453180758;-0.0758688929290526;-0.0761249127748406;-0.0763808011892994;-0.0766365544979593;-0.0768921690180486;-0.0771476410585198;-0.0774029669200773;-0.0776581428952044;-0.0779131652681904;-0.0781680303151585;-0.0784227343040934;-0.0786772734948688;-0.0789316441392758;-0.0791858424810506;-0.079439864755903;-0.0796937071915449;-0.0799473660077185;-0.0802008374162255;-0.0804541176209555;-0.0807072028179151;-0.0809600891952574;-0.0812127729333109;-0.0814652502046088;-0.0817175171739195;-0.0819695699982751;-0.082221404827002;-0.0824730178017513;-0.0827244050565279;-0.0829755627177218;-0.083226486904138;-0.0834771737270274;-0.0837276192901176;-0.0839778196896433;-0.0842277710143782;-0.0844774693456655;-0.0847269107574494;-0.0849760913163068;-0.0852250070814789;-0.0854736541049025;-0.0857220284312427;-0.0859701260979243;-0.0862179431351643;-0.0864654755660042;-0.0867127194063427;-0.0869596706649676;-0.0872063253435898;-0.0874526794368749;-0.0876987289324774;-0.0879444698110729;-0.0881898980463924;-0.0884350096052548;-0.0886798004476017;-0.0889242665265297;-0.0891684037883258;-0.0894122081725004;-0.0896556756118219;-0.0898988020323511;-0.0901415833534753;-0.0903840154879432;-0.0906260943418998;-0.0908678158149208;-0.0911091758000479;-0.091350170183824;-0.0915907948463285;-0.0918310456612125;-0.0920709184957346;-0.0923104092107966;-0.0925495136609791;-0.0927882276945778;-0.0930265471536394;-0.093264467873998;-0.0935019856853112;-0.0937390964110971;-0.0939757958687704;-0.0942120798696797;-0.0944479442191439;-0.0946833847164898;-0.0949183971550889;-0.095152977322395;-0.0953871209999812;-0.095620823963578;-0.095854081983111;-0.0960868908227382;-0.0963192462408885;-0.0965511439902998;-0.0967825798180567;-0.09701354946563;-0.0972440486689138;-0.0974740731582651;-0.0977036186585424;-0.0979326808891443;-0.0981612555640488;-0.0983893383918524;-0.0986169250758091;-0.0988440113138705;-0.0990705927987245;-0.0992966652178355;-0.099522224253484;-0.0997472655828066;-0.0999717848778359;-0.100195777805541;-0.100419240027867;-0.100642167201777;-0.10086455497929;-0.101086399007525;-0.101307694928738;-0.101528438380368;-0.101748624995071;-0.101968250400767;-0.102187310220681;-0.102405800073379;-0.102623715572817;-0.102841052328376;-0.10305780594491;-0.10327397202278;-0.103489546157905;-0.103704523941797;-0.103918900961607;-0.104132672800167;-0.10434583503603;-0.104558383243515;-0.104770312992751;-0.104981619849715;-0.105192299376281;-0.105402347130257;-0.105611758665433;-0.105820529531622;-0.106028655274704;-0.10623613143667;-0.106442953555663;-0.106649117166026;-0.106854617798343;-0.107059450979484;-0.107263612232647;-0.107467097077407;-0.107669901029754;-0.107872019602144;-0.108073448303537;-0.108274182639448;-0.108474218111987;-0.108673550219905;-0.108872174458642;-0.109070086320367;-0.109267281294027;-0.109463754865391;-0.109659502517097;-0.109854519728693;-0.110048801976688;-0.110242344734596;-0.110435143472979;-0.110627193659497;-0.110818490758952;-0.111009030233334;-0.111198807541867;-0.111387818141058;-0.111576057484741;-0.111763521024123;-0.111950204207832;-0.112136102481964;-0.11232121129013;-0.112505526073501;-0.112689042270857;-0.112871755318635;-0.113053660650972;-0.113234753699757;-0.113415029894677;-0.113594484663264;-0.113773113430942;-0.113950911621077;-0.114127874655023;-0.11430399795217;-0.114479276929993;-0.1146537070041;-0.114827283588279;-0.115000002094548;-0.115171857933203;-0.115342846512864;-0.115512963240528;-0.115682203521616;-0.115850562760017;-0.116018036358147;-0.116184619716987;-0.116350308236141;-0.116515097313878;-0.116678982347186;-0.11684195873182;-0.117004021862351;-0.117165167132216;-0.117325389933767;-0.117484685658321;-0.117643049696209;-0.117800477436828;-0.117956964268688;-0.118112505579464;-0.118267096756046;-0.118420733184589;-0.118573410250562;-0.118725123338799;-0.118875867833551;-0.119025639118535;-0.119174432576984;-0.1193222435917;-0.1194690675451;-0.119614899819273;-0.119759735796028;-0.119903570856942;-0.120046400383417;-0.120188219756726;-0.120329024358068;-0.120468809568615;-0.120607570769567;-0.120745303342203;-0.120882002667932;-0.121017664128342;-0.121152283105255;-0.12128585498078;-0.121418375137358;-0.121549838957822;-0.121680241825444;-0.121809579123986;-0.121937846237758;-0.122065038551663;-0.122191151451255;-0.122316180322788;-0.122440120553267;-0.122562967530506;-0.122684716643174;-0.122805363280853;-0.122924902834086;-0.123043330694433;-0.123160642254522;-0.123276832908101;-0.123391898050093;-0.12350583307665;-0.1236186333852;-0.123730294374506;-0.123840811444718;-0.123950179997422;-0.124058395435699;-0.124165453164175;-0.124271348589074;-0.124376077118273;-0.124479634161354;-0.124582015129658;-0.12468321543634;-0.124783230496419;-0.124882055726836;-0.124979686546505;-0.125076118376365;-0.12517134663944;-0.125265366760885;-0.125358174168047;-0.125449764290513;-0.12554013256017;-0.125629274411252;-0.1257171852804;-0.125803860606714;-0.125889295831806;-0.125973486399857;-0.126056427757669;-0.12613811535472;-0.126218544643217;-0.126297711078153;-0.126375610117361;-0.126452237221565;-0.126527587854441;-0.126601657482665;-0.12667444157597;-0.126745935607204;-0.126816135052377;-0.126885035390726;-0.12695263210476;-0.12701892068032;-0.127083896606635;-0.127147555376371;-0.127209892485693;-0.127270903434314;-0.127330583725555;-0.127388928866395;-0.127445934367531;-0.127501595743429;-0.127555908512382;-0.127608868196561;-0.127660470322078;-0.127710710419032;-0.12775958402157;-0.127807086667941;-0.127853213900551;-0.127897961266018;-0.127941324315228;-0.127983298603389;-0.128023879690088;-0.128063063139347;-0.128100844519676;-0.12813721940413;-0.128172183370362;-0.128205732000685;-0.12823786088212;-0.128268565606454;-0.1282978417703;-0.128325684975145;-0.128352090827411;-0.12837705493851;-0.128400572924896;-0.128422640408125;-0.128443253014909;-0.128462406377172;-0.128480096132103;-0.128496317922217;-0.128511067395406;-0.128524340204996;-0.128536132009803;-0.128546438474192;-0.128555255268125;-0.128562578067225;-0.128568402552826;-0.128572724412033;-0.128575539337773;-0.128576843028855;-0.128576631190026;-0.128574899532022;-0.128571643771628;-0.128566859631735;-0.12856054284139;-0.128552689135858;-0.128543294256673;-0.128532353951698;-0.128519863975179;-0.128505820087798;-0.128490218056735;-0.128473053655717;-0.128454322665079;-0.128434020871817;-0.128412144069646;-0.128388688059053;-0.128363648647355;-0.128337021648755;-0.128308802884396;-0.128278988182416;-0.128247573378009;-0.128214554313474;-0.128179926838275;-0.128143686809098;-0.1281058300899;-0.128066352551973;-0.128025250073994;-0.127982518542083;-0.127938153849857;-0.12789215189849;-0.127844508596762;-0.12779521986112;-0.127744281615732;-0.127691689792542;-0.127637440331325;-0.127581529179746;-0.12752395229341;-0.127464705635923;-0.127403785178944;-0.127341186902242;-0.127276906793752;-0.127210940849628;-0.1271432850743;-0.12707393548053;-0.127002888089467;-0.126930138930701;-0.126855684042321;-0.126779519470967;-0.126701641271888;-0.126622045508995;-0.126540728254919;-0.126457685591063;-0.126372913607659;-0.126286408403824;-0.126198166087613;-0.126108182776074;-0.126016454595306;-0.125922977680511;-0.125827748176048;-0.125730762235494;-0.12563201602169;-0.125531505706804;-0.12542922747238;-0.125325177509398;-0.125219352018322;-0.125111747209161;-0.125002359301522;-0.12489118452466;-0.124778219117541;-0.124663459328888;-0.124546901417241;-0.124428541651009;-0.124308376308528;-0.124186401678108;-0.124062614058095;-0.12393700975692;-0.123809585093158;-0.123680336395576;-0.123549260003193;-0.12341635226533;-0.123281609541668;-0.123145028202296;-0.123006604627771;-0.122866335209169;-0.122724216348138;-0.122580244456954;-0.122434415958572;-0.122286727286684;-0.122137174885766;-0.121985755211139;-0.121832464729017;-0.12167729991656;-0.121520257261934;-0.121361333264356;-0.121200524434153;-0.121037827292813;-0.120873238373037;-0.120706754218796;-0.120538371385378;-0.120368086439447;-0.120195895959092;-0.12002179653388;-0.119845784764912;-0.119667857264872;-0.11948801065808;-0.119306241580546;-0.119122546680023;-0.118936922616057;-0.118749366060041;-0.118559873695267;-0.118368442216977;-0.118175068332418;-0.117979748760891;-0.117782480233803;-0.117583259494722;-0.117382083299426;-0.117178948415955;-0.116973851624663;-0.116766789718271;-0.116557759501917;-0.116346757793206;-0.116133781422266;-0.115918827231792;-0.115701892077107;-0.115482972826202;-0.115262066359796;-0.115039169571384;-0.114814279367284;-0.114587392666694;-0.11435850640174;-0.114127617517525;-0.113894722972181;-0.11365981973692;-0.113422904796084;-0.113183975147195;-0.112943027801003;-0.112700059781542;-0.112455068126173;-0.112208049885639;-0.111959002124111;-0.111707921919243;-0.111454806362214;-0.111199652557785;-0.110942457624343;-0.110683218693955;-0.110421932912413;-0.110158597439284;-0.109893209447962;-0.109625766125715;-0.109356264673732;-0.109084702307174;-0.108811076255224;-0.108535383761131;-0.108257622082262;-0.107977788490152;-0.107695880270546;-0.107411894723454;-0.107125829163193;-0.10683768091844;-0.106547447332278;-0.106255125762242;-0.105960713580369;-0.105664208173243;-0.105365606942047;-0.105064907302604;-0.104762106685429;-0.104457202535775;-0.104150192313679;-0.103841073494009;-0.103529843566511;-0.103216500035856;-0.102901040421687;-0.102583462258662;-0.102263763096507;-0.101941940500055;-0.101617992049296;-0.101291915339421;-0.100963707980872;-0.100633367599381;-0.100300891836022;-0.0999662783472516;-0.0996295248049575;-0.0992906288965024;-0.0989495883247697;-0.0986064008082076;-0.0982610640808748;-0.0979135758924848;-0.0975639340084509;-0.0972121362099301;-0.0968581802938682;-0.0965020640730433;-0.0961437853761105;-0.0957833420476455;-0.0954207319481889;-0.0950559529542894;-0.0946890029585477;-0.09431987986966;-0.0939485816124612;-0.0935751061279683;-0.0931994513734234;-0.0928216153223364;-0.0924415959645284;-0.0920593913061736;-0.0916749993698427;-0.0912884181945446;-0.0908996458357691;-0.0905086803655288;-0.0901155198724016;-0.0897201624615717;-0.0893226062548723;-0.0889228493908263;-0.0885208900246886;-0.0881167263284868;-0.0877103564910625;-0.0873017787181127;-0.0868909912322302;-0.0864779922729447;-0.0860627800967632;-0.0856453529772106;-0.0852257092048699;-0.0848038470874227;-0.0843797649496887;-0.0839534611336661;-0.0835249339985711;-0.0830941819208773;-0.0826612032943558;-0.0822259965301136;-0.0817885600566336;-0.0813488923198131;-0.0809069917830028;-0.0804628569270452;-0.0800164862503141;-0.0795678782687517;-0.0791170315159078;-0.0786639445429775;-0.0782086159188393;-0.0777510442300928;-0.0772912280810962;-0.0768291660940042;-0.0763648569088048;-0.0758982991833568;-0.0754294915934268;-0.0749584328327259;-0.0744851216129466;-0.0740095566637989;-0.0735317367330474;-0.0730516605865468;-0.0725693270082785;-0.0720847348003859;-0.071597882783211;-0.071108769795329;-0.0706173946935843;-0.0701237563531258;-0.0696278536674418;-0.0691296855483946;-0.0686292509262558;-0.0681265487497408;-0.067621577986043;-0.0671143376208679;-0.0666048266584676;-0.0660930441216749;-0.0655789890519362;-0.0650626605093458;-0.0645440575726791;-0.064023179339426;-0.0635000249258237;-0.0629745934668896;-0.0624468841164546;-0.0619168960471949;-0.0613846284506648;-0.0608500805373288;-0.0603132515365938;-0.0597741406968409;-0.0592327472854569;-0.058689070588866;-0.0581431099125613;-0.0575948645811356;-0.0570443339383125;-0.0564915173469777;-0.0559364141892089;-0.0553790238663066;-0.0548193457988244;-0.0542573794265993;-0.0536931242087811;-0.0531265796238626;-0.0525577451697087;-0.0519866203635867;-0.0514132047421944;-0.0508374978616896;-0.0502594992977191;-0.0496792086454471;-0.0490966255195838;-0.0485117495544134;-0.0479245804038229;-0.047335117741329;-0.0467433612601067;-0.0461493106730163;-0.0455529657126312;-0.0449543261312647;-0.0443533917009969;-0.0437501622137022;-0.0431446374810749;-0.0425368173346564;-0.0419267016258609;-0.0413142902260021;-0.0406995830263182;-0.0400825799379981;-0.0394632808922069;-0.0388416858401109;-0.0382177947529027;-0.0375916076218262;-0.0369631244582015;-0.0363323452934489;-0.0356992701791137;-0.0350638991868898;-0.0344262324086442;-0.0337862699564402;-0.0331440119625613;-0.0324994585795345;-0.031852609980153;-0.0312034663574997;-0.0305520279249694;-0.0298982949162921;-0.0292422675855545;-0.0285839462072226;-0.0279233310761635;-0.0272604225076676;-0.0265952208374693;-0.0259277264217688;-0.0252579396372536;-0.0245858608811188;-0.0239114905710882;-0.0232348291454347;-0.0225558770630009;-0.0218746348032188;-0.0211911028661302;-0.0205052817724058;-0.0198171720633655;-0.0191267743009973;-0.0184340890679761;-0.0177391169676835;-0.0170418586242254;-0.0163423146824514;-0.0156404858079725;-0.0149363726871797;-0.0142299760272615;-0.0135212965562215;-0.0128103350228962;-0.0120970921969721;-0.0113815688690025;-0.0106637658504249;-0.00994368397357705;-0.00922132409171369;-0.00849668707902262;-0.00776977383064064;-0.00704058526266978;-0.00630912231219222;-0.00557538593728603;-0.00483937711704019;-0.00410109685156988;-0.00336054616203061;-0.00261772609063303;-0.00187263770065757;-0.00112528207646786;-0.000375660323525046]|9|8|on"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"fir_coef"
		Location		[609, 271, 1389, 957]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 68, 60, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 193, 60, 207]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_gen"
		  Ports			  [1, 1]
		  Position		  [130, 109, 220, 141]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "1024 coefs in bram\n9_8 out/1"
		  UserDataPersistent	  on
		  UserData		  "DataTag47"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Coefficient Generator"
		  MaskDescription	  "A coefficient generator."
		  MaskHelp		  "<pre>\nDescription::\n\nA coefficient generator.\n\nMask Parameters::\n\nCoefficiants (coefs): The coefficients to output.  These should be specified as doubles.\nThey will be rounded/saturated according to the specified number of bits (n_bits)\nand binary point (bin_pt).\n\nNumber of Coefficient Bits (n_bits): The number of bits used for the fixed point binary\nrepresentation of the coefficients.\n\nCoefficient Binary Point (bin_pt): The binary point of the fixed point binary representation\nof the coefficients.\n\nLog2 Cycles per Coefficient (log2_cpc): The log2 value of the number of cycles per coefficient.\nMust be a non-negative integer (i.e. cycles per coefficient must be a power of 2).  \n\nUse BRAM (use_bram): Check this checkbox to store coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Coefficients|Number of Bits|Binary Point|Log2 Cycles per Coefficient|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off"
		  MaskCallbackString	  "||||"
		  MaskEnableString	  "off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on"
		  MaskVarAliasString	  ",,,,"
		  MaskVariables		  "coefs=&1;n_bits=&2;bin_pt=&3;log2_cpc=&4;use_bram=&5;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "[-7.57186305694141e-005;-0.000227564945670749;-0.000379956430889435;-0.000532892796251757;-0.000686373742881339;-0.000840398962979647;-0.000994968139806186;-0.00115008094765919;-0.00130573705185642;-0.00146193610871559;-0.00161867776553536;-0.00177596166057639;-0.00193378742304204;-0.0020921546730598;-0.0022510630216622;-0.00241051207076825;-0.00257050141316491;-0.00273103063248833;-0.00289209930320557;-0.00305370699059638;-0.00321585325073467;-0.00337853763047057;-0.00354175966741245;-0.00370551888990871;-0.00386981481703025;-0.00403464695855241;-0.00420001481493748;-0.00436591787731722;-0.0045323556274752;-0.00469932753782952;-0.00486683307141569;-0.00503487168186923;-0.00520344281340873;-0.00537254590081901;-0.00554218036943399;-0.00571234563512023;-0.00588304110426002;-0.00605426617373492;-0.00622602023090949;-0.00639830265361464;-0.00657111281013151;-0.00674445005917552;-0.00691831374988003;-0.00709270322178053;-0.00726761780479901;-0.00744305681922785;-0.00761901957571464;-0.00779550537524631;-0.0079725135091339;-0.00815004325899737;-0.00832809389675017;-0.0085066646845843;-0.00868575487495546;-0.00886536371056795;-0.00904549042435999;-0.00922613423948933;-0.00940729436931827;-0.0095889700173997;-0.00977116037746245;-0.00995386463339719;-0.0101370819592425;-0.0103208115191707;-0.010505052467474;-0.0106898039485508;-0.0108750650968923;-0.0110608350370682;-0.0112471128837145;-0.011433897741519;-0.0116211887052088;-0.0118089848595372;-0.0119972852792704;-0.0121860890291751;-0.0123753951640054;-0.0125652027284904;-0.0127555107573218;-0.0129463182751411;-0.013137624296528;-0.0133294278259877;-0.0135217278579391;-0.013714523376703;-0.0139078133564902;-0.0141015967613896;-0.0142958725453573;-0.0144906396522044;-0.0146858970155864;-0.0148816435589916;-0.01507787819573;-0.0152745998289226;-0.0154718073514906;-0.0156694996461444;-0.0158676755853733;-0.016066334031435;-0.016265473836345;-0.0164650938418669;-0.016665192879502;-0.0168657697704791;-0.0170668233257453;-0.0172683523459559;-0.0174703556214645;-0.0176728319323143;-0.0178757800482282;-0.0180791987285998;-0.0182830867224842;-0.018487442768589;-0.0186922655952659;-0.0188975539205014;-0.0191033064519087;-0.019309521886719;-0.0195161989117731;-0.0197233362035136;-0.0199309324279764;-0.0201389862407831;-0.020347496287133;-0.0205564612017955;-0.0207658796091025;-0.0209757501229411;-0.0211860713467461;-0.0213968418734932;-0.0216080602856917;-0.0218197251553776;-0.022031835044107;-0.0222443885029495;-0.0224573840724814;-0.0226708202827797;-0.0228846956534157;-0.0230990086934489;-0.0233137579014212;-0.0235289417653507;-0.0237445587627263;-0.0239606073605024;-0.0241770860150929;-0.024393993172366;-0.0246113272676396;-0.0248290867256759;-0.025047269960676;-0.0252658753762764;-0.0254849013655432;-0.0257043463109681;-0.0259242085844644;-0.026144486547362;-0.0263651785504042;-0.026586282933743;-0.026807798026936;-0.0270297221489423;-0.0272520536081191;-0.0274747907022183;-0.0276979317183836;-0.0279214749331467;-0.0281454186124251;-0.0283697610115189;-0.0285945003751079;-0.0288196349372498;-0.029045162921377;-0.0292710825402948;-0.0294973919961793;-0.0297240894805752;-0.0299511731743939;-0.0301786412479123;-0.0304064918607708;-0.0306347231619722;-0.03086333328988;-0.0310923203722177;-0.0313216825260677;-0.0315514178578704;-0.0317815244634236;-0.0320120004278819;-0.0322428438257562;-0.0324740527209136;-0.0327056251665774;-0.0329375592053265;-0.0331698528690966;-0.0334025041791795;-0.0336355111462241;-0.0338688717702371;-0.0341025840405833;-0.0343366459359869;-0.0345710554245323;-0.0348058104636656;-0.0350409090001953;-0.0352763489702948;-0.035512128299503;-0.0357482449027266;-0.0359846966842419;-0.036221481537697;-0.036458597346114;-0.0366960419818909;-0.0369338133068049;-0.0371719091720144;-0.0374103274180622;-0.037649065874878;-0.0378881223617824;-0.038127494687489;-0.0383671806501086;-0.0386071780371525;-0.0388474846255361;-0.0390880981815831;-0.039329016461029;-0.0395702372090256;-0.0398117581601453;-0.0400535770383852;-0.0402956915571721;-0.0405380994193671;-0.0407807983172704;-0.0410237859326265;-0.0412670599366292;-0.0415106179899271;-0.0417544577426293;-0.0419985768343105;-0.0422429728940172;-0.0424876435402736;-0.0427325863810878;-0.0429777990139576;-0.0432232790258777;-0.0434690239933452;-0.0437150314823675;-0.0439612990484682;-0.0442078242366945;-0.0444546045816244;-0.0447016376073741;-0.044948920827605;-0.045196451745532;-0.0454442278539307;-0.0456922466351457;-0.0459405055610986;-0.0461890020932959;-0.046437733682838;-0.0466866977704272;-0.0469358917863767;-0.0471853131506194;-0.0474349592727168;-0.0476848275518681;-0.0479349153769199;-0.0481852201263752;-0.0484357391684033;-0.0486864698608494;-0.0489374095512447;-0.0491885555768165;-0.049439905264498;-0.0496914559309391;-0.0499432048825173;-0.0501951494153474;-0.0504472868152932;-0.0506996143579782;-0.0509521293087968;-0.0512048289229253;-0.0514577104453342;-0.0517107711107988;-0.0519640081439119;-0.0522174187590951;-0.0524710001606109;-0.0527247495425758;-0.0529786640889713;-0.0532327409736577;-0.0534869773603863;-0.0537413704028122;-0.0539959172445073;-0.0542506150189739;-0.0545054608496575;-0.0547604518499607;-0.0550155851232567;-0.0552708577629027;-0.0555262668522548;-0.0557818094646811;-0.0560374826635766;-0.0562932835023776;-0.0565492090245758;-0.0568052562637336;-0.0570614222434986;-0.0573177039776189;-0.0575740984699583;-0.0578306027145112;-0.0580872136954188;-0.0583439283869845;-0.0586007437536894;-0.0588576567502086;-0.0591146643214275;-0.0593717634024577;-0.0596289509186537;-0.0598862237856295;-0.0601435789092752;-0.0604010131857741;-0.0606585235016196;-0.0609161067336326;-0.0611737597489788;-0.0614314794051863;-0.061689262550163;-0.061947106022215;-0.0622050066500641;-0.0624629612528662;-0.0627209666402297;-0.0629790196122337;-0.0632371169594469;-0.0634952554629463;-0.0637534318943358;-0.0640116430157661;-0.064269885579953;-0.0645281563301975;-0.0647864520004051;-0.0650447693151055;-0.0653031049894726;-0.0655614557293443;-0.0658198182312429;-0.0660781891823955;-0.0663365652607541;-0.0665949431350165;-0.0668533194646474;-0.0671116908998989;-0.0673700540818315;-0.0676284056423361;-0.0678867422041547;-0.0681450603809021;-0.0684033567770881;-0.0686616279881388;-0.068919870600419;-0.0691780811912541;-0.0694362563289528;-0.0696943925728293;-0.0699524864732263;-0.0702105345715372;-0.0704685334002297;-0.0707264794828686;-0.0709843693341391;-0.0712421994598703;-0.0714999663570587;-0.0717576665138918;-0.0720152964097724;-0.0722728525153421;-0.0725303312925058;-0.0727877291944562;-0.0730450426656978;-0.073302268142072;-0.0735594020507816;-0.0738164408104159;-0.0740733808309759;-0.0743302185138991;-0.0745869502520857;-0.0748435724299231;-0.0751000814233127;-0.075356473599695;-0.0756127453180758;-0.0758688929290526;-0.0761249127748406;-0.0763808011892994;-0.0766365544979593;-0.0768921690180486;-0.0771476410585198;-0.0774029669200773;-0.0776581428952044;-0.0779131652681904;-0.0781680303151585;-0.0784227343040934;-0.0786772734948688;-0.0789316441392758;-0.0791858424810506;-0.079439864755903;-0.0796937071915449;-0.0799473660077185;-0.0802008374162255;-0.0804541176209555;-0.0807072028179151;-0.0809600891952574;-0.0812127729333109;-0.0814652502046088;-0.0817175171739195;-0.0819695699982751;-0.082221404827002;-0.0824730178017513;-0.0827244050565279;-0.0829755627177218;-0.083226486904138;-0.0834771737270274;-0.0837276192901176;-0.0839778196896433;-0.0842277710143782;-0.0844774693456655;-0.0847269107574494;-0.0849760913163068;-0.0852250070814789;-0.0854736541049025;-0.0857220284312427;-0.0859701260979243;-0.0862179431351643;-0.0864654755660042;-0.0867127194063427;-0.0869596706649676;-0.0872063253435898;-0.0874526794368749;-0.0876987289324774;-0.0879444698110729;-0.0881898980463924;-0.0884350096052548;-0.0886798004476017;-0.0889242665265297;-0.0891684037883258;-0.0894122081725004;-0.0896556756118219;-0.0898988020323511;-0.0901415833534753;-0.0903840154879432;-0.0906260943418998;-0.0908678158149208;-0.0911091758000479;-0.091350170183824;-0.0915907948463285;-0.0918310456612125;-0.0920709184957346;-0.0923104092107966;-0.0925495136609791;-0.0927882276945778;-0.0930265471536394;-0.093264467873998;-0.0935019856853112;-0.0937390964110971;-0.0939757958687704;-0.0942120798696797;-0.0944479442191439;-0.0946833847164898;-0.0949183971550889;-0.095152977322395;-0.0953871209999812;-0.095620823963578;-0.095854081983111;-0.0960868908227382;-0.0963192462408885;-0.0965511439902998;-0.0967825798180567;-0.09701354946563;-0.0972440486689138;-0.0974740731582651;-0.0977036186585424;-0.0979326808891443;-0.0981612555640488;-0.0983893383918524;-0.0986169250758091;-0.0988440113138705;-0.0990705927987245;-0.0992966652178355;-0.099522224253484;-0.0997472655828066;-0.0999717848778359;-0.100195777805541;-0.100419240027867;-0.100642167201777;-0.10086455497929;-0.101086399007525;-0.101307694928738;-0.101528438380368;-0.101748624995071;-0.101968250400767;-0.102187310220681;-0.102405800073379;-0.102623715572817;-0.102841052328376;-0.10305780594491;-0.10327397202278;-0.103489546157905;-0.103704523941797;-0.103918900961607;-0.104132672800167;-0.10434583503603;-0.104558383243515;-0.104770312992751;-0.104981619849715;-0.105192299376281;-0.105402347130257;-0.105611758665433;-0.105820529531622;-0.106028655274704;-0.10623613143667;-0.106442953555663;-0.106649117166026;-0.106854617798343;-0.107059450979484;-0.107263612232647;-0.107467097077407;-0.107669901029754;-0.107872019602144;-0.108073448303537;-0.108274182639448;-0.108474218111987;-0.108673550219905;-0.108872174458642;-0.109070086320367;-0.109267281294027;-0.109463754865391;-0.109659502517097;-0.109854519728693;-0.110048801976688;-0.110242344734596;-0.110435143472979;-0.110627193659497;-0.110818490758952;-0.111009030233334;-0.111198807541867;-0.111387818141058;-0.111576057484741;-0.111763521024123;-0.111950204207832;-0.112136102481964;-0.11232121129013;-0.112505526073501;-0.112689042270857;-0.112871755318635;-0.113053660650972;-0.113234753699757;-0.113415029894677;-0.113594484663264;-0.113773113430942;-0.113950911621077;-0.114127874655023;-0.11430399795217;-0.114479276929993;-0.1146537070041;-0.114827283588279;-0.115000002094548;-0.115171857933203;-0.115342846512864;-0.115512963240528;-0.115682203521616;-0.115850562760017;-0.116018036358147;-0.116184619716987;-0.116350308236141;-0.116515097313878;-0.116678982347186;-0.11684195873182;-0.117004021862351;-0.117165167132216;-0.117325389933767;-0.117484685658321;-0.117643049696209;-0.117800477436828;-0.117956964268688;-0.118112505579464;-0.118267096756046;-0.118420733184589;-0.118573410250562;-0.118725123338799;-0.118875867833551;-0.119025639118535;-0.119174432576984;-0.1193222435917;-0.1194690675451;-0.119614899819273;-0.119759735796028;-0.119903570856942;-0.120046400383417;-0.120188219756726;-0.120329024358068;-0.120468809568615;-0.120607570769567;-0.120745303342203;-0.120882002667932;-0.121017664128342;-0.121152283105255;-0.12128585498078;-0.121418375137358;-0.121549838957822;-0.121680241825444;-0.121809579123986;-0.121937846237758;-0.122065038551663;-0.122191151451255;-0.122316180322788;-0.122440120553267;-0.122562967530506;-0.122684716643174;-0.122805363280853;-0.122924902834086;-0.123043330694433;-0.123160642254522;-0.123276832908101;-0.123391898050093;-0.12350583307665;-0.1236186333852;-0.123730294374506;-0.123840811444718;-0.123950179997422;-0.124058395435699;-0.124165453164175;-0.124271348589074;-0.124376077118273;-0.124479634161354;-0.124582015129658;-0.12468321543634;-0.124783230496419;-0.124882055726836;-0.124979686546505;-0.125076118376365;-0.12517134663944;-0.125265366760885;-0.125358174168047;-0.125449764290513;-0.12554013256017;-0.125629274411252;-0.1257171852804;-0.125803860606714;-0.125889295831806;-0.125973486399857;-0.126056427757669;-0.12613811535472;-0.126218544643217;-0.126297711078153;-0.126375610117361;-0.126452237221565;-0.126527587854441;-0.126601657482665;-0.12667444157597;-0.126745935607204;-0.126816135052377;-0.126885035390726;-0.12695263210476;-0.12701892068032;-0.127083896606635;-0.127147555376371;-0.127209892485693;-0.127270903434314;-0.127330583725555;-0.127388928866395;-0.127445934367531;-0.127501595743429;-0.127555908512382;-0.127608868196561;-0.127660470322078;-0.127710710419032;-0.12775958402157;-0.127807086667941;-0.127853213900551;-0.127897961266018;-0.127941324315228;-0.127983298603389;-0.128023879690088;-0.128063063139347;-0.128100844519676;-0.12813721940413;-0.128172183370362;-0.128205732000685;-0.12823786088212;-0.128268565606454;-0.1282978417703;-0.128325684975145;-0.128352090827411;-0.12837705493851;-0.128400572924896;-0.128422640408125;-0.128443253014909;-0.128462406377172;-0.128480096132103;-0.128496317922217;-0.128511067395406;-0.128524340204996;-0.128536132009803;-0.128546438474192;-0.128555255268125;-0.128562578067225;-0.128568402552826;-0.128572724412033;-0.128575539337773;-0.128576843028855;-0.128576631190026;-0.128574899532022;-0.128571643771628;-0.128566859631735;-0.12856054284139;-0.128552689135858;-0.128543294256673;-0.128532353951698;-0.128519863975179;-0.128505820087798;-0.128490218056735;-0.128473053655717;-0.128454322665079;-0.128434020871817;-0.128412144069646;-0.128388688059053;-0.128363648647355;-0.128337021648755;-0.128308802884396;-0.128278988182416;-0.128247573378009;-0.128214554313474;-0.128179926838275;-0.128143686809098;-0.1281058300899;-0.128066352551973;-0.128025250073994;-0.127982518542083;-0.127938153849857;-0.12789215189849;-0.127844508596762;-0.12779521986112;-0.127744281615732;-0.127691689792542;-0.127637440331325;-0.127581529179746;-0.12752395229341;-0.127464705635923;-0.127403785178944;-0.127341186902242;-0.127276906793752;-0.127210940849628;-0.1271432850743;-0.12707393548053;-0.127002888089467;-0.126930138930701;-0.126855684042321;-0.126779519470967;-0.126701641271888;-0.126622045508995;-0.126540728254919;-0.126457685591063;-0.126372913607659;-0.126286408403824;-0.126198166087613;-0.126108182776074;-0.126016454595306;-0.125922977680511;-0.125827748176048;-0.125730762235494;-0.12563201602169;-0.125531505706804;-0.12542922747238;-0.125325177509398;-0.125219352018322;-0.125111747209161;-0.125002359301522;-0.12489118452466;-0.124778219117541;-0.124663459328888;-0.124546901417241;-0.124428541651009;-0.124308376308528;-0.124186401678108;-0.124062614058095;-0.12393700975692;-0.123809585093158;-0.123680336395576;-0.123549260003193;-0.12341635226533;-0.123281609541668;-0.123145028202296;-0.123006604627771;-0.122866335209169;-0.122724216348138;-0.122580244456954;-0.122434415958572;-0.122286727286684;-0.122137174885766;-0.121985755211139;-0.121832464729017;-0.12167729991656;-0.121520257261934;-0.121361333264356;-0.121200524434153;-0.121037827292813;-0.120873238373037;-0.120706754218796;-0.120538371385378;-0.120368086439447;-0.120195895959092;-0.12002179653388;-0.119845784764912;-0.119667857264872;-0.11948801065808;-0.119306241580546;-0.119122546680023;-0.118936922616057;-0.118749366060041;-0.118559873695267;-0.118368442216977;-0.118175068332418;-0.117979748760891;-0.117782480233803;-0.117583259494722;-0.117382083299426;-0.117178948415955;-0.116973851624663;-0.116766789718271;-0.116557759501917;-0.116346757793206;-0.116133781422266;-0.115918827231792;-0.115701892077107;-0.115482972826202;-0.115262066359796;-0.115039169571384;-0.114814279367284;-0.114587392666694;-0.11435850640174;-0.114127617517525;-0.113894722972181;-0.11365981973692;-0.113422904796084;-0.113183975147195;-0.112943027801003;-0.112700059781542;-0.112455068126173;-0.112208049885639;-0.111959002124111;-0.111707921919243;-0.111454806362214;-0.111199652557785;-0.110942457624343;-0.110683218693955;-0.110421932912413;-0.110158597439284;-0.109893209447962;-0.109625766125715;-0.109356264673732;-0.109084702307174;-0.108811076255224;-0.108535383761131;-0.108257622082262;-0.107977788490152;-0.107695880270546;-0.107411894723454;-0.107125829163193;-0.10683768091844;-0.106547447332278;-0.106255125762242;-0.105960713580369;-0.105664208173243;-0.105365606942047;-0.105064907302604;-0.104762106685429;-0.104457202535775;-0.104150192313679;-0.103841073494009;-0.103529843566511;-0.103216500035856;-0.102901040421687;-0.102583462258662;-0.102263763096507;-0.101941940500055;-0.101617992049296;-0.101291915339421;-0.100963707980872;-0.100633367599381;-0.100300891836022;-0.0999662783472516;-0.0996295248049575;-0.0992906288965024;-0.0989495883247697;-0.0986064008082076;-0.0982610640808748;-0.0979135758924848;-0.0975639340084509;-0.0972121362099301;-0.0968581802938682;-0.0965020640730433;-0.0961437853761105;-0.0957833420476455;-0.0954207319481889;-0.0950559529542894;-0.0946890029585477;-0.09431987986966;-0.0939485816124612;-0.0935751061279683;-0.0931994513734234;-0.0928216153223364;-0.0924415959645284;-0.0920593913061736;-0.0916749993698427;-0.0912884181945446;-0.0908996458357691;-0.0905086803655288;-0.0901155198724016;-0.0897201624615717;-0.0893226062548723;-0.0889228493908263;-0.0885208900246886;-0.0881167263284868;-0.0877103564910625;-0.0873017787181127;-0.0868909912322302;-0.0864779922729447;-0.0860627800967632;-0.0856453529772106;-0.0852257092048699;-0.0848038470874227;-0.0843797649496887;-0.0839534611336661;-0.0835249339985711;-0.0830941819208773;-0.0826612032943558;-0.0822259965301136;-0.0817885600566336;-0.0813488923198131;-0.0809069917830028;-0.0804628569270452;-0.0800164862503141;-0.0795678782687517;-0.0791170315159078;-0.0786639445429775;-0.0782086159188393;-0.0777510442300928;-0.0772912280810962;-0.0768291660940042;-0.0763648569088048;-0.0758982991833568;-0.0754294915934268;-0.0749584328327259;-0.0744851216129466;-0.0740095566637989;-0.0735317367330474;-0.0730516605865468;-0.0725693270082785;-0.0720847348003859;-0.071597882783211;-0.071108769795329;-0.0706173946935843;-0.0701237563531258;-0.0696278536674418;-0.0691296855483946;-0.0686292509262558;-0.0681265487497408;-0.067621577986043;-0.0671143376208679;-0.0666048266584676;-0.0660930441216749;-0.0655789890519362;-0.0650626605093458;-0.0645440575726791;-0.064023179339426;-0.0635000249258237;-0.0629745934668896;-0.0624468841164546;-0.0619168960471949;-0.0613846284506648;-0.0608500805373288;-0.0603132515365938;-0.0597741406968409;-0.0592327472854569;-0.058689070588866;-0.0581431099125613;-0.0575948645811356;-0.0570443339383125;-0.0564915173469777;-0.0559364141892089;-0.0553790238663066;-0.0548193457988244;-0.0542573794265993;-0.0536931242087811;-0.0531265796238626;-0.0525577451697087;-0.0519866203635867;-0.0514132047421944;-0.0508374978616896;-0.0502594992977191;-0.0496792086454471;-0.0490966255195838;-0.0485117495544134;-0.0479245804038229;-0.047335117741329;-0.0467433612601067;-0.0461493106730163;-0.0455529657126312;-0.0449543261312647;-0.0443533917009969;-0.0437501622137022;-0.0431446374810749;-0.0425368173346564;-0.0419267016258609;-0.0413142902260021;-0.0406995830263182;-0.0400825799379981;-0.0394632808922069;-0.0388416858401109;-0.0382177947529027;-0.0375916076218262;-0.0369631244582015;-0.0363323452934489;-0.0356992701791137;-0.0350638991868898;-0.0344262324086442;-0.0337862699564402;-0.0331440119625613;-0.0324994585795345;-0.031852609980153;-0.0312034663574997;-0.0305520279249694;-0.0298982949162921;-0.0292422675855545;-0.0285839462072226;-0.0279233310761635;-0.0272604225076676;-0.0265952208374693;-0.0259277264217688;-0.0252579396372536;-0.0245858608811188;-0.0239114905710882;-0.0232348291454347;-0.0225558770630009;-0.0218746348032188;-0.0211911028661302;-0.0205052817724058;-0.0198171720633655;-0.0191267743009973;-0.0184340890679761;-0.0177391169676835;-0.0170418586242254;-0.0163423146824514;-0.0156404858079725;-0.0149363726871797;-0.0142299760272615;-0.0135212965562215;-0.0128103350228962;-0.0120970921969721;-0.0113815688690025;-0.0106637658504249;-0.00994368397357705;-0.00922132409171369;-0.00849668707902262;-0.00776977383064064;-0.00704058526266978;-0.00630912231219222;-0.00557538593728603;-0.00483937711704019;-0.00410109685156988;-0.00336054616203061;-0.00261772609063303;-0.00187263770065757;-0.00112528207646786;-0.000375660323525046]|9|8|0|on"
		  MaskTabNameString	  ",,,,"
		  System {
		    Name		    "c_gen"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1023"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 50 50 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "1024"
		    initVector		    "[0;0;0;0;0;0;0;0;0;0;0;0;0;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;0;0;0]"
		    distributed_mem	    "Block RAM"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "8"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[7 15 27 39 47 47 43 47 47 36 47 39 27 15 7 18 7 7 11 7 7 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "coef_out"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mem"
		    SrcPort		    1
		    DstBlock		    "coef_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "data_delay"
		  Ports			  [1, 1]
		  Position		  [145, 17, 200, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sum_delay"
		  Ports			  [1, 1]
		  Position		  [145, 62, 200, 88]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [145, 187, 200, 213]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [295, 23, 325, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [295, 68, 325, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "coef"
		  Position		  [295, 118, 325, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [295, 193, 325, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_gen"
		  SrcPort		  1
		  DstBlock		  "coef"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_delay"
		  SrcPort		  1
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "sum_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [25, 0]
		  Branch {
		    Points		    [0, -75]
		    DstBlock		    "c_gen"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "sync_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_delay"
		  SrcPort		  1
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  DstBlock		  "data_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_core"
	      Ports		      [4, 3]
	      Position		      [270, 29, 360, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "delay 1024 in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag48"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Core"
	      MaskDescription	      "A Finite Impluse Response Filter core with complex inputs and real coefficients.  This FIR filter core does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter core with complex inputs and real coefficients.\n\nThis Finite Impluse Response Filter core is designed to be paired with a FIR Coefficient Generator \nto form a FIR filter tap.  This FIR filter core does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (use_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	      MaskPromptString	      "Tap Delay|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	      MaskStyleString	      "edit,edit,edit,edit,edit,checkbox,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "delay=&1;n_bits_d=&2;bin_pt_d=&3;n_bits_s=&4;bin_pt_s=&5;use_bram=&6;mult_latency=&7;add_latency=&8;add_bypass=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "1024|8|7|17|15|on|3|1|off"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"fir_core"
		Location		[282, 135, 1062, 821]
		Open			on
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 223, 60, 237]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "coef"
		  Position		  [30, 183, 60, 197]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 278, 60, 292]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_d"
		  Ports			  [1, 2]
		  Position		  [120, 69, 160, 111]
		  AttributesFormatString  "8_7 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag49"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|7"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_d"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_s"
		  Ports			  [1, 2]
		  Position		  [120, 209, 160, 251]
		  AttributesFormatString  "17_15 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag50"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "17|15"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_s"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_im"
		  Ports			  [1, 1]
		  Position		  [345, 175, 390, 205]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_re"
		  Ports			  [1, 1]
		  Position		  [345, 80, 390, 110]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "dout_delay"
		  Ports			  [1, 1]
		  Position		  [255, 17, 310, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_im"
		  Ports			  [3, 1]
		  Position		  [255, 164, 305, 216]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag51"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_im"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_re"
		  Ports			  [3, 1]
		  Position		  [255, 69, 305, 121]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag52"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_re"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [455, 119, 495, 161]
		  UserDataPersistent	  on
		  UserData		  "DataTag53"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskInitialization	  "ri_to_c_init(gcb);"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [255, 272, 310, 298]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "tap_delay"
		  Ports			  [1, 1]
		  Position		  [440, 14, 500, 46]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "bram depth = 1024"
		  UserDataPersistent	  on
		  UserData		  "DataTag54"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "BRAM Delay"
		  MaskDescription	  "A delay block that uses BRAM for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses BRAM for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n\nBuffer Latency (buffer_latency): The latency of the underlying storage.\n\nBuffer Latency defaults to 1 and cannot be changed via the block's dialog box.\nFuture versions may enable the setting of that parameter from the dialog.\n</pre>"
		  MaskPromptString	  "Delay Depth|Buffer Latency"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,off"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "delay_depth=&1;buffer_latency=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "1024|"
		  MaskTabNameString	  ","
		  System {
		    Name		    "tap_delay"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Constant"
		    Ports		    [0, 1]
		    Position		    [165, 133, 180, 147]
		    ShowName		    off
		    SourceBlock		    "xbsIndex_r4/Constant"
		    SourceType		    "Xilinx Constant Block Block"
		    arith_type		    "Boolean"
		    const		    "1"
		    n_bits		    "1"
		    bin_pt		    "0"
		    explicit_period	    on
		    period		    "1"
		    dsp48_infoedit	    "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		    equ			    "P=C"
		    opselect		    "C"
		    inp2		    "PCIN>>17"
		    opr			    "+"
		    inp1		    "P"
		    carry		    "CIN"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "constant"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "15,14,1,1,white,blue,0,06094819,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 15 15 0 ],[0 0 14 14 ],[0.77 0.82 0.91]);\npatch([3 1 4 1 3 7 8 9 13 10 7 5 8 5 7 10 13 9 8 7 3 ],[2 4 7 10 12 12 11 12 12 9 12 10 7 4 2 5 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 15 15 0 0 ],[0 0 14 14 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [0, 1]
		    Position		    [130, 71, 180, 89]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1022"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    off
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,a170c862,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bram"
		    Ports		    [3, 1]
		    Position		    [230, 61, 295, 159]
		    SourceBlock		    "xbsIndex_r4/Single Port RAM"
		    SourceType		    "Xilinx Single Port Random Access Memory Block"
		    depth		    "1024"
		    initVector		    "0"
		    distributed_mem	    "Block RAM"
		    write_mode		    "Read Before Write"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "spram"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "65,98,1,1,white,blue,0,90951842,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 98 98 ],[0.77 0.82 0.91]);\npatch([15 4 19 4 15 32 37 42 60 45 31 21 36 21 31 45 60 42 37 32 15 ],[24 35 50 65 76 76 71 76 76 61 75 65 50 35 25 39 24 24 29 24 24 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 98 98 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Constant"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    3
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "bram"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [555, 23, 585, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [555, 133, 585, 147]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 278, 585, 292]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "convert_im"
		  SrcPort		  1
		  Points		  [20, 0; 0, -40]
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "convert_re"
		  SrcPort		  1
		  Points		  [20, 0; 0, 35]
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "tap_delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_im"
		  SrcPort		  1
		  DstBlock		  "convert_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_re"
		  SrcPort		  1
		  DstBlock		  "convert_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  2
		  Points		  [75, 0]
		  DstBlock		  "mult_add_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  1
		  Points		  [75, 0]
		  DstBlock		  "mult_add_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "c_to_ri_s"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "coef"
		  SrcPort		  1
		  Points		  [140, 0]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "mult_add_re"
		    DstPort		    2
		  }
		  Branch {
		    DstBlock		    "mult_add_im"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  2
		  Points		  [20, 0; 0, 75]
		  DstBlock		  "mult_add_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  1
		  DstBlock		  "mult_add_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  Points		  [35, 0]
		  Branch {
		    Points		    [0, 60]
		    DstBlock		    "c_to_ri_d"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "dout_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "dout_delay"
		  SrcPort		  1
		  DstBlock		  "tap_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "data_out"
	      Position		      [435, 23, 465, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [435, 58, 465, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [435, 93, 465, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      3
	      Points		      [25, 0; 0, 15]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      2
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      1
	      Points		      [25, 0; 0, -15]
	      DstBlock		      "data_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, -15]
	      DstBlock		      "fir_coef"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "fir_coef"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "data_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, 15]
	      DstBlock		      "fir_coef"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      4
	      DstBlock		      "fir_core"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      3
	      DstBlock		      "fir_core"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      2
	      DstBlock		      "fir_core"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      1
	      DstBlock		      "fir_core"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_tap_6"
	  Ports			  [3, 3]
	  Position		  [850, 30, 950, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "delay 0 in slr\n1024 coefs in bram"
	  UserDataPersistent	  on
	  UserData		  "DataTag55"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Tap (Real Coefficients)"
	  MaskDescription	  "A Finite Impluse Response Filter tap with real coefficients.  This FIR filter tap does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter tap with real coefficients.\n\nThis Finite Impluse Response Filter tap is designed to be daisy chained together\nto form a multi-tap FIR filter.  This FIR filter tap does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nTap Coefficiant(s) (coef): The coefficient(s) for this tap.  For a regular FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nUsually, delay==length(coef), but this is not required.  These should be specified as doubles. \nThey will be rounded and saturated according to the specified number of bits (n_bits_c) and\nbinary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	  MaskPromptString	  "Tap Delay|Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	  MaskStyleString	  "edit,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "||||||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,,,,"
	  MaskVariables		  "delay=&1;coef=&2;n_bits_c=&3;bin_pt_c=&4;n_bits_d=&5;bin_pt_d=&6;n_bits_s=&7;bin_pt_s=&8;coef_bram=&9;delay_bram=&10;mult_latency=&11;add_latency=&12;add_bypass=&13;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "0|[1.30229478472013e-005;3.90815624059165e-005;6.51573367774649e-005;9.12505128142159e-005;0.000117361332654004;0.000143490038707315;0.000169636873644433;0.000195802080382638;0.000221985902073233;0.000248188582088693;0.00027441036400972;0.000300651491612275;0.00032691220885466;0.000353192759864432;0.00037949338892544;0.000405814340464771;0.000432155859039685;0.000458518189324518;0.000484901576097635;0.000511306264228219;0.00053773249866318;0.000564180524413982;0.000590650586543436;0.000617142930152563;0.000643657800367275;0.000670195442325197;0.000696756101162392;0.00072334002200008;0.000749947449931329;0.000776578630007802;0.000803233807226332;0.000829913226515637;0.00085661713272294;0.000883345770600572;0.000910099384792634;0.000936878219821494;0.000963682520074419;0.000990512529790111;0.00101736849304526;0.00104425065374103;0.00107115925558966;0.00109809454210086;0.00112505675656834;0.00115204614205629;0.0011790629413858;0.00120610739712138;0.00123317975155729;0.00126028024670401;0.00128740912427467;0.0013145666256714;0.00134175299197172;0.00136896846391498;0.00139621328188859;0.00142348768591449;0.00145079191563545;0.00147812621030134;0.0015054908087556;0.00153288594942139;0.00156031187028796;0.00158776880889696;0.00161525700232871;0.00164277668718846;0.00167032809959269;0.00169791147515534;0.00172552704897407;0.00175317505561652;0.00178085572910654;0.00180856930291045;0.00183631600992321;0.00186409608245468;0.00189190975221584;0.001919757250305;0.00194763880719397;0.00197555465271432;0.00200350501604353;0.00203149012569121;0.00205951020948525;0.00208756549455806;0.00211565620733274;0.00214378257350922;0.00217194481805049;0.00220014316516874;0.00222837783831153;0.002256649060148;0.00228495705255503;0.00231330203660339;0.00234168423254391;0.00237010385979366;0.00239856113692212;0.00242705628163739;0.00245558951077227;0.0024841610402705;0.00251277108517291;0.00254141985960361;0.00257010757675613;0.00259883444887969;0.00262760068726523;0.00265640650223175;0.00268525210311237;0.00271413769824061;0.00274306349493657;0.00277202969949308;0.00280103651716193;0.00283008415214012;0.00285917280755598;0.00288830268545549;0.00291747398678844;0.00294668691139467;0.00297594165799033;0.00300523842415407;0.00303457740631335;0.00306395879973069;0.00309338279848989;0.00312284959548233;0.00315235938239325;0.00318191234968804;0.00321150868659852;0.00324114858110932;0.00327083221994408;0.00330055978855185;0.00333033147109343;0.00336014745042765;0.00339000790809786;0.00341991302431814;0.0034498629779598;0.00347985794653768;0.00350989810619665;0.00353998363169792;0.0035701146964056;0.00360029147227299;0.00363051412982916;0.00366078283816534;0.00369109776492143;0.00372145907627252;0.00375186693691537;0.00378232151005492;0.00381282295739088;0.00384337143910425;0.00387396711384388;0.00390461013871314;0.00393530066925641;0.00396603885944579;0.00399682486166768;0.00402765882670945;0.0040585409037462;0.00408947124032728;0.00412044998236316;0.00415147727411206;0.00418255325816677;0.00421367807544131;0.00424485186515788;0.00427607476483351;0.00430734691026696;0.00433866843552555;0.00437003947293203;0.00440146015305152;0.00443293060467832;0.00446445095482291;0.00449602132869889;0.00452764184970998;0.00455931263943696;0.00459103381762476;0.00462280550216948;0.00465462780910543;0.00468650085259228;0.0047184247449021;0.00475039959640664;0.00478242551556433;0.00481450260890759;0.00484663098103001;0.00487881073457359;0.00491104197021601;0.00494332478665798;0.00497565928061048;0.00500804554678217;0.00504048367786674;0.00507297376453033;0.00510551589539899;0.0051381101570461;0.00517075663397987;0.00520345540863088;0.00523620656133964;0.0052690101703441;0.00530186631176739;0.00533477505960533;0.00536773648571416;0.00540075065979826;0.00543381764939783;0.00546693751987671;0.00550011033441016;0.00553333615397264;0.00556661503732576;0.00559994704100609;0.00563333221931314;0.00566677062429732;0.0057002623057479;0.00573380731118106;0.00576740568582796;0.00580105747262281;0.00583476271219105;0.00586852144283747;0.00590233370053443;0.0059361995189101;0.00597011892923675;0.00600409196041901;0.00603811863898232;0.0060721989890612;0.00610633303238773;0.00614052078828002;0.00617476227363066;0.00620905750289535;0.00624340648808137;0.00627780923873624;0.0063122657619364;0.00634677606227583;0.00638134014185485;0.00641595800026893;0.00645062963459735;0.00648535503939221;0.00652013420666724;0.00655496712588674;0.00658985378395465;0.00662479416520342;0.00665978825138318;0.00669483602165082;0.00672993745255913;0.00676509251804594;0.00680030118942352;0.00683556343536762;0.00687087922190698;0.00690624851241261;0.00694167126758721;0.00697714744545466;0.00701267700134947;0.00704825988790636;0.00708389605504983;0.00711958544998381;0.00715532801718132;0.00719112369837428;0.00722697243254317;0.00726287415590692;0.00729882880191279;0.00733483630122624;0.00737089658172098;0.00740700956846889;0.00744317518373013;0.00747939334694328;0.00751566397471543;0.00755198698081245;0.00758836227614927;0.00762478976878012;0.00766126936388893;0.00769780096377973;0.00773438446786714;0.00777101977266688;0.00780770677178631;0.00784444535591502;0.00788123541281559;0.00791807682731424;0.00795496948129161;0.00799191325367362;0.00802890802042233;0.00806595365452684;0.00810305002599434;0.00814019700184109;0.00817739444608359;0.00821464221972963;0.00825194018076957;0.00828928818416756;0.0083266860818529;0.00836413372271132;0.00840163095257653;0.00843917761422159;0.00847677354735049;0.00851441858858978;0.0085521125714801;0.0085898553264681;0.00862764668089797;0.00866548645900342;0.00870337448189951;0.00874131056757457;0.00877929453088222;0.00881732618353346;0.0088554053340887;0.00889353178795001;0.00893170534735332;0.00896992581136071;0.00900819297585279;0.00904650663352107;0.00908486657386049;0.00912327258316188;0.00916172444450464;0.00920022193774929;0.00923876483953036;0.00927735292324897;0.0093159859590658;0.00935466371389393;0.00939338595139185;0.0094321524319565;0.00947096291271629;0.00950981714752431;0.00954871488695155;0.00958765587828016;0.00962663986549678;0.00966566658928605;0.00970473578702392;0.00974384719277134;0.00978300053726775;0.00982219554792484;0.00986143194882025;0.00990070946069135;0.0099400278009291;0.00997938668357203;0.0100187858193002;0.0100582249154293;0.0100977036759047;0.0101372218012957;0.01017677898879;0.0102163749321875;0.0102560093218952;0.0102956818449215;0.0103353921848709;0.0103751400219381;0.0104149250329032;0.0104547468911263;0.0104946052665421;0.0105344998256552;0.0105744302315346;0.0106143961438089;0.0106543972186615;0.0106944331088256;0.0107345034635795;0.0107746079287419;0.0108147461466673;0.0108549177562413;0.0108951223928764;0.010935359688507;0.010975629271586;0.0110159307670795;0.0110562637964633;0.0110966279777186;0.0111370229253276;0.0111774482502703;0.0112179035600195;0.011258388458538;0.0112989025462742;0.0113394454201587;0.0113800166736003;0.0114206158964832;0.0114612426751627;0.0115018965924621;0.0115425772276698;0.0115832841565354;0.011624016951267;0.0116647751805277;0.0117055584094329;0.0117463661995474;0.0117871981088822;0.0118280536918919;0.011868932499472;0.0119098340789561;0.0119507579741136;0.0119917037251469;0.0120326708686893;0.0120736589378022;0.0121146674619735;0.0121556959671148;0.0121967439755595;0.0122378110060608;0.0122788965737901;0.0123200001903342;0.0123611213636946;0.0124022595982848;0.0124434143949294;0.0124845852508622;0.0125257716597247;0.0125669731115647;0.0126081890928351;0.0126494190863927;0.0126906625714966;0.0127319190238077;0.0127731879153873;0.0128144687146963;0.0128557608865941;0.0128970638923385;0.0129383771895841;0.0129797002323824;0.0130210324711811;0.0130623733528234;0.0131037223205477;0.0131450788139878;0.0131864422691718;0.013227812118523;0.0132691877908589;0.013310568711392;0.0133519543017293;0.013393343979873;0.0134347371602205;0.0134761332535648;0.0135175316670951;0.013558931804397;0.0136003330654535;0.0136417348466455;0.0136831365407524;0.0137245375369534;0.0137659372208281;0.0138073349743574;0.0138487301759252;0.0138901222003188;0.0139315104187309;0.0139728941987605;0.0140142729044144;0.014055645896109;0.0140970125306716;0.0141383721613421;0.014179724137775;0.0142210678060412;0.0142624025086298;0.0143037275844501;0.014345042368834;0.0143863461935379;0.0144276383867453;0.0144689182730687;0.0145101851735525;0.0145514384056753;0.0145926772833527;0.0146339011169396;0.0146751092132337;0.0147163008754775;0.0147574754033622;0.0147986320930298;0.0148397702370772;0.0148808891245584;0.0149219880409888;0.0149630662683479;0.0150041230850829;0.0150451577661127;0.0150861695828308;0.0151271578031099;0.0151681216913049;0.0152090605082574;0.0152499735112994;0.0152908599542575;0.015331719087457;0.0153725501577262;0.0154133524084007;0.0154541250793279;0.0154948674068714;0.0155355786239159;0.0155762579598713;0.0156169046406781;0.0156575178888119;0.0156980969232886;0.015738640959669;0.0157791492100646;0.015819620883142;0.0158600551841291;0.0159004513148196;0.015940808473579;0.0159811258553503;0.0160214026516591;0.0160616380506197;0.016101831236941;0.0161419813919321;0.0161820876935087;0.0162221493161987;0.0162621654311489;0.0163021352061308;0.0163420578055472;0.0163819323904387;0.01642175811849;0.0164615341440367;0.0165012596180719;0.0165409336882532;0.0165805554989092;0.0166201241910468;0.016659638902358;0.0166990987672274;0.0167385029167391;0.016777850478684;0.0168171405775676;0.0168563723346172;0.0168955448677892;0.0169346572917774;0.0169737087180206;0.0170126982547098;0.0170516250067972;0.0170904880760033;0.0171292865608255;0.0171680195565462;0.0172066861552411;0.0172452854457875;0.0172838165138729;0.0173222784420034;0.0173606703095124;0.0173989911925696;0.0174372401641892;0.0174754162942395;0.0175135186494514;0.0175515462934279;0.0175894982866526;0.0176273736864999;0.0176651715472435;0.0177028909200663;0.01774053085307;0.0177780903912842;0.0178155685766767;0.0178529644481627;0.0178902770416155;0.0179275053898754;0.0179646485227607;0.0180017054670774;0.0180386752466294;0.0180755568822289;0.0181123493917068;0.0181490517899233;0.0181856630887784;0.0182221822972225;0.0182586084212671;0.0182949404639958;0.0183311774255754;0.0183673183032665;0.0184033620914347;0.0184393077815623;0.0184751543622587;0.0185109008192725;0.0185465461355029;0.0185820892910106;0.0186175292630303;0.0186528650259817;0.0186880955514817;0.0187232198083563;0.0187582367626523;0.0187931453776497;0.0188279446138735;0.0188626334291062;0.0188972107784002;0.0189316756140897;0.018966026885804;0.0190002635404793;0.0190343845223718;0.0190683887730704;0.0191022752315096;0.0191360428339821;0.0191696905141523;0.019203217203069;0.0192366218291787;0.0192699033183391;0.0193030605938321;0.0193360925763775;0.0193689981841464;0.0194017763327749;0.0194344259353776;0.0194669459025618;0.0194993351424409;0.0195315925606485;0.0195637170603529;0.0195957075422703;0.0196275629046798;0.0196592820434375;0.0196908638519908;0.0197223072213925;0.0197536110403162;0.0197847741950701;0.0198157955696123;0.0198466740455651;0.0198774085022304;0.0199079978166042;0.0199384408633918;0.0199687365150233;0.0199988836416682;0.020028881111251;0.0200587277894667;0.0200884225397961;0.0201179642235214;0.0201473516997418;0.0201765838253892;0.020205659455244;0.020234577441951;0.0202633366360355;0.020291935885919;0.0203203740379356;0.0203486499363482;0.0203767624233645;0.0204047103391538;0.020432492521863;0.0204601078076336;0.0204875550306177;0.0205148330229955;0.0205419406149913;0.0205688766348906;0.0205956399090575;0.0206222292619508;0.020648643516142;0.0206748814923318;0.0207009420093679;0.0207268238842619;0.0207525259322066;0.0207780469665943;0.0208033857990334;0.0208285412393665;0.0208535120956883;0.020878297174363;0.0209028952800423;0.0209273052156838;0.0209515257825682;0.0209755557803181;0.0209993940069161;0.0210230392587226;0.0210464903304949;0.0210697460154048;0.0210928051050577;0.0211156663895112;0.021138328657293;0.0211607906954207;0.0211830512894198;0.0212051092233429;0.0212269632797886;0.0212486122399205;0.0212700548834864;0.0212912899888375;0.0213123163329474;0.0213331326914318;0.0213537378385675;0.0213741305473122;0.0213943095893242;0.0214142737349813;0.0214340217534013;0.0214535524124615;0.0214728644788182;0.0214919567179271;0.0215108278940632;0.0215294767703405;0.0215479021087327;0.021566102670093;0.0215840772141744;0.0216018244996503;0.0216193432841346;0.0216366323242026;0.0216536903754111;0.0216705161923194;0.0216871085285099;0.0217034661366086;0.0217195877683065;0.02173547217438;0.0217511181047122;0.0217665243083139;0.0217816895333444;0.0217966125271333;0.021811292036201;0.021825726806281;0.0218399155823402;0.0218538571086012;0.0218675501285635;0.021880993385025;0.021894185620104;0.0219071255752605;0.0219198119913184;0.0219322436084871;0.0219444191663836;0.0219563374040542;0.021967997059997;0.0219793968721838;0.021990535578082;0.0220014119146775;0.0220120246184963;0.0220223724256277;0.0220324540717458;0.0220422682921327;0.0220518138217011;0.0220610893950162;0.0220700937463195;0.0220788256095504;0.0220872837183699;0.0220954668061832;0.0221033736061624;0.02211100285127;0.0221183532742814;0.0221254236078085;0.0221322125843227;0.0221387189361781;0.0221449413956349;0.0221508786948827;0.0221565295660639;0.0221618927412975;0.0221669669527021;0.02217175093242;0.0221762434126404;0.0221804431256237;0.0221843488037246;0.0221879591794167;0.0221912729853155;0.0221942889542031;0.0221970058190519;0.0221994223130485;0.0222015371696183;0.0222033491224491;0.0222048569055155;0.0222060592531036;0.0222069548998346;0.0222075425806899;0.0222078210310349;0.0222077889866442;0.0222074451837253;0.0222067883589439;0.0222058172494483;0.0222045305928941;0.0222029271274689;0.0222010055919171;0.022198764725565;0.0221962032683452;0.0221933199608223;0.0221901135442173;0.0221865827604326;0.0221827263520777;0.0221785430624938;0.0221740316357794;0.0221691908168152;0.0221640193512895;0.0221585159857239;0.022152679467498;0.0221465085448756;0.0221400019670297;0.0221331584840681;0.0221259768470592;0.0221184558080573;0.0221105941201285;0.0221023905373766;0.0220938438149682;0.0220849527091593;0.0220757159773207;0.0220661323779637;0.0220562006707666;0.0220459196166004;0.0220352879775545;0.0220243045169635;0.0220129679994325;0.0220012771908637;0.0219892308584827;0.0219768277708642;0.021964066697959;0.0219509464111195;0.0219374656831268;0.0219236232882163;0.0219094180021051;0.0218948486020174;0.021879913866712;0.0218646125765079;0.0218489435133116;0.0218329054606434;0.0218164972036641;0.0217997175292016;0.0217825652257779;0.0217650390836353;0.0217471378947638;0.0217288604529277;0.0217102055536922;0.0216911719944508;0.0216717585744516;0.021651964094825;0.0216317873586099;0.0216112271707815;0.0215902823382775;0.0215689516700262;0.0215472339769727;0.0215251280721066;0.0215026327704889;0.0214797468892794;0.0214564692477637;0.021432798667381;0.0214087339717505;0.0213842739866995;0.0213594175402908;0.0213341634628491;0.0213085105869897;0.0212824577476449;0.0212560037820922;0.0212291475299812;0.0212018878333615;0.02117422353671;0.0211461534869588;0.0211176765335223;0.0210887915283252;0.0210594973258299;0.0210297927830643;0.0209996767596496;0.0209691481178275;0.0209382057224885;0.0209068484411992;0.0208750751442305;0.020842884704585;0.0208102759980249;0.0207772479030999;0.0207437993011751;0.0207099290764587;0.02067563611603;0.0206409193098672;0.0206057775508754;0.0205702097349146;0.0205342147608274;0.0204977915304673;0.0204609389487264;0.0204236559235634;0.0203859413660319;0.0203477941903082;0.0203092133137194;0.0202701976567714;0.020230746143177;0.020190857699884;0.0201505312571035;0.0201097657483373;0.0200685601104072;0.0200269132834817;0.0199848242111055;0.0199422918402268;0.0198993151212255;0.0198558930079418;0.0198120244577041;0.0197677084313573;0.0197229438932907;0.0196777298114666;0.0196320651574482;0.0195859489064282;0.0195393800372564;0.0194923575324687;0.0194448803783146;0.0193969475647859;0.019348558085645;0.0192997109384527;0.0192504051245967;0.0192006396493202;0.0191504135217495;0.0190997257549227;0.0190485753658179;0.0189969613753813;0.0189448828085557;0.0188923386943085;0.0188393280656603;0.0187858499597128;0.0187319034176773;0.0186774874849029;0.0186226012109047;0.0185672436493922;0.0185114138582973;0.018455110899803;0.0183983338403711;0.018341081750771;0.0182833537061072;0.0182251487858485;0.0181664660738554;0.0181073046584087;0.0180476636322377;0.0179875420925484;0.0179269391410516;0.0178658538839913;0.0178042854321725;0.01774223290099;0.0176796954104559;0.0176166720852282;0.0175531620546388;0.0174891644527217;0.0174246784182411;0.0173597030947194;0.0172942376304655;0.0172282811786028;0.0171618328970972;0.0170948919487855;0.0170274575014029;0.0169595287276116;0.0168911048050285;0.0168221849162531;0.016752768248896;0.0166828539956064;0.0166124413541001;0.0165415295271879;0.0164701177228029;0.0163982051540287;0.0163257910391276;0.0162528746015679;0.016179455070052;0.0161055316785444;0.0160311036662993;0.0159561702778886;0.0158807307632293;0.0158047843776117;0.0157283303817268;0.015651368041694;0.0155738966290892;0.0154959154209719;0.0154174236999132;0.0153384207540233;0.0152589058769791;0.0151788783680517;0.0150983375321339;0.0150172826797681;0.014935713127173;0.014853628196272;0.0147710272147199;0.0146879095159304;0.0146042744391039;0.0145201213292544;0.014435449537237;0.0143502584197752;0.0142645473394878;0.0141783156649169;0.0140915627705541;0.0140042880368685;0.0139164908503332;0.0138281706034528;0.0137393266947904;0.0136499585289943;0.0135600655168253;0.0134696470751837;0.013378702627136;0.0132872316019417;0.0131952334350806;0.013102707568279;0.0130096534495371;0.0129160705331552;0.0128219582797607;0.0127273161563346;0.0126321436362382;0.0125364401992397;0.0124402053315406;0.0123434385258024;0.0122461392811728;0.0121483071033125;0.012049941504421;0.0119510420032635;0.0118516081251968;0.0117516394021958;0.0116511353728793;0.0115500955825369;0.0114485195831541;0.0113464069334393;0.0112437571988492;0.0111405699516152;0.0110368447707688;0.010932581242168;0.0108277789585228;0.0107224375194214;0.0106165565313551;0.010510135607745;0.0104031743689668;0.0102956724423769;0.0101876294623378;0.0100790450702434;0.00996991891454458;0.00986025065077467;0.00975003994157455;0.00963928645671813;0.00952798987313748;0.0094161498749479;0.00930376615347321;0.00919083840727075;0.00907736634215623;0.00896334967122888;0.00884878811489629;0.00873368140089908;0.00861802926433593;0.00850183144768805;0.00838508770084402;0.00826779778112436;0.00814996145330591;0.00803157848964654;0.00791264866990946;0.00779317178138749;0.00767314761892755;0.00755257598495482;0.00743145668949677;0.00730978955020755;0.00718757439239176;0.00706481104902866;0.00694149936079604;0.00681763917609391;0.00669323035106852;0.00656827274963604;0.00644276624350604;0.00631671071220536;0.0061901060431015;0.006062952131426;0.00593524888029807;0.00580699620074764;0.00567819401173886;0.00554884224019323;0.00541894082101253;0.00528848969710218;0.00515748881939405;0.00502593814686929;0.00489383764658139;0.00476118729367882;0.00462798707142765;0.00449423697123439;0.00435993699266828;0.00422508714348402;0.00408968743964404;0.00395373790534074;0.00381723857301899;0.00368018948339813;0.00354259068549404;0.00340444223664131;0.00326574420251518;0.00312649665715319;0.00298669968297734;0.00284635337081542;0.00270545781992298;0.00256401313800475;0.00242201944123601;0.0022794768542842;0.00213638551033019;0.00199274555108931;0.00184855712683285;0.00170382039640892;0.00155853552726339;0.00141270269546109;0.00126632208570627;0.00111939389136366;0.000971918314479012;0.000823895565799559;0.000675325864794748;0.000526209439676531;0.000376546527419557;0.000226337373781674;7.55822333239443e-005]|9|8|8|7|17|15|on|off|3|1|off"
	  MaskTabNameString	  ",,,,,,,,,,,,"
	  System {
	    Name		    "fir_tap_6"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_in"
	      Position		      [30, 23, 60, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 58, 60, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 93, 60, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_coef"
	      Ports		      [3, 4]
	      Position		      [115, 29, 205, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "1024 coefs in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag56"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Coefficient Generator"
	      MaskDescription	      "A Finite Impluse Response filter coefficient generator.  This FIR filter coefficient generator outputs real coefficients.  It can output one coefficient or cycle through a vector of coefficients for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response filter coefficient generator.\nThis FIR filter coefficient generator outputs real coefficients.\nIt can output one coefficient or cycle through a vector of coefficients for WOLA\n(Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Coefficiant(s) (coef): The coefficient(s) to output.  For a \"regular\" FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nThese should be specified as doubles.   They will be rounded and saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nUse BRAM for Coefficients (use_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n</pre>"
	      MaskPromptString	      "Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Use BRAM for Coefficients"
	      MaskStyleString	      "edit,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "coef=&1;n_bits_c=&2;bin_pt_c=&3;use_bram=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "[1.30229478472013e-005;3.90815624059165e-005;6.51573367774649e-005;9.12505128142159e-005;0.000117361332654004;0.000143490038707315;0.000169636873644433;0.000195802080382638;0.000221985902073233;0.000248188582088693;0.00027441036400972;0.000300651491612275;0.00032691220885466;0.000353192759864432;0.00037949338892544;0.000405814340464771;0.000432155859039685;0.000458518189324518;0.000484901576097635;0.000511306264228219;0.00053773249866318;0.000564180524413982;0.000590650586543436;0.000617142930152563;0.000643657800367275;0.000670195442325197;0.000696756101162392;0.00072334002200008;0.000749947449931329;0.000776578630007802;0.000803233807226332;0.000829913226515637;0.00085661713272294;0.000883345770600572;0.000910099384792634;0.000936878219821494;0.000963682520074419;0.000990512529790111;0.00101736849304526;0.00104425065374103;0.00107115925558966;0.00109809454210086;0.00112505675656834;0.00115204614205629;0.0011790629413858;0.00120610739712138;0.00123317975155729;0.00126028024670401;0.00128740912427467;0.0013145666256714;0.00134175299197172;0.00136896846391498;0.00139621328188859;0.00142348768591449;0.00145079191563545;0.00147812621030134;0.0015054908087556;0.00153288594942139;0.00156031187028796;0.00158776880889696;0.00161525700232871;0.00164277668718846;0.00167032809959269;0.00169791147515534;0.00172552704897407;0.00175317505561652;0.00178085572910654;0.00180856930291045;0.00183631600992321;0.00186409608245468;0.00189190975221584;0.001919757250305;0.00194763880719397;0.00197555465271432;0.00200350501604353;0.00203149012569121;0.00205951020948525;0.00208756549455806;0.00211565620733274;0.00214378257350922;0.00217194481805049;0.00220014316516874;0.00222837783831153;0.002256649060148;0.00228495705255503;0.00231330203660339;0.00234168423254391;0.00237010385979366;0.00239856113692212;0.00242705628163739;0.00245558951077227;0.0024841610402705;0.00251277108517291;0.00254141985960361;0.00257010757675613;0.00259883444887969;0.00262760068726523;0.00265640650223175;0.00268525210311237;0.00271413769824061;0.00274306349493657;0.00277202969949308;0.00280103651716193;0.00283008415214012;0.00285917280755598;0.00288830268545549;0.00291747398678844;0.00294668691139467;0.00297594165799033;0.00300523842415407;0.00303457740631335;0.00306395879973069;0.00309338279848989;0.00312284959548233;0.00315235938239325;0.00318191234968804;0.00321150868659852;0.00324114858110932;0.00327083221994408;0.00330055978855185;0.00333033147109343;0.00336014745042765;0.00339000790809786;0.00341991302431814;0.0034498629779598;0.00347985794653768;0.00350989810619665;0.00353998363169792;0.0035701146964056;0.00360029147227299;0.00363051412982916;0.00366078283816534;0.00369109776492143;0.00372145907627252;0.00375186693691537;0.00378232151005492;0.00381282295739088;0.00384337143910425;0.00387396711384388;0.00390461013871314;0.00393530066925641;0.00396603885944579;0.00399682486166768;0.00402765882670945;0.0040585409037462;0.00408947124032728;0.00412044998236316;0.00415147727411206;0.00418255325816677;0.00421367807544131;0.00424485186515788;0.00427607476483351;0.00430734691026696;0.00433866843552555;0.00437003947293203;0.00440146015305152;0.00443293060467832;0.00446445095482291;0.00449602132869889;0.00452764184970998;0.00455931263943696;0.00459103381762476;0.00462280550216948;0.00465462780910543;0.00468650085259228;0.0047184247449021;0.00475039959640664;0.00478242551556433;0.00481450260890759;0.00484663098103001;0.00487881073457359;0.00491104197021601;0.00494332478665798;0.00497565928061048;0.00500804554678217;0.00504048367786674;0.00507297376453033;0.00510551589539899;0.0051381101570461;0.00517075663397987;0.00520345540863088;0.00523620656133964;0.0052690101703441;0.00530186631176739;0.00533477505960533;0.00536773648571416;0.00540075065979826;0.00543381764939783;0.00546693751987671;0.00550011033441016;0.00553333615397264;0.00556661503732576;0.00559994704100609;0.00563333221931314;0.00566677062429732;0.0057002623057479;0.00573380731118106;0.00576740568582796;0.00580105747262281;0.00583476271219105;0.00586852144283747;0.00590233370053443;0.0059361995189101;0.00597011892923675;0.00600409196041901;0.00603811863898232;0.0060721989890612;0.00610633303238773;0.00614052078828002;0.00617476227363066;0.00620905750289535;0.00624340648808137;0.00627780923873624;0.0063122657619364;0.00634677606227583;0.00638134014185485;0.00641595800026893;0.00645062963459735;0.00648535503939221;0.00652013420666724;0.00655496712588674;0.00658985378395465;0.00662479416520342;0.00665978825138318;0.00669483602165082;0.00672993745255913;0.00676509251804594;0.00680030118942352;0.00683556343536762;0.00687087922190698;0.00690624851241261;0.00694167126758721;0.00697714744545466;0.00701267700134947;0.00704825988790636;0.00708389605504983;0.00711958544998381;0.00715532801718132;0.00719112369837428;0.00722697243254317;0.00726287415590692;0.00729882880191279;0.00733483630122624;0.00737089658172098;0.00740700956846889;0.00744317518373013;0.00747939334694328;0.00751566397471543;0.00755198698081245;0.00758836227614927;0.00762478976878012;0.00766126936388893;0.00769780096377973;0.00773438446786714;0.00777101977266688;0.00780770677178631;0.00784444535591502;0.00788123541281559;0.00791807682731424;0.00795496948129161;0.00799191325367362;0.00802890802042233;0.00806595365452684;0.00810305002599434;0.00814019700184109;0.00817739444608359;0.00821464221972963;0.00825194018076957;0.00828928818416756;0.0083266860818529;0.00836413372271132;0.00840163095257653;0.00843917761422159;0.00847677354735049;0.00851441858858978;0.0085521125714801;0.0085898553264681;0.00862764668089797;0.00866548645900342;0.00870337448189951;0.00874131056757457;0.00877929453088222;0.00881732618353346;0.0088554053340887;0.00889353178795001;0.00893170534735332;0.00896992581136071;0.00900819297585279;0.00904650663352107;0.00908486657386049;0.00912327258316188;0.00916172444450464;0.00920022193774929;0.00923876483953036;0.00927735292324897;0.0093159859590658;0.00935466371389393;0.00939338595139185;0.0094321524319565;0.00947096291271629;0.00950981714752431;0.00954871488695155;0.00958765587828016;0.00962663986549678;0.00966566658928605;0.00970473578702392;0.00974384719277134;0.00978300053726775;0.00982219554792484;0.00986143194882025;0.00990070946069135;0.0099400278009291;0.00997938668357203;0.0100187858193002;0.0100582249154293;0.0100977036759047;0.0101372218012957;0.01017677898879;0.0102163749321875;0.0102560093218952;0.0102956818449215;0.0103353921848709;0.0103751400219381;0.0104149250329032;0.0104547468911263;0.0104946052665421;0.0105344998256552;0.0105744302315346;0.0106143961438089;0.0106543972186615;0.0106944331088256;0.0107345034635795;0.0107746079287419;0.0108147461466673;0.0108549177562413;0.0108951223928764;0.010935359688507;0.010975629271586;0.0110159307670795;0.0110562637964633;0.0110966279777186;0.0111370229253276;0.0111774482502703;0.0112179035600195;0.011258388458538;0.0112989025462742;0.0113394454201587;0.0113800166736003;0.0114206158964832;0.0114612426751627;0.0115018965924621;0.0115425772276698;0.0115832841565354;0.011624016951267;0.0116647751805277;0.0117055584094329;0.0117463661995474;0.0117871981088822;0.0118280536918919;0.011868932499472;0.0119098340789561;0.0119507579741136;0.0119917037251469;0.0120326708686893;0.0120736589378022;0.0121146674619735;0.0121556959671148;0.0121967439755595;0.0122378110060608;0.0122788965737901;0.0123200001903342;0.0123611213636946;0.0124022595982848;0.0124434143949294;0.0124845852508622;0.0125257716597247;0.0125669731115647;0.0126081890928351;0.0126494190863927;0.0126906625714966;0.0127319190238077;0.0127731879153873;0.0128144687146963;0.0128557608865941;0.0128970638923385;0.0129383771895841;0.0129797002323824;0.0130210324711811;0.0130623733528234;0.0131037223205477;0.0131450788139878;0.0131864422691718;0.013227812118523;0.0132691877908589;0.013310568711392;0.0133519543017293;0.013393343979873;0.0134347371602205;0.0134761332535648;0.0135175316670951;0.013558931804397;0.0136003330654535;0.0136417348466455;0.0136831365407524;0.0137245375369534;0.0137659372208281;0.0138073349743574;0.0138487301759252;0.0138901222003188;0.0139315104187309;0.0139728941987605;0.0140142729044144;0.014055645896109;0.0140970125306716;0.0141383721613421;0.014179724137775;0.0142210678060412;0.0142624025086298;0.0143037275844501;0.014345042368834;0.0143863461935379;0.0144276383867453;0.0144689182730687;0.0145101851735525;0.0145514384056753;0.0145926772833527;0.0146339011169396;0.0146751092132337;0.0147163008754775;0.0147574754033622;0.0147986320930298;0.0148397702370772;0.0148808891245584;0.0149219880409888;0.0149630662683479;0.0150041230850829;0.0150451577661127;0.0150861695828308;0.0151271578031099;0.0151681216913049;0.0152090605082574;0.0152499735112994;0.0152908599542575;0.015331719087457;0.0153725501577262;0.0154133524084007;0.0154541250793279;0.0154948674068714;0.0155355786239159;0.0155762579598713;0.0156169046406781;0.0156575178888119;0.0156980969232886;0.015738640959669;0.0157791492100646;0.015819620883142;0.0158600551841291;0.0159004513148196;0.015940808473579;0.0159811258553503;0.0160214026516591;0.0160616380506197;0.016101831236941;0.0161419813919321;0.0161820876935087;0.0162221493161987;0.0162621654311489;0.0163021352061308;0.0163420578055472;0.0163819323904387;0.01642175811849;0.0164615341440367;0.0165012596180719;0.0165409336882532;0.0165805554989092;0.0166201241910468;0.016659638902358;0.0166990987672274;0.0167385029167391;0.016777850478684;0.0168171405775676;0.0168563723346172;0.0168955448677892;0.0169346572917774;0.0169737087180206;0.0170126982547098;0.0170516250067972;0.0170904880760033;0.0171292865608255;0.0171680195565462;0.0172066861552411;0.0172452854457875;0.0172838165138729;0.0173222784420034;0.0173606703095124;0.0173989911925696;0.0174372401641892;0.0174754162942395;0.0175135186494514;0.0175515462934279;0.0175894982866526;0.0176273736864999;0.0176651715472435;0.0177028909200663;0.01774053085307;0.0177780903912842;0.0178155685766767;0.0178529644481627;0.0178902770416155;0.0179275053898754;0.0179646485227607;0.0180017054670774;0.0180386752466294;0.0180755568822289;0.0181123493917068;0.0181490517899233;0.0181856630887784;0.0182221822972225;0.0182586084212671;0.0182949404639958;0.0183311774255754;0.0183673183032665;0.0184033620914347;0.0184393077815623;0.0184751543622587;0.0185109008192725;0.0185465461355029;0.0185820892910106;0.0186175292630303;0.0186528650259817;0.0186880955514817;0.0187232198083563;0.0187582367626523;0.0187931453776497;0.0188279446138735;0.0188626334291062;0.0188972107784002;0.0189316756140897;0.018966026885804;0.0190002635404793;0.0190343845223718;0.0190683887730704;0.0191022752315096;0.0191360428339821;0.0191696905141523;0.019203217203069;0.0192366218291787;0.0192699033183391;0.0193030605938321;0.0193360925763775;0.0193689981841464;0.0194017763327749;0.0194344259353776;0.0194669459025618;0.0194993351424409;0.0195315925606485;0.0195637170603529;0.0195957075422703;0.0196275629046798;0.0196592820434375;0.0196908638519908;0.0197223072213925;0.0197536110403162;0.0197847741950701;0.0198157955696123;0.0198466740455651;0.0198774085022304;0.0199079978166042;0.0199384408633918;0.0199687365150233;0.0199988836416682;0.020028881111251;0.0200587277894667;0.0200884225397961;0.0201179642235214;0.0201473516997418;0.0201765838253892;0.020205659455244;0.020234577441951;0.0202633366360355;0.020291935885919;0.0203203740379356;0.0203486499363482;0.0203767624233645;0.0204047103391538;0.020432492521863;0.0204601078076336;0.0204875550306177;0.0205148330229955;0.0205419406149913;0.0205688766348906;0.0205956399090575;0.0206222292619508;0.020648643516142;0.0206748814923318;0.0207009420093679;0.0207268238842619;0.0207525259322066;0.0207780469665943;0.0208033857990334;0.0208285412393665;0.0208535120956883;0.020878297174363;0.0209028952800423;0.0209273052156838;0.0209515257825682;0.0209755557803181;0.0209993940069161;0.0210230392587226;0.0210464903304949;0.0210697460154048;0.0210928051050577;0.0211156663895112;0.021138328657293;0.0211607906954207;0.0211830512894198;0.0212051092233429;0.0212269632797886;0.0212486122399205;0.0212700548834864;0.0212912899888375;0.0213123163329474;0.0213331326914318;0.0213537378385675;0.0213741305473122;0.0213943095893242;0.0214142737349813;0.0214340217534013;0.0214535524124615;0.0214728644788182;0.0214919567179271;0.0215108278940632;0.0215294767703405;0.0215479021087327;0.021566102670093;0.0215840772141744;0.0216018244996503;0.0216193432841346;0.0216366323242026;0.0216536903754111;0.0216705161923194;0.0216871085285099;0.0217034661366086;0.0217195877683065;0.02173547217438;0.0217511181047122;0.0217665243083139;0.0217816895333444;0.0217966125271333;0.021811292036201;0.021825726806281;0.0218399155823402;0.0218538571086012;0.0218675501285635;0.021880993385025;0.021894185620104;0.0219071255752605;0.0219198119913184;0.0219322436084871;0.0219444191663836;0.0219563374040542;0.021967997059997;0.0219793968721838;0.021990535578082;0.0220014119146775;0.0220120246184963;0.0220223724256277;0.0220324540717458;0.0220422682921327;0.0220518138217011;0.0220610893950162;0.0220700937463195;0.0220788256095504;0.0220872837183699;0.0220954668061832;0.0221033736061624;0.02211100285127;0.0221183532742814;0.0221254236078085;0.0221322125843227;0.0221387189361781;0.0221449413956349;0.0221508786948827;0.0221565295660639;0.0221618927412975;0.0221669669527021;0.02217175093242;0.0221762434126404;0.0221804431256237;0.0221843488037246;0.0221879591794167;0.0221912729853155;0.0221942889542031;0.0221970058190519;0.0221994223130485;0.0222015371696183;0.0222033491224491;0.0222048569055155;0.0222060592531036;0.0222069548998346;0.0222075425806899;0.0222078210310349;0.0222077889866442;0.0222074451837253;0.0222067883589439;0.0222058172494483;0.0222045305928941;0.0222029271274689;0.0222010055919171;0.022198764725565;0.0221962032683452;0.0221933199608223;0.0221901135442173;0.0221865827604326;0.0221827263520777;0.0221785430624938;0.0221740316357794;0.0221691908168152;0.0221640193512895;0.0221585159857239;0.022152679467498;0.0221465085448756;0.0221400019670297;0.0221331584840681;0.0221259768470592;0.0221184558080573;0.0221105941201285;0.0221023905373766;0.0220938438149682;0.0220849527091593;0.0220757159773207;0.0220661323779637;0.0220562006707666;0.0220459196166004;0.0220352879775545;0.0220243045169635;0.0220129679994325;0.0220012771908637;0.0219892308584827;0.0219768277708642;0.021964066697959;0.0219509464111195;0.0219374656831268;0.0219236232882163;0.0219094180021051;0.0218948486020174;0.021879913866712;0.0218646125765079;0.0218489435133116;0.0218329054606434;0.0218164972036641;0.0217997175292016;0.0217825652257779;0.0217650390836353;0.0217471378947638;0.0217288604529277;0.0217102055536922;0.0216911719944508;0.0216717585744516;0.021651964094825;0.0216317873586099;0.0216112271707815;0.0215902823382775;0.0215689516700262;0.0215472339769727;0.0215251280721066;0.0215026327704889;0.0214797468892794;0.0214564692477637;0.021432798667381;0.0214087339717505;0.0213842739866995;0.0213594175402908;0.0213341634628491;0.0213085105869897;0.0212824577476449;0.0212560037820922;0.0212291475299812;0.0212018878333615;0.02117422353671;0.0211461534869588;0.0211176765335223;0.0210887915283252;0.0210594973258299;0.0210297927830643;0.0209996767596496;0.0209691481178275;0.0209382057224885;0.0209068484411992;0.0208750751442305;0.020842884704585;0.0208102759980249;0.0207772479030999;0.0207437993011751;0.0207099290764587;0.02067563611603;0.0206409193098672;0.0206057775508754;0.0205702097349146;0.0205342147608274;0.0204977915304673;0.0204609389487264;0.0204236559235634;0.0203859413660319;0.0203477941903082;0.0203092133137194;0.0202701976567714;0.020230746143177;0.020190857699884;0.0201505312571035;0.0201097657483373;0.0200685601104072;0.0200269132834817;0.0199848242111055;0.0199422918402268;0.0198993151212255;0.0198558930079418;0.0198120244577041;0.0197677084313573;0.0197229438932907;0.0196777298114666;0.0196320651574482;0.0195859489064282;0.0195393800372564;0.0194923575324687;0.0194448803783146;0.0193969475647859;0.019348558085645;0.0192997109384527;0.0192504051245967;0.0192006396493202;0.0191504135217495;0.0190997257549227;0.0190485753658179;0.0189969613753813;0.0189448828085557;0.0188923386943085;0.0188393280656603;0.0187858499597128;0.0187319034176773;0.0186774874849029;0.0186226012109047;0.0185672436493922;0.0185114138582973;0.018455110899803;0.0183983338403711;0.018341081750771;0.0182833537061072;0.0182251487858485;0.0181664660738554;0.0181073046584087;0.0180476636322377;0.0179875420925484;0.0179269391410516;0.0178658538839913;0.0178042854321725;0.01774223290099;0.0176796954104559;0.0176166720852282;0.0175531620546388;0.0174891644527217;0.0174246784182411;0.0173597030947194;0.0172942376304655;0.0172282811786028;0.0171618328970972;0.0170948919487855;0.0170274575014029;0.0169595287276116;0.0168911048050285;0.0168221849162531;0.016752768248896;0.0166828539956064;0.0166124413541001;0.0165415295271879;0.0164701177228029;0.0163982051540287;0.0163257910391276;0.0162528746015679;0.016179455070052;0.0161055316785444;0.0160311036662993;0.0159561702778886;0.0158807307632293;0.0158047843776117;0.0157283303817268;0.015651368041694;0.0155738966290892;0.0154959154209719;0.0154174236999132;0.0153384207540233;0.0152589058769791;0.0151788783680517;0.0150983375321339;0.0150172826797681;0.014935713127173;0.014853628196272;0.0147710272147199;0.0146879095159304;0.0146042744391039;0.0145201213292544;0.014435449537237;0.0143502584197752;0.0142645473394878;0.0141783156649169;0.0140915627705541;0.0140042880368685;0.0139164908503332;0.0138281706034528;0.0137393266947904;0.0136499585289943;0.0135600655168253;0.0134696470751837;0.013378702627136;0.0132872316019417;0.0131952334350806;0.013102707568279;0.0130096534495371;0.0129160705331552;0.0128219582797607;0.0127273161563346;0.0126321436362382;0.0125364401992397;0.0124402053315406;0.0123434385258024;0.0122461392811728;0.0121483071033125;0.012049941504421;0.0119510420032635;0.0118516081251968;0.0117516394021958;0.0116511353728793;0.0115500955825369;0.0114485195831541;0.0113464069334393;0.0112437571988492;0.0111405699516152;0.0110368447707688;0.010932581242168;0.0108277789585228;0.0107224375194214;0.0106165565313551;0.010510135607745;0.0104031743689668;0.0102956724423769;0.0101876294623378;0.0100790450702434;0.00996991891454458;0.00986025065077467;0.00975003994157455;0.00963928645671813;0.00952798987313748;0.0094161498749479;0.00930376615347321;0.00919083840727075;0.00907736634215623;0.00896334967122888;0.00884878811489629;0.00873368140089908;0.00861802926433593;0.00850183144768805;0.00838508770084402;0.00826779778112436;0.00814996145330591;0.00803157848964654;0.00791264866990946;0.00779317178138749;0.00767314761892755;0.00755257598495482;0.00743145668949677;0.00730978955020755;0.00718757439239176;0.00706481104902866;0.00694149936079604;0.00681763917609391;0.00669323035106852;0.00656827274963604;0.00644276624350604;0.00631671071220536;0.0061901060431015;0.006062952131426;0.00593524888029807;0.00580699620074764;0.00567819401173886;0.00554884224019323;0.00541894082101253;0.00528848969710218;0.00515748881939405;0.00502593814686929;0.00489383764658139;0.00476118729367882;0.00462798707142765;0.00449423697123439;0.00435993699266828;0.00422508714348402;0.00408968743964404;0.00395373790534074;0.00381723857301899;0.00368018948339813;0.00354259068549404;0.00340444223664131;0.00326574420251518;0.00312649665715319;0.00298669968297734;0.00284635337081542;0.00270545781992298;0.00256401313800475;0.00242201944123601;0.0022794768542842;0.00213638551033019;0.00199274555108931;0.00184855712683285;0.00170382039640892;0.00155853552726339;0.00141270269546109;0.00126632208570627;0.00111939389136366;0.000971918314479012;0.000823895565799559;0.000675325864794748;0.000526209439676531;0.000376546527419557;0.000226337373781674;7.55822333239443e-005]|9|8|on"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"fir_coef"
		Location		[609, 271, 1389, 957]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 68, 60, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 193, 60, 207]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_gen"
		  Ports			  [1, 1]
		  Position		  [130, 109, 220, 141]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "1024 coefs in bram\n9_8 out/1"
		  UserDataPersistent	  on
		  UserData		  "DataTag57"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Coefficient Generator"
		  MaskDescription	  "A coefficient generator."
		  MaskHelp		  "<pre>\nDescription::\n\nA coefficient generator.\n\nMask Parameters::\n\nCoefficiants (coefs): The coefficients to output.  These should be specified as doubles.\nThey will be rounded/saturated according to the specified number of bits (n_bits)\nand binary point (bin_pt).\n\nNumber of Coefficient Bits (n_bits): The number of bits used for the fixed point binary\nrepresentation of the coefficients.\n\nCoefficient Binary Point (bin_pt): The binary point of the fixed point binary representation\nof the coefficients.\n\nLog2 Cycles per Coefficient (log2_cpc): The log2 value of the number of cycles per coefficient.\nMust be a non-negative integer (i.e. cycles per coefficient must be a power of 2).  \n\nUse BRAM (use_bram): Check this checkbox to store coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Coefficients|Number of Bits|Binary Point|Log2 Cycles per Coefficient|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off"
		  MaskCallbackString	  "||||"
		  MaskEnableString	  "off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on"
		  MaskVarAliasString	  ",,,,"
		  MaskVariables		  "coefs=&1;n_bits=&2;bin_pt=&3;log2_cpc=&4;use_bram=&5;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "[1.30229478472013e-005;3.90815624059165e-005;6.51573367774649e-005;9.12505128142159e-005;0.000117361332654004;0.000143490038707315;0.000169636873644433;0.000195802080382638;0.000221985902073233;0.000248188582088693;0.00027441036400972;0.000300651491612275;0.00032691220885466;0.000353192759864432;0.00037949338892544;0.000405814340464771;0.000432155859039685;0.000458518189324518;0.000484901576097635;0.000511306264228219;0.00053773249866318;0.000564180524413982;0.000590650586543436;0.000617142930152563;0.000643657800367275;0.000670195442325197;0.000696756101162392;0.00072334002200008;0.000749947449931329;0.000776578630007802;0.000803233807226332;0.000829913226515637;0.00085661713272294;0.000883345770600572;0.000910099384792634;0.000936878219821494;0.000963682520074419;0.000990512529790111;0.00101736849304526;0.00104425065374103;0.00107115925558966;0.00109809454210086;0.00112505675656834;0.00115204614205629;0.0011790629413858;0.00120610739712138;0.00123317975155729;0.00126028024670401;0.00128740912427467;0.0013145666256714;0.00134175299197172;0.00136896846391498;0.00139621328188859;0.00142348768591449;0.00145079191563545;0.00147812621030134;0.0015054908087556;0.00153288594942139;0.00156031187028796;0.00158776880889696;0.00161525700232871;0.00164277668718846;0.00167032809959269;0.00169791147515534;0.00172552704897407;0.00175317505561652;0.00178085572910654;0.00180856930291045;0.00183631600992321;0.00186409608245468;0.00189190975221584;0.001919757250305;0.00194763880719397;0.00197555465271432;0.00200350501604353;0.00203149012569121;0.00205951020948525;0.00208756549455806;0.00211565620733274;0.00214378257350922;0.00217194481805049;0.00220014316516874;0.00222837783831153;0.002256649060148;0.00228495705255503;0.00231330203660339;0.00234168423254391;0.00237010385979366;0.00239856113692212;0.00242705628163739;0.00245558951077227;0.0024841610402705;0.00251277108517291;0.00254141985960361;0.00257010757675613;0.00259883444887969;0.00262760068726523;0.00265640650223175;0.00268525210311237;0.00271413769824061;0.00274306349493657;0.00277202969949308;0.00280103651716193;0.00283008415214012;0.00285917280755598;0.00288830268545549;0.00291747398678844;0.00294668691139467;0.00297594165799033;0.00300523842415407;0.00303457740631335;0.00306395879973069;0.00309338279848989;0.00312284959548233;0.00315235938239325;0.00318191234968804;0.00321150868659852;0.00324114858110932;0.00327083221994408;0.00330055978855185;0.00333033147109343;0.00336014745042765;0.00339000790809786;0.00341991302431814;0.0034498629779598;0.00347985794653768;0.00350989810619665;0.00353998363169792;0.0035701146964056;0.00360029147227299;0.00363051412982916;0.00366078283816534;0.00369109776492143;0.00372145907627252;0.00375186693691537;0.00378232151005492;0.00381282295739088;0.00384337143910425;0.00387396711384388;0.00390461013871314;0.00393530066925641;0.00396603885944579;0.00399682486166768;0.00402765882670945;0.0040585409037462;0.00408947124032728;0.00412044998236316;0.00415147727411206;0.00418255325816677;0.00421367807544131;0.00424485186515788;0.00427607476483351;0.00430734691026696;0.00433866843552555;0.00437003947293203;0.00440146015305152;0.00443293060467832;0.00446445095482291;0.00449602132869889;0.00452764184970998;0.00455931263943696;0.00459103381762476;0.00462280550216948;0.00465462780910543;0.00468650085259228;0.0047184247449021;0.00475039959640664;0.00478242551556433;0.00481450260890759;0.00484663098103001;0.00487881073457359;0.00491104197021601;0.00494332478665798;0.00497565928061048;0.00500804554678217;0.00504048367786674;0.00507297376453033;0.00510551589539899;0.0051381101570461;0.00517075663397987;0.00520345540863088;0.00523620656133964;0.0052690101703441;0.00530186631176739;0.00533477505960533;0.00536773648571416;0.00540075065979826;0.00543381764939783;0.00546693751987671;0.00550011033441016;0.00553333615397264;0.00556661503732576;0.00559994704100609;0.00563333221931314;0.00566677062429732;0.0057002623057479;0.00573380731118106;0.00576740568582796;0.00580105747262281;0.00583476271219105;0.00586852144283747;0.00590233370053443;0.0059361995189101;0.00597011892923675;0.00600409196041901;0.00603811863898232;0.0060721989890612;0.00610633303238773;0.00614052078828002;0.00617476227363066;0.00620905750289535;0.00624340648808137;0.00627780923873624;0.0063122657619364;0.00634677606227583;0.00638134014185485;0.00641595800026893;0.00645062963459735;0.00648535503939221;0.00652013420666724;0.00655496712588674;0.00658985378395465;0.00662479416520342;0.00665978825138318;0.00669483602165082;0.00672993745255913;0.00676509251804594;0.00680030118942352;0.00683556343536762;0.00687087922190698;0.00690624851241261;0.00694167126758721;0.00697714744545466;0.00701267700134947;0.00704825988790636;0.00708389605504983;0.00711958544998381;0.00715532801718132;0.00719112369837428;0.00722697243254317;0.00726287415590692;0.00729882880191279;0.00733483630122624;0.00737089658172098;0.00740700956846889;0.00744317518373013;0.00747939334694328;0.00751566397471543;0.00755198698081245;0.00758836227614927;0.00762478976878012;0.00766126936388893;0.00769780096377973;0.00773438446786714;0.00777101977266688;0.00780770677178631;0.00784444535591502;0.00788123541281559;0.00791807682731424;0.00795496948129161;0.00799191325367362;0.00802890802042233;0.00806595365452684;0.00810305002599434;0.00814019700184109;0.00817739444608359;0.00821464221972963;0.00825194018076957;0.00828928818416756;0.0083266860818529;0.00836413372271132;0.00840163095257653;0.00843917761422159;0.00847677354735049;0.00851441858858978;0.0085521125714801;0.0085898553264681;0.00862764668089797;0.00866548645900342;0.00870337448189951;0.00874131056757457;0.00877929453088222;0.00881732618353346;0.0088554053340887;0.00889353178795001;0.00893170534735332;0.00896992581136071;0.00900819297585279;0.00904650663352107;0.00908486657386049;0.00912327258316188;0.00916172444450464;0.00920022193774929;0.00923876483953036;0.00927735292324897;0.0093159859590658;0.00935466371389393;0.00939338595139185;0.0094321524319565;0.00947096291271629;0.00950981714752431;0.00954871488695155;0.00958765587828016;0.00962663986549678;0.00966566658928605;0.00970473578702392;0.00974384719277134;0.00978300053726775;0.00982219554792484;0.00986143194882025;0.00990070946069135;0.0099400278009291;0.00997938668357203;0.0100187858193002;0.0100582249154293;0.0100977036759047;0.0101372218012957;0.01017677898879;0.0102163749321875;0.0102560093218952;0.0102956818449215;0.0103353921848709;0.0103751400219381;0.0104149250329032;0.0104547468911263;0.0104946052665421;0.0105344998256552;0.0105744302315346;0.0106143961438089;0.0106543972186615;0.0106944331088256;0.0107345034635795;0.0107746079287419;0.0108147461466673;0.0108549177562413;0.0108951223928764;0.010935359688507;0.010975629271586;0.0110159307670795;0.0110562637964633;0.0110966279777186;0.0111370229253276;0.0111774482502703;0.0112179035600195;0.011258388458538;0.0112989025462742;0.0113394454201587;0.0113800166736003;0.0114206158964832;0.0114612426751627;0.0115018965924621;0.0115425772276698;0.0115832841565354;0.011624016951267;0.0116647751805277;0.0117055584094329;0.0117463661995474;0.0117871981088822;0.0118280536918919;0.011868932499472;0.0119098340789561;0.0119507579741136;0.0119917037251469;0.0120326708686893;0.0120736589378022;0.0121146674619735;0.0121556959671148;0.0121967439755595;0.0122378110060608;0.0122788965737901;0.0123200001903342;0.0123611213636946;0.0124022595982848;0.0124434143949294;0.0124845852508622;0.0125257716597247;0.0125669731115647;0.0126081890928351;0.0126494190863927;0.0126906625714966;0.0127319190238077;0.0127731879153873;0.0128144687146963;0.0128557608865941;0.0128970638923385;0.0129383771895841;0.0129797002323824;0.0130210324711811;0.0130623733528234;0.0131037223205477;0.0131450788139878;0.0131864422691718;0.013227812118523;0.0132691877908589;0.013310568711392;0.0133519543017293;0.013393343979873;0.0134347371602205;0.0134761332535648;0.0135175316670951;0.013558931804397;0.0136003330654535;0.0136417348466455;0.0136831365407524;0.0137245375369534;0.0137659372208281;0.0138073349743574;0.0138487301759252;0.0138901222003188;0.0139315104187309;0.0139728941987605;0.0140142729044144;0.014055645896109;0.0140970125306716;0.0141383721613421;0.014179724137775;0.0142210678060412;0.0142624025086298;0.0143037275844501;0.014345042368834;0.0143863461935379;0.0144276383867453;0.0144689182730687;0.0145101851735525;0.0145514384056753;0.0145926772833527;0.0146339011169396;0.0146751092132337;0.0147163008754775;0.0147574754033622;0.0147986320930298;0.0148397702370772;0.0148808891245584;0.0149219880409888;0.0149630662683479;0.0150041230850829;0.0150451577661127;0.0150861695828308;0.0151271578031099;0.0151681216913049;0.0152090605082574;0.0152499735112994;0.0152908599542575;0.015331719087457;0.0153725501577262;0.0154133524084007;0.0154541250793279;0.0154948674068714;0.0155355786239159;0.0155762579598713;0.0156169046406781;0.0156575178888119;0.0156980969232886;0.015738640959669;0.0157791492100646;0.015819620883142;0.0158600551841291;0.0159004513148196;0.015940808473579;0.0159811258553503;0.0160214026516591;0.0160616380506197;0.016101831236941;0.0161419813919321;0.0161820876935087;0.0162221493161987;0.0162621654311489;0.0163021352061308;0.0163420578055472;0.0163819323904387;0.01642175811849;0.0164615341440367;0.0165012596180719;0.0165409336882532;0.0165805554989092;0.0166201241910468;0.016659638902358;0.0166990987672274;0.0167385029167391;0.016777850478684;0.0168171405775676;0.0168563723346172;0.0168955448677892;0.0169346572917774;0.0169737087180206;0.0170126982547098;0.0170516250067972;0.0170904880760033;0.0171292865608255;0.0171680195565462;0.0172066861552411;0.0172452854457875;0.0172838165138729;0.0173222784420034;0.0173606703095124;0.0173989911925696;0.0174372401641892;0.0174754162942395;0.0175135186494514;0.0175515462934279;0.0175894982866526;0.0176273736864999;0.0176651715472435;0.0177028909200663;0.01774053085307;0.0177780903912842;0.0178155685766767;0.0178529644481627;0.0178902770416155;0.0179275053898754;0.0179646485227607;0.0180017054670774;0.0180386752466294;0.0180755568822289;0.0181123493917068;0.0181490517899233;0.0181856630887784;0.0182221822972225;0.0182586084212671;0.0182949404639958;0.0183311774255754;0.0183673183032665;0.0184033620914347;0.0184393077815623;0.0184751543622587;0.0185109008192725;0.0185465461355029;0.0185820892910106;0.0186175292630303;0.0186528650259817;0.0186880955514817;0.0187232198083563;0.0187582367626523;0.0187931453776497;0.0188279446138735;0.0188626334291062;0.0188972107784002;0.0189316756140897;0.018966026885804;0.0190002635404793;0.0190343845223718;0.0190683887730704;0.0191022752315096;0.0191360428339821;0.0191696905141523;0.019203217203069;0.0192366218291787;0.0192699033183391;0.0193030605938321;0.0193360925763775;0.0193689981841464;0.0194017763327749;0.0194344259353776;0.0194669459025618;0.0194993351424409;0.0195315925606485;0.0195637170603529;0.0195957075422703;0.0196275629046798;0.0196592820434375;0.0196908638519908;0.0197223072213925;0.0197536110403162;0.0197847741950701;0.0198157955696123;0.0198466740455651;0.0198774085022304;0.0199079978166042;0.0199384408633918;0.0199687365150233;0.0199988836416682;0.020028881111251;0.0200587277894667;0.0200884225397961;0.0201179642235214;0.0201473516997418;0.0201765838253892;0.020205659455244;0.020234577441951;0.0202633366360355;0.020291935885919;0.0203203740379356;0.0203486499363482;0.0203767624233645;0.0204047103391538;0.020432492521863;0.0204601078076336;0.0204875550306177;0.0205148330229955;0.0205419406149913;0.0205688766348906;0.0205956399090575;0.0206222292619508;0.020648643516142;0.0206748814923318;0.0207009420093679;0.0207268238842619;0.0207525259322066;0.0207780469665943;0.0208033857990334;0.0208285412393665;0.0208535120956883;0.020878297174363;0.0209028952800423;0.0209273052156838;0.0209515257825682;0.0209755557803181;0.0209993940069161;0.0210230392587226;0.0210464903304949;0.0210697460154048;0.0210928051050577;0.0211156663895112;0.021138328657293;0.0211607906954207;0.0211830512894198;0.0212051092233429;0.0212269632797886;0.0212486122399205;0.0212700548834864;0.0212912899888375;0.0213123163329474;0.0213331326914318;0.0213537378385675;0.0213741305473122;0.0213943095893242;0.0214142737349813;0.0214340217534013;0.0214535524124615;0.0214728644788182;0.0214919567179271;0.0215108278940632;0.0215294767703405;0.0215479021087327;0.021566102670093;0.0215840772141744;0.0216018244996503;0.0216193432841346;0.0216366323242026;0.0216536903754111;0.0216705161923194;0.0216871085285099;0.0217034661366086;0.0217195877683065;0.02173547217438;0.0217511181047122;0.0217665243083139;0.0217816895333444;0.0217966125271333;0.021811292036201;0.021825726806281;0.0218399155823402;0.0218538571086012;0.0218675501285635;0.021880993385025;0.021894185620104;0.0219071255752605;0.0219198119913184;0.0219322436084871;0.0219444191663836;0.0219563374040542;0.021967997059997;0.0219793968721838;0.021990535578082;0.0220014119146775;0.0220120246184963;0.0220223724256277;0.0220324540717458;0.0220422682921327;0.0220518138217011;0.0220610893950162;0.0220700937463195;0.0220788256095504;0.0220872837183699;0.0220954668061832;0.0221033736061624;0.02211100285127;0.0221183532742814;0.0221254236078085;0.0221322125843227;0.0221387189361781;0.0221449413956349;0.0221508786948827;0.0221565295660639;0.0221618927412975;0.0221669669527021;0.02217175093242;0.0221762434126404;0.0221804431256237;0.0221843488037246;0.0221879591794167;0.0221912729853155;0.0221942889542031;0.0221970058190519;0.0221994223130485;0.0222015371696183;0.0222033491224491;0.0222048569055155;0.0222060592531036;0.0222069548998346;0.0222075425806899;0.0222078210310349;0.0222077889866442;0.0222074451837253;0.0222067883589439;0.0222058172494483;0.0222045305928941;0.0222029271274689;0.0222010055919171;0.022198764725565;0.0221962032683452;0.0221933199608223;0.0221901135442173;0.0221865827604326;0.0221827263520777;0.0221785430624938;0.0221740316357794;0.0221691908168152;0.0221640193512895;0.0221585159857239;0.022152679467498;0.0221465085448756;0.0221400019670297;0.0221331584840681;0.0221259768470592;0.0221184558080573;0.0221105941201285;0.0221023905373766;0.0220938438149682;0.0220849527091593;0.0220757159773207;0.0220661323779637;0.0220562006707666;0.0220459196166004;0.0220352879775545;0.0220243045169635;0.0220129679994325;0.0220012771908637;0.0219892308584827;0.0219768277708642;0.021964066697959;0.0219509464111195;0.0219374656831268;0.0219236232882163;0.0219094180021051;0.0218948486020174;0.021879913866712;0.0218646125765079;0.0218489435133116;0.0218329054606434;0.0218164972036641;0.0217997175292016;0.0217825652257779;0.0217650390836353;0.0217471378947638;0.0217288604529277;0.0217102055536922;0.0216911719944508;0.0216717585744516;0.021651964094825;0.0216317873586099;0.0216112271707815;0.0215902823382775;0.0215689516700262;0.0215472339769727;0.0215251280721066;0.0215026327704889;0.0214797468892794;0.0214564692477637;0.021432798667381;0.0214087339717505;0.0213842739866995;0.0213594175402908;0.0213341634628491;0.0213085105869897;0.0212824577476449;0.0212560037820922;0.0212291475299812;0.0212018878333615;0.02117422353671;0.0211461534869588;0.0211176765335223;0.0210887915283252;0.0210594973258299;0.0210297927830643;0.0209996767596496;0.0209691481178275;0.0209382057224885;0.0209068484411992;0.0208750751442305;0.020842884704585;0.0208102759980249;0.0207772479030999;0.0207437993011751;0.0207099290764587;0.02067563611603;0.0206409193098672;0.0206057775508754;0.0205702097349146;0.0205342147608274;0.0204977915304673;0.0204609389487264;0.0204236559235634;0.0203859413660319;0.0203477941903082;0.0203092133137194;0.0202701976567714;0.020230746143177;0.020190857699884;0.0201505312571035;0.0201097657483373;0.0200685601104072;0.0200269132834817;0.0199848242111055;0.0199422918402268;0.0198993151212255;0.0198558930079418;0.0198120244577041;0.0197677084313573;0.0197229438932907;0.0196777298114666;0.0196320651574482;0.0195859489064282;0.0195393800372564;0.0194923575324687;0.0194448803783146;0.0193969475647859;0.019348558085645;0.0192997109384527;0.0192504051245967;0.0192006396493202;0.0191504135217495;0.0190997257549227;0.0190485753658179;0.0189969613753813;0.0189448828085557;0.0188923386943085;0.0188393280656603;0.0187858499597128;0.0187319034176773;0.0186774874849029;0.0186226012109047;0.0185672436493922;0.0185114138582973;0.018455110899803;0.0183983338403711;0.018341081750771;0.0182833537061072;0.0182251487858485;0.0181664660738554;0.0181073046584087;0.0180476636322377;0.0179875420925484;0.0179269391410516;0.0178658538839913;0.0178042854321725;0.01774223290099;0.0176796954104559;0.0176166720852282;0.0175531620546388;0.0174891644527217;0.0174246784182411;0.0173597030947194;0.0172942376304655;0.0172282811786028;0.0171618328970972;0.0170948919487855;0.0170274575014029;0.0169595287276116;0.0168911048050285;0.0168221849162531;0.016752768248896;0.0166828539956064;0.0166124413541001;0.0165415295271879;0.0164701177228029;0.0163982051540287;0.0163257910391276;0.0162528746015679;0.016179455070052;0.0161055316785444;0.0160311036662993;0.0159561702778886;0.0158807307632293;0.0158047843776117;0.0157283303817268;0.015651368041694;0.0155738966290892;0.0154959154209719;0.0154174236999132;0.0153384207540233;0.0152589058769791;0.0151788783680517;0.0150983375321339;0.0150172826797681;0.014935713127173;0.014853628196272;0.0147710272147199;0.0146879095159304;0.0146042744391039;0.0145201213292544;0.014435449537237;0.0143502584197752;0.0142645473394878;0.0141783156649169;0.0140915627705541;0.0140042880368685;0.0139164908503332;0.0138281706034528;0.0137393266947904;0.0136499585289943;0.0135600655168253;0.0134696470751837;0.013378702627136;0.0132872316019417;0.0131952334350806;0.013102707568279;0.0130096534495371;0.0129160705331552;0.0128219582797607;0.0127273161563346;0.0126321436362382;0.0125364401992397;0.0124402053315406;0.0123434385258024;0.0122461392811728;0.0121483071033125;0.012049941504421;0.0119510420032635;0.0118516081251968;0.0117516394021958;0.0116511353728793;0.0115500955825369;0.0114485195831541;0.0113464069334393;0.0112437571988492;0.0111405699516152;0.0110368447707688;0.010932581242168;0.0108277789585228;0.0107224375194214;0.0106165565313551;0.010510135607745;0.0104031743689668;0.0102956724423769;0.0101876294623378;0.0100790450702434;0.00996991891454458;0.00986025065077467;0.00975003994157455;0.00963928645671813;0.00952798987313748;0.0094161498749479;0.00930376615347321;0.00919083840727075;0.00907736634215623;0.00896334967122888;0.00884878811489629;0.00873368140089908;0.00861802926433593;0.00850183144768805;0.00838508770084402;0.00826779778112436;0.00814996145330591;0.00803157848964654;0.00791264866990946;0.00779317178138749;0.00767314761892755;0.00755257598495482;0.00743145668949677;0.00730978955020755;0.00718757439239176;0.00706481104902866;0.00694149936079604;0.00681763917609391;0.00669323035106852;0.00656827274963604;0.00644276624350604;0.00631671071220536;0.0061901060431015;0.006062952131426;0.00593524888029807;0.00580699620074764;0.00567819401173886;0.00554884224019323;0.00541894082101253;0.00528848969710218;0.00515748881939405;0.00502593814686929;0.00489383764658139;0.00476118729367882;0.00462798707142765;0.00449423697123439;0.00435993699266828;0.00422508714348402;0.00408968743964404;0.00395373790534074;0.00381723857301899;0.00368018948339813;0.00354259068549404;0.00340444223664131;0.00326574420251518;0.00312649665715319;0.00298669968297734;0.00284635337081542;0.00270545781992298;0.00256401313800475;0.00242201944123601;0.0022794768542842;0.00213638551033019;0.00199274555108931;0.00184855712683285;0.00170382039640892;0.00155853552726339;0.00141270269546109;0.00126632208570627;0.00111939389136366;0.000971918314479012;0.000823895565799559;0.000675325864794748;0.000526209439676531;0.000376546527419557;0.000226337373781674;7.55822333239443e-005]|9|8|0|on"
		  MaskTabNameString	  ",,,,"
		  System {
		    Name		    "c_gen"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1023"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 50 50 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "1024"
		    initVector		
		    distributed_mem	    "Block RAM"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "8"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[7 15 27 39 47 47 43 47 47 36 47 39 27 15 7 18 7 7 11 7 7 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "coef_out"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mem"
		    SrcPort		    1
		    DstBlock		    "coef_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "data_delay"
		  Ports			  [1, 1]
		  Position		  [145, 17, 200, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sum_delay"
		  Ports			  [1, 1]
		  Position		  [145, 62, 200, 88]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [145, 187, 200, 213]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [295, 23, 325, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [295, 68, 325, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "coef"
		  Position		  [295, 118, 325, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [295, 193, 325, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_gen"
		  SrcPort		  1
		  DstBlock		  "coef"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_delay"
		  SrcPort		  1
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "sum_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [25, 0]
		  Branch {
		    Points		    [0, -75]
		    DstBlock		    "c_gen"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "sync_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_delay"
		  SrcPort		  1
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  DstBlock		  "data_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_core"
	      Ports		      [4, 3]
	      Position		      [270, 29, 360, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "delay 0 in slr"
	      UserDataPersistent      on
	      UserData		      "DataTag58"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Core"
	      MaskDescription	      "A Finite Impluse Response Filter core with complex inputs and real coefficients.  This FIR filter core does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter core with complex inputs and real coefficients.\n\nThis Finite Impluse Response Filter core is designed to be paired with a FIR Coefficient Generator \nto form a FIR filter tap.  This FIR filter core does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (use_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	      MaskPromptString	      "Tap Delay|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	      MaskStyleString	      "edit,edit,edit,edit,edit,checkbox,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "delay=&1;n_bits_d=&2;bin_pt_d=&3;n_bits_s=&4;bin_pt_s=&5;use_bram=&6;mult_latency=&7;add_latency=&8;add_bypass=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "0|8|7|17|15|off|3|1|off"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"fir_core"
		Location		[282, 135, 1062, 821]
		Open			on
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 223, 60, 237]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "coef"
		  Position		  [30, 183, 60, 197]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 278, 60, 292]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_d"
		  Ports			  [1, 2]
		  Position		  [120, 69, 160, 111]
		  AttributesFormatString  "8_7 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag59"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|7"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_d"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_s"
		  Ports			  [1, 2]
		  Position		  [120, 209, 160, 251]
		  AttributesFormatString  "17_15 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag60"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "17|15"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_s"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_im"
		  Ports			  [1, 1]
		  Position		  [345, 175, 390, 205]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_re"
		  Ports			  [1, 1]
		  Position		  [345, 80, 390, 110]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "dout_delay"
		  Ports			  [1, 1]
		  Position		  [255, 17, 310, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_im"
		  Ports			  [3, 1]
		  Position		  [255, 164, 305, 216]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag61"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_im"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_re"
		  Ports			  [3, 1]
		  Position		  [255, 69, 305, 121]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag62"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_re"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [455, 119, 495, 161]
		  UserDataPersistent	  on
		  UserData		  "DataTag63"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskInitialization	  "ri_to_c_init(gcb);"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [255, 272, 310, 298]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "tap_delay"
		  Ports			  [1, 1]
		  Position		  [440, 14, 500, 46]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "slr depth = 0"
		  UserDataPersistent	  on
		  UserData		  "DataTag64"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "SLR16 Delay"
		  MaskDescription	  "A delay block that uses SLR16 elements for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		  MaskPromptString	  "Delay Depth"
		  MaskStyleString	  "edit"
		  MaskTunableValueString  "off"
		  MaskEnableString	  "off"
		  MaskVisibilityString	  "on"
		  MaskToolTipString	  "on"
		  MaskVariables		  "delay_depth=&1;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "0"
		  System {
		    Name		    "tap_delay"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "0"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,d74ee26d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 46 46 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[5 12 23 34 41 41 38 41 41 31 41 34 23 12 5 15 5 5 8 5 5 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 46 46 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-0}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [555, 23, 585, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [555, 133, 585, 147]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 278, 585, 292]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "convert_im"
		  SrcPort		  1
		  Points		  [20, 0; 0, -40]
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "convert_re"
		  SrcPort		  1
		  Points		  [20, 0; 0, 35]
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "tap_delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_im"
		  SrcPort		  1
		  DstBlock		  "convert_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_re"
		  SrcPort		  1
		  DstBlock		  "convert_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  2
		  Points		  [75, 0]
		  DstBlock		  "mult_add_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  1
		  Points		  [75, 0]
		  DstBlock		  "mult_add_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "c_to_ri_s"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "coef"
		  SrcPort		  1
		  Points		  [140, 0]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "mult_add_re"
		    DstPort		    2
		  }
		  Branch {
		    DstBlock		    "mult_add_im"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  2
		  Points		  [20, 0; 0, 75]
		  DstBlock		  "mult_add_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  1
		  DstBlock		  "mult_add_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  Points		  [35, 0]
		  Branch {
		    Points		    [0, 60]
		    DstBlock		    "c_to_ri_d"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "dout_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "dout_delay"
		  SrcPort		  1
		  DstBlock		  "tap_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "data_out"
	      Position		      [435, 23, 465, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [435, 58, 465, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [435, 93, 465, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      3
	      Points		      [25, 0; 0, 15]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      2
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      1
	      Points		      [25, 0; 0, -15]
	      DstBlock		      "data_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, -15]
	      DstBlock		      "fir_coef"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "fir_coef"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "data_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, 15]
	      DstBlock		      "fir_coef"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      4
	      DstBlock		      "fir_core"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      3
	      DstBlock		      "fir_core"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      2
	      DstBlock		      "fir_core"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      1
	      DstBlock		      "fir_core"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  Outport
	  Name			  "out"
	  Position		  [1150, 13, 1180, 27]
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "sync_out"
	  Position		  [1150, 83, 1180, 97]
	  Port			  "2"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Line {
	  SrcBlock		  "in"
	  SrcPort		  1
	  DstBlock		  "fir_tap_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "sync_in"
	  SrcPort		  1
	  DstBlock		  "fir_tap_1"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_tap_1"
	  SrcPort		  1
	  DstBlock		  "fir_tap_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_tap_1"
	  SrcPort		  2
	  DstBlock		  "fir_tap_2"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "fir_tap_1"
	  SrcPort		  3
	  DstBlock		  "fir_tap_2"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_tap_2"
	  SrcPort		  1
	  DstBlock		  "fir_tap_3"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_tap_2"
	  SrcPort		  2
	  DstBlock		  "fir_tap_3"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "fir_tap_2"
	  SrcPort		  3
	  DstBlock		  "fir_tap_3"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_tap_3"
	  SrcPort		  1
	  DstBlock		  "fir_tap_4"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_tap_3"
	  SrcPort		  2
	  DstBlock		  "fir_tap_4"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "fir_tap_3"
	  SrcPort		  3
	  DstBlock		  "fir_tap_4"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_tap_4"
	  SrcPort		  1
	  DstBlock		  "fir_tap_5"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_tap_4"
	  SrcPort		  2
	  DstBlock		  "fir_tap_5"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "fir_tap_4"
	  SrcPort		  3
	  DstBlock		  "fir_tap_5"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_tap_5"
	  SrcPort		  1
	  DstBlock		  "fir_tap_6"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_tap_5"
	  SrcPort		  2
	  DstBlock		  "fir_tap_6"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "fir_tap_5"
	  SrcPort		  3
	  DstBlock		  "fir_tap_6"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_tap_6"
	  SrcPort		  1
	  DstBlock		  "fir_quantize"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_tap_6"
	  SrcPort		  2
	  DstBlock		  "fir_quantize"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "fir_tap_6"
	  SrcPort		  3
	  DstBlock		  "fir_quantize"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_quantize"
	  SrcPort		  1
	  DstBlock		  "out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_quantize"
	  SrcPort		  2
	  DstBlock		  "sync_out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant"
	  SrcPort		  1
	  DstBlock		  "fir_tap_1"
	  DstPort		  2
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "fir_2"
      Ports		      [2, 2]
      Position		      [365, 322, 455, 378]
      BackgroundColor	      "[0.501961, 1.000000, 0.501961]"
      AttributesFormatString  "6 taps\n9_8 coefs\n8_7 in\n9_7 out"
      AncestorBlock	      "newfft_library/FIR/fir"
      UserDataPersistent      on
      UserData		      "DataTag65"
      MinAlgLoopOccurrences   off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      MaskType		      "FIR Filter"
      MaskDescription	      "A Finite Impluse Response Filter.  This FIR filter does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter.\n\nThis Finite Impluse Response Filter does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nCoefficiant(s) (coefs): Matrix of real double(s) to use as coefficient(s).\nOne column per tap.  Multiple rows will create a WOLA filter.\nThese should be specified as doubles.  They will be rounded/saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Bits Out (n_bits_o): Specifies the width of the output (overflow wraps).\nThe internal adders will use a bit width of (n_bits_o-bin_pt_o+bin_pt_c+bin_pt_d).\n\nBinary Point Out (bin_pt_o): Specifies the binary point of the output (quantization truncates).\nThe internal adders will use a binary point of (bin_pt_c+bin_pt_d).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n</pre>"
      MaskPromptString	      "Tap Coefficients|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Bits Out|Binary Point Out|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Show Sub-Block Options|Sub-Block Masks"
      MaskStyleString	      "edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox,popup(Keep|DumbDown|Unmask)"
      MaskTunableValueString  "on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskCallbackString      "|||||||||||mvs=get_param(gcb,'MaskVisibilityString');\nif strcmp(get_param(gcb,'show_sbo'),'on')\n  onoff='on';\nelse\n  onoff='off';\nend\nmvs=regexprep(mvs,'o[nf]*$',onoff);\nset_param(gcb,'MaskVisibilityString',mvs);\n|"
      MaskEnableString	      "on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskVisibilityString    "on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskToolTipString	      "on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskVarAliasString      ",,,,,,,,,,,,"
      MaskVariables	      "coefs=@1;n_bits_c=@2;bin_pt_c=@3;n_bits_d=@4;bin_pt_d=@5;n_bits_o=@6;bin_pt_o=@7;coef_bram=@8;delay_bram=@9;mult_latency=@10;add_latency=@11;show_sbo=@12;munge_submasks=@13;"
      MaskInitialization      "tic\nfir_init(gcb, ...\n  coefs, ...\n  n_bits_c, ...\n  bin_pt_c, ...\n  n_bits_d, ...\n  bin_pt_d, ...\n  n_bits_o, ...\n  bin_pt_o, ...\n  coef_bram, ...\n  delay_bram, ...\n  mult_latency, ...\n  add_latency, ...\n  lower(get_param(gcb,'munge_submasks')) );\ndisp('fir_init complete.');\ntoc"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "pfb_coefs(1024,6)|9|8|8|7|9|7|on|on|3|1|on|DumbDown"
      MaskTabNameString	      ",,,,,,,,,,,,"
      System {
	Name			"fir_2"
	Location		[345, 246, 1231, 743]
	Open			on
	ModelBrowserVisibility	on
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "in"
	  Position		  [25, 13, 55, 27]
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Inport
	  Name			  "sync_in"
	  Position		  [25, 83, 55, 97]
	  Port			  "2"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Reference
	  Name			  "Constant"
	  Ports			  [0, 1]
	  Position		  [70, 48, 85, 62]
	  ShowName		  off
	  SourceBlock		  "xbsIndex_r4/Constant"
	  SourceType		  "Xilinx Constant Block Block"
	  arith_type		  "Unsigned"
	  const			  "0"
	  n_bits		  "34"
	  bin_pt		  "0"
	  explicit_period	  on
	  period		  "1"
	  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
	  equ			  "P=C"
	  opselect		  "C"
	  inp2			  "PCIN>>17"
	  opr			  "+"
	  inp1			  "P"
	  carry			  "CIN"
	  dbl_ovrd		  off
	  has_advanced_control	  "0"
	  sggui_pos		  "-1,-1,-1,-1"
	  block_type		  "constant"
	  block_version		  "10.1.3"
	  sg_icon_stat		  "15,14,1,1,white,blue,0,72d575a1,right"
	  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 15 15 0 ],[0 0 14 14 ],[0.77 0.82 0.91]);\npatch([3 1 4 1 3 7 8 9 13 10 7 5 8 5 7 10 13 9 8 7 3 ],[2 4 7 10 12 12 11 12 12 9 12 10 7 4 2 5 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 15 15 0 0 ],[0 0 14 14 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'0');\nfprintf('','COMMENT: end icon text');\n"
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_quantize"
	  Ports			  [3, 2]
	  Position		  [1000, 30, 1100, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "17_15 in\n9_7 out\nround even"
	  UserDataPersistent	  on
	  UserData		  "DataTag66"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Quantizer"
	  MaskDescription	  "A Finite Impluse Response Filter ouput quantizer.  This FIR filter output quantizer rounds the sum_in value to the precision specified by n_bits and bin_pt.  Overflow wraps, but quantization rounds to even if input binary point is greater than output binary point, otherwise quantization tuncates."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter ouput quantizer.  This FIR filter output quantizer\nrounds the sum_in value to the precision specified by n_bits and bin_pt.\n\nOverflow wraps, but quantization rounds to even if input binary point is greater\nthan output binary point, otherwise quantization tuncates.\n\nMask Parameters::\n\nNumber of Bits In (n_bits_s): Specifies the width of the sum_in input.\n\nBinary Point In (bin_pt_s): Specifies the binary point of the sum_in input.\n\nNumber of Bits Out (n_bits_o): Specifies the width of the output (overflow wraps).\n\nBinary Point Out (bin_pt_o): Specifies the binary point of the output (quantization rounds to even\nif input binary point is greater than output binary point, othersie quantization truncates).\n</pre>"
	  MaskPromptString	  "Number of Bits In|Binary Point In|Number of Bits Out|Binary Point Out"
	  MaskStyleString	  "edit,edit,edit,edit"
	  MaskTunableValueString  "off,off,off,off"
	  MaskCallbackString	  "|||"
	  MaskEnableString	  "off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on"
	  MaskToolTipString	  "on,on,on,on"
	  MaskVarAliasString	  ",,,"
	  MaskVariables		  "n_bits_s=&1;bin_pt_s=&2;n_bits_o=&3;bin_pt_o=&4;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "17|15|9|7"
	  MaskTabNameString	  ",,,"
	  System {
	    Name		    "fir_quantize"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_term"
	      Position		      [30, 18, 60, 32]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 78, 60, 92]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 143, 60, 157]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Terminator
	      Name		      "Terminator"
	      Position		      [450, 20, 460, 30]
	      ShowName		      off
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "c_to_ri"
	      Ports		      [1, 2]
	      Position		      [120, 64, 160, 106]
	      AttributesFormatString  "17_15 r/i"
	      UserDataPersistent      on
	      UserData		      "DataTag67"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Complex to Real-Imag"
	      MaskDescription	      "Outputs real and imaginary components of a complex input."
	      MaskHelp		      "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
	      MaskPromptString	      "Bit Width|Binary Point"
	      MaskStyleString	      "edit,edit"
	      MaskTunableValueString  "off,off"
	      MaskCallbackString      "|"
	      MaskEnableString	      "off,off"
	      MaskVisibilityString    "on,on"
	      MaskToolTipString	      "on,on"
	      MaskVarAliasString      ","
	      MaskVariables	      "n_bits=&1;bin_pt=&2;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "17|15"
	      MaskTabNameString	      ","
	      System {
		Name			"c_to_ri"
		Location		[567, 157, 837, 310]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "c"
		  Position		  [20, 63, 50, 77]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Reference
		  Name			  "force_im"
		  Ports			  [1, 1]
		  Position		  [150, 79, 190, 111]
		  SourceBlock		  "xbsIndex_r4/Reinterpret"
		  SourceType		  "Xilinx Type Reinterpreter Block"
		  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		  force_arith_type	  on
		  arith_type		  "Signed  (2's comp)"
		  force_bin_pt		  on
		  bin_pt		  "15"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "reinterpret"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "40,32,1,1,white,blue,0,8982c1db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "force_re"
		  Ports			  [1, 1]
		  Position		  [150, 29, 190, 61]
		  SourceBlock		  "xbsIndex_r4/Reinterpret"
		  SourceType		  "Xilinx Type Reinterpreter Block"
		  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		  force_arith_type	  on
		  arith_type		  "Signed  (2's comp)"
		  force_bin_pt		  on
		  bin_pt		  "15"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "reinterpret"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "40,32,1,1,white,blue,0,8982c1db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "slice_im"
		  Ports			  [1, 1]
		  Position		  [80, 81, 125, 109]
		  SourceBlock		  "xbsIndex_r4/Slice"
		  SourceType		  "Xilinx Bit Slice Extractor Block"
		  infoedit		  "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		  nbits			  "17"
		  boolean_output	  off
		  mode			  "Lower Bit Location + Width"
		  bit1			  "0"
		  base1			  "MSB of Input"
		  bit0			  "0"
		  base0			  "LSB of Input"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "slice"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,28,1,1,white,blue,0,b1026674,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "slice_re"
		  Ports			  [1, 1]
		  Position		  [80, 31, 125, 59]
		  SourceBlock		  "xbsIndex_r4/Slice"
		  SourceType		  "Xilinx Bit Slice Extractor Block"
		  infoedit		  "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		  nbits			  "17"
		  boolean_output	  off
		  mode			  "Upper Bit Location + Width"
		  bit1			  "0"
		  base1			  "MSB of Input"
		  bit0			  "0"
		  base0			  "LSB of Input"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "slice"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,28,1,1,white,blue,0,b1026674,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "re"
		  Position		  [215, 38, 245, 52]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "im"
		  Position		  [215, 88, 245, 102]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "slice_re"
		  SrcPort		  1
		  DstBlock		  "force_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "slice_im"
		  SrcPort		  1
		  DstBlock		  "force_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "force_re"
		  SrcPort		  1
		  DstBlock		  "re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "force_im"
		  SrcPort		  1
		  DstBlock		  "im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c"
		  SrcPort		  1
		  Points		  [5, 0]
		  Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		  }
		  Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		  }
		}
	      }
	    }
	    Block {
	      BlockType		      Reference
	      Name		      "delay"
	      Ports		      [1, 1]
	      Position		      [230, 139, 275, 161]
	      SourceBlock	      "xbsIndex_r4/Delay"
	      SourceType	      "Xilinx Delay Block"
	      infoedit		      "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
	      en		      off
	      latency		      "3"
	      dbl_ovrd		      off
	      reg_retiming	      off
	      xl_use_area	      off
	      xl_area		      "[0, 0, 0, 0, 0, 0, 0]"
	      has_advanced_control    "0"
	      sggui_pos		      "-1,-1,-1,-1"
	      block_type	      "delay"
	      block_version	      "10.1.3"
	      sg_icon_stat	      "45,22,1,1,white,blue,0,eabd56db,right"
	      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 22 22 ],[0.77 0.82 0.91]);\npatch([17 13 18 13 17 23 25 27 33 28 23 20 26 20 23 28 33 27 25 23 17 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
	    }
	    Block {
	      BlockType		      Reference
	      Name		      "quantize_im"
	      Ports		      [1, 1]
	      Position		      [225, 86, 275, 104]
	      SourceBlock	      "xbsIndex_r4/Convert"
	      SourceType	      "Xilinx Type Converter Block"
	      infoedit		      "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
	      arith_type	      "Signed  (2's comp)"
	      n_bits		      "9"
	      bin_pt		      "7"
	      quantization	      "Round  (unbiased: Even Values)"
	      overflow		      "Wrap"
	      latency		      "3"
	      dbl_ovrd		      off
	      pipeline		      on
	      xl_use_area	      off
	      xl_area		      "[0, 0, 0, 0, 0, 0, 0]"
	      has_advanced_control    "0"
	      sggui_pos		      "-1,-1,-1,-1"
	      block_type	      "convert"
	      block_version	      "10.1.3"
	      sg_icon_stat	      "50,18,1,1,white,blue,0,0b13ee9b,right"
	      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\ncolor('black');disp('\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
	    }
	    Block {
	      BlockType		      Reference
	      Name		      "quantize_re"
	      Ports		      [1, 1]
	      Position		      [225, 66, 275, 84]
	      NamePlacement	      "alternate"
	      SourceBlock	      "xbsIndex_r4/Convert"
	      SourceType	      "Xilinx Type Converter Block"
	      infoedit		      "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
	      arith_type	      "Signed  (2's comp)"
	      n_bits		      "9"
	      bin_pt		      "7"
	      quantization	      "Round  (unbiased: Even Values)"
	      overflow		      "Wrap"
	      latency		      "3"
	      dbl_ovrd		      off
	      pipeline		      on
	      xl_use_area	      off
	      xl_area		      "[0, 0, 0, 0, 0, 0, 0]"
	      has_advanced_control    "0"
	      sggui_pos		      "-1,-1,-1,-1"
	      block_type	      "convert"
	      block_version	      "10.1.3"
	      sg_icon_stat	      "50,18,1,1,white,blue,0,0b13ee9b,right"
	      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\ncolor('black');disp('\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "ri_to_c"
	      Ports		      [2, 1]
	      Position		      [335, 64, 375, 106]
	      UserDataPersistent      on
	      UserData		      "DataTag68"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Real-Imag to Complex"
	      MaskDescription	      "Concatenates real and imaginary inputs into a complex output."
	      MaskHelp		      "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
	      MaskInitialization      "ri_to_c_init(gcb);"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      System {
		Name			"ri_to_c"
		Location		[512, 132, 787, 285]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "re"
		  Position		  [25, 38, 55, 52]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "im"
		  Position		  [25, 88, 55, 102]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Reference
		  Name			  "concat"
		  Ports			  [2, 1]
		  Position		  [145, 40, 195, 95]
		  SourceBlock		  "xbsIndex_r4/Concat"
		  SourceType		  "Xilinx Bus Concatenator Block"
		  infoedit		  "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		  num_inputs		  "2"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "concat"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "50,55,1,1,white,blue,0,df1e5aba,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "force_im"
		  Ports			  [1, 1]
		  Position		  [80, 79, 120, 111]
		  SourceBlock		  "xbsIndex_r4/Reinterpret"
		  SourceType		  "Xilinx Type Reinterpreter Block"
		  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		  force_arith_type	  on
		  arith_type		  "Unsigned"
		  force_bin_pt		  on
		  bin_pt		  "0"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "reinterpret"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "40,32,1,1,white,blue,0,8982c1db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "force_re"
		  Ports			  [1, 1]
		  Position		  [80, 29, 120, 61]
		  SourceBlock		  "xbsIndex_r4/Reinterpret"
		  SourceType		  "Xilinx Type Reinterpreter Block"
		  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		  force_arith_type	  on
		  arith_type		  "Unsigned"
		  force_bin_pt		  on
		  bin_pt		  "0"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "reinterpret"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "40,32,1,1,white,blue,0,8982c1db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "c"
		  Position		  [220, 63, 250, 77]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "im"
		  SrcPort		  1
		  DstBlock		  "force_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "concat"
		  SrcPort		  1
		  DstBlock		  "c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "re"
		  SrcPort		  1
		  DstBlock		  "force_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "force_im"
		  SrcPort		  1
		  Points		  [0, -15]
		  DstBlock		  "concat"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "force_re"
		  SrcPort		  1
		  Points		  [0, 10]
		  DstBlock		  "concat"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [440, 78, 470, 92]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [440, 143, 470, 157]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "data_term"
	      SrcPort		      1
	      DstBlock		      "Terminator"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "delay"
	      SrcPort		      1
	      Points		      [0, 0]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      DstBlock		      "delay"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "quantize_im"
	      SrcPort		      1
	      Points		      [0, 0]
	      DstBlock		      "ri_to_c"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "c_to_ri"
	      SrcPort		      2
	      DstBlock		      "quantize_im"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "quantize_re"
	      SrcPort		      1
	      Points		      [0, 0]
	      DstBlock		      "ri_to_c"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "c_to_ri"
	      SrcPort		      1
	      DstBlock		      "quantize_re"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "ri_to_c"
	      SrcPort		      1
	      Points		      [0, 0]
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "c_to_ri"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_tap_1"
	  Ports			  [3, 3]
	  Position		  [100, 30, 200, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "delay 1024 in bram\n1024 coefs in bram\\nno adder"
	  UserDataPersistent	  on
	  UserData		  "DataTag69"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Tap (Real Coefficients)"
	  MaskDescription	  "A Finite Impluse Response Filter tap with real coefficients.  This FIR filter tap does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter tap with real coefficients.\n\nThis Finite Impluse Response Filter tap is designed to be daisy chained together\nto form a multi-tap FIR filter.  This FIR filter tap does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nTap Coefficiant(s) (coef): The coefficient(s) for this tap.  For a regular FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nUsually, delay==length(coef), but this is not required.  These should be specified as doubles. \nThey will be rounded and saturated according to the specified number of bits (n_bits_c) and\nbinary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	  MaskPromptString	  "Tap Delay|Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	  MaskStyleString	  "edit,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "||||||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,,,,"
	  MaskVariables		  "delay=&1;coef=&2;n_bits_c=&3;bin_pt_c=&4;n_bits_d=&5;bin_pt_d=&6;n_bits_s=&7;bin_pt_s=&8;coef_bram=&9;delay_bram=&10;mult_latency=&11;add_latency=&12;add_bypass=&13;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "1024|[7.55822333239443e-005;0.000226337373781674;0.000376546527419557;0.000526209439676531;0.000675325864794748;0.000823895565799559;0.000971918314479012;0.00111939389136366;0.00126632208570627;0.00141270269546109;0.00155853552726339;0.00170382039640892;0.00184855712683285;0.00199274555108931;0.00213638551033019;0.0022794768542842;0.00242201944123601;0.00256401313800475;0.00270545781992298;0.00284635337081542;0.00298669968297734;0.00312649665715319;0.00326574420251518;0.00340444223664131;0.00354259068549404;0.00368018948339813;0.00381723857301899;0.00395373790534074;0.00408968743964404;0.00422508714348402;0.00435993699266828;0.00449423697123439;0.00462798707142765;0.00476118729367882;0.00489383764658139;0.00502593814686929;0.00515748881939405;0.00528848969710218;0.00541894082101253;0.00554884224019323;0.00567819401173886;0.00580699620074764;0.00593524888029807;0.006062952131426;0.0061901060431015;0.00631671071220536;0.00644276624350604;0.00656827274963604;0.00669323035106852;0.00681763917609391;0.00694149936079604;0.00706481104902866;0.00718757439239176;0.00730978955020755;0.00743145668949677;0.00755257598495482;0.00767314761892755;0.00779317178138749;0.00791264866990946;0.00803157848964654;0.00814996145330591;0.00826779778112436;0.00838508770084402;0.00850183144768805;0.00861802926433593;0.00873368140089908;0.00884878811489629;0.00896334967122888;0.00907736634215623;0.00919083840727075;0.00930376615347321;0.0094161498749479;0.00952798987313748;0.00963928645671813;0.00975003994157455;0.00986025065077467;0.00996991891454458;0.0100790450702434;0.0101876294623378;0.0102956724423769;0.0104031743689668;0.010510135607745;0.0106165565313551;0.0107224375194214;0.0108277789585228;0.010932581242168;0.0110368447707688;0.0111405699516152;0.0112437571988492;0.0113464069334393;0.0114485195831541;0.0115500955825369;0.0116511353728793;0.0117516394021958;0.0118516081251968;0.0119510420032635;0.012049941504421;0.0121483071033125;0.0122461392811728;0.0123434385258024;0.0124402053315406;0.0125364401992397;0.0126321436362382;0.0127273161563346;0.0128219582797607;0.0129160705331552;0.0130096534495371;0.013102707568279;0.0131952334350806;0.0132872316019417;0.013378702627136;0.0134696470751837;0.0135600655168253;0.0136499585289943;0.0137393266947904;0.0138281706034528;0.0139164908503332;0.0140042880368685;0.0140915627705541;0.0141783156649169;0.0142645473394878;0.0143502584197752;0.014435449537237;0.0145201213292544;0.0146042744391039;0.0146879095159304;0.0147710272147199;0.014853628196272;0.014935713127173;0.0150172826797681;0.0150983375321339;0.0151788783680517;0.0152589058769791;0.0153384207540233;0.0154174236999132;0.0154959154209719;0.0155738966290892;0.015651368041694;0.0157283303817268;0.0158047843776117;0.0158807307632293;0.0159561702778886;0.0160311036662993;0.0161055316785444;0.016179455070052;0.0162528746015679;0.0163257910391276;0.0163982051540287;0.0164701177228029;0.0165415295271879;0.0166124413541001;0.0166828539956064;0.016752768248896;0.0168221849162531;0.0168911048050285;0.0169595287276116;0.0170274575014029;0.0170948919487855;0.0171618328970972;0.0172282811786028;0.0172942376304655;0.0173597030947194;0.0174246784182411;0.0174891644527217;0.0175531620546388;0.0176166720852282;0.0176796954104559;0.01774223290099;0.0178042854321725;0.0178658538839913;0.0179269391410516;0.0179875420925484;0.0180476636322377;0.0181073046584087;0.0181664660738554;0.0182251487858485;0.0182833537061072;0.018341081750771;0.0183983338403711;0.018455110899803;0.0185114138582973;0.0185672436493922;0.0186226012109047;0.0186774874849029;0.0187319034176773;0.0187858499597128;0.0188393280656603;0.0188923386943085;0.0189448828085557;0.0189969613753813;0.0190485753658179;0.0190997257549227;0.0191504135217495;0.0192006396493202;0.0192504051245967;0.0192997109384527;0.019348558085645;0.0193969475647859;0.0194448803783146;0.0194923575324687;0.0195393800372564;0.0195859489064282;0.0196320651574482;0.0196777298114666;0.0197229438932907;0.0197677084313573;0.0198120244577041;0.0198558930079418;0.0198993151212255;0.0199422918402268;0.0199848242111055;0.0200269132834817;0.0200685601104072;0.0201097657483373;0.0201505312571035;0.020190857699884;0.020230746143177;0.0202701976567714;0.0203092133137194;0.0203477941903082;0.0203859413660319;0.0204236559235634;0.0204609389487264;0.0204977915304673;0.0205342147608274;0.0205702097349146;0.0206057775508754;0.0206409193098672;0.02067563611603;0.0207099290764587;0.0207437993011751;0.0207772479030999;0.0208102759980249;0.020842884704585;0.0208750751442305;0.0209068484411992;0.0209382057224885;0.0209691481178275;0.0209996767596496;0.0210297927830643;0.0210594973258299;0.0210887915283252;0.0211176765335223;0.0211461534869588;0.02117422353671;0.0212018878333615;0.0212291475299812;0.0212560037820922;0.0212824577476449;0.0213085105869897;0.0213341634628491;0.0213594175402908;0.0213842739866995;0.0214087339717505;0.021432798667381;0.0214564692477637;0.0214797468892794;0.0215026327704889;0.0215251280721066;0.0215472339769727;0.0215689516700262;0.0215902823382775;0.0216112271707815;0.0216317873586099;0.021651964094825;0.0216717585744516;0.0216911719944508;0.0217102055536922;0.0217288604529277;0.0217471378947638;0.0217650390836353;0.0217825652257779;0.0217997175292016;0.0218164972036641;0.0218329054606434;0.0218489435133116;0.0218646125765079;0.021879913866712;0.0218948486020174;0.0219094180021051;0.0219236232882163;0.0219374656831268;0.0219509464111195;0.021964066697959;0.0219768277708642;0.0219892308584827;0.0220012771908637;0.0220129679994325;0.0220243045169635;0.0220352879775545;0.0220459196166004;0.0220562006707666;0.0220661323779637;0.0220757159773207;0.0220849527091593;0.0220938438149682;0.0221023905373766;0.0221105941201285;0.0221184558080573;0.0221259768470592;0.0221331584840681;0.0221400019670297;0.0221465085448756;0.022152679467498;0.0221585159857239;0.0221640193512895;0.0221691908168152;0.0221740316357794;0.0221785430624938;0.0221827263520777;0.0221865827604326;0.0221901135442173;0.0221933199608223;0.0221962032683452;0.022198764725565;0.0222010055919171;0.0222029271274689;0.0222045305928941;0.0222058172494483;0.0222067883589439;0.0222074451837253;0.0222077889866442;0.0222078210310349;0.0222075425806899;0.0222069548998346;0.0222060592531036;0.0222048569055155;0.0222033491224491;0.0222015371696183;0.0221994223130485;0.0221970058190519;0.0221942889542031;0.0221912729853155;0.0221879591794167;0.0221843488037246;0.0221804431256237;0.0221762434126404;0.02217175093242;0.0221669669527021;0.0221618927412975;0.0221565295660639;0.0221508786948827;0.0221449413956349;0.0221387189361781;0.0221322125843227;0.0221254236078085;0.0221183532742814;0.02211100285127;0.0221033736061624;0.0220954668061832;0.0220872837183699;0.0220788256095504;0.0220700937463195;0.0220610893950162;0.0220518138217011;0.0220422682921327;0.0220324540717458;0.0220223724256277;0.0220120246184963;0.0220014119146775;0.021990535578082;0.0219793968721838;0.021967997059997;0.0219563374040542;0.0219444191663836;0.0219322436084871;0.0219198119913184;0.0219071255752605;0.021894185620104;0.021880993385025;0.0218675501285635;0.0218538571086012;0.0218399155823402;0.021825726806281;0.021811292036201;0.0217966125271333;0.0217816895333444;0.0217665243083139;0.0217511181047122;0.02173547217438;0.0217195877683065;0.0217034661366086;0.0216871085285099;0.0216705161923194;0.0216536903754111;0.0216366323242026;0.0216193432841346;0.0216018244996503;0.0215840772141744;0.021566102670093;0.0215479021087327;0.0215294767703405;0.0215108278940632;0.0214919567179271;0.0214728644788182;0.0214535524124615;0.0214340217534013;0.0214142737349813;0.0213943095893242;0.0213741305473122;0.0213537378385675;0.0213331326914318;0.0213123163329474;0.0212912899888375;0.0212700548834864;0.0212486122399205;0.0212269632797886;0.0212051092233429;0.0211830512894198;0.0211607906954207;0.021138328657293;0.0211156663895112;0.0210928051050577;0.0210697460154048;0.0210464903304949;0.0210230392587226;0.0209993940069161;0.0209755557803181;0.0209515257825682;0.0209273052156838;0.0209028952800423;0.020878297174363;0.0208535120956883;0.0208285412393665;0.0208033857990334;0.0207780469665943;0.0207525259322066;0.0207268238842619;0.0207009420093679;0.0206748814923318;0.020648643516142;0.0206222292619508;0.0205956399090575;0.0205688766348906;0.0205419406149913;0.0205148330229955;0.0204875550306177;0.0204601078076336;0.020432492521863;0.0204047103391538;0.0203767624233645;0.0203486499363482;0.0203203740379356;0.020291935885919;0.0202633366360355;0.020234577441951;0.020205659455244;0.0201765838253892;0.0201473516997418;0.0201179642235214;0.0200884225397961;0.0200587277894667;0.020028881111251;0.0199988836416682;0.0199687365150233;0.0199384408633918;0.0199079978166042;0.0198774085022304;0.0198466740455651;0.0198157955696123;0.0197847741950701;0.0197536110403162;0.0197223072213925;0.0196908638519908;0.0196592820434375;0.0196275629046798;0.0195957075422703;0.0195637170603529;0.0195315925606485;0.0194993351424409;0.0194669459025618;0.0194344259353776;0.0194017763327749;0.0193689981841464;0.0193360925763775;0.0193030605938321;0.0192699033183391;0.0192366218291787;0.019203217203069;0.0191696905141523;0.0191360428339821;0.0191022752315096;0.0190683887730704;0.0190343845223718;0.0190002635404793;0.018966026885804;0.0189316756140897;0.0188972107784002;0.0188626334291062;0.0188279446138735;0.0187931453776497;0.0187582367626523;0.0187232198083563;0.0186880955514817;0.0186528650259817;0.0186175292630303;0.0185820892910106;0.0185465461355029;0.0185109008192725;0.0184751543622587;0.0184393077815623;0.0184033620914347;0.0183673183032665;0.0183311774255754;0.0182949404639958;0.0182586084212671;0.0182221822972225;0.0181856630887784;0.0181490517899233;0.0181123493917068;0.0180755568822289;0.0180386752466294;0.0180017054670774;0.0179646485227607;0.0179275053898754;0.0178902770416155;0.0178529644481627;0.0178155685766767;0.0177780903912842;0.01774053085307;0.0177028909200663;0.0176651715472435;0.0176273736864999;0.0175894982866526;0.0175515462934279;0.0175135186494514;0.0174754162942395;0.0174372401641892;0.0173989911925696;0.0173606703095124;0.0173222784420034;0.0172838165138729;0.0172452854457875;0.0172066861552411;0.0171680195565462;0.0171292865608255;0.0170904880760033;0.0170516250067972;0.0170126982547098;0.0169737087180206;0.0169346572917774;0.0168955448677892;0.0168563723346172;0.0168171405775676;0.016777850478684;0.0167385029167391;0.0166990987672274;0.016659638902358;0.0166201241910468;0.0165805554989092;0.0165409336882532;0.0165012596180719;0.0164615341440367;0.01642175811849;0.0163819323904387;0.0163420578055472;0.0163021352061308;0.0162621654311489;0.0162221493161987;0.0161820876935087;0.0161419813919321;0.016101831236941;0.0160616380506197;0.0160214026516591;0.0159811258553503;0.015940808473579;0.0159004513148196;0.0158600551841291;0.015819620883142;0.0157791492100646;0.015738640959669;0.0156980969232886;0.0156575178888119;0.0156169046406781;0.0155762579598713;0.0155355786239159;0.0154948674068714;0.0154541250793279;0.0154133524084007;0.0153725501577262;0.015331719087457;0.0152908599542575;0.0152499735112994;0.0152090605082574;0.0151681216913049;0.0151271578031099;0.0150861695828308;0.0150451577661127;0.0150041230850829;0.0149630662683479;0.0149219880409888;0.0148808891245584;0.0148397702370772;0.0147986320930298;0.0147574754033622;0.0147163008754775;0.0146751092132337;0.0146339011169396;0.0145926772833527;0.0145514384056753;0.0145101851735525;0.0144689182730687;0.0144276383867453;0.0143863461935379;0.014345042368834;0.0143037275844501;0.0142624025086298;0.0142210678060412;0.014179724137775;0.0141383721613421;0.0140970125306716;0.014055645896109;0.0140142729044144;0.0139728941987605;0.0139315104187309;0.0138901222003188;0.0138487301759252;0.0138073349743574;0.0137659372208281;0.0137245375369534;0.0136831365407524;0.0136417348466455;0.0136003330654535;0.013558931804397;0.0135175316670951;0.0134761332535648;0.0134347371602205;0.013393343979873;0.0133519543017293;0.013310568711392;0.0132691877908589;0.013227812118523;0.0131864422691718;0.0131450788139878;0.0131037223205477;0.0130623733528234;0.0130210324711811;0.0129797002323824;0.0129383771895841;0.0128970638923385;0.0128557608865941;0.0128144687146963;0.0127731879153873;0.0127319190238077;0.0126906625714966;0.0126494190863927;0.0126081890928351;0.0125669731115647;0.0125257716597247;0.0124845852508622;0.0124434143949294;0.0124022595982848;0.0123611213636946;0.0123200001903342;0.0122788965737901;0.0122378110060608;0.0121967439755595;0.0121556959671148;0.0121146674619735;0.0120736589378022;0.0120326708686893;0.0119917037251469;0.0119507579741136;0.0119098340789561;0.011868932499472;0.0118280536918919;0.0117871981088822;0.0117463661995474;0.0117055584094329;0.0116647751805277;0.011624016951267;0.0115832841565354;0.0115425772276698;0.0115018965924621;0.0114612426751627;0.0114206158964832;0.0113800166736003;0.0113394454201587;0.0112989025462742;0.011258388458538;0.0112179035600195;0.0111774482502703;0.0111370229253276;0.0110966279777186;0.0110562637964633;0.0110159307670795;0.010975629271586;0.010935359688507;0.0108951223928764;0.0108549177562413;0.0108147461466673;0.0107746079287419;0.0107345034635795;0.0106944331088256;0.0106543972186615;0.0106143961438089;0.0105744302315346;0.0105344998256552;0.0104946052665421;0.0104547468911263;0.0104149250329032;0.0103751400219381;0.0103353921848709;0.0102956818449215;0.0102560093218952;0.0102163749321875;0.01017677898879;0.0101372218012957;0.0100977036759047;0.0100582249154293;0.0100187858193002;0.00997938668357203;0.0099400278009291;0.00990070946069135;0.00986143194882025;0.00982219554792484;0.00978300053726775;0.00974384719277134;0.00970473578702392;0.00966566658928605;0.00962663986549678;0.00958765587828016;0.00954871488695155;0.00950981714752431;0.00947096291271629;0.0094321524319565;0.00939338595139185;0.00935466371389393;0.0093159859590658;0.00927735292324897;0.00923876483953036;0.00920022193774929;0.00916172444450464;0.00912327258316188;0.00908486657386049;0.00904650663352107;0.00900819297585279;0.00896992581136071;0.00893170534735332;0.00889353178795001;0.0088554053340887;0.00881732618353346;0.00877929453088222;0.00874131056757457;0.00870337448189951;0.00866548645900342;0.00862764668089797;0.0085898553264681;0.0085521125714801;0.00851441858858978;0.00847677354735049;0.00843917761422159;0.00840163095257653;0.00836413372271132;0.0083266860818529;0.00828928818416756;0.00825194018076957;0.00821464221972963;0.00817739444608359;0.00814019700184109;0.00810305002599434;0.00806595365452684;0.00802890802042233;0.00799191325367362;0.00795496948129161;0.00791807682731424;0.00788123541281559;0.00784444535591502;0.00780770677178631;0.00777101977266688;0.00773438446786714;0.00769780096377973;0.00766126936388893;0.00762478976878012;0.00758836227614927;0.00755198698081245;0.00751566397471543;0.00747939334694328;0.00744317518373013;0.00740700956846889;0.00737089658172098;0.00733483630122624;0.00729882880191279;0.00726287415590692;0.00722697243254317;0.00719112369837428;0.00715532801718132;0.00711958544998381;0.00708389605504983;0.00704825988790636;0.00701267700134947;0.00697714744545466;0.00694167126758721;0.00690624851241261;0.00687087922190698;0.00683556343536762;0.00680030118942352;0.00676509251804594;0.00672993745255913;0.00669483602165082;0.00665978825138318;0.00662479416520342;0.00658985378395465;0.00655496712588674;0.00652013420666724;0.00648535503939221;0.00645062963459735;0.00641595800026893;0.00638134014185485;0.00634677606227583;0.0063122657619364;0.00627780923873624;0.00624340648808137;0.00620905750289535;0.00617476227363066;0.00614052078828002;0.00610633303238773;0.0060721989890612;0.00603811863898232;0.00600409196041901;0.00597011892923675;0.0059361995189101;0.00590233370053443;0.00586852144283747;0.00583476271219105;0.00580105747262281;0.00576740568582796;0.00573380731118106;0.0057002623057479;0.00566677062429732;0.00563333221931314;0.00559994704100609;0.00556661503732576;0.00553333615397264;0.00550011033441016;0.00546693751987671;0.00543381764939783;0.00540075065979826;0.00536773648571416;0.00533477505960533;0.00530186631176739;0.0052690101703441;0.00523620656133964;0.00520345540863088;0.00517075663397987;0.0051381101570461;0.00510551589539899;0.00507297376453033;0.00504048367786674;0.00500804554678217;0.00497565928061048;0.00494332478665798;0.00491104197021601;0.00487881073457359;0.00484663098103001;0.00481450260890759;0.00478242551556433;0.00475039959640664;0.0047184247449021;0.00468650085259228;0.00465462780910543;0.00462280550216948;0.00459103381762476;0.00455931263943696;0.00452764184970998;0.00449602132869889;0.00446445095482291;0.00443293060467832;0.00440146015305152;0.00437003947293203;0.00433866843552555;0.00430734691026696;0.00427607476483351;0.00424485186515788;0.00421367807544131;0.00418255325816677;0.00415147727411206;0.00412044998236316;0.00408947124032728;0.0040585409037462;0.00402765882670945;0.00399682486166768;0.00396603885944579;0.00393530066925641;0.00390461013871314;0.00387396711384388;0.00384337143910425;0.00381282295739088;0.00378232151005492;0.00375186693691537;0.00372145907627252;0.00369109776492143;0.00366078283816534;0.00363051412982916;0.00360029147227299;0.0035701146964056;0.00353998363169792;0.00350989810619665;0.00347985794653768;0.0034498629779598;0.00341991302431814;0.00339000790809786;0.00336014745042765;0.00333033147109343;0.00330055978855185;0.00327083221994408;0.00324114858110932;0.00321150868659852;0.00318191234968804;0.00315235938239325;0.00312284959548233;0.00309338279848989;0.00306395879973069;0.00303457740631335;0.00300523842415407;0.00297594165799033;0.00294668691139467;0.00291747398678844;0.00288830268545549;0.00285917280755598;0.00283008415214012;0.00280103651716193;0.00277202969949308;0.00274306349493657;0.00271413769824061;0.00268525210311237;0.00265640650223175;0.00262760068726523;0.00259883444887969;0.00257010757675613;0.00254141985960361;0.00251277108517291;0.0024841610402705;0.00245558951077227;0.00242705628163739;0.00239856113692212;0.00237010385979366;0.00234168423254391;0.00231330203660339;0.00228495705255503;0.002256649060148;0.00222837783831153;0.00220014316516874;0.00217194481805049;0.00214378257350922;0.00211565620733274;0.00208756549455806;0.00205951020948525;0.00203149012569121;0.00200350501604353;0.00197555465271432;0.00194763880719397;0.001919757250305;0.00189190975221584;0.00186409608245468;0.00183631600992321;0.00180856930291045;0.00178085572910654;0.00175317505561652;0.00172552704897407;0.00169791147515534;0.00167032809959269;0.00164277668718846;0.00161525700232871;0.00158776880889696;0.00156031187028796;0.00153288594942139;0.0015054908087556;0.00147812621030134;0.00145079191563545;0.00142348768591449;0.00139621328188859;0.00136896846391498;0.00134175299197172;0.0013145666256714;0.00128740912427467;0.00126028024670401;0.00123317975155729;0.00120610739712138;0.0011790629413858;0.00115204614205629;0.00112505675656834;0.00109809454210086;0.00107115925558966;0.00104425065374103;0.00101736849304526;0.000990512529790111;0.000963682520074419;0.000936878219821494;0.000910099384792634;0.000883345770600572;0.00085661713272294;0.000829913226515637;0.000803233807226332;0.000776578630007802;0.000749947449931329;0.00072334002200008;0.000696756101162392;0.000670195442325197;0.000643657800367275;0.000617142930152563;0.000590650586543436;0.000564180524413982;0.00053773249866318;0.000511306264228219;0.000484901576097635;0.000458518189324518;0.000432155859039685;0.000405814340464771;0.00037949338892544;0.000353192759864432;0.00032691220885466;0.000300651491612275;0.00027441036400972;0.000248188582088693;0.000221985902073233;0.000195802080382638;0.000169636873644433;0.000143490038707315;0.000117361332654004;9.12505128142159e-005;6.51573367774649e-005;3.90815624059165e-005;1.30229478472013e-005]|9|8|8|7|17|15|on|on|3|1|on"
	  MaskTabNameString	  ",,,,,,,,,,,,"
	  System {
	    Name		    "fir_tap_1"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_in"
	      Position		      [30, 23, 60, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 58, 60, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 93, 60, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_coef"
	      Ports		      [3, 4]
	      Position		      [115, 29, 205, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "1024 coefs in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag70"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Coefficient Generator"
	      MaskDescription	      "A Finite Impluse Response filter coefficient generator.  This FIR filter coefficient generator outputs real coefficients.  It can output one coefficient or cycle through a vector of coefficients for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response filter coefficient generator.\nThis FIR filter coefficient generator outputs real coefficients.\nIt can output one coefficient or cycle through a vector of coefficients for WOLA\n(Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Coefficiant(s) (coef): The coefficient(s) to output.  For a \"regular\" FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nThese should be specified as doubles.   They will be rounded and saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nUse BRAM for Coefficients (use_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n</pre>"
	      MaskPromptString	      "Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Use BRAM for Coefficients"
	      MaskStyleString	      "edit,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "coef=&1;n_bits_c=&2;bin_pt_c=&3;use_bram=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "[7.55822333239443e-005;0.000226337373781674;0.000376546527419557;0.000526209439676531;0.000675325864794748;0.000823895565799559;0.000971918314479012;0.00111939389136366;0.00126632208570627;0.00141270269546109;0.00155853552726339;0.00170382039640892;0.00184855712683285;0.00199274555108931;0.00213638551033019;0.0022794768542842;0.00242201944123601;0.00256401313800475;0.00270545781992298;0.00284635337081542;0.00298669968297734;0.00312649665715319;0.00326574420251518;0.00340444223664131;0.00354259068549404;0.00368018948339813;0.00381723857301899;0.00395373790534074;0.00408968743964404;0.00422508714348402;0.00435993699266828;0.00449423697123439;0.00462798707142765;0.00476118729367882;0.00489383764658139;0.00502593814686929;0.00515748881939405;0.00528848969710218;0.00541894082101253;0.00554884224019323;0.00567819401173886;0.00580699620074764;0.00593524888029807;0.006062952131426;0.0061901060431015;0.00631671071220536;0.00644276624350604;0.00656827274963604;0.00669323035106852;0.00681763917609391;0.00694149936079604;0.00706481104902866;0.00718757439239176;0.00730978955020755;0.00743145668949677;0.00755257598495482;0.00767314761892755;0.00779317178138749;0.00791264866990946;0.00803157848964654;0.00814996145330591;0.00826779778112436;0.00838508770084402;0.00850183144768805;0.00861802926433593;0.00873368140089908;0.00884878811489629;0.00896334967122888;0.00907736634215623;0.00919083840727075;0.00930376615347321;0.0094161498749479;0.00952798987313748;0.00963928645671813;0.00975003994157455;0.00986025065077467;0.00996991891454458;0.0100790450702434;0.0101876294623378;0.0102956724423769;0.0104031743689668;0.010510135607745;0.0106165565313551;0.0107224375194214;0.0108277789585228;0.010932581242168;0.0110368447707688;0.0111405699516152;0.0112437571988492;0.0113464069334393;0.0114485195831541;0.0115500955825369;0.0116511353728793;0.0117516394021958;0.0118516081251968;0.0119510420032635;0.012049941504421;0.0121483071033125;0.0122461392811728;0.0123434385258024;0.0124402053315406;0.0125364401992397;0.0126321436362382;0.0127273161563346;0.0128219582797607;0.0129160705331552;0.0130096534495371;0.013102707568279;0.0131952334350806;0.0132872316019417;0.013378702627136;0.0134696470751837;0.0135600655168253;0.0136499585289943;0.0137393266947904;0.0138281706034528;0.0139164908503332;0.0140042880368685;0.0140915627705541;0.0141783156649169;0.0142645473394878;0.0143502584197752;0.014435449537237;0.0145201213292544;0.0146042744391039;0.0146879095159304;0.0147710272147199;0.014853628196272;0.014935713127173;0.0150172826797681;0.0150983375321339;0.0151788783680517;0.0152589058769791;0.0153384207540233;0.0154174236999132;0.0154959154209719;0.0155738966290892;0.015651368041694;0.0157283303817268;0.0158047843776117;0.0158807307632293;0.0159561702778886;0.0160311036662993;0.0161055316785444;0.016179455070052;0.0162528746015679;0.0163257910391276;0.0163982051540287;0.0164701177228029;0.0165415295271879;0.0166124413541001;0.0166828539956064;0.016752768248896;0.0168221849162531;0.0168911048050285;0.0169595287276116;0.0170274575014029;0.0170948919487855;0.0171618328970972;0.0172282811786028;0.0172942376304655;0.0173597030947194;0.0174246784182411;0.0174891644527217;0.0175531620546388;0.0176166720852282;0.0176796954104559;0.01774223290099;0.0178042854321725;0.0178658538839913;0.0179269391410516;0.0179875420925484;0.0180476636322377;0.0181073046584087;0.0181664660738554;0.0182251487858485;0.0182833537061072;0.018341081750771;0.0183983338403711;0.018455110899803;0.0185114138582973;0.0185672436493922;0.0186226012109047;0.0186774874849029;0.0187319034176773;0.0187858499597128;0.0188393280656603;0.0188923386943085;0.0189448828085557;0.0189969613753813;0.0190485753658179;0.0190997257549227;0.0191504135217495;0.0192006396493202;0.0192504051245967;0.0192997109384527;0.019348558085645;0.0193969475647859;0.0194448803783146;0.0194923575324687;0.0195393800372564;0.0195859489064282;0.0196320651574482;0.0196777298114666;0.0197229438932907;0.0197677084313573;0.0198120244577041;0.0198558930079418;0.0198993151212255;0.0199422918402268;0.0199848242111055;0.0200269132834817;0.0200685601104072;0.0201097657483373;0.0201505312571035;0.020190857699884;0.020230746143177;0.0202701976567714;0.0203092133137194;0.0203477941903082;0.0203859413660319;0.0204236559235634;0.0204609389487264;0.0204977915304673;0.0205342147608274;0.0205702097349146;0.0206057775508754;0.0206409193098672;0.02067563611603;0.0207099290764587;0.0207437993011751;0.0207772479030999;0.0208102759980249;0.020842884704585;0.0208750751442305;0.0209068484411992;0.0209382057224885;0.0209691481178275;0.0209996767596496;0.0210297927830643;0.0210594973258299;0.0210887915283252;0.0211176765335223;0.0211461534869588;0.02117422353671;0.0212018878333615;0.0212291475299812;0.0212560037820922;0.0212824577476449;0.0213085105869897;0.0213341634628491;0.0213594175402908;0.0213842739866995;0.0214087339717505;0.021432798667381;0.0214564692477637;0.0214797468892794;0.0215026327704889;0.0215251280721066;0.0215472339769727;0.0215689516700262;0.0215902823382775;0.0216112271707815;0.0216317873586099;0.021651964094825;0.0216717585744516;0.0216911719944508;0.0217102055536922;0.0217288604529277;0.0217471378947638;0.0217650390836353;0.0217825652257779;0.0217997175292016;0.0218164972036641;0.0218329054606434;0.0218489435133116;0.0218646125765079;0.021879913866712;0.0218948486020174;0.0219094180021051;0.0219236232882163;0.0219374656831268;0.0219509464111195;0.021964066697959;0.0219768277708642;0.0219892308584827;0.0220012771908637;0.0220129679994325;0.0220243045169635;0.0220352879775545;0.0220459196166004;0.0220562006707666;0.0220661323779637;0.0220757159773207;0.0220849527091593;0.0220938438149682;0.0221023905373766;0.0221105941201285;0.0221184558080573;0.0221259768470592;0.0221331584840681;0.0221400019670297;0.0221465085448756;0.022152679467498;0.0221585159857239;0.0221640193512895;0.0221691908168152;0.0221740316357794;0.0221785430624938;0.0221827263520777;0.0221865827604326;0.0221901135442173;0.0221933199608223;0.0221962032683452;0.022198764725565;0.0222010055919171;0.0222029271274689;0.0222045305928941;0.0222058172494483;0.0222067883589439;0.0222074451837253;0.0222077889866442;0.0222078210310349;0.0222075425806899;0.0222069548998346;0.0222060592531036;0.0222048569055155;0.0222033491224491;0.0222015371696183;0.0221994223130485;0.0221970058190519;0.0221942889542031;0.0221912729853155;0.0221879591794167;0.0221843488037246;0.0221804431256237;0.0221762434126404;0.02217175093242;0.0221669669527021;0.0221618927412975;0.0221565295660639;0.0221508786948827;0.0221449413956349;0.0221387189361781;0.0221322125843227;0.0221254236078085;0.0221183532742814;0.02211100285127;0.0221033736061624;0.0220954668061832;0.0220872837183699;0.0220788256095504;0.0220700937463195;0.0220610893950162;0.0220518138217011;0.0220422682921327;0.0220324540717458;0.0220223724256277;0.0220120246184963;0.0220014119146775;0.021990535578082;0.0219793968721838;0.021967997059997;0.0219563374040542;0.0219444191663836;0.0219322436084871;0.0219198119913184;0.0219071255752605;0.021894185620104;0.021880993385025;0.0218675501285635;0.0218538571086012;0.0218399155823402;0.021825726806281;0.021811292036201;0.0217966125271333;0.0217816895333444;0.0217665243083139;0.0217511181047122;0.02173547217438;0.0217195877683065;0.0217034661366086;0.0216871085285099;0.0216705161923194;0.0216536903754111;0.0216366323242026;0.0216193432841346;0.0216018244996503;0.0215840772141744;0.021566102670093;0.0215479021087327;0.0215294767703405;0.0215108278940632;0.0214919567179271;0.0214728644788182;0.0214535524124615;0.0214340217534013;0.0214142737349813;0.0213943095893242;0.0213741305473122;0.0213537378385675;0.0213331326914318;0.0213123163329474;0.0212912899888375;0.0212700548834864;0.0212486122399205;0.0212269632797886;0.0212051092233429;0.0211830512894198;0.0211607906954207;0.021138328657293;0.0211156663895112;0.0210928051050577;0.0210697460154048;0.0210464903304949;0.0210230392587226;0.0209993940069161;0.0209755557803181;0.0209515257825682;0.0209273052156838;0.0209028952800423;0.020878297174363;0.0208535120956883;0.0208285412393665;0.0208033857990334;0.0207780469665943;0.0207525259322066;0.0207268238842619;0.0207009420093679;0.0206748814923318;0.020648643516142;0.0206222292619508;0.0205956399090575;0.0205688766348906;0.0205419406149913;0.0205148330229955;0.0204875550306177;0.0204601078076336;0.020432492521863;0.0204047103391538;0.0203767624233645;0.0203486499363482;0.0203203740379356;0.020291935885919;0.0202633366360355;0.020234577441951;0.020205659455244;0.0201765838253892;0.0201473516997418;0.0201179642235214;0.0200884225397961;0.0200587277894667;0.020028881111251;0.0199988836416682;0.0199687365150233;0.0199384408633918;0.0199079978166042;0.0198774085022304;0.0198466740455651;0.0198157955696123;0.0197847741950701;0.0197536110403162;0.0197223072213925;0.0196908638519908;0.0196592820434375;0.0196275629046798;0.0195957075422703;0.0195637170603529;0.0195315925606485;0.0194993351424409;0.0194669459025618;0.0194344259353776;0.0194017763327749;0.0193689981841464;0.0193360925763775;0.0193030605938321;0.0192699033183391;0.0192366218291787;0.019203217203069;0.0191696905141523;0.0191360428339821;0.0191022752315096;0.0190683887730704;0.0190343845223718;0.0190002635404793;0.018966026885804;0.0189316756140897;0.0188972107784002;0.0188626334291062;0.0188279446138735;0.0187931453776497;0.0187582367626523;0.0187232198083563;0.0186880955514817;0.0186528650259817;0.0186175292630303;0.0185820892910106;0.0185465461355029;0.0185109008192725;0.0184751543622587;0.0184393077815623;0.0184033620914347;0.0183673183032665;0.0183311774255754;0.0182949404639958;0.0182586084212671;0.0182221822972225;0.0181856630887784;0.0181490517899233;0.0181123493917068;0.0180755568822289;0.0180386752466294;0.0180017054670774;0.0179646485227607;0.0179275053898754;0.0178902770416155;0.0178529644481627;0.0178155685766767;0.0177780903912842;0.01774053085307;0.0177028909200663;0.0176651715472435;0.0176273736864999;0.0175894982866526;0.0175515462934279;0.0175135186494514;0.0174754162942395;0.0174372401641892;0.0173989911925696;0.0173606703095124;0.0173222784420034;0.0172838165138729;0.0172452854457875;0.0172066861552411;0.0171680195565462;0.0171292865608255;0.0170904880760033;0.0170516250067972;0.0170126982547098;0.0169737087180206;0.0169346572917774;0.0168955448677892;0.0168563723346172;0.0168171405775676;0.016777850478684;0.0167385029167391;0.0166990987672274;0.016659638902358;0.0166201241910468;0.0165805554989092;0.0165409336882532;0.0165012596180719;0.0164615341440367;0.01642175811849;0.0163819323904387;0.0163420578055472;0.0163021352061308;0.0162621654311489;0.0162221493161987;0.0161820876935087;0.0161419813919321;0.016101831236941;0.0160616380506197;0.0160214026516591;0.0159811258553503;0.015940808473579;0.0159004513148196;0.0158600551841291;0.015819620883142;0.0157791492100646;0.015738640959669;0.0156980969232886;0.0156575178888119;0.0156169046406781;0.0155762579598713;0.0155355786239159;0.0154948674068714;0.0154541250793279;0.0154133524084007;0.0153725501577262;0.015331719087457;0.0152908599542575;0.0152499735112994;0.0152090605082574;0.0151681216913049;0.0151271578031099;0.0150861695828308;0.0150451577661127;0.0150041230850829;0.0149630662683479;0.0149219880409888;0.0148808891245584;0.0148397702370772;0.0147986320930298;0.0147574754033622;0.0147163008754775;0.0146751092132337;0.0146339011169396;0.0145926772833527;0.0145514384056753;0.0145101851735525;0.0144689182730687;0.0144276383867453;0.0143863461935379;0.014345042368834;0.0143037275844501;0.0142624025086298;0.0142210678060412;0.014179724137775;0.0141383721613421;0.0140970125306716;0.014055645896109;0.0140142729044144;0.0139728941987605;0.0139315104187309;0.0138901222003188;0.0138487301759252;0.0138073349743574;0.0137659372208281;0.0137245375369534;0.0136831365407524;0.0136417348466455;0.0136003330654535;0.013558931804397;0.0135175316670951;0.0134761332535648;0.0134347371602205;0.013393343979873;0.0133519543017293;0.013310568711392;0.0132691877908589;0.013227812118523;0.0131864422691718;0.0131450788139878;0.0131037223205477;0.0130623733528234;0.0130210324711811;0.0129797002323824;0.0129383771895841;0.0128970638923385;0.0128557608865941;0.0128144687146963;0.0127731879153873;0.0127319190238077;0.0126906625714966;0.0126494190863927;0.0126081890928351;0.0125669731115647;0.0125257716597247;0.0124845852508622;0.0124434143949294;0.0124022595982848;0.0123611213636946;0.0123200001903342;0.0122788965737901;0.0122378110060608;0.0121967439755595;0.0121556959671148;0.0121146674619735;0.0120736589378022;0.0120326708686893;0.0119917037251469;0.0119507579741136;0.0119098340789561;0.011868932499472;0.0118280536918919;0.0117871981088822;0.0117463661995474;0.0117055584094329;0.0116647751805277;0.011624016951267;0.0115832841565354;0.0115425772276698;0.0115018965924621;0.0114612426751627;0.0114206158964832;0.0113800166736003;0.0113394454201587;0.0112989025462742;0.011258388458538;0.0112179035600195;0.0111774482502703;0.0111370229253276;0.0110966279777186;0.0110562637964633;0.0110159307670795;0.010975629271586;0.010935359688507;0.0108951223928764;0.0108549177562413;0.0108147461466673;0.0107746079287419;0.0107345034635795;0.0106944331088256;0.0106543972186615;0.0106143961438089;0.0105744302315346;0.0105344998256552;0.0104946052665421;0.0104547468911263;0.0104149250329032;0.0103751400219381;0.0103353921848709;0.0102956818449215;0.0102560093218952;0.0102163749321875;0.01017677898879;0.0101372218012957;0.0100977036759047;0.0100582249154293;0.0100187858193002;0.00997938668357203;0.0099400278009291;0.00990070946069135;0.00986143194882025;0.00982219554792484;0.00978300053726775;0.00974384719277134;0.00970473578702392;0.00966566658928605;0.00962663986549678;0.00958765587828016;0.00954871488695155;0.00950981714752431;0.00947096291271629;0.0094321524319565;0.00939338595139185;0.00935466371389393;0.0093159859590658;0.00927735292324897;0.00923876483953036;0.00920022193774929;0.00916172444450464;0.00912327258316188;0.00908486657386049;0.00904650663352107;0.00900819297585279;0.00896992581136071;0.00893170534735332;0.00889353178795001;0.0088554053340887;0.00881732618353346;0.00877929453088222;0.00874131056757457;0.00870337448189951;0.00866548645900342;0.00862764668089797;0.0085898553264681;0.0085521125714801;0.00851441858858978;0.00847677354735049;0.00843917761422159;0.00840163095257653;0.00836413372271132;0.0083266860818529;0.00828928818416756;0.00825194018076957;0.00821464221972963;0.00817739444608359;0.00814019700184109;0.00810305002599434;0.00806595365452684;0.00802890802042233;0.00799191325367362;0.00795496948129161;0.00791807682731424;0.00788123541281559;0.00784444535591502;0.00780770677178631;0.00777101977266688;0.00773438446786714;0.00769780096377973;0.00766126936388893;0.00762478976878012;0.00758836227614927;0.00755198698081245;0.00751566397471543;0.00747939334694328;0.00744317518373013;0.00740700956846889;0.00737089658172098;0.00733483630122624;0.00729882880191279;0.00726287415590692;0.00722697243254317;0.00719112369837428;0.00715532801718132;0.00711958544998381;0.00708389605504983;0.00704825988790636;0.00701267700134947;0.00697714744545466;0.00694167126758721;0.00690624851241261;0.00687087922190698;0.00683556343536762;0.00680030118942352;0.00676509251804594;0.00672993745255913;0.00669483602165082;0.00665978825138318;0.00662479416520342;0.00658985378395465;0.00655496712588674;0.00652013420666724;0.00648535503939221;0.00645062963459735;0.00641595800026893;0.00638134014185485;0.00634677606227583;0.0063122657619364;0.00627780923873624;0.00624340648808137;0.00620905750289535;0.00617476227363066;0.00614052078828002;0.00610633303238773;0.0060721989890612;0.00603811863898232;0.00600409196041901;0.00597011892923675;0.0059361995189101;0.00590233370053443;0.00586852144283747;0.00583476271219105;0.00580105747262281;0.00576740568582796;0.00573380731118106;0.0057002623057479;0.00566677062429732;0.00563333221931314;0.00559994704100609;0.00556661503732576;0.00553333615397264;0.00550011033441016;0.00546693751987671;0.00543381764939783;0.00540075065979826;0.00536773648571416;0.00533477505960533;0.00530186631176739;0.0052690101703441;0.00523620656133964;0.00520345540863088;0.00517075663397987;0.0051381101570461;0.00510551589539899;0.00507297376453033;0.00504048367786674;0.00500804554678217;0.00497565928061048;0.00494332478665798;0.00491104197021601;0.00487881073457359;0.00484663098103001;0.00481450260890759;0.00478242551556433;0.00475039959640664;0.0047184247449021;0.00468650085259228;0.00465462780910543;0.00462280550216948;0.00459103381762476;0.00455931263943696;0.00452764184970998;0.00449602132869889;0.00446445095482291;0.00443293060467832;0.00440146015305152;0.00437003947293203;0.00433866843552555;0.00430734691026696;0.00427607476483351;0.00424485186515788;0.00421367807544131;0.00418255325816677;0.00415147727411206;0.00412044998236316;0.00408947124032728;0.0040585409037462;0.00402765882670945;0.00399682486166768;0.00396603885944579;0.00393530066925641;0.00390461013871314;0.00387396711384388;0.00384337143910425;0.00381282295739088;0.00378232151005492;0.00375186693691537;0.00372145907627252;0.00369109776492143;0.00366078283816534;0.00363051412982916;0.00360029147227299;0.0035701146964056;0.00353998363169792;0.00350989810619665;0.00347985794653768;0.0034498629779598;0.00341991302431814;0.00339000790809786;0.00336014745042765;0.00333033147109343;0.00330055978855185;0.00327083221994408;0.00324114858110932;0.00321150868659852;0.00318191234968804;0.00315235938239325;0.00312284959548233;0.00309338279848989;0.00306395879973069;0.00303457740631335;0.00300523842415407;0.00297594165799033;0.00294668691139467;0.00291747398678844;0.00288830268545549;0.00285917280755598;0.00283008415214012;0.00280103651716193;0.00277202969949308;0.00274306349493657;0.00271413769824061;0.00268525210311237;0.00265640650223175;0.00262760068726523;0.00259883444887969;0.00257010757675613;0.00254141985960361;0.00251277108517291;0.0024841610402705;0.00245558951077227;0.00242705628163739;0.00239856113692212;0.00237010385979366;0.00234168423254391;0.00231330203660339;0.00228495705255503;0.002256649060148;0.00222837783831153;0.00220014316516874;0.00217194481805049;0.00214378257350922;0.00211565620733274;0.00208756549455806;0.00205951020948525;0.00203149012569121;0.00200350501604353;0.00197555465271432;0.00194763880719397;0.001919757250305;0.00189190975221584;0.00186409608245468;0.00183631600992321;0.00180856930291045;0.00178085572910654;0.00175317505561652;0.00172552704897407;0.00169791147515534;0.00167032809959269;0.00164277668718846;0.00161525700232871;0.00158776880889696;0.00156031187028796;0.00153288594942139;0.0015054908087556;0.00147812621030134;0.00145079191563545;0.00142348768591449;0.00139621328188859;0.00136896846391498;0.00134175299197172;0.0013145666256714;0.00128740912427467;0.00126028024670401;0.00123317975155729;0.00120610739712138;0.0011790629413858;0.00115204614205629;0.00112505675656834;0.00109809454210086;0.00107115925558966;0.00104425065374103;0.00101736849304526;0.000990512529790111;0.000963682520074419;0.000936878219821494;0.000910099384792634;0.000883345770600572;0.00085661713272294;0.000829913226515637;0.000803233807226332;0.000776578630007802;0.000749947449931329;0.00072334002200008;0.000696756101162392;0.000670195442325197;0.000643657800367275;0.000617142930152563;0.000590650586543436;0.000564180524413982;0.00053773249866318;0.000511306264228219;0.000484901576097635;0.000458518189324518;0.000432155859039685;0.000405814340464771;0.00037949338892544;0.000353192759864432;0.00032691220885466;0.000300651491612275;0.00027441036400972;0.000248188582088693;0.000221985902073233;0.000195802080382638;0.000169636873644433;0.000143490038707315;0.000117361332654004;9.12505128142159e-005;6.51573367774649e-005;3.90815624059165e-005;1.30229478472013e-005]|9|8|on"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"fir_coef"
		Location		[609, 271, 1389, 957]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 68, 60, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 193, 60, 207]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_gen"
		  Ports			  [1, 1]
		  Position		  [130, 109, 220, 141]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "1024 coefs in bram\n9_8 out/1"
		  UserDataPersistent	  on
		  UserData		  "DataTag71"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Coefficient Generator"
		  MaskDescription	  "A coefficient generator."
		  MaskHelp		  "<pre>\nDescription::\n\nA coefficient generator.\n\nMask Parameters::\n\nCoefficiants (coefs): The coefficients to output.  These should be specified as doubles.\nThey will be rounded/saturated according to the specified number of bits (n_bits)\nand binary point (bin_pt).\n\nNumber of Coefficient Bits (n_bits): The number of bits used for the fixed point binary\nrepresentation of the coefficients.\n\nCoefficient Binary Point (bin_pt): The binary point of the fixed point binary representation\nof the coefficients.\n\nLog2 Cycles per Coefficient (log2_cpc): The log2 value of the number of cycles per coefficient.\nMust be a non-negative integer (i.e. cycles per coefficient must be a power of 2).  \n\nUse BRAM (use_bram): Check this checkbox to store coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Coefficients|Number of Bits|Binary Point|Log2 Cycles per Coefficient|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off"
		  MaskCallbackString	  "||||"
		  MaskEnableString	  "off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on"
		  MaskVarAliasString	  ",,,,"
		  MaskVariables		  "coefs=&1;n_bits=&2;bin_pt=&3;log2_cpc=&4;use_bram=&5;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "[7.55822333239443e-005;0.000226337373781674;0.000376546527419557;0.000526209439676531;0.000675325864794748;0.000823895565799559;0.000971918314479012;0.00111939389136366;0.00126632208570627;0.00141270269546109;0.00155853552726339;0.00170382039640892;0.00184855712683285;0.00199274555108931;0.00213638551033019;0.0022794768542842;0.00242201944123601;0.00256401313800475;0.00270545781992298;0.00284635337081542;0.00298669968297734;0.00312649665715319;0.00326574420251518;0.00340444223664131;0.00354259068549404;0.00368018948339813;0.00381723857301899;0.00395373790534074;0.00408968743964404;0.00422508714348402;0.00435993699266828;0.00449423697123439;0.00462798707142765;0.00476118729367882;0.00489383764658139;0.00502593814686929;0.00515748881939405;0.00528848969710218;0.00541894082101253;0.00554884224019323;0.00567819401173886;0.00580699620074764;0.00593524888029807;0.006062952131426;0.0061901060431015;0.00631671071220536;0.00644276624350604;0.00656827274963604;0.00669323035106852;0.00681763917609391;0.00694149936079604;0.00706481104902866;0.00718757439239176;0.00730978955020755;0.00743145668949677;0.00755257598495482;0.00767314761892755;0.00779317178138749;0.00791264866990946;0.00803157848964654;0.00814996145330591;0.00826779778112436;0.00838508770084402;0.00850183144768805;0.00861802926433593;0.00873368140089908;0.00884878811489629;0.00896334967122888;0.00907736634215623;0.00919083840727075;0.00930376615347321;0.0094161498749479;0.00952798987313748;0.00963928645671813;0.00975003994157455;0.00986025065077467;0.00996991891454458;0.0100790450702434;0.0101876294623378;0.0102956724423769;0.0104031743689668;0.010510135607745;0.0106165565313551;0.0107224375194214;0.0108277789585228;0.010932581242168;0.0110368447707688;0.0111405699516152;0.0112437571988492;0.0113464069334393;0.0114485195831541;0.0115500955825369;0.0116511353728793;0.0117516394021958;0.0118516081251968;0.0119510420032635;0.012049941504421;0.0121483071033125;0.0122461392811728;0.0123434385258024;0.0124402053315406;0.0125364401992397;0.0126321436362382;0.0127273161563346;0.0128219582797607;0.0129160705331552;0.0130096534495371;0.013102707568279;0.0131952334350806;0.0132872316019417;0.013378702627136;0.0134696470751837;0.0135600655168253;0.0136499585289943;0.0137393266947904;0.0138281706034528;0.0139164908503332;0.0140042880368685;0.0140915627705541;0.0141783156649169;0.0142645473394878;0.0143502584197752;0.014435449537237;0.0145201213292544;0.0146042744391039;0.0146879095159304;0.0147710272147199;0.014853628196272;0.014935713127173;0.0150172826797681;0.0150983375321339;0.0151788783680517;0.0152589058769791;0.0153384207540233;0.0154174236999132;0.0154959154209719;0.0155738966290892;0.015651368041694;0.0157283303817268;0.0158047843776117;0.0158807307632293;0.0159561702778886;0.0160311036662993;0.0161055316785444;0.016179455070052;0.0162528746015679;0.0163257910391276;0.0163982051540287;0.0164701177228029;0.0165415295271879;0.0166124413541001;0.0166828539956064;0.016752768248896;0.0168221849162531;0.0168911048050285;0.0169595287276116;0.0170274575014029;0.0170948919487855;0.0171618328970972;0.0172282811786028;0.0172942376304655;0.0173597030947194;0.0174246784182411;0.0174891644527217;0.0175531620546388;0.0176166720852282;0.0176796954104559;0.01774223290099;0.0178042854321725;0.0178658538839913;0.0179269391410516;0.0179875420925484;0.0180476636322377;0.0181073046584087;0.0181664660738554;0.0182251487858485;0.0182833537061072;0.018341081750771;0.0183983338403711;0.018455110899803;0.0185114138582973;0.0185672436493922;0.0186226012109047;0.0186774874849029;0.0187319034176773;0.0187858499597128;0.0188393280656603;0.0188923386943085;0.0189448828085557;0.0189969613753813;0.0190485753658179;0.0190997257549227;0.0191504135217495;0.0192006396493202;0.0192504051245967;0.0192997109384527;0.019348558085645;0.0193969475647859;0.0194448803783146;0.0194923575324687;0.0195393800372564;0.0195859489064282;0.0196320651574482;0.0196777298114666;0.0197229438932907;0.0197677084313573;0.0198120244577041;0.0198558930079418;0.0198993151212255;0.0199422918402268;0.0199848242111055;0.0200269132834817;0.0200685601104072;0.0201097657483373;0.0201505312571035;0.020190857699884;0.020230746143177;0.0202701976567714;0.0203092133137194;0.0203477941903082;0.0203859413660319;0.0204236559235634;0.0204609389487264;0.0204977915304673;0.0205342147608274;0.0205702097349146;0.0206057775508754;0.0206409193098672;0.02067563611603;0.0207099290764587;0.0207437993011751;0.0207772479030999;0.0208102759980249;0.020842884704585;0.0208750751442305;0.0209068484411992;0.0209382057224885;0.0209691481178275;0.0209996767596496;0.0210297927830643;0.0210594973258299;0.0210887915283252;0.0211176765335223;0.0211461534869588;0.02117422353671;0.0212018878333615;0.0212291475299812;0.0212560037820922;0.0212824577476449;0.0213085105869897;0.0213341634628491;0.0213594175402908;0.0213842739866995;0.0214087339717505;0.021432798667381;0.0214564692477637;0.0214797468892794;0.0215026327704889;0.0215251280721066;0.0215472339769727;0.0215689516700262;0.0215902823382775;0.0216112271707815;0.0216317873586099;0.021651964094825;0.0216717585744516;0.0216911719944508;0.0217102055536922;0.0217288604529277;0.0217471378947638;0.0217650390836353;0.0217825652257779;0.0217997175292016;0.0218164972036641;0.0218329054606434;0.0218489435133116;0.0218646125765079;0.021879913866712;0.0218948486020174;0.0219094180021051;0.0219236232882163;0.0219374656831268;0.0219509464111195;0.021964066697959;0.0219768277708642;0.0219892308584827;0.0220012771908637;0.0220129679994325;0.0220243045169635;0.0220352879775545;0.0220459196166004;0.0220562006707666;0.0220661323779637;0.0220757159773207;0.0220849527091593;0.0220938438149682;0.0221023905373766;0.0221105941201285;0.0221184558080573;0.0221259768470592;0.0221331584840681;0.0221400019670297;0.0221465085448756;0.022152679467498;0.0221585159857239;0.0221640193512895;0.0221691908168152;0.0221740316357794;0.0221785430624938;0.0221827263520777;0.0221865827604326;0.0221901135442173;0.0221933199608223;0.0221962032683452;0.022198764725565;0.0222010055919171;0.0222029271274689;0.0222045305928941;0.0222058172494483;0.0222067883589439;0.0222074451837253;0.0222077889866442;0.0222078210310349;0.0222075425806899;0.0222069548998346;0.0222060592531036;0.0222048569055155;0.0222033491224491;0.0222015371696183;0.0221994223130485;0.0221970058190519;0.0221942889542031;0.0221912729853155;0.0221879591794167;0.0221843488037246;0.0221804431256237;0.0221762434126404;0.02217175093242;0.0221669669527021;0.0221618927412975;0.0221565295660639;0.0221508786948827;0.0221449413956349;0.0221387189361781;0.0221322125843227;0.0221254236078085;0.0221183532742814;0.02211100285127;0.0221033736061624;0.0220954668061832;0.0220872837183699;0.0220788256095504;0.0220700937463195;0.0220610893950162;0.0220518138217011;0.0220422682921327;0.0220324540717458;0.0220223724256277;0.0220120246184963;0.0220014119146775;0.021990535578082;0.0219793968721838;0.021967997059997;0.0219563374040542;0.0219444191663836;0.0219322436084871;0.0219198119913184;0.0219071255752605;0.021894185620104;0.021880993385025;0.0218675501285635;0.0218538571086012;0.0218399155823402;0.021825726806281;0.021811292036201;0.0217966125271333;0.0217816895333444;0.0217665243083139;0.0217511181047122;0.02173547217438;0.0217195877683065;0.0217034661366086;0.0216871085285099;0.0216705161923194;0.0216536903754111;0.0216366323242026;0.0216193432841346;0.0216018244996503;0.0215840772141744;0.021566102670093;0.0215479021087327;0.0215294767703405;0.0215108278940632;0.0214919567179271;0.0214728644788182;0.0214535524124615;0.0214340217534013;0.0214142737349813;0.0213943095893242;0.0213741305473122;0.0213537378385675;0.0213331326914318;0.0213123163329474;0.0212912899888375;0.0212700548834864;0.0212486122399205;0.0212269632797886;0.0212051092233429;0.0211830512894198;0.0211607906954207;0.021138328657293;0.0211156663895112;0.0210928051050577;0.0210697460154048;0.0210464903304949;0.0210230392587226;0.0209993940069161;0.0209755557803181;0.0209515257825682;0.0209273052156838;0.0209028952800423;0.020878297174363;0.0208535120956883;0.0208285412393665;0.0208033857990334;0.0207780469665943;0.0207525259322066;0.0207268238842619;0.0207009420093679;0.0206748814923318;0.020648643516142;0.0206222292619508;0.0205956399090575;0.0205688766348906;0.0205419406149913;0.0205148330229955;0.0204875550306177;0.0204601078076336;0.020432492521863;0.0204047103391538;0.0203767624233645;0.0203486499363482;0.0203203740379356;0.020291935885919;0.0202633366360355;0.020234577441951;0.020205659455244;0.0201765838253892;0.0201473516997418;0.0201179642235214;0.0200884225397961;0.0200587277894667;0.020028881111251;0.0199988836416682;0.0199687365150233;0.0199384408633918;0.0199079978166042;0.0198774085022304;0.0198466740455651;0.0198157955696123;0.0197847741950701;0.0197536110403162;0.0197223072213925;0.0196908638519908;0.0196592820434375;0.0196275629046798;0.0195957075422703;0.0195637170603529;0.0195315925606485;0.0194993351424409;0.0194669459025618;0.0194344259353776;0.0194017763327749;0.0193689981841464;0.0193360925763775;0.0193030605938321;0.0192699033183391;0.0192366218291787;0.019203217203069;0.0191696905141523;0.0191360428339821;0.0191022752315096;0.0190683887730704;0.0190343845223718;0.0190002635404793;0.018966026885804;0.0189316756140897;0.0188972107784002;0.0188626334291062;0.0188279446138735;0.0187931453776497;0.0187582367626523;0.0187232198083563;0.0186880955514817;0.0186528650259817;0.0186175292630303;0.0185820892910106;0.0185465461355029;0.0185109008192725;0.0184751543622587;0.0184393077815623;0.0184033620914347;0.0183673183032665;0.0183311774255754;0.0182949404639958;0.0182586084212671;0.0182221822972225;0.0181856630887784;0.0181490517899233;0.0181123493917068;0.0180755568822289;0.0180386752466294;0.0180017054670774;0.0179646485227607;0.0179275053898754;0.0178902770416155;0.0178529644481627;0.0178155685766767;0.0177780903912842;0.01774053085307;0.0177028909200663;0.0176651715472435;0.0176273736864999;0.0175894982866526;0.0175515462934279;0.0175135186494514;0.0174754162942395;0.0174372401641892;0.0173989911925696;0.0173606703095124;0.0173222784420034;0.0172838165138729;0.0172452854457875;0.0172066861552411;0.0171680195565462;0.0171292865608255;0.0170904880760033;0.0170516250067972;0.0170126982547098;0.0169737087180206;0.0169346572917774;0.0168955448677892;0.0168563723346172;0.0168171405775676;0.016777850478684;0.0167385029167391;0.0166990987672274;0.016659638902358;0.0166201241910468;0.0165805554989092;0.0165409336882532;0.0165012596180719;0.0164615341440367;0.01642175811849;0.0163819323904387;0.0163420578055472;0.0163021352061308;0.0162621654311489;0.0162221493161987;0.0161820876935087;0.0161419813919321;0.016101831236941;0.0160616380506197;0.0160214026516591;0.0159811258553503;0.015940808473579;0.0159004513148196;0.0158600551841291;0.015819620883142;0.0157791492100646;0.015738640959669;0.0156980969232886;0.0156575178888119;0.0156169046406781;0.0155762579598713;0.0155355786239159;0.0154948674068714;0.0154541250793279;0.0154133524084007;0.0153725501577262;0.015331719087457;0.0152908599542575;0.0152499735112994;0.0152090605082574;0.0151681216913049;0.0151271578031099;0.0150861695828308;0.0150451577661127;0.0150041230850829;0.0149630662683479;0.0149219880409888;0.0148808891245584;0.0148397702370772;0.0147986320930298;0.0147574754033622;0.0147163008754775;0.0146751092132337;0.0146339011169396;0.0145926772833527;0.0145514384056753;0.0145101851735525;0.0144689182730687;0.0144276383867453;0.0143863461935379;0.014345042368834;0.0143037275844501;0.0142624025086298;0.0142210678060412;0.014179724137775;0.0141383721613421;0.0140970125306716;0.014055645896109;0.0140142729044144;0.0139728941987605;0.0139315104187309;0.0138901222003188;0.0138487301759252;0.0138073349743574;0.0137659372208281;0.0137245375369534;0.0136831365407524;0.0136417348466455;0.0136003330654535;0.013558931804397;0.0135175316670951;0.0134761332535648;0.0134347371602205;0.013393343979873;0.0133519543017293;0.013310568711392;0.0132691877908589;0.013227812118523;0.0131864422691718;0.0131450788139878;0.0131037223205477;0.0130623733528234;0.0130210324711811;0.0129797002323824;0.0129383771895841;0.0128970638923385;0.0128557608865941;0.0128144687146963;0.0127731879153873;0.0127319190238077;0.0126906625714966;0.0126494190863927;0.0126081890928351;0.0125669731115647;0.0125257716597247;0.0124845852508622;0.0124434143949294;0.0124022595982848;0.0123611213636946;0.0123200001903342;0.0122788965737901;0.0122378110060608;0.0121967439755595;0.0121556959671148;0.0121146674619735;0.0120736589378022;0.0120326708686893;0.0119917037251469;0.0119507579741136;0.0119098340789561;0.011868932499472;0.0118280536918919;0.0117871981088822;0.0117463661995474;0.0117055584094329;0.0116647751805277;0.011624016951267;0.0115832841565354;0.0115425772276698;0.0115018965924621;0.0114612426751627;0.0114206158964832;0.0113800166736003;0.0113394454201587;0.0112989025462742;0.011258388458538;0.0112179035600195;0.0111774482502703;0.0111370229253276;0.0110966279777186;0.0110562637964633;0.0110159307670795;0.010975629271586;0.010935359688507;0.0108951223928764;0.0108549177562413;0.0108147461466673;0.0107746079287419;0.0107345034635795;0.0106944331088256;0.0106543972186615;0.0106143961438089;0.0105744302315346;0.0105344998256552;0.0104946052665421;0.0104547468911263;0.0104149250329032;0.0103751400219381;0.0103353921848709;0.0102956818449215;0.0102560093218952;0.0102163749321875;0.01017677898879;0.0101372218012957;0.0100977036759047;0.0100582249154293;0.0100187858193002;0.00997938668357203;0.0099400278009291;0.00990070946069135;0.00986143194882025;0.00982219554792484;0.00978300053726775;0.00974384719277134;0.00970473578702392;0.00966566658928605;0.00962663986549678;0.00958765587828016;0.00954871488695155;0.00950981714752431;0.00947096291271629;0.0094321524319565;0.00939338595139185;0.00935466371389393;0.0093159859590658;0.00927735292324897;0.00923876483953036;0.00920022193774929;0.00916172444450464;0.00912327258316188;0.00908486657386049;0.00904650663352107;0.00900819297585279;0.00896992581136071;0.00893170534735332;0.00889353178795001;0.0088554053340887;0.00881732618353346;0.00877929453088222;0.00874131056757457;0.00870337448189951;0.00866548645900342;0.00862764668089797;0.0085898553264681;0.0085521125714801;0.00851441858858978;0.00847677354735049;0.00843917761422159;0.00840163095257653;0.00836413372271132;0.0083266860818529;0.00828928818416756;0.00825194018076957;0.00821464221972963;0.00817739444608359;0.00814019700184109;0.00810305002599434;0.00806595365452684;0.00802890802042233;0.00799191325367362;0.00795496948129161;0.00791807682731424;0.00788123541281559;0.00784444535591502;0.00780770677178631;0.00777101977266688;0.00773438446786714;0.00769780096377973;0.00766126936388893;0.00762478976878012;0.00758836227614927;0.00755198698081245;0.00751566397471543;0.00747939334694328;0.00744317518373013;0.00740700956846889;0.00737089658172098;0.00733483630122624;0.00729882880191279;0.00726287415590692;0.00722697243254317;0.00719112369837428;0.00715532801718132;0.00711958544998381;0.00708389605504983;0.00704825988790636;0.00701267700134947;0.00697714744545466;0.00694167126758721;0.00690624851241261;0.00687087922190698;0.00683556343536762;0.00680030118942352;0.00676509251804594;0.00672993745255913;0.00669483602165082;0.00665978825138318;0.00662479416520342;0.00658985378395465;0.00655496712588674;0.00652013420666724;0.00648535503939221;0.00645062963459735;0.00641595800026893;0.00638134014185485;0.00634677606227583;0.0063122657619364;0.00627780923873624;0.00624340648808137;0.00620905750289535;0.00617476227363066;0.00614052078828002;0.00610633303238773;0.0060721989890612;0.00603811863898232;0.00600409196041901;0.00597011892923675;0.0059361995189101;0.00590233370053443;0.00586852144283747;0.00583476271219105;0.00580105747262281;0.00576740568582796;0.00573380731118106;0.0057002623057479;0.00566677062429732;0.00563333221931314;0.00559994704100609;0.00556661503732576;0.00553333615397264;0.00550011033441016;0.00546693751987671;0.00543381764939783;0.00540075065979826;0.00536773648571416;0.00533477505960533;0.00530186631176739;0.0052690101703441;0.00523620656133964;0.00520345540863088;0.00517075663397987;0.0051381101570461;0.00510551589539899;0.00507297376453033;0.00504048367786674;0.00500804554678217;0.00497565928061048;0.00494332478665798;0.00491104197021601;0.00487881073457359;0.00484663098103001;0.00481450260890759;0.00478242551556433;0.00475039959640664;0.0047184247449021;0.00468650085259228;0.00465462780910543;0.00462280550216948;0.00459103381762476;0.00455931263943696;0.00452764184970998;0.00449602132869889;0.00446445095482291;0.00443293060467832;0.00440146015305152;0.00437003947293203;0.00433866843552555;0.00430734691026696;0.00427607476483351;0.00424485186515788;0.00421367807544131;0.00418255325816677;0.00415147727411206;0.00412044998236316;0.00408947124032728;0.0040585409037462;0.00402765882670945;0.00399682486166768;0.00396603885944579;0.00393530066925641;0.00390461013871314;0.00387396711384388;0.00384337143910425;0.00381282295739088;0.00378232151005492;0.00375186693691537;0.00372145907627252;0.00369109776492143;0.00366078283816534;0.00363051412982916;0.00360029147227299;0.0035701146964056;0.00353998363169792;0.00350989810619665;0.00347985794653768;0.0034498629779598;0.00341991302431814;0.00339000790809786;0.00336014745042765;0.00333033147109343;0.00330055978855185;0.00327083221994408;0.00324114858110932;0.00321150868659852;0.00318191234968804;0.00315235938239325;0.00312284959548233;0.00309338279848989;0.00306395879973069;0.00303457740631335;0.00300523842415407;0.00297594165799033;0.00294668691139467;0.00291747398678844;0.00288830268545549;0.00285917280755598;0.00283008415214012;0.00280103651716193;0.00277202969949308;0.00274306349493657;0.00271413769824061;0.00268525210311237;0.00265640650223175;0.00262760068726523;0.00259883444887969;0.00257010757675613;0.00254141985960361;0.00251277108517291;0.0024841610402705;0.00245558951077227;0.00242705628163739;0.00239856113692212;0.00237010385979366;0.00234168423254391;0.00231330203660339;0.00228495705255503;0.002256649060148;0.00222837783831153;0.00220014316516874;0.00217194481805049;0.00214378257350922;0.00211565620733274;0.00208756549455806;0.00205951020948525;0.00203149012569121;0.00200350501604353;0.00197555465271432;0.00194763880719397;0.001919757250305;0.00189190975221584;0.00186409608245468;0.00183631600992321;0.00180856930291045;0.00178085572910654;0.00175317505561652;0.00172552704897407;0.00169791147515534;0.00167032809959269;0.00164277668718846;0.00161525700232871;0.00158776880889696;0.00156031187028796;0.00153288594942139;0.0015054908087556;0.00147812621030134;0.00145079191563545;0.00142348768591449;0.00139621328188859;0.00136896846391498;0.00134175299197172;0.0013145666256714;0.00128740912427467;0.00126028024670401;0.00123317975155729;0.00120610739712138;0.0011790629413858;0.00115204614205629;0.00112505675656834;0.00109809454210086;0.00107115925558966;0.00104425065374103;0.00101736849304526;0.000990512529790111;0.000963682520074419;0.000936878219821494;0.000910099384792634;0.000883345770600572;0.00085661713272294;0.000829913226515637;0.000803233807226332;0.000776578630007802;0.000749947449931329;0.00072334002200008;0.000696756101162392;0.000670195442325197;0.000643657800367275;0.000617142930152563;0.000590650586543436;0.000564180524413982;0.00053773249866318;0.000511306264228219;0.000484901576097635;0.000458518189324518;0.000432155859039685;0.000405814340464771;0.00037949338892544;0.000353192759864432;0.00032691220885466;0.000300651491612275;0.00027441036400972;0.000248188582088693;0.000221985902073233;0.000195802080382638;0.000169636873644433;0.000143490038707315;0.000117361332654004;9.12505128142159e-005;6.51573367774649e-005;3.90815624059165e-005;1.30229478472013e-005]|9|8|0|on"
		  MaskTabNameString	  ",,,,"
		  System {
		    Name		    "c_gen"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1023"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 50 50 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "1024"
		    initVector		    "[0;0;0;0;0;0;0;0;0;0;0;0;0;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0]"
		    distributed_mem	    "Block RAM"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "8"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[7 15 27 39 47 47 43 47 47 36 47 39 27 15 7 18 7 7 11 7 7 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "coef_out"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mem"
		    SrcPort		    1
		    DstBlock		    "coef_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "data_delay"
		  Ports			  [1, 1]
		  Position		  [145, 17, 200, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sum_delay"
		  Ports			  [1, 1]
		  Position		  [145, 62, 200, 88]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [145, 187, 200, 213]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [295, 23, 325, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [295, 68, 325, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "coef"
		  Position		  [295, 118, 325, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [295, 193, 325, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_gen"
		  SrcPort		  1
		  DstBlock		  "coef"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_delay"
		  SrcPort		  1
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "sum_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [25, 0]
		  Branch {
		    Points		    [0, -75]
		    DstBlock		    "c_gen"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "sync_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_delay"
		  SrcPort		  1
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  DstBlock		  "data_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_core"
	      Ports		      [4, 3]
	      Position		      [270, 29, 360, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "delay 1024 in bram\\nno adder"
	      UserDataPersistent      on
	      UserData		      "DataTag72"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Core"
	      MaskDescription	      "A Finite Impluse Response Filter core with complex inputs and real coefficients.  This FIR filter core does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter core with complex inputs and real coefficients.\n\nThis Finite Impluse Response Filter core is designed to be paired with a FIR Coefficient Generator \nto form a FIR filter tap.  This FIR filter core does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (use_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	      MaskPromptString	      "Tap Delay|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	      MaskStyleString	      "edit,edit,edit,edit,edit,checkbox,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "delay=&1;n_bits_d=&2;bin_pt_d=&3;n_bits_s=&4;bin_pt_s=&5;use_bram=&6;mult_latency=&7;add_latency=&8;add_bypass=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "1024|8|7|17|15|on|3|1|on"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"fir_core"
		Location		[282, 135, 1062, 821]
		Open			on
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 223, 60, 237]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "coef"
		  Position		  [30, 183, 60, 197]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 278, 60, 292]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_d"
		  Ports			  [1, 2]
		  Position		  [120, 69, 160, 111]
		  AttributesFormatString  "8_7 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag73"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|7"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_d"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_s"
		  Ports			  [1, 2]
		  Position		  [120, 209, 160, 251]
		  AttributesFormatString  "17_15 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag74"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "17|15"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_s"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_im"
		  Ports			  [1, 1]
		  Position		  [345, 175, 390, 205]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_re"
		  Ports			  [1, 1]
		  Position		  [345, 80, 390, 110]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "dout_delay"
		  Ports			  [1, 1]
		  Position		  [255, 17, 310, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "3"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,eabd56db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_im"
		  Ports			  [3, 1]
		  Position		  [255, 164, 305, 216]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b\nlatency = 3"
		  UserDataPersistent	  on
		  UserData		  "DataTag75"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|on"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_im"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Terminator
		    Name		    "Terminator"
		    Position		    [290, 145, 300, 155]
		    ShowName		    off
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [0, 0]
		    Branch {
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    DstBlock		    "Terminator"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_re"
		  Ports			  [3, 1]
		  Position		  [255, 69, 305, 121]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b\nlatency = 3"
		  UserDataPersistent	  on
		  UserData		  "DataTag76"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|on"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_re"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Terminator
		    Name		    "Terminator"
		    Position		    [290, 145, 300, 155]
		    ShowName		    off
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [0, 0]
		    Branch {
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    DstBlock		    "Terminator"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [455, 119, 495, 161]
		  UserDataPersistent	  on
		  UserData		  "DataTag77"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskInitialization	  "ri_to_c_init(gcb);"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [255, 272, 310, 298]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "3"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,eabd56db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "tap_delay"
		  Ports			  [1, 1]
		  Position		  [440, 14, 500, 46]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "bram depth = 1024"
		  UserDataPersistent	  on
		  UserData		  "DataTag78"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "BRAM Delay"
		  MaskDescription	  "A delay block that uses BRAM for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses BRAM for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n\nBuffer Latency (buffer_latency): The latency of the underlying storage.\n\nBuffer Latency defaults to 1 and cannot be changed via the block's dialog box.\nFuture versions may enable the setting of that parameter from the dialog.\n</pre>"
		  MaskPromptString	  "Delay Depth|Buffer Latency"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,off"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "delay_depth=&1;buffer_latency=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "1024|"
		  MaskTabNameString	  ","
		  System {
		    Name		    "tap_delay"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Constant"
		    Ports		    [0, 1]
		    Position		    [165, 133, 180, 147]
		    ShowName		    off
		    SourceBlock		    "xbsIndex_r4/Constant"
		    SourceType		    "Xilinx Constant Block Block"
		    arith_type		    "Boolean"
		    const		    "1"
		    n_bits		    "1"
		    bin_pt		    "0"
		    explicit_period	    on
		    period		    "1"
		    dsp48_infoedit	    "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		    equ			    "P=C"
		    opselect		    "C"
		    inp2		    "PCIN>>17"
		    opr			    "+"
		    inp1		    "P"
		    carry		    "CIN"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "constant"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "15,14,1,1,white,blue,0,06094819,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 15 15 0 ],[0 0 14 14 ],[0.77 0.82 0.91]);\npatch([3 1 4 1 3 7 8 9 13 10 7 5 8 5 7 10 13 9 8 7 3 ],[2 4 7 10 12 12 11 12 12 9 12 10 7 4 2 5 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 15 15 0 0 ],[0 0 14 14 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [0, 1]
		    Position		    [130, 71, 180, 89]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1022"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    off
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,a170c862,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bram"
		    Ports		    [3, 1]
		    Position		    [230, 61, 295, 159]
		    SourceBlock		    "xbsIndex_r4/Single Port RAM"
		    SourceType		    "Xilinx Single Port Random Access Memory Block"
		    depth		    "1024"
		    initVector		    "0"
		    distributed_mem	    "Block RAM"
		    write_mode		    "Read Before Write"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "spram"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "65,98,1,1,white,blue,0,90951842,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 98 98 ],[0.77 0.82 0.91]);\npatch([15 4 19 4 15 32 37 42 60 45 31 21 36 21 31 45 60 42 37 32 15 ],[24 35 50 65 76 76 71 76 76 61 75 65 50 35 25 39 24 24 29 24 24 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 98 98 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Constant"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    3
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "bram"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [555, 23, 585, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [555, 133, 585, 147]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 278, 585, 292]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "convert_im"
		  SrcPort		  1
		  Points		  [20, 0; 0, -40]
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "convert_re"
		  SrcPort		  1
		  Points		  [20, 0; 0, 35]
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "tap_delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_im"
		  SrcPort		  1
		  DstBlock		  "convert_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_re"
		  SrcPort		  1
		  DstBlock		  "convert_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  2
		  Points		  [75, 0]
		  DstBlock		  "mult_add_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  1
		  Points		  [75, 0]
		  DstBlock		  "mult_add_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "c_to_ri_s"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "coef"
		  SrcPort		  1
		  Points		  [140, 0]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "mult_add_re"
		    DstPort		    2
		  }
		  Branch {
		    DstBlock		    "mult_add_im"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  2
		  Points		  [20, 0; 0, 75]
		  DstBlock		  "mult_add_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  1
		  DstBlock		  "mult_add_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  Points		  [35, 0]
		  Branch {
		    Points		    [0, 60]
		    DstBlock		    "c_to_ri_d"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "dout_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "dout_delay"
		  SrcPort		  1
		  DstBlock		  "tap_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "data_out"
	      Position		      [435, 23, 465, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [435, 58, 465, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [435, 93, 465, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      3
	      Points		      [25, 0; 0, 15]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      2
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      1
	      Points		      [25, 0; 0, -15]
	      DstBlock		      "data_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, -15]
	      DstBlock		      "fir_coef"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "fir_coef"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "data_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, 15]
	      DstBlock		      "fir_coef"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      4
	      DstBlock		      "fir_core"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      3
	      DstBlock		      "fir_core"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      2
	      DstBlock		      "fir_core"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      1
	      DstBlock		      "fir_core"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_tap_2"
	  Ports			  [3, 3]
	  Position		  [250, 30, 350, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "delay 1024 in bram\n1024 coefs in bram"
	  UserDataPersistent	  on
	  UserData		  "DataTag79"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Tap (Real Coefficients)"
	  MaskDescription	  "A Finite Impluse Response Filter tap with real coefficients.  This FIR filter tap does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter tap with real coefficients.\n\nThis Finite Impluse Response Filter tap is designed to be daisy chained together\nto form a multi-tap FIR filter.  This FIR filter tap does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nTap Coefficiant(s) (coef): The coefficient(s) for this tap.  For a regular FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nUsually, delay==length(coef), but this is not required.  These should be specified as doubles. \nThey will be rounded and saturated according to the specified number of bits (n_bits_c) and\nbinary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	  MaskPromptString	  "Tap Delay|Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	  MaskStyleString	  "edit,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "||||||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,,,,"
	  MaskVariables		  "delay=&1;coef=&2;n_bits_c=&3;bin_pt_c=&4;n_bits_d=&5;bin_pt_d=&6;n_bits_s=&7;bin_pt_s=&8;coef_bram=&9;delay_bram=&10;mult_latency=&11;add_latency=&12;add_bypass=&13;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "1024|[-0.000375660323525046;-0.00112528207646786;-0.00187263770065757;-0.00261772609063303;-0.00336054616203061;-0.00410109685156988;-0.00483937711704019;-0.00557538593728603;-0.00630912231219222;-0.00704058526266978;-0.00776977383064064;-0.00849668707902262;-0.00922132409171369;-0.00994368397357705;-0.0106637658504249;-0.0113815688690025;-0.0120970921969721;-0.0128103350228962;-0.0135212965562215;-0.0142299760272615;-0.0149363726871797;-0.0156404858079725;-0.0163423146824514;-0.0170418586242254;-0.0177391169676835;-0.0184340890679761;-0.0191267743009973;-0.0198171720633655;-0.0205052817724058;-0.0211911028661302;-0.0218746348032188;-0.0225558770630009;-0.0232348291454347;-0.0239114905710882;-0.0245858608811188;-0.0252579396372536;-0.0259277264217688;-0.0265952208374693;-0.0272604225076676;-0.0279233310761635;-0.0285839462072226;-0.0292422675855545;-0.0298982949162921;-0.0305520279249694;-0.0312034663574997;-0.031852609980153;-0.0324994585795345;-0.0331440119625613;-0.0337862699564402;-0.0344262324086442;-0.0350638991868898;-0.0356992701791137;-0.0363323452934489;-0.0369631244582015;-0.0375916076218262;-0.0382177947529027;-0.0388416858401109;-0.0394632808922069;-0.0400825799379981;-0.0406995830263182;-0.0413142902260021;-0.0419267016258609;-0.0425368173346564;-0.0431446374810749;-0.0437501622137022;-0.0443533917009969;-0.0449543261312647;-0.0455529657126312;-0.0461493106730163;-0.0467433612601067;-0.047335117741329;-0.0479245804038229;-0.0485117495544134;-0.0490966255195838;-0.0496792086454471;-0.0502594992977191;-0.0508374978616896;-0.0514132047421944;-0.0519866203635867;-0.0525577451697087;-0.0531265796238626;-0.0536931242087811;-0.0542573794265993;-0.0548193457988244;-0.0553790238663066;-0.0559364141892089;-0.0564915173469777;-0.0570443339383125;-0.0575948645811356;-0.0581431099125613;-0.058689070588866;-0.0592327472854569;-0.0597741406968409;-0.0603132515365938;-0.0608500805373288;-0.0613846284506648;-0.0619168960471949;-0.0624468841164546;-0.0629745934668896;-0.0635000249258237;-0.064023179339426;-0.0645440575726791;-0.0650626605093458;-0.0655789890519362;-0.0660930441216749;-0.0666048266584676;-0.0671143376208679;-0.067621577986043;-0.0681265487497408;-0.0686292509262558;-0.0691296855483946;-0.0696278536674418;-0.0701237563531258;-0.0706173946935843;-0.071108769795329;-0.071597882783211;-0.0720847348003859;-0.0725693270082785;-0.0730516605865468;-0.0735317367330474;-0.0740095566637989;-0.0744851216129466;-0.0749584328327259;-0.0754294915934268;-0.0758982991833568;-0.0763648569088048;-0.0768291660940042;-0.0772912280810962;-0.0777510442300928;-0.0782086159188393;-0.0786639445429775;-0.0791170315159078;-0.0795678782687517;-0.0800164862503141;-0.0804628569270452;-0.0809069917830028;-0.0813488923198131;-0.0817885600566336;-0.0822259965301136;-0.0826612032943558;-0.0830941819208773;-0.0835249339985711;-0.0839534611336661;-0.0843797649496887;-0.0848038470874227;-0.0852257092048699;-0.0856453529772106;-0.0860627800967632;-0.0864779922729447;-0.0868909912322302;-0.0873017787181127;-0.0877103564910625;-0.0881167263284868;-0.0885208900246886;-0.0889228493908263;-0.0893226062548723;-0.0897201624615717;-0.0901155198724016;-0.0905086803655288;-0.0908996458357691;-0.0912884181945446;-0.0916749993698427;-0.0920593913061736;-0.0924415959645284;-0.0928216153223364;-0.0931994513734234;-0.0935751061279683;-0.0939485816124612;-0.09431987986966;-0.0946890029585477;-0.0950559529542894;-0.0954207319481889;-0.0957833420476455;-0.0961437853761105;-0.0965020640730433;-0.0968581802938682;-0.0972121362099301;-0.0975639340084509;-0.0979135758924848;-0.0982610640808748;-0.0986064008082076;-0.0989495883247697;-0.0992906288965024;-0.0996295248049575;-0.0999662783472516;-0.100300891836022;-0.100633367599381;-0.100963707980872;-0.101291915339421;-0.101617992049296;-0.101941940500055;-0.102263763096507;-0.102583462258662;-0.102901040421687;-0.103216500035856;-0.103529843566511;-0.103841073494009;-0.104150192313679;-0.104457202535775;-0.104762106685429;-0.105064907302604;-0.105365606942047;-0.105664208173243;-0.105960713580369;-0.106255125762242;-0.106547447332278;-0.10683768091844;-0.107125829163193;-0.107411894723454;-0.107695880270546;-0.107977788490152;-0.108257622082262;-0.108535383761131;-0.108811076255224;-0.109084702307174;-0.109356264673732;-0.109625766125715;-0.109893209447962;-0.110158597439284;-0.110421932912413;-0.110683218693955;-0.110942457624343;-0.111199652557785;-0.111454806362214;-0.111707921919243;-0.111959002124111;-0.112208049885639;-0.112455068126173;-0.112700059781542;-0.112943027801003;-0.113183975147195;-0.113422904796084;-0.11365981973692;-0.113894722972181;-0.114127617517525;-0.11435850640174;-0.114587392666694;-0.114814279367284;-0.115039169571384;-0.115262066359796;-0.115482972826202;-0.115701892077107;-0.115918827231792;-0.116133781422266;-0.116346757793206;-0.116557759501917;-0.116766789718271;-0.116973851624663;-0.117178948415955;-0.117382083299426;-0.117583259494722;-0.117782480233803;-0.117979748760891;-0.118175068332418;-0.118368442216977;-0.118559873695267;-0.118749366060041;-0.118936922616057;-0.119122546680023;-0.119306241580546;-0.11948801065808;-0.119667857264872;-0.119845784764912;-0.12002179653388;-0.120195895959092;-0.120368086439447;-0.120538371385378;-0.120706754218796;-0.120873238373037;-0.121037827292813;-0.121200524434153;-0.121361333264356;-0.121520257261934;-0.12167729991656;-0.121832464729017;-0.121985755211139;-0.122137174885766;-0.122286727286684;-0.122434415958572;-0.122580244456954;-0.122724216348138;-0.122866335209169;-0.123006604627771;-0.123145028202296;-0.123281609541668;-0.12341635226533;-0.123549260003193;-0.123680336395576;-0.123809585093158;-0.12393700975692;-0.124062614058095;-0.124186401678108;-0.124308376308528;-0.124428541651009;-0.124546901417241;-0.124663459328888;-0.124778219117541;-0.12489118452466;-0.125002359301522;-0.125111747209161;-0.125219352018322;-0.125325177509398;-0.12542922747238;-0.125531505706804;-0.12563201602169;-0.125730762235494;-0.125827748176048;-0.125922977680511;-0.126016454595306;-0.126108182776074;-0.126198166087613;-0.126286408403824;-0.126372913607659;-0.126457685591063;-0.126540728254919;-0.126622045508995;-0.126701641271888;-0.126779519470967;-0.126855684042321;-0.126930138930701;-0.127002888089467;-0.12707393548053;-0.1271432850743;-0.127210940849628;-0.127276906793752;-0.127341186902242;-0.127403785178944;-0.127464705635923;-0.12752395229341;-0.127581529179746;-0.127637440331325;-0.127691689792542;-0.127744281615732;-0.12779521986112;-0.127844508596762;-0.12789215189849;-0.127938153849857;-0.127982518542083;-0.128025250073994;-0.128066352551973;-0.1281058300899;-0.128143686809098;-0.128179926838275;-0.128214554313474;-0.128247573378009;-0.128278988182416;-0.128308802884396;-0.128337021648755;-0.128363648647355;-0.128388688059053;-0.128412144069646;-0.128434020871817;-0.128454322665079;-0.128473053655717;-0.128490218056735;-0.128505820087798;-0.128519863975179;-0.128532353951698;-0.128543294256673;-0.128552689135858;-0.12856054284139;-0.128566859631735;-0.128571643771628;-0.128574899532022;-0.128576631190026;-0.128576843028855;-0.128575539337773;-0.128572724412033;-0.128568402552826;-0.128562578067225;-0.128555255268125;-0.128546438474192;-0.128536132009803;-0.128524340204996;-0.128511067395406;-0.128496317922217;-0.128480096132103;-0.128462406377172;-0.128443253014909;-0.128422640408125;-0.128400572924896;-0.12837705493851;-0.128352090827411;-0.128325684975145;-0.1282978417703;-0.128268565606454;-0.12823786088212;-0.128205732000685;-0.128172183370362;-0.12813721940413;-0.128100844519676;-0.128063063139347;-0.128023879690088;-0.127983298603389;-0.127941324315228;-0.127897961266018;-0.127853213900551;-0.127807086667941;-0.12775958402157;-0.127710710419032;-0.127660470322078;-0.127608868196561;-0.127555908512382;-0.127501595743429;-0.127445934367531;-0.127388928866395;-0.127330583725555;-0.127270903434314;-0.127209892485693;-0.127147555376371;-0.127083896606635;-0.12701892068032;-0.12695263210476;-0.126885035390726;-0.126816135052377;-0.126745935607204;-0.12667444157597;-0.126601657482665;-0.126527587854441;-0.126452237221565;-0.126375610117361;-0.126297711078153;-0.126218544643217;-0.12613811535472;-0.126056427757669;-0.125973486399857;-0.125889295831806;-0.125803860606714;-0.1257171852804;-0.125629274411252;-0.12554013256017;-0.125449764290513;-0.125358174168047;-0.125265366760885;-0.12517134663944;-0.125076118376365;-0.124979686546505;-0.124882055726836;-0.124783230496419;-0.12468321543634;-0.124582015129658;-0.124479634161354;-0.124376077118273;-0.124271348589074;-0.124165453164175;-0.124058395435699;-0.123950179997422;-0.123840811444718;-0.123730294374506;-0.1236186333852;-0.12350583307665;-0.123391898050093;-0.123276832908101;-0.123160642254522;-0.123043330694433;-0.122924902834086;-0.122805363280853;-0.122684716643174;-0.122562967530506;-0.122440120553267;-0.122316180322788;-0.122191151451255;-0.122065038551663;-0.121937846237758;-0.121809579123986;-0.121680241825444;-0.121549838957822;-0.121418375137358;-0.12128585498078;-0.121152283105255;-0.121017664128342;-0.120882002667932;-0.120745303342203;-0.120607570769567;-0.120468809568615;-0.120329024358068;-0.120188219756726;-0.120046400383417;-0.119903570856942;-0.119759735796028;-0.119614899819273;-0.1194690675451;-0.1193222435917;-0.119174432576984;-0.119025639118535;-0.118875867833551;-0.118725123338799;-0.118573410250562;-0.118420733184589;-0.118267096756046;-0.118112505579464;-0.117956964268688;-0.117800477436828;-0.117643049696209;-0.117484685658321;-0.117325389933767;-0.117165167132216;-0.117004021862351;-0.11684195873182;-0.116678982347186;-0.116515097313878;-0.116350308236141;-0.116184619716987;-0.116018036358147;-0.115850562760017;-0.115682203521616;-0.115512963240528;-0.115342846512864;-0.115171857933203;-0.115000002094548;-0.114827283588279;-0.1146537070041;-0.114479276929993;-0.11430399795217;-0.114127874655023;-0.113950911621077;-0.113773113430942;-0.113594484663264;-0.113415029894677;-0.113234753699757;-0.113053660650972;-0.112871755318635;-0.112689042270857;-0.112505526073501;-0.11232121129013;-0.112136102481964;-0.111950204207832;-0.111763521024123;-0.111576057484741;-0.111387818141058;-0.111198807541867;-0.111009030233334;-0.110818490758952;-0.110627193659497;-0.110435143472979;-0.110242344734596;-0.110048801976688;-0.109854519728693;-0.109659502517097;-0.109463754865391;-0.109267281294027;-0.109070086320367;-0.108872174458642;-0.108673550219905;-0.108474218111987;-0.108274182639448;-0.108073448303537;-0.107872019602144;-0.107669901029754;-0.107467097077407;-0.107263612232647;-0.107059450979484;-0.106854617798343;-0.106649117166026;-0.106442953555663;-0.10623613143667;-0.106028655274704;-0.105820529531622;-0.105611758665433;-0.105402347130257;-0.105192299376281;-0.104981619849715;-0.104770312992751;-0.104558383243515;-0.10434583503603;-0.104132672800167;-0.103918900961607;-0.103704523941797;-0.103489546157905;-0.10327397202278;-0.10305780594491;-0.102841052328376;-0.102623715572817;-0.102405800073379;-0.102187310220681;-0.101968250400767;-0.101748624995071;-0.101528438380368;-0.101307694928738;-0.101086399007525;-0.10086455497929;-0.100642167201777;-0.100419240027867;-0.100195777805541;-0.0999717848778359;-0.0997472655828066;-0.099522224253484;-0.0992966652178355;-0.0990705927987245;-0.0988440113138705;-0.0986169250758091;-0.0983893383918524;-0.0981612555640488;-0.0979326808891443;-0.0977036186585424;-0.0974740731582651;-0.0972440486689138;-0.09701354946563;-0.0967825798180567;-0.0965511439902998;-0.0963192462408885;-0.0960868908227382;-0.095854081983111;-0.095620823963578;-0.0953871209999812;-0.095152977322395;-0.0949183971550889;-0.0946833847164898;-0.0944479442191439;-0.0942120798696797;-0.0939757958687704;-0.0937390964110971;-0.0935019856853112;-0.093264467873998;-0.0930265471536394;-0.0927882276945778;-0.0925495136609791;-0.0923104092107966;-0.0920709184957346;-0.0918310456612125;-0.0915907948463285;-0.091350170183824;-0.0911091758000479;-0.0908678158149208;-0.0906260943418998;-0.0903840154879432;-0.0901415833534753;-0.0898988020323511;-0.0896556756118219;-0.0894122081725004;-0.0891684037883258;-0.0889242665265297;-0.0886798004476017;-0.0884350096052548;-0.0881898980463924;-0.0879444698110729;-0.0876987289324774;-0.0874526794368749;-0.0872063253435898;-0.0869596706649676;-0.0867127194063427;-0.0864654755660042;-0.0862179431351643;-0.0859701260979243;-0.0857220284312427;-0.0854736541049025;-0.0852250070814789;-0.0849760913163068;-0.0847269107574494;-0.0844774693456655;-0.0842277710143782;-0.0839778196896433;-0.0837276192901176;-0.0834771737270274;-0.083226486904138;-0.0829755627177218;-0.0827244050565279;-0.0824730178017513;-0.082221404827002;-0.0819695699982751;-0.0817175171739195;-0.0814652502046088;-0.0812127729333109;-0.0809600891952574;-0.0807072028179151;-0.0804541176209555;-0.0802008374162255;-0.0799473660077185;-0.0796937071915449;-0.079439864755903;-0.0791858424810506;-0.0789316441392758;-0.0786772734948688;-0.0784227343040934;-0.0781680303151585;-0.0779131652681904;-0.0776581428952044;-0.0774029669200773;-0.0771476410585198;-0.0768921690180486;-0.0766365544979593;-0.0763808011892994;-0.0761249127748406;-0.0758688929290526;-0.0756127453180758;-0.075356473599695;-0.0751000814233127;-0.0748435724299231;-0.0745869502520857;-0.0743302185138991;-0.0740733808309759;-0.0738164408104159;-0.0735594020507816;-0.073302268142072;-0.0730450426656978;-0.0727877291944562;-0.0725303312925058;-0.0722728525153421;-0.0720152964097724;-0.0717576665138918;-0.0714999663570587;-0.0712421994598703;-0.0709843693341391;-0.0707264794828686;-0.0704685334002297;-0.0702105345715372;-0.0699524864732263;-0.0696943925728293;-0.0694362563289528;-0.0691780811912541;-0.068919870600419;-0.0686616279881388;-0.0684033567770881;-0.0681450603809021;-0.0678867422041547;-0.0676284056423361;-0.0673700540818315;-0.0671116908998989;-0.0668533194646474;-0.0665949431350165;-0.0663365652607541;-0.0660781891823955;-0.0658198182312429;-0.0655614557293443;-0.0653031049894726;-0.0650447693151055;-0.0647864520004051;-0.0645281563301975;-0.064269885579953;-0.0640116430157661;-0.0637534318943358;-0.0634952554629463;-0.0632371169594469;-0.0629790196122337;-0.0627209666402297;-0.0624629612528662;-0.0622050066500641;-0.061947106022215;-0.061689262550163;-0.0614314794051863;-0.0611737597489788;-0.0609161067336326;-0.0606585235016196;-0.0604010131857741;-0.0601435789092752;-0.0598862237856295;-0.0596289509186537;-0.0593717634024577;-0.0591146643214275;-0.0588576567502086;-0.0586007437536894;-0.0583439283869845;-0.0580872136954188;-0.0578306027145112;-0.0575740984699583;-0.0573177039776189;-0.0570614222434986;-0.0568052562637336;-0.0565492090245758;-0.0562932835023776;-0.0560374826635766;-0.0557818094646811;-0.0555262668522548;-0.0552708577629027;-0.0550155851232567;-0.0547604518499607;-0.0545054608496575;-0.0542506150189739;-0.0539959172445073;-0.0537413704028122;-0.0534869773603863;-0.0532327409736577;-0.0529786640889713;-0.0527247495425758;-0.0524710001606109;-0.0522174187590951;-0.0519640081439119;-0.0517107711107988;-0.0514577104453342;-0.0512048289229253;-0.0509521293087968;-0.0506996143579782;-0.0504472868152932;-0.0501951494153474;-0.0499432048825173;-0.0496914559309391;-0.049439905264498;-0.0491885555768165;-0.0489374095512447;-0.0486864698608494;-0.0484357391684033;-0.0481852201263752;-0.0479349153769199;-0.0476848275518681;-0.0474349592727168;-0.0471853131506194;-0.0469358917863767;-0.0466866977704272;-0.046437733682838;-0.0461890020932959;-0.0459405055610986;-0.0456922466351457;-0.0454442278539307;-0.045196451745532;-0.044948920827605;-0.0447016376073741;-0.0444546045816244;-0.0442078242366945;-0.0439612990484682;-0.0437150314823675;-0.0434690239933452;-0.0432232790258777;-0.0429777990139576;-0.0427325863810878;-0.0424876435402736;-0.0422429728940172;-0.0419985768343105;-0.0417544577426293;-0.0415106179899271;-0.0412670599366292;-0.0410237859326265;-0.0407807983172704;-0.0405380994193671;-0.0402956915571721;-0.0400535770383852;-0.0398117581601453;-0.0395702372090256;-0.039329016461029;-0.0390880981815831;-0.0388474846255361;-0.0386071780371525;-0.0383671806501086;-0.038127494687489;-0.0378881223617824;-0.037649065874878;-0.0374103274180622;-0.0371719091720144;-0.0369338133068049;-0.0366960419818909;-0.036458597346114;-0.036221481537697;-0.0359846966842419;-0.0357482449027266;-0.035512128299503;-0.0352763489702948;-0.0350409090001953;-0.0348058104636656;-0.0345710554245323;-0.0343366459359869;-0.0341025840405833;-0.0338688717702371;-0.0336355111462241;-0.0334025041791795;-0.0331698528690966;-0.0329375592053265;-0.0327056251665774;-0.0324740527209136;-0.0322428438257562;-0.0320120004278819;-0.0317815244634236;-0.0315514178578704;-0.0313216825260677;-0.0310923203722177;-0.03086333328988;-0.0306347231619722;-0.0304064918607708;-0.0301786412479123;-0.0299511731743939;-0.0297240894805752;-0.0294973919961793;-0.0292710825402948;-0.029045162921377;-0.0288196349372498;-0.0285945003751079;-0.0283697610115189;-0.0281454186124251;-0.0279214749331467;-0.0276979317183836;-0.0274747907022183;-0.0272520536081191;-0.0270297221489423;-0.026807798026936;-0.026586282933743;-0.0263651785504042;-0.026144486547362;-0.0259242085844644;-0.0257043463109681;-0.0254849013655432;-0.0252658753762764;-0.025047269960676;-0.0248290867256759;-0.0246113272676396;-0.024393993172366;-0.0241770860150929;-0.0239606073605024;-0.0237445587627263;-0.0235289417653507;-0.0233137579014212;-0.0230990086934489;-0.0228846956534157;-0.0226708202827797;-0.0224573840724814;-0.0222443885029495;-0.022031835044107;-0.0218197251553776;-0.0216080602856917;-0.0213968418734932;-0.0211860713467461;-0.0209757501229411;-0.0207658796091025;-0.0205564612017955;-0.020347496287133;-0.0201389862407831;-0.0199309324279764;-0.0197233362035136;-0.0195161989117731;-0.019309521886719;-0.0191033064519087;-0.0188975539205014;-0.0186922655952659;-0.018487442768589;-0.0182830867224842;-0.0180791987285998;-0.0178757800482282;-0.0176728319323143;-0.0174703556214645;-0.0172683523459559;-0.0170668233257453;-0.0168657697704791;-0.016665192879502;-0.0164650938418669;-0.016265473836345;-0.016066334031435;-0.0158676755853733;-0.0156694996461444;-0.0154718073514906;-0.0152745998289226;-0.01507787819573;-0.0148816435589916;-0.0146858970155864;-0.0144906396522044;-0.0142958725453573;-0.0141015967613896;-0.0139078133564902;-0.013714523376703;-0.0135217278579391;-0.0133294278259877;-0.013137624296528;-0.0129463182751411;-0.0127555107573218;-0.0125652027284904;-0.0123753951640054;-0.0121860890291751;-0.0119972852792704;-0.0118089848595372;-0.0116211887052088;-0.011433897741519;-0.0112471128837145;-0.0110608350370682;-0.0108750650968923;-0.0106898039485508;-0.010505052467474;-0.0103208115191707;-0.0101370819592425;-0.00995386463339719;-0.00977116037746245;-0.0095889700173997;-0.00940729436931827;-0.00922613423948933;-0.00904549042435999;-0.00886536371056795;-0.00868575487495546;-0.0085066646845843;-0.00832809389675017;-0.00815004325899737;-0.0079725135091339;-0.00779550537524631;-0.00761901957571464;-0.00744305681922785;-0.00726761780479901;-0.00709270322178053;-0.00691831374988003;-0.00674445005917552;-0.00657111281013151;-0.00639830265361464;-0.00622602023090949;-0.00605426617373492;-0.00588304110426002;-0.00571234563512023;-0.00554218036943399;-0.00537254590081901;-0.00520344281340873;-0.00503487168186923;-0.00486683307141569;-0.00469932753782952;-0.0045323556274752;-0.00436591787731722;-0.00420001481493748;-0.00403464695855241;-0.00386981481703025;-0.00370551888990871;-0.00354175966741245;-0.00337853763047057;-0.00321585325073467;-0.00305370699059638;-0.00289209930320557;-0.00273103063248833;-0.00257050141316491;-0.00241051207076825;-0.0022510630216622;-0.0020921546730598;-0.00193378742304204;-0.00177596166057639;-0.00161867776553536;-0.00146193610871559;-0.00130573705185642;-0.00115008094765919;-0.000994968139806186;-0.000840398962979647;-0.000686373742881339;-0.000532892796251757;-0.000379956430889435;-0.000227564945670749;-7.57186305694141e-005]|9|8|8|7|17|15|on|on|3|1|off"
	  MaskTabNameString	  ",,,,,,,,,,,,"
	  System {
	    Name		    "fir_tap_2"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_in"
	      Position		      [30, 23, 60, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 58, 60, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 93, 60, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_coef"
	      Ports		      [3, 4]
	      Position		      [115, 29, 205, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "1024 coefs in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag80"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Coefficient Generator"
	      MaskDescription	      "A Finite Impluse Response filter coefficient generator.  This FIR filter coefficient generator outputs real coefficients.  It can output one coefficient or cycle through a vector of coefficients for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response filter coefficient generator.\nThis FIR filter coefficient generator outputs real coefficients.\nIt can output one coefficient or cycle through a vector of coefficients for WOLA\n(Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Coefficiant(s) (coef): The coefficient(s) to output.  For a \"regular\" FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nThese should be specified as doubles.   They will be rounded and saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nUse BRAM for Coefficients (use_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n</pre>"
	      MaskPromptString	      "Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Use BRAM for Coefficients"
	      MaskStyleString	      "edit,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "coef=&1;n_bits_c=&2;bin_pt_c=&3;use_bram=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "[-0.000375660323525046;-0.00112528207646786;-0.00187263770065757;-0.00261772609063303;-0.00336054616203061;-0.00410109685156988;-0.00483937711704019;-0.00557538593728603;-0.00630912231219222;-0.00704058526266978;-0.00776977383064064;-0.00849668707902262;-0.00922132409171369;-0.00994368397357705;-0.0106637658504249;-0.0113815688690025;-0.0120970921969721;-0.0128103350228962;-0.0135212965562215;-0.0142299760272615;-0.0149363726871797;-0.0156404858079725;-0.0163423146824514;-0.0170418586242254;-0.0177391169676835;-0.0184340890679761;-0.0191267743009973;-0.0198171720633655;-0.0205052817724058;-0.0211911028661302;-0.0218746348032188;-0.0225558770630009;-0.0232348291454347;-0.0239114905710882;-0.0245858608811188;-0.0252579396372536;-0.0259277264217688;-0.0265952208374693;-0.0272604225076676;-0.0279233310761635;-0.0285839462072226;-0.0292422675855545;-0.0298982949162921;-0.0305520279249694;-0.0312034663574997;-0.031852609980153;-0.0324994585795345;-0.0331440119625613;-0.0337862699564402;-0.0344262324086442;-0.0350638991868898;-0.0356992701791137;-0.0363323452934489;-0.0369631244582015;-0.0375916076218262;-0.0382177947529027;-0.0388416858401109;-0.0394632808922069;-0.0400825799379981;-0.0406995830263182;-0.0413142902260021;-0.0419267016258609;-0.0425368173346564;-0.0431446374810749;-0.0437501622137022;-0.0443533917009969;-0.0449543261312647;-0.0455529657126312;-0.0461493106730163;-0.0467433612601067;-0.047335117741329;-0.0479245804038229;-0.0485117495544134;-0.0490966255195838;-0.0496792086454471;-0.0502594992977191;-0.0508374978616896;-0.0514132047421944;-0.0519866203635867;-0.0525577451697087;-0.0531265796238626;-0.0536931242087811;-0.0542573794265993;-0.0548193457988244;-0.0553790238663066;-0.0559364141892089;-0.0564915173469777;-0.0570443339383125;-0.0575948645811356;-0.0581431099125613;-0.058689070588866;-0.0592327472854569;-0.0597741406968409;-0.0603132515365938;-0.0608500805373288;-0.0613846284506648;-0.0619168960471949;-0.0624468841164546;-0.0629745934668896;-0.0635000249258237;-0.064023179339426;-0.0645440575726791;-0.0650626605093458;-0.0655789890519362;-0.0660930441216749;-0.0666048266584676;-0.0671143376208679;-0.067621577986043;-0.0681265487497408;-0.0686292509262558;-0.0691296855483946;-0.0696278536674418;-0.0701237563531258;-0.0706173946935843;-0.071108769795329;-0.071597882783211;-0.0720847348003859;-0.0725693270082785;-0.0730516605865468;-0.0735317367330474;-0.0740095566637989;-0.0744851216129466;-0.0749584328327259;-0.0754294915934268;-0.0758982991833568;-0.0763648569088048;-0.0768291660940042;-0.0772912280810962;-0.0777510442300928;-0.0782086159188393;-0.0786639445429775;-0.0791170315159078;-0.0795678782687517;-0.0800164862503141;-0.0804628569270452;-0.0809069917830028;-0.0813488923198131;-0.0817885600566336;-0.0822259965301136;-0.0826612032943558;-0.0830941819208773;-0.0835249339985711;-0.0839534611336661;-0.0843797649496887;-0.0848038470874227;-0.0852257092048699;-0.0856453529772106;-0.0860627800967632;-0.0864779922729447;-0.0868909912322302;-0.0873017787181127;-0.0877103564910625;-0.0881167263284868;-0.0885208900246886;-0.0889228493908263;-0.0893226062548723;-0.0897201624615717;-0.0901155198724016;-0.0905086803655288;-0.0908996458357691;-0.0912884181945446;-0.0916749993698427;-0.0920593913061736;-0.0924415959645284;-0.0928216153223364;-0.0931994513734234;-0.0935751061279683;-0.0939485816124612;-0.09431987986966;-0.0946890029585477;-0.0950559529542894;-0.0954207319481889;-0.0957833420476455;-0.0961437853761105;-0.0965020640730433;-0.0968581802938682;-0.0972121362099301;-0.0975639340084509;-0.0979135758924848;-0.0982610640808748;-0.0986064008082076;-0.0989495883247697;-0.0992906288965024;-0.0996295248049575;-0.0999662783472516;-0.100300891836022;-0.100633367599381;-0.100963707980872;-0.101291915339421;-0.101617992049296;-0.101941940500055;-0.102263763096507;-0.102583462258662;-0.102901040421687;-0.103216500035856;-0.103529843566511;-0.103841073494009;-0.104150192313679;-0.104457202535775;-0.104762106685429;-0.105064907302604;-0.105365606942047;-0.105664208173243;-0.105960713580369;-0.106255125762242;-0.106547447332278;-0.10683768091844;-0.107125829163193;-0.107411894723454;-0.107695880270546;-0.107977788490152;-0.108257622082262;-0.108535383761131;-0.108811076255224;-0.109084702307174;-0.109356264673732;-0.109625766125715;-0.109893209447962;-0.110158597439284;-0.110421932912413;-0.110683218693955;-0.110942457624343;-0.111199652557785;-0.111454806362214;-0.111707921919243;-0.111959002124111;-0.112208049885639;-0.112455068126173;-0.112700059781542;-0.112943027801003;-0.113183975147195;-0.113422904796084;-0.11365981973692;-0.113894722972181;-0.114127617517525;-0.11435850640174;-0.114587392666694;-0.114814279367284;-0.115039169571384;-0.115262066359796;-0.115482972826202;-0.115701892077107;-0.115918827231792;-0.116133781422266;-0.116346757793206;-0.116557759501917;-0.116766789718271;-0.116973851624663;-0.117178948415955;-0.117382083299426;-0.117583259494722;-0.117782480233803;-0.117979748760891;-0.118175068332418;-0.118368442216977;-0.118559873695267;-0.118749366060041;-0.118936922616057;-0.119122546680023;-0.119306241580546;-0.11948801065808;-0.119667857264872;-0.119845784764912;-0.12002179653388;-0.120195895959092;-0.120368086439447;-0.120538371385378;-0.120706754218796;-0.120873238373037;-0.121037827292813;-0.121200524434153;-0.121361333264356;-0.121520257261934;-0.12167729991656;-0.121832464729017;-0.121985755211139;-0.122137174885766;-0.122286727286684;-0.122434415958572;-0.122580244456954;-0.122724216348138;-0.122866335209169;-0.123006604627771;-0.123145028202296;-0.123281609541668;-0.12341635226533;-0.123549260003193;-0.123680336395576;-0.123809585093158;-0.12393700975692;-0.124062614058095;-0.124186401678108;-0.124308376308528;-0.124428541651009;-0.124546901417241;-0.124663459328888;-0.124778219117541;-0.12489118452466;-0.125002359301522;-0.125111747209161;-0.125219352018322;-0.125325177509398;-0.12542922747238;-0.125531505706804;-0.12563201602169;-0.125730762235494;-0.125827748176048;-0.125922977680511;-0.126016454595306;-0.126108182776074;-0.126198166087613;-0.126286408403824;-0.126372913607659;-0.126457685591063;-0.126540728254919;-0.126622045508995;-0.126701641271888;-0.126779519470967;-0.126855684042321;-0.126930138930701;-0.127002888089467;-0.12707393548053;-0.1271432850743;-0.127210940849628;-0.127276906793752;-0.127341186902242;-0.127403785178944;-0.127464705635923;-0.12752395229341;-0.127581529179746;-0.127637440331325;-0.127691689792542;-0.127744281615732;-0.12779521986112;-0.127844508596762;-0.12789215189849;-0.127938153849857;-0.127982518542083;-0.128025250073994;-0.128066352551973;-0.1281058300899;-0.128143686809098;-0.128179926838275;-0.128214554313474;-0.128247573378009;-0.128278988182416;-0.128308802884396;-0.128337021648755;-0.128363648647355;-0.128388688059053;-0.128412144069646;-0.128434020871817;-0.128454322665079;-0.128473053655717;-0.128490218056735;-0.128505820087798;-0.128519863975179;-0.128532353951698;-0.128543294256673;-0.128552689135858;-0.12856054284139;-0.128566859631735;-0.128571643771628;-0.128574899532022;-0.128576631190026;-0.128576843028855;-0.128575539337773;-0.128572724412033;-0.128568402552826;-0.128562578067225;-0.128555255268125;-0.128546438474192;-0.128536132009803;-0.128524340204996;-0.128511067395406;-0.128496317922217;-0.128480096132103;-0.128462406377172;-0.128443253014909;-0.128422640408125;-0.128400572924896;-0.12837705493851;-0.128352090827411;-0.128325684975145;-0.1282978417703;-0.128268565606454;-0.12823786088212;-0.128205732000685;-0.128172183370362;-0.12813721940413;-0.128100844519676;-0.128063063139347;-0.128023879690088;-0.127983298603389;-0.127941324315228;-0.127897961266018;-0.127853213900551;-0.127807086667941;-0.12775958402157;-0.127710710419032;-0.127660470322078;-0.127608868196561;-0.127555908512382;-0.127501595743429;-0.127445934367531;-0.127388928866395;-0.127330583725555;-0.127270903434314;-0.127209892485693;-0.127147555376371;-0.127083896606635;-0.12701892068032;-0.12695263210476;-0.126885035390726;-0.126816135052377;-0.126745935607204;-0.12667444157597;-0.126601657482665;-0.126527587854441;-0.126452237221565;-0.126375610117361;-0.126297711078153;-0.126218544643217;-0.12613811535472;-0.126056427757669;-0.125973486399857;-0.125889295831806;-0.125803860606714;-0.1257171852804;-0.125629274411252;-0.12554013256017;-0.125449764290513;-0.125358174168047;-0.125265366760885;-0.12517134663944;-0.125076118376365;-0.124979686546505;-0.124882055726836;-0.124783230496419;-0.12468321543634;-0.124582015129658;-0.124479634161354;-0.124376077118273;-0.124271348589074;-0.124165453164175;-0.124058395435699;-0.123950179997422;-0.123840811444718;-0.123730294374506;-0.1236186333852;-0.12350583307665;-0.123391898050093;-0.123276832908101;-0.123160642254522;-0.123043330694433;-0.122924902834086;-0.122805363280853;-0.122684716643174;-0.122562967530506;-0.122440120553267;-0.122316180322788;-0.122191151451255;-0.122065038551663;-0.121937846237758;-0.121809579123986;-0.121680241825444;-0.121549838957822;-0.121418375137358;-0.12128585498078;-0.121152283105255;-0.121017664128342;-0.120882002667932;-0.120745303342203;-0.120607570769567;-0.120468809568615;-0.120329024358068;-0.120188219756726;-0.120046400383417;-0.119903570856942;-0.119759735796028;-0.119614899819273;-0.1194690675451;-0.1193222435917;-0.119174432576984;-0.119025639118535;-0.118875867833551;-0.118725123338799;-0.118573410250562;-0.118420733184589;-0.118267096756046;-0.118112505579464;-0.117956964268688;-0.117800477436828;-0.117643049696209;-0.117484685658321;-0.117325389933767;-0.117165167132216;-0.117004021862351;-0.11684195873182;-0.116678982347186;-0.116515097313878;-0.116350308236141;-0.116184619716987;-0.116018036358147;-0.115850562760017;-0.115682203521616;-0.115512963240528;-0.115342846512864;-0.115171857933203;-0.115000002094548;-0.114827283588279;-0.1146537070041;-0.114479276929993;-0.11430399795217;-0.114127874655023;-0.113950911621077;-0.113773113430942;-0.113594484663264;-0.113415029894677;-0.113234753699757;-0.113053660650972;-0.112871755318635;-0.112689042270857;-0.112505526073501;-0.11232121129013;-0.112136102481964;-0.111950204207832;-0.111763521024123;-0.111576057484741;-0.111387818141058;-0.111198807541867;-0.111009030233334;-0.110818490758952;-0.110627193659497;-0.110435143472979;-0.110242344734596;-0.110048801976688;-0.109854519728693;-0.109659502517097;-0.109463754865391;-0.109267281294027;-0.109070086320367;-0.108872174458642;-0.108673550219905;-0.108474218111987;-0.108274182639448;-0.108073448303537;-0.107872019602144;-0.107669901029754;-0.107467097077407;-0.107263612232647;-0.107059450979484;-0.106854617798343;-0.106649117166026;-0.106442953555663;-0.10623613143667;-0.106028655274704;-0.105820529531622;-0.105611758665433;-0.105402347130257;-0.105192299376281;-0.104981619849715;-0.104770312992751;-0.104558383243515;-0.10434583503603;-0.104132672800167;-0.103918900961607;-0.103704523941797;-0.103489546157905;-0.10327397202278;-0.10305780594491;-0.102841052328376;-0.102623715572817;-0.102405800073379;-0.102187310220681;-0.101968250400767;-0.101748624995071;-0.101528438380368;-0.101307694928738;-0.101086399007525;-0.10086455497929;-0.100642167201777;-0.100419240027867;-0.100195777805541;-0.0999717848778359;-0.0997472655828066;-0.099522224253484;-0.0992966652178355;-0.0990705927987245;-0.0988440113138705;-0.0986169250758091;-0.0983893383918524;-0.0981612555640488;-0.0979326808891443;-0.0977036186585424;-0.0974740731582651;-0.0972440486689138;-0.09701354946563;-0.0967825798180567;-0.0965511439902998;-0.0963192462408885;-0.0960868908227382;-0.095854081983111;-0.095620823963578;-0.0953871209999812;-0.095152977322395;-0.0949183971550889;-0.0946833847164898;-0.0944479442191439;-0.0942120798696797;-0.0939757958687704;-0.0937390964110971;-0.0935019856853112;-0.093264467873998;-0.0930265471536394;-0.0927882276945778;-0.0925495136609791;-0.0923104092107966;-0.0920709184957346;-0.0918310456612125;-0.0915907948463285;-0.091350170183824;-0.0911091758000479;-0.0908678158149208;-0.0906260943418998;-0.0903840154879432;-0.0901415833534753;-0.0898988020323511;-0.0896556756118219;-0.0894122081725004;-0.0891684037883258;-0.0889242665265297;-0.0886798004476017;-0.0884350096052548;-0.0881898980463924;-0.0879444698110729;-0.0876987289324774;-0.0874526794368749;-0.0872063253435898;-0.0869596706649676;-0.0867127194063427;-0.0864654755660042;-0.0862179431351643;-0.0859701260979243;-0.0857220284312427;-0.0854736541049025;-0.0852250070814789;-0.0849760913163068;-0.0847269107574494;-0.0844774693456655;-0.0842277710143782;-0.0839778196896433;-0.0837276192901176;-0.0834771737270274;-0.083226486904138;-0.0829755627177218;-0.0827244050565279;-0.0824730178017513;-0.082221404827002;-0.0819695699982751;-0.0817175171739195;-0.0814652502046088;-0.0812127729333109;-0.0809600891952574;-0.0807072028179151;-0.0804541176209555;-0.0802008374162255;-0.0799473660077185;-0.0796937071915449;-0.079439864755903;-0.0791858424810506;-0.0789316441392758;-0.0786772734948688;-0.0784227343040934;-0.0781680303151585;-0.0779131652681904;-0.0776581428952044;-0.0774029669200773;-0.0771476410585198;-0.0768921690180486;-0.0766365544979593;-0.0763808011892994;-0.0761249127748406;-0.0758688929290526;-0.0756127453180758;-0.075356473599695;-0.0751000814233127;-0.0748435724299231;-0.0745869502520857;-0.0743302185138991;-0.0740733808309759;-0.0738164408104159;-0.0735594020507816;-0.073302268142072;-0.0730450426656978;-0.0727877291944562;-0.0725303312925058;-0.0722728525153421;-0.0720152964097724;-0.0717576665138918;-0.0714999663570587;-0.0712421994598703;-0.0709843693341391;-0.0707264794828686;-0.0704685334002297;-0.0702105345715372;-0.0699524864732263;-0.0696943925728293;-0.0694362563289528;-0.0691780811912541;-0.068919870600419;-0.0686616279881388;-0.0684033567770881;-0.0681450603809021;-0.0678867422041547;-0.0676284056423361;-0.0673700540818315;-0.0671116908998989;-0.0668533194646474;-0.0665949431350165;-0.0663365652607541;-0.0660781891823955;-0.0658198182312429;-0.0655614557293443;-0.0653031049894726;-0.0650447693151055;-0.0647864520004051;-0.0645281563301975;-0.064269885579953;-0.0640116430157661;-0.0637534318943358;-0.0634952554629463;-0.0632371169594469;-0.0629790196122337;-0.0627209666402297;-0.0624629612528662;-0.0622050066500641;-0.061947106022215;-0.061689262550163;-0.0614314794051863;-0.0611737597489788;-0.0609161067336326;-0.0606585235016196;-0.0604010131857741;-0.0601435789092752;-0.0598862237856295;-0.0596289509186537;-0.0593717634024577;-0.0591146643214275;-0.0588576567502086;-0.0586007437536894;-0.0583439283869845;-0.0580872136954188;-0.0578306027145112;-0.0575740984699583;-0.0573177039776189;-0.0570614222434986;-0.0568052562637336;-0.0565492090245758;-0.0562932835023776;-0.0560374826635766;-0.0557818094646811;-0.0555262668522548;-0.0552708577629027;-0.0550155851232567;-0.0547604518499607;-0.0545054608496575;-0.0542506150189739;-0.0539959172445073;-0.0537413704028122;-0.0534869773603863;-0.0532327409736577;-0.0529786640889713;-0.0527247495425758;-0.0524710001606109;-0.0522174187590951;-0.0519640081439119;-0.0517107711107988;-0.0514577104453342;-0.0512048289229253;-0.0509521293087968;-0.0506996143579782;-0.0504472868152932;-0.0501951494153474;-0.0499432048825173;-0.0496914559309391;-0.049439905264498;-0.0491885555768165;-0.0489374095512447;-0.0486864698608494;-0.0484357391684033;-0.0481852201263752;-0.0479349153769199;-0.0476848275518681;-0.0474349592727168;-0.0471853131506194;-0.0469358917863767;-0.0466866977704272;-0.046437733682838;-0.0461890020932959;-0.0459405055610986;-0.0456922466351457;-0.0454442278539307;-0.045196451745532;-0.044948920827605;-0.0447016376073741;-0.0444546045816244;-0.0442078242366945;-0.0439612990484682;-0.0437150314823675;-0.0434690239933452;-0.0432232790258777;-0.0429777990139576;-0.0427325863810878;-0.0424876435402736;-0.0422429728940172;-0.0419985768343105;-0.0417544577426293;-0.0415106179899271;-0.0412670599366292;-0.0410237859326265;-0.0407807983172704;-0.0405380994193671;-0.0402956915571721;-0.0400535770383852;-0.0398117581601453;-0.0395702372090256;-0.039329016461029;-0.0390880981815831;-0.0388474846255361;-0.0386071780371525;-0.0383671806501086;-0.038127494687489;-0.0378881223617824;-0.037649065874878;-0.0374103274180622;-0.0371719091720144;-0.0369338133068049;-0.0366960419818909;-0.036458597346114;-0.036221481537697;-0.0359846966842419;-0.0357482449027266;-0.035512128299503;-0.0352763489702948;-0.0350409090001953;-0.0348058104636656;-0.0345710554245323;-0.0343366459359869;-0.0341025840405833;-0.0338688717702371;-0.0336355111462241;-0.0334025041791795;-0.0331698528690966;-0.0329375592053265;-0.0327056251665774;-0.0324740527209136;-0.0322428438257562;-0.0320120004278819;-0.0317815244634236;-0.0315514178578704;-0.0313216825260677;-0.0310923203722177;-0.03086333328988;-0.0306347231619722;-0.0304064918607708;-0.0301786412479123;-0.0299511731743939;-0.0297240894805752;-0.0294973919961793;-0.0292710825402948;-0.029045162921377;-0.0288196349372498;-0.0285945003751079;-0.0283697610115189;-0.0281454186124251;-0.0279214749331467;-0.0276979317183836;-0.0274747907022183;-0.0272520536081191;-0.0270297221489423;-0.026807798026936;-0.026586282933743;-0.0263651785504042;-0.026144486547362;-0.0259242085844644;-0.0257043463109681;-0.0254849013655432;-0.0252658753762764;-0.025047269960676;-0.0248290867256759;-0.0246113272676396;-0.024393993172366;-0.0241770860150929;-0.0239606073605024;-0.0237445587627263;-0.0235289417653507;-0.0233137579014212;-0.0230990086934489;-0.0228846956534157;-0.0226708202827797;-0.0224573840724814;-0.0222443885029495;-0.022031835044107;-0.0218197251553776;-0.0216080602856917;-0.0213968418734932;-0.0211860713467461;-0.0209757501229411;-0.0207658796091025;-0.0205564612017955;-0.020347496287133;-0.0201389862407831;-0.0199309324279764;-0.0197233362035136;-0.0195161989117731;-0.019309521886719;-0.0191033064519087;-0.0188975539205014;-0.0186922655952659;-0.018487442768589;-0.0182830867224842;-0.0180791987285998;-0.0178757800482282;-0.0176728319323143;-0.0174703556214645;-0.0172683523459559;-0.0170668233257453;-0.0168657697704791;-0.016665192879502;-0.0164650938418669;-0.016265473836345;-0.016066334031435;-0.0158676755853733;-0.0156694996461444;-0.0154718073514906;-0.0152745998289226;-0.01507787819573;-0.0148816435589916;-0.0146858970155864;-0.0144906396522044;-0.0142958725453573;-0.0141015967613896;-0.0139078133564902;-0.013714523376703;-0.0135217278579391;-0.0133294278259877;-0.013137624296528;-0.0129463182751411;-0.0127555107573218;-0.0125652027284904;-0.0123753951640054;-0.0121860890291751;-0.0119972852792704;-0.0118089848595372;-0.0116211887052088;-0.011433897741519;-0.0112471128837145;-0.0110608350370682;-0.0108750650968923;-0.0106898039485508;-0.010505052467474;-0.0103208115191707;-0.0101370819592425;-0.00995386463339719;-0.00977116037746245;-0.0095889700173997;-0.00940729436931827;-0.00922613423948933;-0.00904549042435999;-0.00886536371056795;-0.00868575487495546;-0.0085066646845843;-0.00832809389675017;-0.00815004325899737;-0.0079725135091339;-0.00779550537524631;-0.00761901957571464;-0.00744305681922785;-0.00726761780479901;-0.00709270322178053;-0.00691831374988003;-0.00674445005917552;-0.00657111281013151;-0.00639830265361464;-0.00622602023090949;-0.00605426617373492;-0.00588304110426002;-0.00571234563512023;-0.00554218036943399;-0.00537254590081901;-0.00520344281340873;-0.00503487168186923;-0.00486683307141569;-0.00469932753782952;-0.0045323556274752;-0.00436591787731722;-0.00420001481493748;-0.00403464695855241;-0.00386981481703025;-0.00370551888990871;-0.00354175966741245;-0.00337853763047057;-0.00321585325073467;-0.00305370699059638;-0.00289209930320557;-0.00273103063248833;-0.00257050141316491;-0.00241051207076825;-0.0022510630216622;-0.0020921546730598;-0.00193378742304204;-0.00177596166057639;-0.00161867776553536;-0.00146193610871559;-0.00130573705185642;-0.00115008094765919;-0.000994968139806186;-0.000840398962979647;-0.000686373742881339;-0.000532892796251757;-0.000379956430889435;-0.000227564945670749;-7.57186305694141e-005]|9|8|on"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"fir_coef"
		Location		[609, 271, 1389, 957]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 68, 60, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 193, 60, 207]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_gen"
		  Ports			  [1, 1]
		  Position		  [130, 109, 220, 141]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "1024 coefs in bram\n9_8 out/1"
		  UserDataPersistent	  on
		  UserData		  "DataTag81"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Coefficient Generator"
		  MaskDescription	  "A coefficient generator."
		  MaskHelp		  "<pre>\nDescription::\n\nA coefficient generator.\n\nMask Parameters::\n\nCoefficiants (coefs): The coefficients to output.  These should be specified as doubles.\nThey will be rounded/saturated according to the specified number of bits (n_bits)\nand binary point (bin_pt).\n\nNumber of Coefficient Bits (n_bits): The number of bits used for the fixed point binary\nrepresentation of the coefficients.\n\nCoefficient Binary Point (bin_pt): The binary point of the fixed point binary representation\nof the coefficients.\n\nLog2 Cycles per Coefficient (log2_cpc): The log2 value of the number of cycles per coefficient.\nMust be a non-negative integer (i.e. cycles per coefficient must be a power of 2).  \n\nUse BRAM (use_bram): Check this checkbox to store coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Coefficients|Number of Bits|Binary Point|Log2 Cycles per Coefficient|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off"
		  MaskCallbackString	  "||||"
		  MaskEnableString	  "off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on"
		  MaskVarAliasString	  ",,,,"
		  MaskVariables		  "coefs=&1;n_bits=&2;bin_pt=&3;log2_cpc=&4;use_bram=&5;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "[-0.000375660323525046;-0.00112528207646786;-0.00187263770065757;-0.00261772609063303;-0.00336054616203061;-0.00410109685156988;-0.00483937711704019;-0.00557538593728603;-0.00630912231219222;-0.00704058526266978;-0.00776977383064064;-0.00849668707902262;-0.00922132409171369;-0.00994368397357705;-0.0106637658504249;-0.0113815688690025;-0.0120970921969721;-0.0128103350228962;-0.0135212965562215;-0.0142299760272615;-0.0149363726871797;-0.0156404858079725;-0.0163423146824514;-0.0170418586242254;-0.0177391169676835;-0.0184340890679761;-0.0191267743009973;-0.0198171720633655;-0.0205052817724058;-0.0211911028661302;-0.0218746348032188;-0.0225558770630009;-0.0232348291454347;-0.0239114905710882;-0.0245858608811188;-0.0252579396372536;-0.0259277264217688;-0.0265952208374693;-0.0272604225076676;-0.0279233310761635;-0.0285839462072226;-0.0292422675855545;-0.0298982949162921;-0.0305520279249694;-0.0312034663574997;-0.031852609980153;-0.0324994585795345;-0.0331440119625613;-0.0337862699564402;-0.0344262324086442;-0.0350638991868898;-0.0356992701791137;-0.0363323452934489;-0.0369631244582015;-0.0375916076218262;-0.0382177947529027;-0.0388416858401109;-0.0394632808922069;-0.0400825799379981;-0.0406995830263182;-0.0413142902260021;-0.0419267016258609;-0.0425368173346564;-0.0431446374810749;-0.0437501622137022;-0.0443533917009969;-0.0449543261312647;-0.0455529657126312;-0.0461493106730163;-0.0467433612601067;-0.047335117741329;-0.0479245804038229;-0.0485117495544134;-0.0490966255195838;-0.0496792086454471;-0.0502594992977191;-0.0508374978616896;-0.0514132047421944;-0.0519866203635867;-0.0525577451697087;-0.0531265796238626;-0.0536931242087811;-0.0542573794265993;-0.0548193457988244;-0.0553790238663066;-0.0559364141892089;-0.0564915173469777;-0.0570443339383125;-0.0575948645811356;-0.0581431099125613;-0.058689070588866;-0.0592327472854569;-0.0597741406968409;-0.0603132515365938;-0.0608500805373288;-0.0613846284506648;-0.0619168960471949;-0.0624468841164546;-0.0629745934668896;-0.0635000249258237;-0.064023179339426;-0.0645440575726791;-0.0650626605093458;-0.0655789890519362;-0.0660930441216749;-0.0666048266584676;-0.0671143376208679;-0.067621577986043;-0.0681265487497408;-0.0686292509262558;-0.0691296855483946;-0.0696278536674418;-0.0701237563531258;-0.0706173946935843;-0.071108769795329;-0.071597882783211;-0.0720847348003859;-0.0725693270082785;-0.0730516605865468;-0.0735317367330474;-0.0740095566637989;-0.0744851216129466;-0.0749584328327259;-0.0754294915934268;-0.0758982991833568;-0.0763648569088048;-0.0768291660940042;-0.0772912280810962;-0.0777510442300928;-0.0782086159188393;-0.0786639445429775;-0.0791170315159078;-0.0795678782687517;-0.0800164862503141;-0.0804628569270452;-0.0809069917830028;-0.0813488923198131;-0.0817885600566336;-0.0822259965301136;-0.0826612032943558;-0.0830941819208773;-0.0835249339985711;-0.0839534611336661;-0.0843797649496887;-0.0848038470874227;-0.0852257092048699;-0.0856453529772106;-0.0860627800967632;-0.0864779922729447;-0.0868909912322302;-0.0873017787181127;-0.0877103564910625;-0.0881167263284868;-0.0885208900246886;-0.0889228493908263;-0.0893226062548723;-0.0897201624615717;-0.0901155198724016;-0.0905086803655288;-0.0908996458357691;-0.0912884181945446;-0.0916749993698427;-0.0920593913061736;-0.0924415959645284;-0.0928216153223364;-0.0931994513734234;-0.0935751061279683;-0.0939485816124612;-0.09431987986966;-0.0946890029585477;-0.0950559529542894;-0.0954207319481889;-0.0957833420476455;-0.0961437853761105;-0.0965020640730433;-0.0968581802938682;-0.0972121362099301;-0.0975639340084509;-0.0979135758924848;-0.0982610640808748;-0.0986064008082076;-0.0989495883247697;-0.0992906288965024;-0.0996295248049575;-0.0999662783472516;-0.100300891836022;-0.100633367599381;-0.100963707980872;-0.101291915339421;-0.101617992049296;-0.101941940500055;-0.102263763096507;-0.102583462258662;-0.102901040421687;-0.103216500035856;-0.103529843566511;-0.103841073494009;-0.104150192313679;-0.104457202535775;-0.104762106685429;-0.105064907302604;-0.105365606942047;-0.105664208173243;-0.105960713580369;-0.106255125762242;-0.106547447332278;-0.10683768091844;-0.107125829163193;-0.107411894723454;-0.107695880270546;-0.107977788490152;-0.108257622082262;-0.108535383761131;-0.108811076255224;-0.109084702307174;-0.109356264673732;-0.109625766125715;-0.109893209447962;-0.110158597439284;-0.110421932912413;-0.110683218693955;-0.110942457624343;-0.111199652557785;-0.111454806362214;-0.111707921919243;-0.111959002124111;-0.112208049885639;-0.112455068126173;-0.112700059781542;-0.112943027801003;-0.113183975147195;-0.113422904796084;-0.11365981973692;-0.113894722972181;-0.114127617517525;-0.11435850640174;-0.114587392666694;-0.114814279367284;-0.115039169571384;-0.115262066359796;-0.115482972826202;-0.115701892077107;-0.115918827231792;-0.116133781422266;-0.116346757793206;-0.116557759501917;-0.116766789718271;-0.116973851624663;-0.117178948415955;-0.117382083299426;-0.117583259494722;-0.117782480233803;-0.117979748760891;-0.118175068332418;-0.118368442216977;-0.118559873695267;-0.118749366060041;-0.118936922616057;-0.119122546680023;-0.119306241580546;-0.11948801065808;-0.119667857264872;-0.119845784764912;-0.12002179653388;-0.120195895959092;-0.120368086439447;-0.120538371385378;-0.120706754218796;-0.120873238373037;-0.121037827292813;-0.121200524434153;-0.121361333264356;-0.121520257261934;-0.12167729991656;-0.121832464729017;-0.121985755211139;-0.122137174885766;-0.122286727286684;-0.122434415958572;-0.122580244456954;-0.122724216348138;-0.122866335209169;-0.123006604627771;-0.123145028202296;-0.123281609541668;-0.12341635226533;-0.123549260003193;-0.123680336395576;-0.123809585093158;-0.12393700975692;-0.124062614058095;-0.124186401678108;-0.124308376308528;-0.124428541651009;-0.124546901417241;-0.124663459328888;-0.124778219117541;-0.12489118452466;-0.125002359301522;-0.125111747209161;-0.125219352018322;-0.125325177509398;-0.12542922747238;-0.125531505706804;-0.12563201602169;-0.125730762235494;-0.125827748176048;-0.125922977680511;-0.126016454595306;-0.126108182776074;-0.126198166087613;-0.126286408403824;-0.126372913607659;-0.126457685591063;-0.126540728254919;-0.126622045508995;-0.126701641271888;-0.126779519470967;-0.126855684042321;-0.126930138930701;-0.127002888089467;-0.12707393548053;-0.1271432850743;-0.127210940849628;-0.127276906793752;-0.127341186902242;-0.127403785178944;-0.127464705635923;-0.12752395229341;-0.127581529179746;-0.127637440331325;-0.127691689792542;-0.127744281615732;-0.12779521986112;-0.127844508596762;-0.12789215189849;-0.127938153849857;-0.127982518542083;-0.128025250073994;-0.128066352551973;-0.1281058300899;-0.128143686809098;-0.128179926838275;-0.128214554313474;-0.128247573378009;-0.128278988182416;-0.128308802884396;-0.128337021648755;-0.128363648647355;-0.128388688059053;-0.128412144069646;-0.128434020871817;-0.128454322665079;-0.128473053655717;-0.128490218056735;-0.128505820087798;-0.128519863975179;-0.128532353951698;-0.128543294256673;-0.128552689135858;-0.12856054284139;-0.128566859631735;-0.128571643771628;-0.128574899532022;-0.128576631190026;-0.128576843028855;-0.128575539337773;-0.128572724412033;-0.128568402552826;-0.128562578067225;-0.128555255268125;-0.128546438474192;-0.128536132009803;-0.128524340204996;-0.128511067395406;-0.128496317922217;-0.128480096132103;-0.128462406377172;-0.128443253014909;-0.128422640408125;-0.128400572924896;-0.12837705493851;-0.128352090827411;-0.128325684975145;-0.1282978417703;-0.128268565606454;-0.12823786088212;-0.128205732000685;-0.128172183370362;-0.12813721940413;-0.128100844519676;-0.128063063139347;-0.128023879690088;-0.127983298603389;-0.127941324315228;-0.127897961266018;-0.127853213900551;-0.127807086667941;-0.12775958402157;-0.127710710419032;-0.127660470322078;-0.127608868196561;-0.127555908512382;-0.127501595743429;-0.127445934367531;-0.127388928866395;-0.127330583725555;-0.127270903434314;-0.127209892485693;-0.127147555376371;-0.127083896606635;-0.12701892068032;-0.12695263210476;-0.126885035390726;-0.126816135052377;-0.126745935607204;-0.12667444157597;-0.126601657482665;-0.126527587854441;-0.126452237221565;-0.126375610117361;-0.126297711078153;-0.126218544643217;-0.12613811535472;-0.126056427757669;-0.125973486399857;-0.125889295831806;-0.125803860606714;-0.1257171852804;-0.125629274411252;-0.12554013256017;-0.125449764290513;-0.125358174168047;-0.125265366760885;-0.12517134663944;-0.125076118376365;-0.124979686546505;-0.124882055726836;-0.124783230496419;-0.12468321543634;-0.124582015129658;-0.124479634161354;-0.124376077118273;-0.124271348589074;-0.124165453164175;-0.124058395435699;-0.123950179997422;-0.123840811444718;-0.123730294374506;-0.1236186333852;-0.12350583307665;-0.123391898050093;-0.123276832908101;-0.123160642254522;-0.123043330694433;-0.122924902834086;-0.122805363280853;-0.122684716643174;-0.122562967530506;-0.122440120553267;-0.122316180322788;-0.122191151451255;-0.122065038551663;-0.121937846237758;-0.121809579123986;-0.121680241825444;-0.121549838957822;-0.121418375137358;-0.12128585498078;-0.121152283105255;-0.121017664128342;-0.120882002667932;-0.120745303342203;-0.120607570769567;-0.120468809568615;-0.120329024358068;-0.120188219756726;-0.120046400383417;-0.119903570856942;-0.119759735796028;-0.119614899819273;-0.1194690675451;-0.1193222435917;-0.119174432576984;-0.119025639118535;-0.118875867833551;-0.118725123338799;-0.118573410250562;-0.118420733184589;-0.118267096756046;-0.118112505579464;-0.117956964268688;-0.117800477436828;-0.117643049696209;-0.117484685658321;-0.117325389933767;-0.117165167132216;-0.117004021862351;-0.11684195873182;-0.116678982347186;-0.116515097313878;-0.116350308236141;-0.116184619716987;-0.116018036358147;-0.115850562760017;-0.115682203521616;-0.115512963240528;-0.115342846512864;-0.115171857933203;-0.115000002094548;-0.114827283588279;-0.1146537070041;-0.114479276929993;-0.11430399795217;-0.114127874655023;-0.113950911621077;-0.113773113430942;-0.113594484663264;-0.113415029894677;-0.113234753699757;-0.113053660650972;-0.112871755318635;-0.112689042270857;-0.112505526073501;-0.11232121129013;-0.112136102481964;-0.111950204207832;-0.111763521024123;-0.111576057484741;-0.111387818141058;-0.111198807541867;-0.111009030233334;-0.110818490758952;-0.110627193659497;-0.110435143472979;-0.110242344734596;-0.110048801976688;-0.109854519728693;-0.109659502517097;-0.109463754865391;-0.109267281294027;-0.109070086320367;-0.108872174458642;-0.108673550219905;-0.108474218111987;-0.108274182639448;-0.108073448303537;-0.107872019602144;-0.107669901029754;-0.107467097077407;-0.107263612232647;-0.107059450979484;-0.106854617798343;-0.106649117166026;-0.106442953555663;-0.10623613143667;-0.106028655274704;-0.105820529531622;-0.105611758665433;-0.105402347130257;-0.105192299376281;-0.104981619849715;-0.104770312992751;-0.104558383243515;-0.10434583503603;-0.104132672800167;-0.103918900961607;-0.103704523941797;-0.103489546157905;-0.10327397202278;-0.10305780594491;-0.102841052328376;-0.102623715572817;-0.102405800073379;-0.102187310220681;-0.101968250400767;-0.101748624995071;-0.101528438380368;-0.101307694928738;-0.101086399007525;-0.10086455497929;-0.100642167201777;-0.100419240027867;-0.100195777805541;-0.0999717848778359;-0.0997472655828066;-0.099522224253484;-0.0992966652178355;-0.0990705927987245;-0.0988440113138705;-0.0986169250758091;-0.0983893383918524;-0.0981612555640488;-0.0979326808891443;-0.0977036186585424;-0.0974740731582651;-0.0972440486689138;-0.09701354946563;-0.0967825798180567;-0.0965511439902998;-0.0963192462408885;-0.0960868908227382;-0.095854081983111;-0.095620823963578;-0.0953871209999812;-0.095152977322395;-0.0949183971550889;-0.0946833847164898;-0.0944479442191439;-0.0942120798696797;-0.0939757958687704;-0.0937390964110971;-0.0935019856853112;-0.093264467873998;-0.0930265471536394;-0.0927882276945778;-0.0925495136609791;-0.0923104092107966;-0.0920709184957346;-0.0918310456612125;-0.0915907948463285;-0.091350170183824;-0.0911091758000479;-0.0908678158149208;-0.0906260943418998;-0.0903840154879432;-0.0901415833534753;-0.0898988020323511;-0.0896556756118219;-0.0894122081725004;-0.0891684037883258;-0.0889242665265297;-0.0886798004476017;-0.0884350096052548;-0.0881898980463924;-0.0879444698110729;-0.0876987289324774;-0.0874526794368749;-0.0872063253435898;-0.0869596706649676;-0.0867127194063427;-0.0864654755660042;-0.0862179431351643;-0.0859701260979243;-0.0857220284312427;-0.0854736541049025;-0.0852250070814789;-0.0849760913163068;-0.0847269107574494;-0.0844774693456655;-0.0842277710143782;-0.0839778196896433;-0.0837276192901176;-0.0834771737270274;-0.083226486904138;-0.0829755627177218;-0.0827244050565279;-0.0824730178017513;-0.082221404827002;-0.0819695699982751;-0.0817175171739195;-0.0814652502046088;-0.0812127729333109;-0.0809600891952574;-0.0807072028179151;-0.0804541176209555;-0.0802008374162255;-0.0799473660077185;-0.0796937071915449;-0.079439864755903;-0.0791858424810506;-0.0789316441392758;-0.0786772734948688;-0.0784227343040934;-0.0781680303151585;-0.0779131652681904;-0.0776581428952044;-0.0774029669200773;-0.0771476410585198;-0.0768921690180486;-0.0766365544979593;-0.0763808011892994;-0.0761249127748406;-0.0758688929290526;-0.0756127453180758;-0.075356473599695;-0.0751000814233127;-0.0748435724299231;-0.0745869502520857;-0.0743302185138991;-0.0740733808309759;-0.0738164408104159;-0.0735594020507816;-0.073302268142072;-0.0730450426656978;-0.0727877291944562;-0.0725303312925058;-0.0722728525153421;-0.0720152964097724;-0.0717576665138918;-0.0714999663570587;-0.0712421994598703;-0.0709843693341391;-0.0707264794828686;-0.0704685334002297;-0.0702105345715372;-0.0699524864732263;-0.0696943925728293;-0.0694362563289528;-0.0691780811912541;-0.068919870600419;-0.0686616279881388;-0.0684033567770881;-0.0681450603809021;-0.0678867422041547;-0.0676284056423361;-0.0673700540818315;-0.0671116908998989;-0.0668533194646474;-0.0665949431350165;-0.0663365652607541;-0.0660781891823955;-0.0658198182312429;-0.0655614557293443;-0.0653031049894726;-0.0650447693151055;-0.0647864520004051;-0.0645281563301975;-0.064269885579953;-0.0640116430157661;-0.0637534318943358;-0.0634952554629463;-0.0632371169594469;-0.0629790196122337;-0.0627209666402297;-0.0624629612528662;-0.0622050066500641;-0.061947106022215;-0.061689262550163;-0.0614314794051863;-0.0611737597489788;-0.0609161067336326;-0.0606585235016196;-0.0604010131857741;-0.0601435789092752;-0.0598862237856295;-0.0596289509186537;-0.0593717634024577;-0.0591146643214275;-0.0588576567502086;-0.0586007437536894;-0.0583439283869845;-0.0580872136954188;-0.0578306027145112;-0.0575740984699583;-0.0573177039776189;-0.0570614222434986;-0.0568052562637336;-0.0565492090245758;-0.0562932835023776;-0.0560374826635766;-0.0557818094646811;-0.0555262668522548;-0.0552708577629027;-0.0550155851232567;-0.0547604518499607;-0.0545054608496575;-0.0542506150189739;-0.0539959172445073;-0.0537413704028122;-0.0534869773603863;-0.0532327409736577;-0.0529786640889713;-0.0527247495425758;-0.0524710001606109;-0.0522174187590951;-0.0519640081439119;-0.0517107711107988;-0.0514577104453342;-0.0512048289229253;-0.0509521293087968;-0.0506996143579782;-0.0504472868152932;-0.0501951494153474;-0.0499432048825173;-0.0496914559309391;-0.049439905264498;-0.0491885555768165;-0.0489374095512447;-0.0486864698608494;-0.0484357391684033;-0.0481852201263752;-0.0479349153769199;-0.0476848275518681;-0.0474349592727168;-0.0471853131506194;-0.0469358917863767;-0.0466866977704272;-0.046437733682838;-0.0461890020932959;-0.0459405055610986;-0.0456922466351457;-0.0454442278539307;-0.045196451745532;-0.044948920827605;-0.0447016376073741;-0.0444546045816244;-0.0442078242366945;-0.0439612990484682;-0.0437150314823675;-0.0434690239933452;-0.0432232790258777;-0.0429777990139576;-0.0427325863810878;-0.0424876435402736;-0.0422429728940172;-0.0419985768343105;-0.0417544577426293;-0.0415106179899271;-0.0412670599366292;-0.0410237859326265;-0.0407807983172704;-0.0405380994193671;-0.0402956915571721;-0.0400535770383852;-0.0398117581601453;-0.0395702372090256;-0.039329016461029;-0.0390880981815831;-0.0388474846255361;-0.0386071780371525;-0.0383671806501086;-0.038127494687489;-0.0378881223617824;-0.037649065874878;-0.0374103274180622;-0.0371719091720144;-0.0369338133068049;-0.0366960419818909;-0.036458597346114;-0.036221481537697;-0.0359846966842419;-0.0357482449027266;-0.035512128299503;-0.0352763489702948;-0.0350409090001953;-0.0348058104636656;-0.0345710554245323;-0.0343366459359869;-0.0341025840405833;-0.0338688717702371;-0.0336355111462241;-0.0334025041791795;-0.0331698528690966;-0.0329375592053265;-0.0327056251665774;-0.0324740527209136;-0.0322428438257562;-0.0320120004278819;-0.0317815244634236;-0.0315514178578704;-0.0313216825260677;-0.0310923203722177;-0.03086333328988;-0.0306347231619722;-0.0304064918607708;-0.0301786412479123;-0.0299511731743939;-0.0297240894805752;-0.0294973919961793;-0.0292710825402948;-0.029045162921377;-0.0288196349372498;-0.0285945003751079;-0.0283697610115189;-0.0281454186124251;-0.0279214749331467;-0.0276979317183836;-0.0274747907022183;-0.0272520536081191;-0.0270297221489423;-0.026807798026936;-0.026586282933743;-0.0263651785504042;-0.026144486547362;-0.0259242085844644;-0.0257043463109681;-0.0254849013655432;-0.0252658753762764;-0.025047269960676;-0.0248290867256759;-0.0246113272676396;-0.024393993172366;-0.0241770860150929;-0.0239606073605024;-0.0237445587627263;-0.0235289417653507;-0.0233137579014212;-0.0230990086934489;-0.0228846956534157;-0.0226708202827797;-0.0224573840724814;-0.0222443885029495;-0.022031835044107;-0.0218197251553776;-0.0216080602856917;-0.0213968418734932;-0.0211860713467461;-0.0209757501229411;-0.0207658796091025;-0.0205564612017955;-0.020347496287133;-0.0201389862407831;-0.0199309324279764;-0.0197233362035136;-0.0195161989117731;-0.019309521886719;-0.0191033064519087;-0.0188975539205014;-0.0186922655952659;-0.018487442768589;-0.0182830867224842;-0.0180791987285998;-0.0178757800482282;-0.0176728319323143;-0.0174703556214645;-0.0172683523459559;-0.0170668233257453;-0.0168657697704791;-0.016665192879502;-0.0164650938418669;-0.016265473836345;-0.016066334031435;-0.0158676755853733;-0.0156694996461444;-0.0154718073514906;-0.0152745998289226;-0.01507787819573;-0.0148816435589916;-0.0146858970155864;-0.0144906396522044;-0.0142958725453573;-0.0141015967613896;-0.0139078133564902;-0.013714523376703;-0.0135217278579391;-0.0133294278259877;-0.013137624296528;-0.0129463182751411;-0.0127555107573218;-0.0125652027284904;-0.0123753951640054;-0.0121860890291751;-0.0119972852792704;-0.0118089848595372;-0.0116211887052088;-0.011433897741519;-0.0112471128837145;-0.0110608350370682;-0.0108750650968923;-0.0106898039485508;-0.010505052467474;-0.0103208115191707;-0.0101370819592425;-0.00995386463339719;-0.00977116037746245;-0.0095889700173997;-0.00940729436931827;-0.00922613423948933;-0.00904549042435999;-0.00886536371056795;-0.00868575487495546;-0.0085066646845843;-0.00832809389675017;-0.00815004325899737;-0.0079725135091339;-0.00779550537524631;-0.00761901957571464;-0.00744305681922785;-0.00726761780479901;-0.00709270322178053;-0.00691831374988003;-0.00674445005917552;-0.00657111281013151;-0.00639830265361464;-0.00622602023090949;-0.00605426617373492;-0.00588304110426002;-0.00571234563512023;-0.00554218036943399;-0.00537254590081901;-0.00520344281340873;-0.00503487168186923;-0.00486683307141569;-0.00469932753782952;-0.0045323556274752;-0.00436591787731722;-0.00420001481493748;-0.00403464695855241;-0.00386981481703025;-0.00370551888990871;-0.00354175966741245;-0.00337853763047057;-0.00321585325073467;-0.00305370699059638;-0.00289209930320557;-0.00273103063248833;-0.00257050141316491;-0.00241051207076825;-0.0022510630216622;-0.0020921546730598;-0.00193378742304204;-0.00177596166057639;-0.00161867776553536;-0.00146193610871559;-0.00130573705185642;-0.00115008094765919;-0.000994968139806186;-0.000840398962979647;-0.000686373742881339;-0.000532892796251757;-0.000379956430889435;-0.000227564945670749;-7.57186305694141e-005]|9|8|0|on"
		  MaskTabNameString	  ",,,,"
		  System {
		    Name		    "c_gen"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1023"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 50 50 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "1024"
		    initVector		    "[0;0;0;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;0;0;0;0;0;0;0;0;0;0;0;0;0]"
		    distributed_mem	    "Block RAM"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "8"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[7 15 27 39 47 47 43 47 47 36 47 39 27 15 7 18 7 7 11 7 7 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "coef_out"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mem"
		    SrcPort		    1
		    DstBlock		    "coef_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "data_delay"
		  Ports			  [1, 1]
		  Position		  [145, 17, 200, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sum_delay"
		  Ports			  [1, 1]
		  Position		  [145, 62, 200, 88]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [145, 187, 200, 213]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [295, 23, 325, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [295, 68, 325, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "coef"
		  Position		  [295, 118, 325, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [295, 193, 325, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_gen"
		  SrcPort		  1
		  DstBlock		  "coef"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_delay"
		  SrcPort		  1
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "sum_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [25, 0]
		  Branch {
		    Points		    [0, -75]
		    DstBlock		    "c_gen"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "sync_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_delay"
		  SrcPort		  1
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  DstBlock		  "data_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_core"
	      Ports		      [4, 3]
	      Position		      [270, 29, 360, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "delay 1024 in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag82"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Core"
	      MaskDescription	      "A Finite Impluse Response Filter core with complex inputs and real coefficients.  This FIR filter core does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter core with complex inputs and real coefficients.\n\nThis Finite Impluse Response Filter core is designed to be paired with a FIR Coefficient Generator \nto form a FIR filter tap.  This FIR filter core does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (use_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	      MaskPromptString	      "Tap Delay|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	      MaskStyleString	      "edit,edit,edit,edit,edit,checkbox,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "delay=&1;n_bits_d=&2;bin_pt_d=&3;n_bits_s=&4;bin_pt_s=&5;use_bram=&6;mult_latency=&7;add_latency=&8;add_bypass=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "1024|8|7|17|15|on|3|1|off"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"fir_core"
		Location		[282, 135, 1062, 821]
		Open			on
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 223, 60, 237]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "coef"
		  Position		  [30, 183, 60, 197]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 278, 60, 292]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_d"
		  Ports			  [1, 2]
		  Position		  [120, 69, 160, 111]
		  AttributesFormatString  "8_7 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag83"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|7"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_d"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_s"
		  Ports			  [1, 2]
		  Position		  [120, 209, 160, 251]
		  AttributesFormatString  "17_15 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag84"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "17|15"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_s"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_im"
		  Ports			  [1, 1]
		  Position		  [345, 175, 390, 205]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_re"
		  Ports			  [1, 1]
		  Position		  [345, 80, 390, 110]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "dout_delay"
		  Ports			  [1, 1]
		  Position		  [255, 17, 310, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_im"
		  Ports			  [3, 1]
		  Position		  [255, 164, 305, 216]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag85"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_im"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_re"
		  Ports			  [3, 1]
		  Position		  [255, 69, 305, 121]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag86"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_re"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [455, 119, 495, 161]
		  UserDataPersistent	  on
		  UserData		  "DataTag87"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskInitialization	  "ri_to_c_init(gcb);"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [255, 272, 310, 298]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "tap_delay"
		  Ports			  [1, 1]
		  Position		  [440, 14, 500, 46]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "bram depth = 1024"
		  UserDataPersistent	  on
		  UserData		  "DataTag88"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "BRAM Delay"
		  MaskDescription	  "A delay block that uses BRAM for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses BRAM for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n\nBuffer Latency (buffer_latency): The latency of the underlying storage.\n\nBuffer Latency defaults to 1 and cannot be changed via the block's dialog box.\nFuture versions may enable the setting of that parameter from the dialog.\n</pre>"
		  MaskPromptString	  "Delay Depth|Buffer Latency"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,off"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "delay_depth=&1;buffer_latency=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "1024|"
		  MaskTabNameString	  ","
		  System {
		    Name		    "tap_delay"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Constant"
		    Ports		    [0, 1]
		    Position		    [165, 133, 180, 147]
		    ShowName		    off
		    SourceBlock		    "xbsIndex_r4/Constant"
		    SourceType		    "Xilinx Constant Block Block"
		    arith_type		    "Boolean"
		    const		    "1"
		    n_bits		    "1"
		    bin_pt		    "0"
		    explicit_period	    on
		    period		    "1"
		    dsp48_infoedit	    "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		    equ			    "P=C"
		    opselect		    "C"
		    inp2		    "PCIN>>17"
		    opr			    "+"
		    inp1		    "P"
		    carry		    "CIN"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "constant"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "15,14,1,1,white,blue,0,06094819,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 15 15 0 ],[0 0 14 14 ],[0.77 0.82 0.91]);\npatch([3 1 4 1 3 7 8 9 13 10 7 5 8 5 7 10 13 9 8 7 3 ],[2 4 7 10 12 12 11 12 12 9 12 10 7 4 2 5 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 15 15 0 0 ],[0 0 14 14 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [0, 1]
		    Position		    [130, 71, 180, 89]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1022"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    off
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,a170c862,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bram"
		    Ports		    [3, 1]
		    Position		    [230, 61, 295, 159]
		    SourceBlock		    "xbsIndex_r4/Single Port RAM"
		    SourceType		    "Xilinx Single Port Random Access Memory Block"
		    depth		    "1024"
		    initVector		    "0"
		    distributed_mem	    "Block RAM"
		    write_mode		    "Read Before Write"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "spram"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "65,98,1,1,white,blue,0,90951842,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 98 98 ],[0.77 0.82 0.91]);\npatch([15 4 19 4 15 32 37 42 60 45 31 21 36 21 31 45 60 42 37 32 15 ],[24 35 50 65 76 76 71 76 76 61 75 65 50 35 25 39 24 24 29 24 24 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 98 98 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Constant"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    3
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "bram"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [555, 23, 585, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [555, 133, 585, 147]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 278, 585, 292]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "convert_im"
		  SrcPort		  1
		  Points		  [20, 0; 0, -40]
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "convert_re"
		  SrcPort		  1
		  Points		  [20, 0; 0, 35]
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "tap_delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_im"
		  SrcPort		  1
		  DstBlock		  "convert_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_re"
		  SrcPort		  1
		  DstBlock		  "convert_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  2
		  Points		  [75, 0]
		  DstBlock		  "mult_add_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  1
		  Points		  [75, 0]
		  DstBlock		  "mult_add_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "c_to_ri_s"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "coef"
		  SrcPort		  1
		  Points		  [140, 0]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "mult_add_re"
		    DstPort		    2
		  }
		  Branch {
		    DstBlock		    "mult_add_im"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  2
		  Points		  [20, 0; 0, 75]
		  DstBlock		  "mult_add_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  1
		  DstBlock		  "mult_add_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  Points		  [35, 0]
		  Branch {
		    Points		    [0, 60]
		    DstBlock		    "c_to_ri_d"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "dout_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "dout_delay"
		  SrcPort		  1
		  DstBlock		  "tap_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "data_out"
	      Position		      [435, 23, 465, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [435, 58, 465, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [435, 93, 465, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      3
	      Points		      [25, 0; 0, 15]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      2
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      1
	      Points		      [25, 0; 0, -15]
	      DstBlock		      "data_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, -15]
	      DstBlock		      "fir_coef"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "fir_coef"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "data_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, 15]
	      DstBlock		      "fir_coef"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      4
	      DstBlock		      "fir_core"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      3
	      DstBlock		      "fir_core"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      2
	      DstBlock		      "fir_core"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      1
	      DstBlock		      "fir_core"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_tap_3"
	  Ports			  [3, 3]
	  Position		  [400, 30, 500, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "delay 1024 in bram\n1024 coefs in bram"
	  UserDataPersistent	  on
	  UserData		  "DataTag89"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Tap (Real Coefficients)"
	  MaskDescription	  "A Finite Impluse Response Filter tap with real coefficients.  This FIR filter tap does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter tap with real coefficients.\n\nThis Finite Impluse Response Filter tap is designed to be daisy chained together\nto form a multi-tap FIR filter.  This FIR filter tap does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nTap Coefficiant(s) (coef): The coefficient(s) for this tap.  For a regular FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nUsually, delay==length(coef), but this is not required.  These should be specified as doubles. \nThey will be rounded and saturated according to the specified number of bits (n_bits_c) and\nbinary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	  MaskPromptString	  "Tap Delay|Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	  MaskStyleString	  "edit,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "||||||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,,,,"
	  MaskVariables		  "delay=&1;coef=&2;n_bits_c=&3;bin_pt_c=&4;n_bits_d=&5;bin_pt_d=&6;n_bits_s=&7;bin_pt_s=&8;coef_bram=&9;delay_bram=&10;mult_latency=&11;add_latency=&12;add_bypass=&13;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "1024|[0.999999547662946;0.999995928971626;0.999988691616268;0.999977835651433;0.999963361158965;0.999945268247983;0.999923557054889;0.99989822774336;0.999869280504348;0.999836715556079;0.999800533144051;0.99976073354103;0.999717317047049;0.999670283989403;0.999619634722648;0.999565369628596;0.999507489116311;0.999445993622108;0.999380883609544;0.999312159569415;0.999239822019754;0.999163871505822;0.999084308600105;0.999001133902306;0.998914348039344;0.998823951665339;0.998729945461616;0.99863233013669;0.998531106426262;0.998426275093213;0.998317836927595;0.998205792746621;0.998090143394661;0.997970889743233;0.99784803269099;0.997721573163716;0.997591512114315;0.997457850522799;0.997320589396285;0.997179729768976;0.997035272702159;0.99688721928419;0.996735570630482;0.996580327883498;0.996421492212737;0.996259064814724;0.996093046912996;0.99592343975809;0.995750244627533;0.995573462825828;0.99539309568444;0.995209144561783;0.995021610843209;0.994830495940991;0.99463580129431;0.994437528369243;0.994235678658745;0.994030253682635;0.993821254987582;0.993608684147091;0.993392542761483;0.993172832457882;0.992949554890201;0.99272271173912;0.992492304712073;0.992258335543232;0.992020805993488;0.991779717850431;0.991535072928337;0.991286873068149;0.991035120137455;0.990779816030475;0.990520962668036;0.990258561997559;0.989992615993036;0.989723126655011;0.989450096010561;0.989173526113274;0.988893419043231;0.988609776906985;0.988322601837537;0.98803189599432;0.987737661563173;0.987439900756322;0.987138615812356;0.986833808996206;0.986525482599124;0.986213638938657;0.985898280358627;0.985579409229105;0.98525702794639;0.984931138932984;0.984601744637569;0.984268847534979;0.98393245012618;0.983592554938246;0.983249164524326;0.98290228146363;0.982551908361392;0.982198047848854;0.981840702583234;0.9814798752477;0.981115568551347;0.980747785229165;0.980376528042017;0.98000179977661;0.979623603245462;0.979241941286885;0.978856816764947;0.978468232569446;0.978076191615887;0.977680696845445;0.977281751224942;0.976879357746813;0.97647351942908;0.976064239315321;0.975651520474639;0.975235366001631;0.97481577901636;0.974392762664321;0.973966320116415;0.973536454568909;0.973103169243412;0.972666467386842;0.972226352271389;0.971782827194488;0.971335895478783;0.970885560472097;0.970431825547395;0.969974694102756;0.969514169561332;0.969050255371323;0.968582955005935;0.96811227196335;0.967638209766689;0.967160771963981;0.966679962128122;0.966195783856846;0.965708240772684;0.965217336522932;0.964723074779614;0.964225459239442;0.963724493623787;0.963220181678634;0.962712527174551;0.962201533906649;0.961687205694544;0.961169546382321;0.960648559838497;0.960124249955978;0.959596620652025;0.959065675868214;0.958531419570396;0.95799385574866;0.957452988417292;0.956908821614734;0.956361359403548;0.955810605870372;0.955256565125884;0.954699241304754;0.954138638565613;0.953574761091004;0.953007613087343;0.952437198784881;0.951863522437655;0.951286588323455;0.950706400743774;0.950122964023769;0.949536282512219;0.948946360581481;0.948353202627446;0.947756813069498;0.947157196350468;0.946554356936591;0.945948299317464;0.945339028005997;0.944726547538374;0.944110862474005;0.943491977395482;0.942869896908532;0.942244625641977;0.941616168247679;0.940984529400506;0.940349713798277;0.939711726161716;0.939070571234412;0.938426253782768;0.937778778595951;0.937128150485851;0.936474374287031;0.935817454856679;0.935157397074559;0.934494205842967;0.933827886086677;0.933158442752899;0.932485880811225;0.931810205253583;0.931131421094187;0.930449533369489;0.929764547138127;0.929076467480875;0.928385299500598;0.927691048322198;0.92699371909256;0.926293316980511;0.925589847176761;0.924883314893854;0.924173725366119;0.923461083849616;0.922745395622088;0.922026665982904;0.92130490025301;0.920580103774877;0.919852281912448;0.919121440051086;0.918387583597519;0.91765071797979;0.9169108486472;0.916167981070258;0.915422120740627;0.914673273171068;0.913921443895387;0.913166638468382;0.912408862465787;0.911648121484216;0.910884421141112;0.91011776707469;0.90934816494388;0.908575620428275;0.907800139228072;0.907021727064019;0.906240389677357;0.905456132829764;0.9046689623033;0.90387888390035;0.903085903443565;0.902290026775807;0.901491259760094;0.900689608279537;0.899885078237288;0.899077675556479;0.898267406180164;0.897454276071263;0.896638291212503;0.895819457606359;0.894997781274994;0.894173268260203;0.893345924623353;0.892515756445321;0.89168276982644;0.890846970886435;0.890008365764364;0.88916696061856;0.888322761626568;0.887475774985088;0.886626006909912;0.885773463635865;0.884918151416742;0.884060076525249;0.883199245252942;0.882335663910164;0.881469338825985;0.880600276348139;0.879728482842962;0.878853964695334;0.877976728308609;0.877096780104561;0.876214126523317;0.875328774023292;0.874440729081133;0.873549998191649;0.872656587867754;0.871760504640396;0.870861755058503;0.869960345688909;0.869056283116299;0.86814957394314;0.867240224789617;0.866328242293574;0.865413633110439;0.864496403913169;0.863576561392183;0.862654112255293;0.861729063227642;0.86080142105164;0.859871192486895;0.85893838431015;0.858003003315215;0.857065056312905;0.85612455013097;0.855181491614029;0.854235887623507;0.853287745037565;0.852337070751035;0.851383871675352;0.850428154738489;0.849469926884886;0.84850919507539;0.847545966287178;0.846580247513697;0.845612045764594;0.844641368065647;0.843668221458696;0.84269261300158;0.841714549768064;0.840734038847771;0.839751087346116;0.838765702384234;0.837777891098914;0.836787660642529;0.835795018182967;0.834799970903559;0.833802526003016;0.832802690695352;0.831800472209821;0.830795877790843;0.829788914697934;0.828779590205639;0.827767911603459;0.826753886195782;0.825737521301814;0.824718824255502;0.823697802405475;0.822674463114959;0.821648813761719;0.820620861737978;0.819590614450354;0.81855807931978;0.817523263781442;0.8164861752847;0.815446821293019;0.814405209283897;0.813361346748796;0.812315241193064;0.811266900135868;0.810216331110119;0.8091635416624;0.808108539352896;0.807051331755317;0.805991926456828;0.804930331057977;0.80386655317262;0.802800600427848;0.801732480463917;0.800662200934169;0.799589769504963;0.798515193855602;0.797438481678257;0.796359640677891;0.795278678572193;0.794195603091497;0.793110421978709;0.792023142989237;0.790933773890911;0.789842322463913;0.788748796500701;0.787653203805936;0.786555552196404;0.785455849500942;0.784354103560369;0.783250322227402;0.782144513366589;0.781036684854226;0.779926844578291;0.77881500043836;0.777701160345539;0.776585332222382;0.775467524002819;0.774347743632081;0.773225999066623;0.772102298274047;0.770976649233028;0.769849059933236;0.768719538375264;0.767588092570547;0.766454730541287;0.765319460320378;0.764182289951332;0.763043227488195;0.761902280995477;0.760759458548073;0.759614768231187;0.758468218140255;0.757319816380865;0.756169571068687;0.755017490329388;0.753863582298562;0.752707855121646;0.751550316953849;0.750390975960072;0.749229840314828;0.748066918202168;0.746902217815605;0.74573574735803;0.744567515041641;0.743397529087861;0.742225797727262;0.741052329199488;0.739877131753174;0.73870021364587;0.737521583143965;0.736341248522604;0.735159218065615;0.733975500065425;0.732790102822989;0.731603034647704;0.730414303857337;0.729223918777942;0.728031887743784;0.72683821909726;0.725642921188819;0.724446002376885;0.723247471027779;0.722047335515636;0.720845604222332;0.7196422855374;0.718437387857955;0.717230919588611;0.716022889141407;0.714813304935724;0.713602175398207;0.712389508962686;0.711175314070098;0.709959599168404;0.708742372712514;0.707523643164207;0.706303418992049;0.705081708671316;0.703858520683914;0.702633863518298;0.701407745669397;0.700180175638527;0.69895116193332;0.697720713067638;0.696488837561496;0.695255543940982;0.694020840738178;0.692784736491078;0.691547239743511;0.69030835904506;0.689068102950982;0.687826480022128;0.686583498824865;0.685339167930993;0.684093495917668;0.682846491367321;0.681598162867577;0.680348519011176;0.679097568395895;0.677845319624464;0.676591781304489;0.675336962048371;0.674080870473226;0.672823515200804;0.671564904857411;0.670305048073829;0.669043953485231;0.667781629731109;0.666518085455186;0.66525332930534;0.663987369933525;0.662720215995689;0.66145187615169;0.660182359065225;0.658911673403742;0.657639827838363;0.656366831043801;0.655092691698287;0.65381741848348;0.652541020084396;0.651263505189319;0.64998488248973;0.64870516068022;0.647424348458412;0.646142454524881;0.644859487583075;0.643575456339231;0.642290369502301;0.641004235783867;0.63971706389806;0.638428862561485;0.637139640493137;0.635849406414322;0.634558169048576;0.633265937121587;0.631972719361113;0.630678524496902;0.629383361260614;0.628087238385739;0.626790164607517;0.62549214866286;0.624193199290268;0.622893325229755;0.621592535222764;0.620290838012088;0.618988242341793;0.617684756957135;0.616380390604481;0.61507515203123;0.613769049985734;0.612462093217214;0.611154290475686;0.609845650511876;0.608536182077146;0.607225893923408;0.605914794803051;0.604602893468854;0.603290198673914;0.60197671917156;0.60066246371528;0.599347441058636;0.598031659955185;0.596715129158405;0.595397857421609;0.594079853497869;0.592761126139939;0.591441684100169;0.590121536130435;0.588800690982049;0.587479157405691;0.586156944151322;0.584834059968109;0.583510513604344;0.582186313807366;0.580861469323482;0.579535988897889;0.578209881274593;0.576883155196333;0.575555819404501;0.574227882639063;0.572899353638481;0.571570241139634;0.570240553877741;0.568910300586281;0.567579489996916;0.566248130839409;0.564916231841552;0.563583801729084;0.562250849225612;0.560917383052535;0.559583411928966;0.558248944571653;0.556913989694902;0.555578556010497;0.554242652227627;0.552906287052803;0.551569469189783;0.550232207339496;0.54889451019996;0.547556386466211;0.546217844830218;0.544878893980812;0.543539542603607;0.542199799380921;0.5408596729917;0.539519172111444;0.538178305412124;0.536837081562112;0.535495509226098;0.534153597065018;0.532811353735976;0.531468787892165;0.530125908182794;0.52878272325301;0.527439241743822;0.526095472292026;0.524751423530125;0.523407104086258;0.52206252258412;0.52071768764289;0.51937260787715;0.518027291896815;0.516681748307053;0.515335985708212;0.513990012695743;0.512643837860127;0.511297469786796;0.509950917056061;0.508604188243036;0.507257291917563;0.505910236644137;0.50456303098183;0.503215683484219;0.50186820269931;0.500520597169462;0.499172875431316;0.497825046015716;0.49647711744764;0.495129098246122;0.49378099692418;0.49243282198874;0.491084581940566;0.489736285274183;0.488387940477802;0.487039556033253;0.485691140415903;0.484342702094591;0.482994249531548;0.481645791182329;0.480297335495736;0.478948890913749;0.477600465871449;0.47625206879695;0.474903708111322;0.473555392228522;0.47220712955532;0.470858928491227;0.469510797428423;0.468162744751687;0.46681477883832;0.465466908058079;0.464119140773102;0.462771485337837;0.461423950098973;0.460076543395366;0.458729273557966;0.457382148909753;0.456035177765659;0.4546883684325;0.453341729208906;0.451995268385251;0.450648994243579;0.449302915057537;0.447957039092305;0.446611374604524;0.445265929842227;0.44392071304477;0.44257573244276;0.441230996257989;0.439886512703362;0.438542289982828;0.437198336291311;0.435854659814643;0.434511268729492;0.433168171203296;0.431825375394191;0.430482889450948;0.429140721512899;0.427798879709872;0.426457372162121;0.425116206980262;0.423775392265199;0.422434936108063;0.42109484659014;0.419755131782804;0.418415799747454;0.417076858535439;0.415738316188001;0.414400180736199;0.413062460200849;0.411725162592453;0.410388295911137;0.409051868146579;0.40771588727795;0.406380361273841;0.405045298092203;0.403710705680279;0.402376591974537;0.401042964900608;0.399709832373217;0.398377202296122;0.397045082562048;0.395713481052618;0.394382405638295;0.393051864178314;0.391721864520617;0.390392414501793;0.389063521947008;0.387735194669947;0.386407440472746;0.385080267145932;0.383753682468358;0.382427694207139;0.381102310117591;0.379777537943166;0.378453385415392;0.377129860253808;0.375806970165902;0.374484722847052;0.373163125980459;0.371842187237087;0.370521914275606;0.369202314742321;0.367883396271121;0.366565166483408;0.365247632988046;0.363930803381291;0.362614685246735;0.361299286155246;0.359984613664905;0.358670675320949;0.357357478655706;0.356045031188542;0.354733340425795;0.353422413860719;0.352112258973424;0.350802883230817;0.349494294086542;0.348186498980922;0.3468795053409;0.345573320579982;0.344267952098176;0.342963407281936;0.341659693504104;0.34035681812385;0.339054788486619;0.337753611924068;0.336453295754014;0.335153847280371;0.333855273793101;0.33255758256815;0.331260780867396;0.329964875938589;0.328669875015299;0.327375785316859;0.326082614048306;0.324790368400329;0.323499055549212;0.322208682656779;0.320919256870341;0.319630785322636;0.318343275131781;0.317056733401212;0.315771167219632;0.314486583660959;0.313202989784267;0.311920392633738;0.310638799238603;0.309358216613093;0.308078651756386;0.306800111652548;0.305522603270488;0.304246133563902;0.302970709471217;0.301696337915547;0.300423025804634;0.299150780030799;0.29787960747089;0.296609514986232;0.295340509422572;0.294072597610032;0.292805786363058;0.291540082480364;0.290275492744891;0.289012023923747;0.287749682768163;0.286488476013441;0.285228410378907;0.283969492567857;0.282711729267511;0.281455127148964;0.280199692867136;0.278945433060723;0.27769235435215;0.276440463347524;0.27518976663658;0.273940270792641;0.272691982372566;0.271444907916702;0.270199053948839;0.268954426976162;0.267711033489204;0.266468879961801;0.265227972851043;0.26398831859723;0.262749923623824;0.261512794337407;0.260276937127629;0.25904235836717;0.25780906441169;0.256577061599786;0.255346356252946;0.254116954675506;0.252888863154604;0.251662087960139;0.250436635344722;0.249212511543637;0.247989722774796;0.246768275238695;0.245548175118373;0.244329428579365;0.243112041769665;0.241896020819679;0.240681371842184;0.23946810093229;0.23825621416739;0.237045717607127;0.235836617293348;0.234628919250063;0.233422629483406;0.232217753981592;0.231014298714879;0.229812269635527;0.228611672677756;0.227412513757708;0.226214798773408;0.225018533604724;0.223823724113326;0.222630376142649;0.221438495517857;0.220248088045796;0.219059159514965;0.217871715695474;0.216685762339004;0.215501305178773;0.214318349929498;0.213136902287355;0.211956967929945;0.210778552516257;0.209601661686629;0.208426301062716;0.207252476247449;0.206080192825002;0.204909456360757;0.203740272401268;0.202572646474221;0.201406584088409;0.200242090733689;0.199079171880949;0.197917832982076;0.196758079469921;0.195599916758264;0.194443350241782;0.193288385296015;0.192135027277332;0.190983281522898;0.189833153350645;0.188684648059233;0.187537770928023;0.186392527217044;0.185248922166959;0.184106960999035;0.182966648915113;0.181827991097572;0.180690992709306;0.179555658893686;0.178421994774532;0.177290005456083;0.176159696022971;0.175031071540182;0.173904137053034;0.172778897587147;0.171655358148411;0.170533523722959;0.169413399277137;0.168294989757478;0.167178300090671;0.166063335183536;0.164950099922995;0.163838599176042;0.162728837789721;0.161620820591094;0.160514552387217;0.159410037965114;0.158307282091748;0.157206289513996;0.156107064958625;0.155009613132265;0.153913938721383;0.152820046392257;0.151727940790955;0.150637626543306;0.149549108254878;0.148462390510953;0.147377477876504;0.146294374896168;0.145213086094228;0.144133615974584;0.143055969020734;0.141980149695748;0.140906162442248;0.139834011682386;0.138763701817818;0.137695237229687;0.136628622278597;0.135563861304595;0.134500958627148;0.133439918545122;0.132380745336762;0.131323443259671;0.13026801655079;0.129214469426379;0.128162806081993;0.12711303069247;0.126065147411903;0.125019160373628;0.123975073690202;0.122932891453382;0.121892617734113;0.120854256582503;0.11981781202781;0.118783288078423;0.117750688721843;0.116720017924666;0.11569127963257;0.114664477770291;0.113639616241614;0.112616698929352;0.111595729695331;0.110576712380376;0.109559650804292;0.108544548765853;0.107531410042783;0.106520238391741;0.105511037548312;0.104503811226986;0.103498563121147;0.102495296903059;0.10149401622385;0.100494724713505;0.0994974259808421;0.0985021236135104;0.0975088211779706;0.0965175222194845;0.0955282302621025;0.094540948808652;0.0935556813407251;0.0925724313186671;0.091591202181565;0.0906119973472373;0.0896348202122217;0.0886596741517658;0.0876865625198155;0.0867154886490061;0.0857464558506515;0.0847794674147343;0.0838145266098974;0.0828516366834338;0.081890800861278;0.0809320223479969;0.0799753043267821;0.0790206499594406;0.0780680623863875;0.0771175447266376;0.0761691000777984;0.0752227315160621;0.0742784420961991;0.0733362348515507;0.0723961127940227;0.0714580789140785;0.0705221361807334;0.069588287541549;0.0686565359226264;0.0677268842286013;0.066799335342639;0.0658738921264291;0.0649505574201807;0.0640293340426176;0.0631102247909746;0.062193232440993;0.0612783597469165;0.0603656094414881;0.0594549842359465;0.0585464868200229;0.0576401198619378;0.0567358860083988;0.055833787884598;0.0549338280942094;0.0540360092193872;0.0531403338207642;0.0522468044374499;0.0513554235870291;0.0504661937655611;0.0495791174475793;0.0486941970860893;0.0478114351125697;0.0469308339369715;0.0460523959477181;0.0451761235117054;0.0443020189743029;0.0434300846593541;0.0425603228691775;0.0416927358845677;0.0408273259647971;0.0399640953476175;0.0391030462492619;0.0382441808644464;0.0373875013663734;0.0365330099067331;0.035680708615707;0.0348305996019707;0.0339826849526973;0.0331369667335609;0.0322934469887399;0.0314521277409214;0.0306130109913055;0.0297760987196091;0.0289413928840709;0.0281088954214566;0.0272786082470629;0.026450533254724;0.0256246723168164;0.0248010272842649;0.0239795999865484;0.0231603922317064;0.022343405806345;0.0215286424756441;0.0207161039833637;0.019905792051851;0.0190977083820486;0.0182918546535009;0.0174882325243625;0.0166868436314057;0.0158876895900297;0.0150907719942678;0.0142960924167967;0.0135036524089452;0.0127134535007037;0.0119254972007329;0.0111397849963734;0.0103563183536561;0.00957509871731131;0.00879612751077952;0.00801940613622144;0.00724493597452914;0.00647271838533626;0.00570275470702945;0.00493504625675948;0.00416959433045314;0.00340640020282435;0.00264546512738635;0.00188679033646423;0.00113037704120664;0.000376226431598763]|9|8|8|7|17|15|on|on|3|1|off"
	  MaskTabNameString	  ",,,,,,,,,,,,"
	  System {
	    Name		    "fir_tap_3"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_in"
	      Position		      [30, 23, 60, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 58, 60, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 93, 60, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_coef"
	      Ports		      [3, 4]
	      Position		      [115, 29, 205, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "1024 coefs in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag90"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Coefficient Generator"
	      MaskDescription	      "A Finite Impluse Response filter coefficient generator.  This FIR filter coefficient generator outputs real coefficients.  It can output one coefficient or cycle through a vector of coefficients for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response filter coefficient generator.\nThis FIR filter coefficient generator outputs real coefficients.\nIt can output one coefficient or cycle through a vector of coefficients for WOLA\n(Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Coefficiant(s) (coef): The coefficient(s) to output.  For a \"regular\" FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nThese should be specified as doubles.   They will be rounded and saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nUse BRAM for Coefficients (use_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n</pre>"
	      MaskPromptString	      "Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Use BRAM for Coefficients"
	      MaskStyleString	      "edit,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "coef=&1;n_bits_c=&2;bin_pt_c=&3;use_bram=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "[0.999999547662946;0.999995928971626;0.999988691616268;0.999977835651433;0.999963361158965;0.999945268247983;0.999923557054889;0.99989822774336;0.999869280504348;0.999836715556079;0.999800533144051;0.99976073354103;0.999717317047049;0.999670283989403;0.999619634722648;0.999565369628596;0.999507489116311;0.999445993622108;0.999380883609544;0.999312159569415;0.999239822019754;0.999163871505822;0.999084308600105;0.999001133902306;0.998914348039344;0.998823951665339;0.998729945461616;0.99863233013669;0.998531106426262;0.998426275093213;0.998317836927595;0.998205792746621;0.998090143394661;0.997970889743233;0.99784803269099;0.997721573163716;0.997591512114315;0.997457850522799;0.997320589396285;0.997179729768976;0.997035272702159;0.99688721928419;0.996735570630482;0.996580327883498;0.996421492212737;0.996259064814724;0.996093046912996;0.99592343975809;0.995750244627533;0.995573462825828;0.99539309568444;0.995209144561783;0.995021610843209;0.994830495940991;0.99463580129431;0.994437528369243;0.994235678658745;0.994030253682635;0.993821254987582;0.993608684147091;0.993392542761483;0.993172832457882;0.992949554890201;0.99272271173912;0.992492304712073;0.992258335543232;0.992020805993488;0.991779717850431;0.991535072928337;0.991286873068149;0.991035120137455;0.990779816030475;0.990520962668036;0.990258561997559;0.989992615993036;0.989723126655011;0.989450096010561;0.989173526113274;0.988893419043231;0.988609776906985;0.988322601837537;0.98803189599432;0.987737661563173;0.987439900756322;0.987138615812356;0.986833808996206;0.986525482599124;0.986213638938657;0.985898280358627;0.985579409229105;0.98525702794639;0.984931138932984;0.984601744637569;0.984268847534979;0.98393245012618;0.983592554938246;0.983249164524326;0.98290228146363;0.982551908361392;0.982198047848854;0.981840702583234;0.9814798752477;0.981115568551347;0.980747785229165;0.980376528042017;0.98000179977661;0.979623603245462;0.979241941286885;0.978856816764947;0.978468232569446;0.978076191615887;0.977680696845445;0.977281751224942;0.976879357746813;0.97647351942908;0.976064239315321;0.975651520474639;0.975235366001631;0.97481577901636;0.974392762664321;0.973966320116415;0.973536454568909;0.973103169243412;0.972666467386842;0.972226352271389;0.971782827194488;0.971335895478783;0.970885560472097;0.970431825547395;0.969974694102756;0.969514169561332;0.969050255371323;0.968582955005935;0.96811227196335;0.967638209766689;0.967160771963981;0.966679962128122;0.966195783856846;0.965708240772684;0.965217336522932;0.964723074779614;0.964225459239442;0.963724493623787;0.963220181678634;0.962712527174551;0.962201533906649;0.961687205694544;0.961169546382321;0.960648559838497;0.960124249955978;0.959596620652025;0.959065675868214;0.958531419570396;0.95799385574866;0.957452988417292;0.956908821614734;0.956361359403548;0.955810605870372;0.955256565125884;0.954699241304754;0.954138638565613;0.953574761091004;0.953007613087343;0.952437198784881;0.951863522437655;0.951286588323455;0.950706400743774;0.950122964023769;0.949536282512219;0.948946360581481;0.948353202627446;0.947756813069498;0.947157196350468;0.946554356936591;0.945948299317464;0.945339028005997;0.944726547538374;0.944110862474005;0.943491977395482;0.942869896908532;0.942244625641977;0.941616168247679;0.940984529400506;0.940349713798277;0.939711726161716;0.939070571234412;0.938426253782768;0.937778778595951;0.937128150485851;0.936474374287031;0.935817454856679;0.935157397074559;0.934494205842967;0.933827886086677;0.933158442752899;0.932485880811225;0.931810205253583;0.931131421094187;0.930449533369489;0.929764547138127;0.929076467480875;0.928385299500598;0.927691048322198;0.92699371909256;0.926293316980511;0.925589847176761;0.924883314893854;0.924173725366119;0.923461083849616;0.922745395622088;0.922026665982904;0.92130490025301;0.920580103774877;0.919852281912448;0.919121440051086;0.918387583597519;0.91765071797979;0.9169108486472;0.916167981070258;0.915422120740627;0.914673273171068;0.913921443895387;0.913166638468382;0.912408862465787;0.911648121484216;0.910884421141112;0.91011776707469;0.90934816494388;0.908575620428275;0.907800139228072;0.907021727064019;0.906240389677357;0.905456132829764;0.9046689623033;0.90387888390035;0.903085903443565;0.902290026775807;0.901491259760094;0.900689608279537;0.899885078237288;0.899077675556479;0.898267406180164;0.897454276071263;0.896638291212503;0.895819457606359;0.894997781274994;0.894173268260203;0.893345924623353;0.892515756445321;0.89168276982644;0.890846970886435;0.890008365764364;0.88916696061856;0.888322761626568;0.887475774985088;0.886626006909912;0.885773463635865;0.884918151416742;0.884060076525249;0.883199245252942;0.882335663910164;0.881469338825985;0.880600276348139;0.879728482842962;0.878853964695334;0.877976728308609;0.877096780104561;0.876214126523317;0.875328774023292;0.874440729081133;0.873549998191649;0.872656587867754;0.871760504640396;0.870861755058503;0.869960345688909;0.869056283116299;0.86814957394314;0.867240224789617;0.866328242293574;0.865413633110439;0.864496403913169;0.863576561392183;0.862654112255293;0.861729063227642;0.86080142105164;0.859871192486895;0.85893838431015;0.858003003315215;0.857065056312905;0.85612455013097;0.855181491614029;0.854235887623507;0.853287745037565;0.852337070751035;0.851383871675352;0.850428154738489;0.849469926884886;0.84850919507539;0.847545966287178;0.846580247513697;0.845612045764594;0.844641368065647;0.843668221458696;0.84269261300158;0.841714549768064;0.840734038847771;0.839751087346116;0.838765702384234;0.837777891098914;0.836787660642529;0.835795018182967;0.834799970903559;0.833802526003016;0.832802690695352;0.831800472209821;0.830795877790843;0.829788914697934;0.828779590205639;0.827767911603459;0.826753886195782;0.825737521301814;0.824718824255502;0.823697802405475;0.822674463114959;0.821648813761719;0.820620861737978;0.819590614450354;0.81855807931978;0.817523263781442;0.8164861752847;0.815446821293019;0.814405209283897;0.813361346748796;0.812315241193064;0.811266900135868;0.810216331110119;0.8091635416624;0.808108539352896;0.807051331755317;0.805991926456828;0.804930331057977;0.80386655317262;0.802800600427848;0.801732480463917;0.800662200934169;0.799589769504963;0.798515193855602;0.797438481678257;0.796359640677891;0.795278678572193;0.794195603091497;0.793110421978709;0.792023142989237;0.790933773890911;0.789842322463913;0.788748796500701;0.787653203805936;0.786555552196404;0.785455849500942;0.784354103560369;0.783250322227402;0.782144513366589;0.781036684854226;0.779926844578291;0.77881500043836;0.777701160345539;0.776585332222382;0.775467524002819;0.774347743632081;0.773225999066623;0.772102298274047;0.770976649233028;0.769849059933236;0.768719538375264;0.767588092570547;0.766454730541287;0.765319460320378;0.764182289951332;0.763043227488195;0.761902280995477;0.760759458548073;0.759614768231187;0.758468218140255;0.757319816380865;0.756169571068687;0.755017490329388;0.753863582298562;0.752707855121646;0.751550316953849;0.750390975960072;0.749229840314828;0.748066918202168;0.746902217815605;0.74573574735803;0.744567515041641;0.743397529087861;0.742225797727262;0.741052329199488;0.739877131753174;0.73870021364587;0.737521583143965;0.736341248522604;0.735159218065615;0.733975500065425;0.732790102822989;0.731603034647704;0.730414303857337;0.729223918777942;0.728031887743784;0.72683821909726;0.725642921188819;0.724446002376885;0.723247471027779;0.722047335515636;0.720845604222332;0.7196422855374;0.718437387857955;0.717230919588611;0.716022889141407;0.714813304935724;0.713602175398207;0.712389508962686;0.711175314070098;0.709959599168404;0.708742372712514;0.707523643164207;0.706303418992049;0.705081708671316;0.703858520683914;0.702633863518298;0.701407745669397;0.700180175638527;0.69895116193332;0.697720713067638;0.696488837561496;0.695255543940982;0.694020840738178;0.692784736491078;0.691547239743511;0.69030835904506;0.689068102950982;0.687826480022128;0.686583498824865;0.685339167930993;0.684093495917668;0.682846491367321;0.681598162867577;0.680348519011176;0.679097568395895;0.677845319624464;0.676591781304489;0.675336962048371;0.674080870473226;0.672823515200804;0.671564904857411;0.670305048073829;0.669043953485231;0.667781629731109;0.666518085455186;0.66525332930534;0.663987369933525;0.662720215995689;0.66145187615169;0.660182359065225;0.658911673403742;0.657639827838363;0.656366831043801;0.655092691698287;0.65381741848348;0.652541020084396;0.651263505189319;0.64998488248973;0.64870516068022;0.647424348458412;0.646142454524881;0.644859487583075;0.643575456339231;0.642290369502301;0.641004235783867;0.63971706389806;0.638428862561485;0.637139640493137;0.635849406414322;0.634558169048576;0.633265937121587;0.631972719361113;0.630678524496902;0.629383361260614;0.628087238385739;0.626790164607517;0.62549214866286;0.624193199290268;0.622893325229755;0.621592535222764;0.620290838012088;0.618988242341793;0.617684756957135;0.616380390604481;0.61507515203123;0.613769049985734;0.612462093217214;0.611154290475686;0.609845650511876;0.608536182077146;0.607225893923408;0.605914794803051;0.604602893468854;0.603290198673914;0.60197671917156;0.60066246371528;0.599347441058636;0.598031659955185;0.596715129158405;0.595397857421609;0.594079853497869;0.592761126139939;0.591441684100169;0.590121536130435;0.588800690982049;0.587479157405691;0.586156944151322;0.584834059968109;0.583510513604344;0.582186313807366;0.580861469323482;0.579535988897889;0.578209881274593;0.576883155196333;0.575555819404501;0.574227882639063;0.572899353638481;0.571570241139634;0.570240553877741;0.568910300586281;0.567579489996916;0.566248130839409;0.564916231841552;0.563583801729084;0.562250849225612;0.560917383052535;0.559583411928966;0.558248944571653;0.556913989694902;0.555578556010497;0.554242652227627;0.552906287052803;0.551569469189783;0.550232207339496;0.54889451019996;0.547556386466211;0.546217844830218;0.544878893980812;0.543539542603607;0.542199799380921;0.5408596729917;0.539519172111444;0.538178305412124;0.536837081562112;0.535495509226098;0.534153597065018;0.532811353735976;0.531468787892165;0.530125908182794;0.52878272325301;0.527439241743822;0.526095472292026;0.524751423530125;0.523407104086258;0.52206252258412;0.52071768764289;0.51937260787715;0.518027291896815;0.516681748307053;0.515335985708212;0.513990012695743;0.512643837860127;0.511297469786796;0.509950917056061;0.508604188243036;0.507257291917563;0.505910236644137;0.50456303098183;0.503215683484219;0.50186820269931;0.500520597169462;0.499172875431316;0.497825046015716;0.49647711744764;0.495129098246122;0.49378099692418;0.49243282198874;0.491084581940566;0.489736285274183;0.488387940477802;0.487039556033253;0.485691140415903;0.484342702094591;0.482994249531548;0.481645791182329;0.480297335495736;0.478948890913749;0.477600465871449;0.47625206879695;0.474903708111322;0.473555392228522;0.47220712955532;0.470858928491227;0.469510797428423;0.468162744751687;0.46681477883832;0.465466908058079;0.464119140773102;0.462771485337837;0.461423950098973;0.460076543395366;0.458729273557966;0.457382148909753;0.456035177765659;0.4546883684325;0.453341729208906;0.451995268385251;0.450648994243579;0.449302915057537;0.447957039092305;0.446611374604524;0.445265929842227;0.44392071304477;0.44257573244276;0.441230996257989;0.439886512703362;0.438542289982828;0.437198336291311;0.435854659814643;0.434511268729492;0.433168171203296;0.431825375394191;0.430482889450948;0.429140721512899;0.427798879709872;0.426457372162121;0.425116206980262;0.423775392265199;0.422434936108063;0.42109484659014;0.419755131782804;0.418415799747454;0.417076858535439;0.415738316188001;0.414400180736199;0.413062460200849;0.411725162592453;0.410388295911137;0.409051868146579;0.40771588727795;0.406380361273841;0.405045298092203;0.403710705680279;0.402376591974537;0.401042964900608;0.399709832373217;0.398377202296122;0.397045082562048;0.395713481052618;0.394382405638295;0.393051864178314;0.391721864520617;0.390392414501793;0.389063521947008;0.387735194669947;0.386407440472746;0.385080267145932;0.383753682468358;0.382427694207139;0.381102310117591;0.379777537943166;0.378453385415392;0.377129860253808;0.375806970165902;0.374484722847052;0.373163125980459;0.371842187237087;0.370521914275606;0.369202314742321;0.367883396271121;0.366565166483408;0.365247632988046;0.363930803381291;0.362614685246735;0.361299286155246;0.359984613664905;0.358670675320949;0.357357478655706;0.356045031188542;0.354733340425795;0.353422413860719;0.352112258973424;0.350802883230817;0.349494294086542;0.348186498980922;0.3468795053409;0.345573320579982;0.344267952098176;0.342963407281936;0.341659693504104;0.34035681812385;0.339054788486619;0.337753611924068;0.336453295754014;0.335153847280371;0.333855273793101;0.33255758256815;0.331260780867396;0.329964875938589;0.328669875015299;0.327375785316859;0.326082614048306;0.324790368400329;0.323499055549212;0.322208682656779;0.320919256870341;0.319630785322636;0.318343275131781;0.317056733401212;0.315771167219632;0.314486583660959;0.313202989784267;0.311920392633738;0.310638799238603;0.309358216613093;0.308078651756386;0.306800111652548;0.305522603270488;0.304246133563902;0.302970709471217;0.301696337915547;0.300423025804634;0.299150780030799;0.29787960747089;0.296609514986232;0.295340509422572;0.294072597610032;0.292805786363058;0.291540082480364;0.290275492744891;0.289012023923747;0.287749682768163;0.286488476013441;0.285228410378907;0.283969492567857;0.282711729267511;0.281455127148964;0.280199692867136;0.278945433060723;0.27769235435215;0.276440463347524;0.27518976663658;0.273940270792641;0.272691982372566;0.271444907916702;0.270199053948839;0.268954426976162;0.267711033489204;0.266468879961801;0.265227972851043;0.26398831859723;0.262749923623824;0.261512794337407;0.260276937127629;0.25904235836717;0.25780906441169;0.256577061599786;0.255346356252946;0.254116954675506;0.252888863154604;0.251662087960139;0.250436635344722;0.249212511543637;0.247989722774796;0.246768275238695;0.245548175118373;0.244329428579365;0.243112041769665;0.241896020819679;0.240681371842184;0.23946810093229;0.23825621416739;0.237045717607127;0.235836617293348;0.234628919250063;0.233422629483406;0.232217753981592;0.231014298714879;0.229812269635527;0.228611672677756;0.227412513757708;0.226214798773408;0.225018533604724;0.223823724113326;0.222630376142649;0.221438495517857;0.220248088045796;0.219059159514965;0.217871715695474;0.216685762339004;0.215501305178773;0.214318349929498;0.213136902287355;0.211956967929945;0.210778552516257;0.209601661686629;0.208426301062716;0.207252476247449;0.206080192825002;0.204909456360757;0.203740272401268;0.202572646474221;0.201406584088409;0.200242090733689;0.199079171880949;0.197917832982076;0.196758079469921;0.195599916758264;0.194443350241782;0.193288385296015;0.192135027277332;0.190983281522898;0.189833153350645;0.188684648059233;0.187537770928023;0.186392527217044;0.185248922166959;0.184106960999035;0.182966648915113;0.181827991097572;0.180690992709306;0.179555658893686;0.178421994774532;0.177290005456083;0.176159696022971;0.175031071540182;0.173904137053034;0.172778897587147;0.171655358148411;0.170533523722959;0.169413399277137;0.168294989757478;0.167178300090671;0.166063335183536;0.164950099922995;0.163838599176042;0.162728837789721;0.161620820591094;0.160514552387217;0.159410037965114;0.158307282091748;0.157206289513996;0.156107064958625;0.155009613132265;0.153913938721383;0.152820046392257;0.151727940790955;0.150637626543306;0.149549108254878;0.148462390510953;0.147377477876504;0.146294374896168;0.145213086094228;0.144133615974584;0.143055969020734;0.141980149695748;0.140906162442248;0.139834011682386;0.138763701817818;0.137695237229687;0.136628622278597;0.135563861304595;0.134500958627148;0.133439918545122;0.132380745336762;0.131323443259671;0.13026801655079;0.129214469426379;0.128162806081993;0.12711303069247;0.126065147411903;0.125019160373628;0.123975073690202;0.122932891453382;0.121892617734113;0.120854256582503;0.11981781202781;0.118783288078423;0.117750688721843;0.116720017924666;0.11569127963257;0.114664477770291;0.113639616241614;0.112616698929352;0.111595729695331;0.110576712380376;0.109559650804292;0.108544548765853;0.107531410042783;0.106520238391741;0.105511037548312;0.104503811226986;0.103498563121147;0.102495296903059;0.10149401622385;0.100494724713505;0.0994974259808421;0.0985021236135104;0.0975088211779706;0.0965175222194845;0.0955282302621025;0.094540948808652;0.0935556813407251;0.0925724313186671;0.091591202181565;0.0906119973472373;0.0896348202122217;0.0886596741517658;0.0876865625198155;0.0867154886490061;0.0857464558506515;0.0847794674147343;0.0838145266098974;0.0828516366834338;0.081890800861278;0.0809320223479969;0.0799753043267821;0.0790206499594406;0.0780680623863875;0.0771175447266376;0.0761691000777984;0.0752227315160621;0.0742784420961991;0.0733362348515507;0.0723961127940227;0.0714580789140785;0.0705221361807334;0.069588287541549;0.0686565359226264;0.0677268842286013;0.066799335342639;0.0658738921264291;0.0649505574201807;0.0640293340426176;0.0631102247909746;0.062193232440993;0.0612783597469165;0.0603656094414881;0.0594549842359465;0.0585464868200229;0.0576401198619378;0.0567358860083988;0.055833787884598;0.0549338280942094;0.0540360092193872;0.0531403338207642;0.0522468044374499;0.0513554235870291;0.0504661937655611;0.0495791174475793;0.0486941970860893;0.0478114351125697;0.0469308339369715;0.0460523959477181;0.0451761235117054;0.0443020189743029;0.0434300846593541;0.0425603228691775;0.0416927358845677;0.0408273259647971;0.0399640953476175;0.0391030462492619;0.0382441808644464;0.0373875013663734;0.0365330099067331;0.035680708615707;0.0348305996019707;0.0339826849526973;0.0331369667335609;0.0322934469887399;0.0314521277409214;0.0306130109913055;0.0297760987196091;0.0289413928840709;0.0281088954214566;0.0272786082470629;0.026450533254724;0.0256246723168164;0.0248010272842649;0.0239795999865484;0.0231603922317064;0.022343405806345;0.0215286424756441;0.0207161039833637;0.019905792051851;0.0190977083820486;0.0182918546535009;0.0174882325243625;0.0166868436314057;0.0158876895900297;0.0150907719942678;0.0142960924167967;0.0135036524089452;0.0127134535007037;0.0119254972007329;0.0111397849963734;0.0103563183536561;0.00957509871731131;0.00879612751077952;0.00801940613622144;0.00724493597452914;0.00647271838533626;0.00570275470702945;0.00493504625675948;0.00416959433045314;0.00340640020282435;0.00264546512738635;0.00188679033646423;0.00113037704120664;0.000376226431598763]|9|8|on"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"fir_coef"
		Location		[609, 271, 1389, 957]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 68, 60, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 193, 60, 207]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_gen"
		  Ports			  [1, 1]
		  Position		  [130, 109, 220, 141]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "1024 coefs in bram\n9_8 out/1"
		  UserDataPersistent	  on
		  UserData		  "DataTag91"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Coefficient Generator"
		  MaskDescription	  "A coefficient generator."
		  MaskHelp		  "<pre>\nDescription::\n\nA coefficient generator.\n\nMask Parameters::\n\nCoefficiants (coefs): The coefficients to output.  These should be specified as doubles.\nThey will be rounded/saturated according to the specified number of bits (n_bits)\nand binary point (bin_pt).\n\nNumber of Coefficient Bits (n_bits): The number of bits used for the fixed point binary\nrepresentation of the coefficients.\n\nCoefficient Binary Point (bin_pt): The binary point of the fixed point binary representation\nof the coefficients.\n\nLog2 Cycles per Coefficient (log2_cpc): The log2 value of the number of cycles per coefficient.\nMust be a non-negative integer (i.e. cycles per coefficient must be a power of 2).  \n\nUse BRAM (use_bram): Check this checkbox to store coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Coefficients|Number of Bits|Binary Point|Log2 Cycles per Coefficient|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off"
		  MaskCallbackString	  "||||"
		  MaskEnableString	  "off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on"
		  MaskVarAliasString	  ",,,,"
		  MaskVariables		  "coefs=&1;n_bits=&2;bin_pt=&3;log2_cpc=&4;use_bram=&5;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "[0.999999547662946;0.999995928971626;0.999988691616268;0.999977835651433;0.999963361158965;0.999945268247983;0.999923557054889;0.99989822774336;0.999869280504348;0.999836715556079;0.999800533144051;0.99976073354103;0.999717317047049;0.999670283989403;0.999619634722648;0.999565369628596;0.999507489116311;0.999445993622108;0.999380883609544;0.999312159569415;0.999239822019754;0.999163871505822;0.999084308600105;0.999001133902306;0.998914348039344;0.998823951665339;0.998729945461616;0.99863233013669;0.998531106426262;0.998426275093213;0.998317836927595;0.998205792746621;0.998090143394661;0.997970889743233;0.99784803269099;0.997721573163716;0.997591512114315;0.997457850522799;0.997320589396285;0.997179729768976;0.997035272702159;0.99688721928419;0.996735570630482;0.996580327883498;0.996421492212737;0.996259064814724;0.996093046912996;0.99592343975809;0.995750244627533;0.995573462825828;0.99539309568444;0.995209144561783;0.995021610843209;0.994830495940991;0.99463580129431;0.994437528369243;0.994235678658745;0.994030253682635;0.993821254987582;0.993608684147091;0.993392542761483;0.993172832457882;0.992949554890201;0.99272271173912;0.992492304712073;0.992258335543232;0.992020805993488;0.991779717850431;0.991535072928337;0.991286873068149;0.991035120137455;0.990779816030475;0.990520962668036;0.990258561997559;0.989992615993036;0.989723126655011;0.989450096010561;0.989173526113274;0.988893419043231;0.988609776906985;0.988322601837537;0.98803189599432;0.987737661563173;0.987439900756322;0.987138615812356;0.986833808996206;0.986525482599124;0.986213638938657;0.985898280358627;0.985579409229105;0.98525702794639;0.984931138932984;0.984601744637569;0.984268847534979;0.98393245012618;0.983592554938246;0.983249164524326;0.98290228146363;0.982551908361392;0.982198047848854;0.981840702583234;0.9814798752477;0.981115568551347;0.980747785229165;0.980376528042017;0.98000179977661;0.979623603245462;0.979241941286885;0.978856816764947;0.978468232569446;0.978076191615887;0.977680696845445;0.977281751224942;0.976879357746813;0.97647351942908;0.976064239315321;0.975651520474639;0.975235366001631;0.97481577901636;0.974392762664321;0.973966320116415;0.973536454568909;0.973103169243412;0.972666467386842;0.972226352271389;0.971782827194488;0.971335895478783;0.970885560472097;0.970431825547395;0.969974694102756;0.969514169561332;0.969050255371323;0.968582955005935;0.96811227196335;0.967638209766689;0.967160771963981;0.966679962128122;0.966195783856846;0.965708240772684;0.965217336522932;0.964723074779614;0.964225459239442;0.963724493623787;0.963220181678634;0.962712527174551;0.962201533906649;0.961687205694544;0.961169546382321;0.960648559838497;0.960124249955978;0.959596620652025;0.959065675868214;0.958531419570396;0.95799385574866;0.957452988417292;0.956908821614734;0.956361359403548;0.955810605870372;0.955256565125884;0.954699241304754;0.954138638565613;0.953574761091004;0.953007613087343;0.952437198784881;0.951863522437655;0.951286588323455;0.950706400743774;0.950122964023769;0.949536282512219;0.948946360581481;0.948353202627446;0.947756813069498;0.947157196350468;0.946554356936591;0.945948299317464;0.945339028005997;0.944726547538374;0.944110862474005;0.943491977395482;0.942869896908532;0.942244625641977;0.941616168247679;0.940984529400506;0.940349713798277;0.939711726161716;0.939070571234412;0.938426253782768;0.937778778595951;0.937128150485851;0.936474374287031;0.935817454856679;0.935157397074559;0.934494205842967;0.933827886086677;0.933158442752899;0.932485880811225;0.931810205253583;0.931131421094187;0.930449533369489;0.929764547138127;0.929076467480875;0.928385299500598;0.927691048322198;0.92699371909256;0.926293316980511;0.925589847176761;0.924883314893854;0.924173725366119;0.923461083849616;0.922745395622088;0.922026665982904;0.92130490025301;0.920580103774877;0.919852281912448;0.919121440051086;0.918387583597519;0.91765071797979;0.9169108486472;0.916167981070258;0.915422120740627;0.914673273171068;0.913921443895387;0.913166638468382;0.912408862465787;0.911648121484216;0.910884421141112;0.91011776707469;0.90934816494388;0.908575620428275;0.907800139228072;0.907021727064019;0.906240389677357;0.905456132829764;0.9046689623033;0.90387888390035;0.903085903443565;0.902290026775807;0.901491259760094;0.900689608279537;0.899885078237288;0.899077675556479;0.898267406180164;0.897454276071263;0.896638291212503;0.895819457606359;0.894997781274994;0.894173268260203;0.893345924623353;0.892515756445321;0.89168276982644;0.890846970886435;0.890008365764364;0.88916696061856;0.888322761626568;0.887475774985088;0.886626006909912;0.885773463635865;0.884918151416742;0.884060076525249;0.883199245252942;0.882335663910164;0.881469338825985;0.880600276348139;0.879728482842962;0.878853964695334;0.877976728308609;0.877096780104561;0.876214126523317;0.875328774023292;0.874440729081133;0.873549998191649;0.872656587867754;0.871760504640396;0.870861755058503;0.869960345688909;0.869056283116299;0.86814957394314;0.867240224789617;0.866328242293574;0.865413633110439;0.864496403913169;0.863576561392183;0.862654112255293;0.861729063227642;0.86080142105164;0.859871192486895;0.85893838431015;0.858003003315215;0.857065056312905;0.85612455013097;0.855181491614029;0.854235887623507;0.853287745037565;0.852337070751035;0.851383871675352;0.850428154738489;0.849469926884886;0.84850919507539;0.847545966287178;0.846580247513697;0.845612045764594;0.844641368065647;0.843668221458696;0.84269261300158;0.841714549768064;0.840734038847771;0.839751087346116;0.838765702384234;0.837777891098914;0.836787660642529;0.835795018182967;0.834799970903559;0.833802526003016;0.832802690695352;0.831800472209821;0.830795877790843;0.829788914697934;0.828779590205639;0.827767911603459;0.826753886195782;0.825737521301814;0.824718824255502;0.823697802405475;0.822674463114959;0.821648813761719;0.820620861737978;0.819590614450354;0.81855807931978;0.817523263781442;0.8164861752847;0.815446821293019;0.814405209283897;0.813361346748796;0.812315241193064;0.811266900135868;0.810216331110119;0.8091635416624;0.808108539352896;0.807051331755317;0.805991926456828;0.804930331057977;0.80386655317262;0.802800600427848;0.801732480463917;0.800662200934169;0.799589769504963;0.798515193855602;0.797438481678257;0.796359640677891;0.795278678572193;0.794195603091497;0.793110421978709;0.792023142989237;0.790933773890911;0.789842322463913;0.788748796500701;0.787653203805936;0.786555552196404;0.785455849500942;0.784354103560369;0.783250322227402;0.782144513366589;0.781036684854226;0.779926844578291;0.77881500043836;0.777701160345539;0.776585332222382;0.775467524002819;0.774347743632081;0.773225999066623;0.772102298274047;0.770976649233028;0.769849059933236;0.768719538375264;0.767588092570547;0.766454730541287;0.765319460320378;0.764182289951332;0.763043227488195;0.761902280995477;0.760759458548073;0.759614768231187;0.758468218140255;0.757319816380865;0.756169571068687;0.755017490329388;0.753863582298562;0.752707855121646;0.751550316953849;0.750390975960072;0.749229840314828;0.748066918202168;0.746902217815605;0.74573574735803;0.744567515041641;0.743397529087861;0.742225797727262;0.741052329199488;0.739877131753174;0.73870021364587;0.737521583143965;0.736341248522604;0.735159218065615;0.733975500065425;0.732790102822989;0.731603034647704;0.730414303857337;0.729223918777942;0.728031887743784;0.72683821909726;0.725642921188819;0.724446002376885;0.723247471027779;0.722047335515636;0.720845604222332;0.7196422855374;0.718437387857955;0.717230919588611;0.716022889141407;0.714813304935724;0.713602175398207;0.712389508962686;0.711175314070098;0.709959599168404;0.708742372712514;0.707523643164207;0.706303418992049;0.705081708671316;0.703858520683914;0.702633863518298;0.701407745669397;0.700180175638527;0.69895116193332;0.697720713067638;0.696488837561496;0.695255543940982;0.694020840738178;0.692784736491078;0.691547239743511;0.69030835904506;0.689068102950982;0.687826480022128;0.686583498824865;0.685339167930993;0.684093495917668;0.682846491367321;0.681598162867577;0.680348519011176;0.679097568395895;0.677845319624464;0.676591781304489;0.675336962048371;0.674080870473226;0.672823515200804;0.671564904857411;0.670305048073829;0.669043953485231;0.667781629731109;0.666518085455186;0.66525332930534;0.663987369933525;0.662720215995689;0.66145187615169;0.660182359065225;0.658911673403742;0.657639827838363;0.656366831043801;0.655092691698287;0.65381741848348;0.652541020084396;0.651263505189319;0.64998488248973;0.64870516068022;0.647424348458412;0.646142454524881;0.644859487583075;0.643575456339231;0.642290369502301;0.641004235783867;0.63971706389806;0.638428862561485;0.637139640493137;0.635849406414322;0.634558169048576;0.633265937121587;0.631972719361113;0.630678524496902;0.629383361260614;0.628087238385739;0.626790164607517;0.62549214866286;0.624193199290268;0.622893325229755;0.621592535222764;0.620290838012088;0.618988242341793;0.617684756957135;0.616380390604481;0.61507515203123;0.613769049985734;0.612462093217214;0.611154290475686;0.609845650511876;0.608536182077146;0.607225893923408;0.605914794803051;0.604602893468854;0.603290198673914;0.60197671917156;0.60066246371528;0.599347441058636;0.598031659955185;0.596715129158405;0.595397857421609;0.594079853497869;0.592761126139939;0.591441684100169;0.590121536130435;0.588800690982049;0.587479157405691;0.586156944151322;0.584834059968109;0.583510513604344;0.582186313807366;0.580861469323482;0.579535988897889;0.578209881274593;0.576883155196333;0.575555819404501;0.574227882639063;0.572899353638481;0.571570241139634;0.570240553877741;0.568910300586281;0.567579489996916;0.566248130839409;0.564916231841552;0.563583801729084;0.562250849225612;0.560917383052535;0.559583411928966;0.558248944571653;0.556913989694902;0.555578556010497;0.554242652227627;0.552906287052803;0.551569469189783;0.550232207339496;0.54889451019996;0.547556386466211;0.546217844830218;0.544878893980812;0.543539542603607;0.542199799380921;0.5408596729917;0.539519172111444;0.538178305412124;0.536837081562112;0.535495509226098;0.534153597065018;0.532811353735976;0.531468787892165;0.530125908182794;0.52878272325301;0.527439241743822;0.526095472292026;0.524751423530125;0.523407104086258;0.52206252258412;0.52071768764289;0.51937260787715;0.518027291896815;0.516681748307053;0.515335985708212;0.513990012695743;0.512643837860127;0.511297469786796;0.509950917056061;0.508604188243036;0.507257291917563;0.505910236644137;0.50456303098183;0.503215683484219;0.50186820269931;0.500520597169462;0.499172875431316;0.497825046015716;0.49647711744764;0.495129098246122;0.49378099692418;0.49243282198874;0.491084581940566;0.489736285274183;0.488387940477802;0.487039556033253;0.485691140415903;0.484342702094591;0.482994249531548;0.481645791182329;0.480297335495736;0.478948890913749;0.477600465871449;0.47625206879695;0.474903708111322;0.473555392228522;0.47220712955532;0.470858928491227;0.469510797428423;0.468162744751687;0.46681477883832;0.465466908058079;0.464119140773102;0.462771485337837;0.461423950098973;0.460076543395366;0.458729273557966;0.457382148909753;0.456035177765659;0.4546883684325;0.453341729208906;0.451995268385251;0.450648994243579;0.449302915057537;0.447957039092305;0.446611374604524;0.445265929842227;0.44392071304477;0.44257573244276;0.441230996257989;0.439886512703362;0.438542289982828;0.437198336291311;0.435854659814643;0.434511268729492;0.433168171203296;0.431825375394191;0.430482889450948;0.429140721512899;0.427798879709872;0.426457372162121;0.425116206980262;0.423775392265199;0.422434936108063;0.42109484659014;0.419755131782804;0.418415799747454;0.417076858535439;0.415738316188001;0.414400180736199;0.413062460200849;0.411725162592453;0.410388295911137;0.409051868146579;0.40771588727795;0.406380361273841;0.405045298092203;0.403710705680279;0.402376591974537;0.401042964900608;0.399709832373217;0.398377202296122;0.397045082562048;0.395713481052618;0.394382405638295;0.393051864178314;0.391721864520617;0.390392414501793;0.389063521947008;0.387735194669947;0.386407440472746;0.385080267145932;0.383753682468358;0.382427694207139;0.381102310117591;0.379777537943166;0.378453385415392;0.377129860253808;0.375806970165902;0.374484722847052;0.373163125980459;0.371842187237087;0.370521914275606;0.369202314742321;0.367883396271121;0.366565166483408;0.365247632988046;0.363930803381291;0.362614685246735;0.361299286155246;0.359984613664905;0.358670675320949;0.357357478655706;0.356045031188542;0.354733340425795;0.353422413860719;0.352112258973424;0.350802883230817;0.349494294086542;0.348186498980922;0.3468795053409;0.345573320579982;0.344267952098176;0.342963407281936;0.341659693504104;0.34035681812385;0.339054788486619;0.337753611924068;0.336453295754014;0.335153847280371;0.333855273793101;0.33255758256815;0.331260780867396;0.329964875938589;0.328669875015299;0.327375785316859;0.326082614048306;0.324790368400329;0.323499055549212;0.322208682656779;0.320919256870341;0.319630785322636;0.318343275131781;0.317056733401212;0.315771167219632;0.314486583660959;0.313202989784267;0.311920392633738;0.310638799238603;0.309358216613093;0.308078651756386;0.306800111652548;0.305522603270488;0.304246133563902;0.302970709471217;0.301696337915547;0.300423025804634;0.299150780030799;0.29787960747089;0.296609514986232;0.295340509422572;0.294072597610032;0.292805786363058;0.291540082480364;0.290275492744891;0.289012023923747;0.287749682768163;0.286488476013441;0.285228410378907;0.283969492567857;0.282711729267511;0.281455127148964;0.280199692867136;0.278945433060723;0.27769235435215;0.276440463347524;0.27518976663658;0.273940270792641;0.272691982372566;0.271444907916702;0.270199053948839;0.268954426976162;0.267711033489204;0.266468879961801;0.265227972851043;0.26398831859723;0.262749923623824;0.261512794337407;0.260276937127629;0.25904235836717;0.25780906441169;0.256577061599786;0.255346356252946;0.254116954675506;0.252888863154604;0.251662087960139;0.250436635344722;0.249212511543637;0.247989722774796;0.246768275238695;0.245548175118373;0.244329428579365;0.243112041769665;0.241896020819679;0.240681371842184;0.23946810093229;0.23825621416739;0.237045717607127;0.235836617293348;0.234628919250063;0.233422629483406;0.232217753981592;0.231014298714879;0.229812269635527;0.228611672677756;0.227412513757708;0.226214798773408;0.225018533604724;0.223823724113326;0.222630376142649;0.221438495517857;0.220248088045796;0.219059159514965;0.217871715695474;0.216685762339004;0.215501305178773;0.214318349929498;0.213136902287355;0.211956967929945;0.210778552516257;0.209601661686629;0.208426301062716;0.207252476247449;0.206080192825002;0.204909456360757;0.203740272401268;0.202572646474221;0.201406584088409;0.200242090733689;0.199079171880949;0.197917832982076;0.196758079469921;0.195599916758264;0.194443350241782;0.193288385296015;0.192135027277332;0.190983281522898;0.189833153350645;0.188684648059233;0.187537770928023;0.186392527217044;0.185248922166959;0.184106960999035;0.182966648915113;0.181827991097572;0.180690992709306;0.179555658893686;0.178421994774532;0.177290005456083;0.176159696022971;0.175031071540182;0.173904137053034;0.172778897587147;0.171655358148411;0.170533523722959;0.169413399277137;0.168294989757478;0.167178300090671;0.166063335183536;0.164950099922995;0.163838599176042;0.162728837789721;0.161620820591094;0.160514552387217;0.159410037965114;0.158307282091748;0.157206289513996;0.156107064958625;0.155009613132265;0.153913938721383;0.152820046392257;0.151727940790955;0.150637626543306;0.149549108254878;0.148462390510953;0.147377477876504;0.146294374896168;0.145213086094228;0.144133615974584;0.143055969020734;0.141980149695748;0.140906162442248;0.139834011682386;0.138763701817818;0.137695237229687;0.136628622278597;0.135563861304595;0.134500958627148;0.133439918545122;0.132380745336762;0.131323443259671;0.13026801655079;0.129214469426379;0.128162806081993;0.12711303069247;0.126065147411903;0.125019160373628;0.123975073690202;0.122932891453382;0.121892617734113;0.120854256582503;0.11981781202781;0.118783288078423;0.117750688721843;0.116720017924666;0.11569127963257;0.114664477770291;0.113639616241614;0.112616698929352;0.111595729695331;0.110576712380376;0.109559650804292;0.108544548765853;0.107531410042783;0.106520238391741;0.105511037548312;0.104503811226986;0.103498563121147;0.102495296903059;0.10149401622385;0.100494724713505;0.0994974259808421;0.0985021236135104;0.0975088211779706;0.0965175222194845;0.0955282302621025;0.094540948808652;0.0935556813407251;0.0925724313186671;0.091591202181565;0.0906119973472373;0.0896348202122217;0.0886596741517658;0.0876865625198155;0.0867154886490061;0.0857464558506515;0.0847794674147343;0.0838145266098974;0.0828516366834338;0.081890800861278;0.0809320223479969;0.0799753043267821;0.0790206499594406;0.0780680623863875;0.0771175447266376;0.0761691000777984;0.0752227315160621;0.0742784420961991;0.0733362348515507;0.0723961127940227;0.0714580789140785;0.0705221361807334;0.069588287541549;0.0686565359226264;0.0677268842286013;0.066799335342639;0.0658738921264291;0.0649505574201807;0.0640293340426176;0.0631102247909746;0.062193232440993;0.0612783597469165;0.0603656094414881;0.0594549842359465;0.0585464868200229;0.0576401198619378;0.0567358860083988;0.055833787884598;0.0549338280942094;0.0540360092193872;0.0531403338207642;0.0522468044374499;0.0513554235870291;0.0504661937655611;0.0495791174475793;0.0486941970860893;0.0478114351125697;0.0469308339369715;0.0460523959477181;0.0451761235117054;0.0443020189743029;0.0434300846593541;0.0425603228691775;0.0416927358845677;0.0408273259647971;0.0399640953476175;0.0391030462492619;0.0382441808644464;0.0373875013663734;0.0365330099067331;0.035680708615707;0.0348305996019707;0.0339826849526973;0.0331369667335609;0.0322934469887399;0.0314521277409214;0.0306130109913055;0.0297760987196091;0.0289413928840709;0.0281088954214566;0.0272786082470629;0.026450533254724;0.0256246723168164;0.0248010272842649;0.0239795999865484;0.0231603922317064;0.022343405806345;0.0215286424756441;0.0207161039833637;0.019905792051851;0.0190977083820486;0.0182918546535009;0.0174882325243625;0.0166868436314057;0.0158876895900297;0.0150907719942678;0.0142960924167967;0.0135036524089452;0.0127134535007037;0.0119254972007329;0.0111397849963734;0.0103563183536561;0.00957509871731131;0.00879612751077952;0.00801940613622144;0.00724493597452914;0.00647271838533626;0.00570275470702945;0.00493504625675948;0.00416959433045314;0.00340640020282435;0.00264546512738635;0.00188679033646423;0.00113037704120664;0.000376226431598763]|9|8|0|on"
		  MaskTabNameString	  ",,,,"
		  System {
		    Name		    "c_gen"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1023"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 50 50 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "1024"
		    initVector		
		    distributed_mem	    "Block RAM"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "8"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[7 15 27 39 47 47 43 47 47 36 47 39 27 15 7 18 7 7 11 7 7 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "coef_out"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mem"
		    SrcPort		    1
		    DstBlock		    "coef_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "data_delay"
		  Ports			  [1, 1]
		  Position		  [145, 17, 200, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sum_delay"
		  Ports			  [1, 1]
		  Position		  [145, 62, 200, 88]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [145, 187, 200, 213]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [295, 23, 325, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [295, 68, 325, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "coef"
		  Position		  [295, 118, 325, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [295, 193, 325, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_gen"
		  SrcPort		  1
		  DstBlock		  "coef"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_delay"
		  SrcPort		  1
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "sum_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [25, 0]
		  Branch {
		    Points		    [0, -75]
		    DstBlock		    "c_gen"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "sync_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_delay"
		  SrcPort		  1
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  DstBlock		  "data_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_core"
	      Ports		      [4, 3]
	      Position		      [270, 29, 360, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "delay 1024 in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag92"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Core"
	      MaskDescription	      "A Finite Impluse Response Filter core with complex inputs and real coefficients.  This FIR filter core does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter core with complex inputs and real coefficients.\n\nThis Finite Impluse Response Filter core is designed to be paired with a FIR Coefficient Generator \nto form a FIR filter tap.  This FIR filter core does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (use_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	      MaskPromptString	      "Tap Delay|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	      MaskStyleString	      "edit,edit,edit,edit,edit,checkbox,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "delay=&1;n_bits_d=&2;bin_pt_d=&3;n_bits_s=&4;bin_pt_s=&5;use_bram=&6;mult_latency=&7;add_latency=&8;add_bypass=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "1024|8|7|17|15|on|3|1|off"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"fir_core"
		Location		[282, 135, 1062, 821]
		Open			on
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 223, 60, 237]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "coef"
		  Position		  [30, 183, 60, 197]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 278, 60, 292]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_d"
		  Ports			  [1, 2]
		  Position		  [120, 69, 160, 111]
		  AttributesFormatString  "8_7 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag93"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|7"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_d"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_s"
		  Ports			  [1, 2]
		  Position		  [120, 209, 160, 251]
		  AttributesFormatString  "17_15 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag94"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "17|15"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_s"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_im"
		  Ports			  [1, 1]
		  Position		  [345, 175, 390, 205]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_re"
		  Ports			  [1, 1]
		  Position		  [345, 80, 390, 110]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "dout_delay"
		  Ports			  [1, 1]
		  Position		  [255, 17, 310, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_im"
		  Ports			  [3, 1]
		  Position		  [255, 164, 305, 216]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag95"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_im"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_re"
		  Ports			  [3, 1]
		  Position		  [255, 69, 305, 121]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag96"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_re"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [455, 119, 495, 161]
		  UserDataPersistent	  on
		  UserData		  "DataTag97"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskInitialization	  "ri_to_c_init(gcb);"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [255, 272, 310, 298]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "tap_delay"
		  Ports			  [1, 1]
		  Position		  [440, 14, 500, 46]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "bram depth = 1024"
		  UserDataPersistent	  on
		  UserData		  "DataTag98"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "BRAM Delay"
		  MaskDescription	  "A delay block that uses BRAM for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses BRAM for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n\nBuffer Latency (buffer_latency): The latency of the underlying storage.\n\nBuffer Latency defaults to 1 and cannot be changed via the block's dialog box.\nFuture versions may enable the setting of that parameter from the dialog.\n</pre>"
		  MaskPromptString	  "Delay Depth|Buffer Latency"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,off"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "delay_depth=&1;buffer_latency=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "1024|"
		  MaskTabNameString	  ","
		  System {
		    Name		    "tap_delay"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Constant"
		    Ports		    [0, 1]
		    Position		    [165, 133, 180, 147]
		    ShowName		    off
		    SourceBlock		    "xbsIndex_r4/Constant"
		    SourceType		    "Xilinx Constant Block Block"
		    arith_type		    "Boolean"
		    const		    "1"
		    n_bits		    "1"
		    bin_pt		    "0"
		    explicit_period	    on
		    period		    "1"
		    dsp48_infoedit	    "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		    equ			    "P=C"
		    opselect		    "C"
		    inp2		    "PCIN>>17"
		    opr			    "+"
		    inp1		    "P"
		    carry		    "CIN"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "constant"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "15,14,1,1,white,blue,0,06094819,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 15 15 0 ],[0 0 14 14 ],[0.77 0.82 0.91]);\npatch([3 1 4 1 3 7 8 9 13 10 7 5 8 5 7 10 13 9 8 7 3 ],[2 4 7 10 12 12 11 12 12 9 12 10 7 4 2 5 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 15 15 0 0 ],[0 0 14 14 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [0, 1]
		    Position		    [130, 71, 180, 89]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1022"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    off
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,a170c862,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bram"
		    Ports		    [3, 1]
		    Position		    [230, 61, 295, 159]
		    SourceBlock		    "xbsIndex_r4/Single Port RAM"
		    SourceType		    "Xilinx Single Port Random Access Memory Block"
		    depth		    "1024"
		    initVector		    "0"
		    distributed_mem	    "Block RAM"
		    write_mode		    "Read Before Write"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "spram"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "65,98,1,1,white,blue,0,90951842,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 98 98 ],[0.77 0.82 0.91]);\npatch([15 4 19 4 15 32 37 42 60 45 31 21 36 21 31 45 60 42 37 32 15 ],[24 35 50 65 76 76 71 76 76 61 75 65 50 35 25 39 24 24 29 24 24 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 98 98 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Constant"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    3
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "bram"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [555, 23, 585, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [555, 133, 585, 147]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 278, 585, 292]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "convert_im"
		  SrcPort		  1
		  Points		  [20, 0; 0, -40]
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "convert_re"
		  SrcPort		  1
		  Points		  [20, 0; 0, 35]
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "tap_delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_im"
		  SrcPort		  1
		  DstBlock		  "convert_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_re"
		  SrcPort		  1
		  DstBlock		  "convert_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  2
		  Points		  [75, 0]
		  DstBlock		  "mult_add_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  1
		  Points		  [75, 0]
		  DstBlock		  "mult_add_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "c_to_ri_s"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "coef"
		  SrcPort		  1
		  Points		  [140, 0]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "mult_add_re"
		    DstPort		    2
		  }
		  Branch {
		    DstBlock		    "mult_add_im"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  2
		  Points		  [20, 0; 0, 75]
		  DstBlock		  "mult_add_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  1
		  DstBlock		  "mult_add_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  Points		  [35, 0]
		  Branch {
		    Points		    [0, 60]
		    DstBlock		    "c_to_ri_d"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "dout_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "dout_delay"
		  SrcPort		  1
		  DstBlock		  "tap_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "data_out"
	      Position		      [435, 23, 465, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [435, 58, 465, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [435, 93, 465, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      3
	      Points		      [25, 0; 0, 15]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      2
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      1
	      Points		      [25, 0; 0, -15]
	      DstBlock		      "data_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, -15]
	      DstBlock		      "fir_coef"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "fir_coef"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "data_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, 15]
	      DstBlock		      "fir_coef"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      4
	      DstBlock		      "fir_core"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      3
	      DstBlock		      "fir_core"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      2
	      DstBlock		      "fir_core"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      1
	      DstBlock		      "fir_core"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_tap_4"
	  Ports			  [3, 3]
	  Position		  [550, 30, 650, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "delay 1024 in bram\n1024 coefs in bram"
	  UserDataPersistent	  on
	  UserData		  "DataTag99"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Tap (Real Coefficients)"
	  MaskDescription	  "A Finite Impluse Response Filter tap with real coefficients.  This FIR filter tap does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter tap with real coefficients.\n\nThis Finite Impluse Response Filter tap is designed to be daisy chained together\nto form a multi-tap FIR filter.  This FIR filter tap does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nTap Coefficiant(s) (coef): The coefficient(s) for this tap.  For a regular FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nUsually, delay==length(coef), but this is not required.  These should be specified as doubles. \nThey will be rounded and saturated according to the specified number of bits (n_bits_c) and\nbinary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	  MaskPromptString	  "Tap Delay|Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	  MaskStyleString	  "edit,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "||||||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,,,,"
	  MaskVariables		  "delay=&1;coef=&2;n_bits_c=&3;bin_pt_c=&4;n_bits_d=&5;bin_pt_d=&6;n_bits_s=&7;bin_pt_s=&8;coef_bram=&9;delay_bram=&10;mult_latency=&11;add_latency=&12;add_bypass=&13;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "1024|[0.000376226431598763;0.00113037704120664;0.00188679033646423;0.00264546512738635;0.00340640020282435;0.00416959433045314;0.00493504625675948;0.00570275470702945;0.00647271838533626;0.00724493597452914;0.00801940613622144;0.00879612751077952;0.00957509871731131;0.0103563183536561;0.0111397849963734;0.0119254972007329;0.0127134535007037;0.0135036524089452;0.0142960924167967;0.0150907719942678;0.0158876895900297;0.0166868436314057;0.0174882325243625;0.0182918546535009;0.0190977083820486;0.019905792051851;0.0207161039833637;0.0215286424756441;0.022343405806345;0.0231603922317064;0.0239795999865484;0.0248010272842649;0.0256246723168164;0.026450533254724;0.0272786082470629;0.0281088954214566;0.0289413928840709;0.0297760987196091;0.0306130109913055;0.0314521277409214;0.0322934469887399;0.0331369667335609;0.0339826849526973;0.0348305996019707;0.035680708615707;0.0365330099067331;0.0373875013663734;0.0382441808644464;0.0391030462492619;0.0399640953476175;0.0408273259647971;0.0416927358845677;0.0425603228691775;0.0434300846593541;0.0443020189743029;0.0451761235117054;0.0460523959477181;0.0469308339369715;0.0478114351125697;0.0486941970860893;0.0495791174475793;0.0504661937655611;0.0513554235870291;0.0522468044374499;0.0531403338207642;0.0540360092193872;0.0549338280942094;0.055833787884598;0.0567358860083988;0.0576401198619378;0.0585464868200229;0.0594549842359465;0.0603656094414881;0.0612783597469165;0.062193232440993;0.0631102247909746;0.0640293340426176;0.0649505574201807;0.0658738921264291;0.066799335342639;0.0677268842286013;0.0686565359226264;0.069588287541549;0.0705221361807334;0.0714580789140785;0.0723961127940227;0.0733362348515507;0.0742784420961991;0.0752227315160621;0.0761691000777984;0.0771175447266376;0.0780680623863875;0.0790206499594406;0.0799753043267821;0.0809320223479969;0.081890800861278;0.0828516366834338;0.0838145266098974;0.0847794674147343;0.0857464558506515;0.0867154886490061;0.0876865625198155;0.0886596741517658;0.0896348202122217;0.0906119973472373;0.091591202181565;0.0925724313186671;0.0935556813407251;0.094540948808652;0.0955282302621025;0.0965175222194845;0.0975088211779706;0.0985021236135104;0.0994974259808421;0.100494724713505;0.10149401622385;0.102495296903059;0.103498563121147;0.104503811226986;0.105511037548312;0.106520238391741;0.107531410042783;0.108544548765853;0.109559650804292;0.110576712380376;0.111595729695331;0.112616698929352;0.113639616241614;0.114664477770291;0.11569127963257;0.116720017924666;0.117750688721843;0.118783288078423;0.11981781202781;0.120854256582503;0.121892617734113;0.122932891453382;0.123975073690202;0.125019160373628;0.126065147411903;0.12711303069247;0.128162806081993;0.129214469426379;0.13026801655079;0.131323443259671;0.132380745336762;0.133439918545122;0.134500958627148;0.135563861304595;0.136628622278597;0.137695237229687;0.138763701817818;0.139834011682386;0.140906162442248;0.141980149695748;0.143055969020734;0.144133615974584;0.145213086094228;0.146294374896168;0.147377477876504;0.148462390510953;0.149549108254878;0.150637626543306;0.151727940790955;0.152820046392257;0.153913938721383;0.155009613132265;0.156107064958625;0.157206289513996;0.158307282091748;0.159410037965114;0.160514552387217;0.161620820591094;0.162728837789721;0.163838599176042;0.164950099922995;0.166063335183536;0.167178300090671;0.168294989757478;0.169413399277137;0.170533523722959;0.171655358148411;0.172778897587147;0.173904137053034;0.175031071540182;0.176159696022971;0.177290005456083;0.178421994774532;0.179555658893686;0.180690992709306;0.181827991097572;0.182966648915113;0.184106960999035;0.185248922166959;0.186392527217044;0.187537770928023;0.188684648059233;0.189833153350645;0.190983281522898;0.192135027277332;0.193288385296015;0.194443350241782;0.195599916758264;0.196758079469921;0.197917832982076;0.199079171880949;0.200242090733689;0.201406584088409;0.202572646474221;0.203740272401268;0.204909456360757;0.206080192825002;0.207252476247449;0.208426301062716;0.209601661686629;0.210778552516257;0.211956967929945;0.213136902287355;0.214318349929498;0.215501305178773;0.216685762339004;0.217871715695474;0.219059159514965;0.220248088045796;0.221438495517857;0.222630376142649;0.223823724113326;0.225018533604724;0.226214798773408;0.227412513757708;0.228611672677756;0.229812269635527;0.231014298714879;0.232217753981592;0.233422629483406;0.234628919250063;0.235836617293348;0.237045717607127;0.23825621416739;0.23946810093229;0.240681371842184;0.241896020819679;0.243112041769665;0.244329428579365;0.245548175118373;0.246768275238695;0.247989722774796;0.249212511543637;0.250436635344722;0.251662087960139;0.252888863154604;0.254116954675506;0.255346356252946;0.256577061599786;0.25780906441169;0.25904235836717;0.260276937127629;0.261512794337407;0.262749923623824;0.26398831859723;0.265227972851043;0.266468879961801;0.267711033489204;0.268954426976162;0.270199053948839;0.271444907916702;0.272691982372566;0.273940270792641;0.27518976663658;0.276440463347524;0.27769235435215;0.278945433060723;0.280199692867136;0.281455127148964;0.282711729267511;0.283969492567857;0.285228410378907;0.286488476013441;0.287749682768163;0.289012023923747;0.290275492744891;0.291540082480364;0.292805786363058;0.294072597610032;0.295340509422572;0.296609514986232;0.29787960747089;0.299150780030799;0.300423025804634;0.301696337915547;0.302970709471217;0.304246133563902;0.305522603270488;0.306800111652548;0.308078651756386;0.309358216613093;0.310638799238603;0.311920392633738;0.313202989784267;0.314486583660959;0.315771167219632;0.317056733401212;0.318343275131781;0.319630785322636;0.320919256870341;0.322208682656779;0.323499055549212;0.324790368400329;0.326082614048306;0.327375785316859;0.328669875015299;0.329964875938589;0.331260780867396;0.33255758256815;0.333855273793101;0.335153847280371;0.336453295754014;0.337753611924068;0.339054788486619;0.34035681812385;0.341659693504104;0.342963407281936;0.344267952098176;0.345573320579982;0.3468795053409;0.348186498980922;0.349494294086542;0.350802883230817;0.352112258973424;0.353422413860719;0.354733340425795;0.356045031188542;0.357357478655706;0.358670675320949;0.359984613664905;0.361299286155246;0.362614685246735;0.363930803381291;0.365247632988046;0.366565166483408;0.367883396271121;0.369202314742321;0.370521914275606;0.371842187237087;0.373163125980459;0.374484722847052;0.375806970165902;0.377129860253808;0.378453385415392;0.379777537943166;0.381102310117591;0.382427694207139;0.383753682468358;0.385080267145932;0.386407440472746;0.387735194669947;0.389063521947008;0.390392414501793;0.391721864520617;0.393051864178314;0.394382405638295;0.395713481052618;0.397045082562048;0.398377202296122;0.399709832373217;0.401042964900608;0.402376591974537;0.403710705680279;0.405045298092203;0.406380361273841;0.40771588727795;0.409051868146579;0.410388295911137;0.411725162592453;0.413062460200849;0.414400180736199;0.415738316188001;0.417076858535439;0.418415799747454;0.419755131782804;0.42109484659014;0.422434936108063;0.423775392265199;0.425116206980262;0.426457372162121;0.427798879709872;0.429140721512899;0.430482889450948;0.431825375394191;0.433168171203296;0.434511268729492;0.435854659814643;0.437198336291311;0.438542289982828;0.439886512703362;0.441230996257989;0.44257573244276;0.44392071304477;0.445265929842227;0.446611374604524;0.447957039092305;0.449302915057537;0.450648994243579;0.451995268385251;0.453341729208906;0.4546883684325;0.456035177765659;0.457382148909753;0.458729273557966;0.460076543395366;0.461423950098973;0.462771485337837;0.464119140773102;0.465466908058079;0.46681477883832;0.468162744751687;0.469510797428423;0.470858928491227;0.47220712955532;0.473555392228522;0.474903708111322;0.47625206879695;0.477600465871449;0.478948890913749;0.480297335495736;0.481645791182329;0.482994249531548;0.484342702094591;0.485691140415903;0.487039556033253;0.488387940477802;0.489736285274183;0.491084581940566;0.49243282198874;0.49378099692418;0.495129098246122;0.49647711744764;0.497825046015716;0.499172875431316;0.500520597169462;0.50186820269931;0.503215683484219;0.50456303098183;0.505910236644137;0.507257291917563;0.508604188243036;0.509950917056061;0.511297469786796;0.512643837860127;0.513990012695743;0.515335985708212;0.516681748307053;0.518027291896815;0.51937260787715;0.52071768764289;0.52206252258412;0.523407104086258;0.524751423530125;0.526095472292026;0.527439241743822;0.52878272325301;0.530125908182794;0.531468787892165;0.532811353735976;0.534153597065018;0.535495509226098;0.536837081562112;0.538178305412124;0.539519172111444;0.5408596729917;0.542199799380921;0.543539542603607;0.544878893980812;0.546217844830218;0.547556386466211;0.54889451019996;0.550232207339496;0.551569469189783;0.552906287052803;0.554242652227627;0.555578556010497;0.556913989694902;0.558248944571653;0.559583411928966;0.560917383052535;0.562250849225612;0.563583801729084;0.564916231841552;0.566248130839409;0.567579489996916;0.568910300586281;0.570240553877741;0.571570241139634;0.572899353638481;0.574227882639063;0.575555819404501;0.576883155196333;0.578209881274593;0.579535988897889;0.580861469323482;0.582186313807366;0.583510513604344;0.584834059968109;0.586156944151322;0.587479157405691;0.588800690982049;0.590121536130435;0.591441684100169;0.592761126139939;0.594079853497869;0.595397857421609;0.596715129158405;0.598031659955185;0.599347441058636;0.60066246371528;0.60197671917156;0.603290198673914;0.604602893468854;0.605914794803051;0.607225893923408;0.608536182077146;0.609845650511876;0.611154290475686;0.612462093217214;0.613769049985734;0.61507515203123;0.616380390604481;0.617684756957135;0.618988242341793;0.620290838012088;0.621592535222764;0.622893325229755;0.624193199290268;0.62549214866286;0.626790164607517;0.628087238385739;0.629383361260614;0.630678524496902;0.631972719361113;0.633265937121587;0.634558169048576;0.635849406414322;0.637139640493137;0.638428862561485;0.63971706389806;0.641004235783867;0.642290369502301;0.643575456339231;0.644859487583075;0.646142454524881;0.647424348458412;0.64870516068022;0.64998488248973;0.651263505189319;0.652541020084396;0.65381741848348;0.655092691698287;0.656366831043801;0.657639827838363;0.658911673403742;0.660182359065225;0.66145187615169;0.662720215995689;0.663987369933525;0.66525332930534;0.666518085455186;0.667781629731109;0.669043953485231;0.670305048073829;0.671564904857411;0.672823515200804;0.674080870473226;0.675336962048371;0.676591781304489;0.677845319624464;0.679097568395895;0.680348519011176;0.681598162867577;0.682846491367321;0.684093495917668;0.685339167930993;0.686583498824865;0.687826480022128;0.689068102950982;0.69030835904506;0.691547239743511;0.692784736491078;0.694020840738178;0.695255543940982;0.696488837561496;0.697720713067638;0.69895116193332;0.700180175638527;0.701407745669397;0.702633863518298;0.703858520683914;0.705081708671316;0.706303418992049;0.707523643164207;0.708742372712514;0.709959599168404;0.711175314070098;0.712389508962686;0.713602175398207;0.714813304935724;0.716022889141407;0.717230919588611;0.718437387857955;0.7196422855374;0.720845604222332;0.722047335515636;0.723247471027779;0.724446002376885;0.725642921188819;0.72683821909726;0.728031887743784;0.729223918777942;0.730414303857337;0.731603034647704;0.732790102822989;0.733975500065425;0.735159218065615;0.736341248522604;0.737521583143965;0.73870021364587;0.739877131753174;0.741052329199488;0.742225797727262;0.743397529087861;0.744567515041641;0.74573574735803;0.746902217815605;0.748066918202168;0.749229840314828;0.750390975960072;0.751550316953849;0.752707855121646;0.753863582298562;0.755017490329388;0.756169571068687;0.757319816380865;0.758468218140255;0.759614768231187;0.760759458548073;0.761902280995477;0.763043227488195;0.764182289951332;0.765319460320378;0.766454730541287;0.767588092570547;0.768719538375264;0.769849059933236;0.770976649233028;0.772102298274047;0.773225999066623;0.774347743632081;0.775467524002819;0.776585332222382;0.777701160345539;0.77881500043836;0.779926844578291;0.781036684854226;0.782144513366589;0.783250322227402;0.784354103560369;0.785455849500942;0.786555552196404;0.787653203805936;0.788748796500701;0.789842322463913;0.790933773890911;0.792023142989237;0.793110421978709;0.794195603091497;0.795278678572193;0.796359640677891;0.797438481678257;0.798515193855602;0.799589769504963;0.800662200934169;0.801732480463917;0.802800600427848;0.80386655317262;0.804930331057977;0.805991926456828;0.807051331755317;0.808108539352896;0.8091635416624;0.810216331110119;0.811266900135868;0.812315241193064;0.813361346748796;0.814405209283897;0.815446821293019;0.8164861752847;0.817523263781442;0.81855807931978;0.819590614450354;0.820620861737978;0.821648813761719;0.822674463114959;0.823697802405475;0.824718824255502;0.825737521301814;0.826753886195782;0.827767911603459;0.828779590205639;0.829788914697934;0.830795877790843;0.831800472209821;0.832802690695352;0.833802526003016;0.834799970903559;0.835795018182967;0.836787660642529;0.837777891098914;0.838765702384234;0.839751087346116;0.840734038847771;0.841714549768064;0.84269261300158;0.843668221458696;0.844641368065647;0.845612045764594;0.846580247513697;0.847545966287178;0.84850919507539;0.849469926884886;0.850428154738489;0.851383871675352;0.852337070751035;0.853287745037565;0.854235887623507;0.855181491614029;0.85612455013097;0.857065056312905;0.858003003315215;0.85893838431015;0.859871192486895;0.86080142105164;0.861729063227642;0.862654112255293;0.863576561392183;0.864496403913169;0.865413633110439;0.866328242293574;0.867240224789617;0.86814957394314;0.869056283116299;0.869960345688909;0.870861755058503;0.871760504640396;0.872656587867754;0.873549998191649;0.874440729081133;0.875328774023292;0.876214126523317;0.877096780104561;0.877976728308609;0.878853964695334;0.879728482842962;0.880600276348139;0.881469338825985;0.882335663910164;0.883199245252942;0.884060076525249;0.884918151416742;0.885773463635865;0.886626006909912;0.887475774985088;0.888322761626568;0.88916696061856;0.890008365764364;0.890846970886435;0.89168276982644;0.892515756445321;0.893345924623353;0.894173268260203;0.894997781274994;0.895819457606359;0.896638291212503;0.897454276071263;0.898267406180164;0.899077675556479;0.899885078237288;0.900689608279537;0.901491259760094;0.902290026775807;0.903085903443565;0.90387888390035;0.9046689623033;0.905456132829764;0.906240389677357;0.907021727064019;0.907800139228072;0.908575620428275;0.90934816494388;0.91011776707469;0.910884421141112;0.911648121484216;0.912408862465787;0.913166638468382;0.913921443895387;0.914673273171068;0.915422120740627;0.916167981070258;0.9169108486472;0.91765071797979;0.918387583597519;0.919121440051086;0.919852281912448;0.920580103774877;0.92130490025301;0.922026665982904;0.922745395622088;0.923461083849616;0.924173725366119;0.924883314893854;0.925589847176761;0.926293316980511;0.92699371909256;0.927691048322198;0.928385299500598;0.929076467480875;0.929764547138127;0.930449533369489;0.931131421094187;0.931810205253583;0.932485880811225;0.933158442752899;0.933827886086677;0.934494205842967;0.935157397074559;0.935817454856679;0.936474374287031;0.937128150485851;0.937778778595951;0.938426253782768;0.939070571234412;0.939711726161716;0.940349713798277;0.940984529400506;0.941616168247679;0.942244625641977;0.942869896908532;0.943491977395482;0.944110862474005;0.944726547538374;0.945339028005997;0.945948299317464;0.946554356936591;0.947157196350468;0.947756813069498;0.948353202627446;0.948946360581481;0.949536282512219;0.950122964023769;0.950706400743774;0.951286588323455;0.951863522437655;0.952437198784881;0.953007613087343;0.953574761091004;0.954138638565613;0.954699241304754;0.955256565125884;0.955810605870372;0.956361359403548;0.956908821614734;0.957452988417292;0.95799385574866;0.958531419570396;0.959065675868214;0.959596620652025;0.960124249955978;0.960648559838497;0.961169546382321;0.961687205694544;0.962201533906649;0.962712527174551;0.963220181678634;0.963724493623787;0.964225459239442;0.964723074779614;0.965217336522932;0.965708240772684;0.966195783856846;0.966679962128122;0.967160771963981;0.967638209766689;0.96811227196335;0.968582955005935;0.969050255371323;0.969514169561332;0.969974694102756;0.970431825547395;0.970885560472097;0.971335895478783;0.971782827194488;0.972226352271389;0.972666467386842;0.973103169243412;0.973536454568909;0.973966320116415;0.974392762664321;0.97481577901636;0.975235366001631;0.975651520474639;0.976064239315321;0.97647351942908;0.976879357746813;0.977281751224942;0.977680696845445;0.978076191615887;0.978468232569446;0.978856816764947;0.979241941286885;0.979623603245462;0.98000179977661;0.980376528042017;0.980747785229165;0.981115568551347;0.9814798752477;0.981840702583234;0.982198047848854;0.982551908361392;0.98290228146363;0.983249164524326;0.983592554938246;0.98393245012618;0.984268847534979;0.984601744637569;0.984931138932984;0.98525702794639;0.985579409229105;0.985898280358627;0.986213638938657;0.986525482599124;0.986833808996206;0.987138615812356;0.987439900756322;0.987737661563173;0.98803189599432;0.988322601837537;0.988609776906985;0.988893419043231;0.989173526113274;0.989450096010561;0.989723126655011;0.989992615993036;0.990258561997559;0.990520962668036;0.990779816030475;0.991035120137455;0.991286873068149;0.991535072928337;0.991779717850431;0.992020805993488;0.992258335543232;0.992492304712073;0.99272271173912;0.992949554890201;0.993172832457882;0.993392542761483;0.993608684147091;0.993821254987582;0.994030253682635;0.994235678658745;0.994437528369243;0.99463580129431;0.994830495940991;0.995021610843209;0.995209144561783;0.99539309568444;0.995573462825828;0.995750244627533;0.99592343975809;0.996093046912996;0.996259064814724;0.996421492212737;0.996580327883498;0.996735570630482;0.99688721928419;0.997035272702159;0.997179729768976;0.997320589396285;0.997457850522799;0.997591512114315;0.997721573163716;0.99784803269099;0.997970889743233;0.998090143394661;0.998205792746621;0.998317836927595;0.998426275093213;0.998531106426262;0.99863233013669;0.998729945461616;0.998823951665339;0.998914348039344;0.999001133902306;0.999084308600105;0.999163871505822;0.999239822019754;0.999312159569415;0.999380883609544;0.999445993622108;0.999507489116311;0.999565369628596;0.999619634722648;0.999670283989403;0.999717317047049;0.99976073354103;0.999800533144051;0.999836715556079;0.999869280504348;0.99989822774336;0.999923557054889;0.999945268247983;0.999963361158965;0.999977835651433;0.999988691616268;0.999995928971626;0.999999547662946]|9|8|8|7|17|15|on|on|3|1|off"
	  MaskTabNameString	  ",,,,,,,,,,,,"
	  System {
	    Name		    "fir_tap_4"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_in"
	      Position		      [30, 23, 60, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 58, 60, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 93, 60, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_coef"
	      Ports		      [3, 4]
	      Position		      [115, 29, 205, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "1024 coefs in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag100"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Coefficient Generator"
	      MaskDescription	      "A Finite Impluse Response filter coefficient generator.  This FIR filter coefficient generator outputs real coefficients.  It can output one coefficient or cycle through a vector of coefficients for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response filter coefficient generator.\nThis FIR filter coefficient generator outputs real coefficients.\nIt can output one coefficient or cycle through a vector of coefficients for WOLA\n(Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Coefficiant(s) (coef): The coefficient(s) to output.  For a \"regular\" FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nThese should be specified as doubles.   They will be rounded and saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nUse BRAM for Coefficients (use_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n</pre>"
	      MaskPromptString	      "Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Use BRAM for Coefficients"
	      MaskStyleString	      "edit,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "coef=&1;n_bits_c=&2;bin_pt_c=&3;use_bram=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "[0.000376226431598763;0.00113037704120664;0.00188679033646423;0.00264546512738635;0.00340640020282435;0.00416959433045314;0.00493504625675948;0.00570275470702945;0.00647271838533626;0.00724493597452914;0.00801940613622144;0.00879612751077952;0.00957509871731131;0.0103563183536561;0.0111397849963734;0.0119254972007329;0.0127134535007037;0.0135036524089452;0.0142960924167967;0.0150907719942678;0.0158876895900297;0.0166868436314057;0.0174882325243625;0.0182918546535009;0.0190977083820486;0.019905792051851;0.0207161039833637;0.0215286424756441;0.022343405806345;0.0231603922317064;0.0239795999865484;0.0248010272842649;0.0256246723168164;0.026450533254724;0.0272786082470629;0.0281088954214566;0.0289413928840709;0.0297760987196091;0.0306130109913055;0.0314521277409214;0.0322934469887399;0.0331369667335609;0.0339826849526973;0.0348305996019707;0.035680708615707;0.0365330099067331;0.0373875013663734;0.0382441808644464;0.0391030462492619;0.0399640953476175;0.0408273259647971;0.0416927358845677;0.0425603228691775;0.0434300846593541;0.0443020189743029;0.0451761235117054;0.0460523959477181;0.0469308339369715;0.0478114351125697;0.0486941970860893;0.0495791174475793;0.0504661937655611;0.0513554235870291;0.0522468044374499;0.0531403338207642;0.0540360092193872;0.0549338280942094;0.055833787884598;0.0567358860083988;0.0576401198619378;0.0585464868200229;0.0594549842359465;0.0603656094414881;0.0612783597469165;0.062193232440993;0.0631102247909746;0.0640293340426176;0.0649505574201807;0.0658738921264291;0.066799335342639;0.0677268842286013;0.0686565359226264;0.069588287541549;0.0705221361807334;0.0714580789140785;0.0723961127940227;0.0733362348515507;0.0742784420961991;0.0752227315160621;0.0761691000777984;0.0771175447266376;0.0780680623863875;0.0790206499594406;0.0799753043267821;0.0809320223479969;0.081890800861278;0.0828516366834338;0.0838145266098974;0.0847794674147343;0.0857464558506515;0.0867154886490061;0.0876865625198155;0.0886596741517658;0.0896348202122217;0.0906119973472373;0.091591202181565;0.0925724313186671;0.0935556813407251;0.094540948808652;0.0955282302621025;0.0965175222194845;0.0975088211779706;0.0985021236135104;0.0994974259808421;0.100494724713505;0.10149401622385;0.102495296903059;0.103498563121147;0.104503811226986;0.105511037548312;0.106520238391741;0.107531410042783;0.108544548765853;0.109559650804292;0.110576712380376;0.111595729695331;0.112616698929352;0.113639616241614;0.114664477770291;0.11569127963257;0.116720017924666;0.117750688721843;0.118783288078423;0.11981781202781;0.120854256582503;0.121892617734113;0.122932891453382;0.123975073690202;0.125019160373628;0.126065147411903;0.12711303069247;0.128162806081993;0.129214469426379;0.13026801655079;0.131323443259671;0.132380745336762;0.133439918545122;0.134500958627148;0.135563861304595;0.136628622278597;0.137695237229687;0.138763701817818;0.139834011682386;0.140906162442248;0.141980149695748;0.143055969020734;0.144133615974584;0.145213086094228;0.146294374896168;0.147377477876504;0.148462390510953;0.149549108254878;0.150637626543306;0.151727940790955;0.152820046392257;0.153913938721383;0.155009613132265;0.156107064958625;0.157206289513996;0.158307282091748;0.159410037965114;0.160514552387217;0.161620820591094;0.162728837789721;0.163838599176042;0.164950099922995;0.166063335183536;0.167178300090671;0.168294989757478;0.169413399277137;0.170533523722959;0.171655358148411;0.172778897587147;0.173904137053034;0.175031071540182;0.176159696022971;0.177290005456083;0.178421994774532;0.179555658893686;0.180690992709306;0.181827991097572;0.182966648915113;0.184106960999035;0.185248922166959;0.186392527217044;0.187537770928023;0.188684648059233;0.189833153350645;0.190983281522898;0.192135027277332;0.193288385296015;0.194443350241782;0.195599916758264;0.196758079469921;0.197917832982076;0.199079171880949;0.200242090733689;0.201406584088409;0.202572646474221;0.203740272401268;0.204909456360757;0.206080192825002;0.207252476247449;0.208426301062716;0.209601661686629;0.210778552516257;0.211956967929945;0.213136902287355;0.214318349929498;0.215501305178773;0.216685762339004;0.217871715695474;0.219059159514965;0.220248088045796;0.221438495517857;0.222630376142649;0.223823724113326;0.225018533604724;0.226214798773408;0.227412513757708;0.228611672677756;0.229812269635527;0.231014298714879;0.232217753981592;0.233422629483406;0.234628919250063;0.235836617293348;0.237045717607127;0.23825621416739;0.23946810093229;0.240681371842184;0.241896020819679;0.243112041769665;0.244329428579365;0.245548175118373;0.246768275238695;0.247989722774796;0.249212511543637;0.250436635344722;0.251662087960139;0.252888863154604;0.254116954675506;0.255346356252946;0.256577061599786;0.25780906441169;0.25904235836717;0.260276937127629;0.261512794337407;0.262749923623824;0.26398831859723;0.265227972851043;0.266468879961801;0.267711033489204;0.268954426976162;0.270199053948839;0.271444907916702;0.272691982372566;0.273940270792641;0.27518976663658;0.276440463347524;0.27769235435215;0.278945433060723;0.280199692867136;0.281455127148964;0.282711729267511;0.283969492567857;0.285228410378907;0.286488476013441;0.287749682768163;0.289012023923747;0.290275492744891;0.291540082480364;0.292805786363058;0.294072597610032;0.295340509422572;0.296609514986232;0.29787960747089;0.299150780030799;0.300423025804634;0.301696337915547;0.302970709471217;0.304246133563902;0.305522603270488;0.306800111652548;0.308078651756386;0.309358216613093;0.310638799238603;0.311920392633738;0.313202989784267;0.314486583660959;0.315771167219632;0.317056733401212;0.318343275131781;0.319630785322636;0.320919256870341;0.322208682656779;0.323499055549212;0.324790368400329;0.326082614048306;0.327375785316859;0.328669875015299;0.329964875938589;0.331260780867396;0.33255758256815;0.333855273793101;0.335153847280371;0.336453295754014;0.337753611924068;0.339054788486619;0.34035681812385;0.341659693504104;0.342963407281936;0.344267952098176;0.345573320579982;0.3468795053409;0.348186498980922;0.349494294086542;0.350802883230817;0.352112258973424;0.353422413860719;0.354733340425795;0.356045031188542;0.357357478655706;0.358670675320949;0.359984613664905;0.361299286155246;0.362614685246735;0.363930803381291;0.365247632988046;0.366565166483408;0.367883396271121;0.369202314742321;0.370521914275606;0.371842187237087;0.373163125980459;0.374484722847052;0.375806970165902;0.377129860253808;0.378453385415392;0.379777537943166;0.381102310117591;0.382427694207139;0.383753682468358;0.385080267145932;0.386407440472746;0.387735194669947;0.389063521947008;0.390392414501793;0.391721864520617;0.393051864178314;0.394382405638295;0.395713481052618;0.397045082562048;0.398377202296122;0.399709832373217;0.401042964900608;0.402376591974537;0.403710705680279;0.405045298092203;0.406380361273841;0.40771588727795;0.409051868146579;0.410388295911137;0.411725162592453;0.413062460200849;0.414400180736199;0.415738316188001;0.417076858535439;0.418415799747454;0.419755131782804;0.42109484659014;0.422434936108063;0.423775392265199;0.425116206980262;0.426457372162121;0.427798879709872;0.429140721512899;0.430482889450948;0.431825375394191;0.433168171203296;0.434511268729492;0.435854659814643;0.437198336291311;0.438542289982828;0.439886512703362;0.441230996257989;0.44257573244276;0.44392071304477;0.445265929842227;0.446611374604524;0.447957039092305;0.449302915057537;0.450648994243579;0.451995268385251;0.453341729208906;0.4546883684325;0.456035177765659;0.457382148909753;0.458729273557966;0.460076543395366;0.461423950098973;0.462771485337837;0.464119140773102;0.465466908058079;0.46681477883832;0.468162744751687;0.469510797428423;0.470858928491227;0.47220712955532;0.473555392228522;0.474903708111322;0.47625206879695;0.477600465871449;0.478948890913749;0.480297335495736;0.481645791182329;0.482994249531548;0.484342702094591;0.485691140415903;0.487039556033253;0.488387940477802;0.489736285274183;0.491084581940566;0.49243282198874;0.49378099692418;0.495129098246122;0.49647711744764;0.497825046015716;0.499172875431316;0.500520597169462;0.50186820269931;0.503215683484219;0.50456303098183;0.505910236644137;0.507257291917563;0.508604188243036;0.509950917056061;0.511297469786796;0.512643837860127;0.513990012695743;0.515335985708212;0.516681748307053;0.518027291896815;0.51937260787715;0.52071768764289;0.52206252258412;0.523407104086258;0.524751423530125;0.526095472292026;0.527439241743822;0.52878272325301;0.530125908182794;0.531468787892165;0.532811353735976;0.534153597065018;0.535495509226098;0.536837081562112;0.538178305412124;0.539519172111444;0.5408596729917;0.542199799380921;0.543539542603607;0.544878893980812;0.546217844830218;0.547556386466211;0.54889451019996;0.550232207339496;0.551569469189783;0.552906287052803;0.554242652227627;0.555578556010497;0.556913989694902;0.558248944571653;0.559583411928966;0.560917383052535;0.562250849225612;0.563583801729084;0.564916231841552;0.566248130839409;0.567579489996916;0.568910300586281;0.570240553877741;0.571570241139634;0.572899353638481;0.574227882639063;0.575555819404501;0.576883155196333;0.578209881274593;0.579535988897889;0.580861469323482;0.582186313807366;0.583510513604344;0.584834059968109;0.586156944151322;0.587479157405691;0.588800690982049;0.590121536130435;0.591441684100169;0.592761126139939;0.594079853497869;0.595397857421609;0.596715129158405;0.598031659955185;0.599347441058636;0.60066246371528;0.60197671917156;0.603290198673914;0.604602893468854;0.605914794803051;0.607225893923408;0.608536182077146;0.609845650511876;0.611154290475686;0.612462093217214;0.613769049985734;0.61507515203123;0.616380390604481;0.617684756957135;0.618988242341793;0.620290838012088;0.621592535222764;0.622893325229755;0.624193199290268;0.62549214866286;0.626790164607517;0.628087238385739;0.629383361260614;0.630678524496902;0.631972719361113;0.633265937121587;0.634558169048576;0.635849406414322;0.637139640493137;0.638428862561485;0.63971706389806;0.641004235783867;0.642290369502301;0.643575456339231;0.644859487583075;0.646142454524881;0.647424348458412;0.64870516068022;0.64998488248973;0.651263505189319;0.652541020084396;0.65381741848348;0.655092691698287;0.656366831043801;0.657639827838363;0.658911673403742;0.660182359065225;0.66145187615169;0.662720215995689;0.663987369933525;0.66525332930534;0.666518085455186;0.667781629731109;0.669043953485231;0.670305048073829;0.671564904857411;0.672823515200804;0.674080870473226;0.675336962048371;0.676591781304489;0.677845319624464;0.679097568395895;0.680348519011176;0.681598162867577;0.682846491367321;0.684093495917668;0.685339167930993;0.686583498824865;0.687826480022128;0.689068102950982;0.69030835904506;0.691547239743511;0.692784736491078;0.694020840738178;0.695255543940982;0.696488837561496;0.697720713067638;0.69895116193332;0.700180175638527;0.701407745669397;0.702633863518298;0.703858520683914;0.705081708671316;0.706303418992049;0.707523643164207;0.708742372712514;0.709959599168404;0.711175314070098;0.712389508962686;0.713602175398207;0.714813304935724;0.716022889141407;0.717230919588611;0.718437387857955;0.7196422855374;0.720845604222332;0.722047335515636;0.723247471027779;0.724446002376885;0.725642921188819;0.72683821909726;0.728031887743784;0.729223918777942;0.730414303857337;0.731603034647704;0.732790102822989;0.733975500065425;0.735159218065615;0.736341248522604;0.737521583143965;0.73870021364587;0.739877131753174;0.741052329199488;0.742225797727262;0.743397529087861;0.744567515041641;0.74573574735803;0.746902217815605;0.748066918202168;0.749229840314828;0.750390975960072;0.751550316953849;0.752707855121646;0.753863582298562;0.755017490329388;0.756169571068687;0.757319816380865;0.758468218140255;0.759614768231187;0.760759458548073;0.761902280995477;0.763043227488195;0.764182289951332;0.765319460320378;0.766454730541287;0.767588092570547;0.768719538375264;0.769849059933236;0.770976649233028;0.772102298274047;0.773225999066623;0.774347743632081;0.775467524002819;0.776585332222382;0.777701160345539;0.77881500043836;0.779926844578291;0.781036684854226;0.782144513366589;0.783250322227402;0.784354103560369;0.785455849500942;0.786555552196404;0.787653203805936;0.788748796500701;0.789842322463913;0.790933773890911;0.792023142989237;0.793110421978709;0.794195603091497;0.795278678572193;0.796359640677891;0.797438481678257;0.798515193855602;0.799589769504963;0.800662200934169;0.801732480463917;0.802800600427848;0.80386655317262;0.804930331057977;0.805991926456828;0.807051331755317;0.808108539352896;0.8091635416624;0.810216331110119;0.811266900135868;0.812315241193064;0.813361346748796;0.814405209283897;0.815446821293019;0.8164861752847;0.817523263781442;0.81855807931978;0.819590614450354;0.820620861737978;0.821648813761719;0.822674463114959;0.823697802405475;0.824718824255502;0.825737521301814;0.826753886195782;0.827767911603459;0.828779590205639;0.829788914697934;0.830795877790843;0.831800472209821;0.832802690695352;0.833802526003016;0.834799970903559;0.835795018182967;0.836787660642529;0.837777891098914;0.838765702384234;0.839751087346116;0.840734038847771;0.841714549768064;0.84269261300158;0.843668221458696;0.844641368065647;0.845612045764594;0.846580247513697;0.847545966287178;0.84850919507539;0.849469926884886;0.850428154738489;0.851383871675352;0.852337070751035;0.853287745037565;0.854235887623507;0.855181491614029;0.85612455013097;0.857065056312905;0.858003003315215;0.85893838431015;0.859871192486895;0.86080142105164;0.861729063227642;0.862654112255293;0.863576561392183;0.864496403913169;0.865413633110439;0.866328242293574;0.867240224789617;0.86814957394314;0.869056283116299;0.869960345688909;0.870861755058503;0.871760504640396;0.872656587867754;0.873549998191649;0.874440729081133;0.875328774023292;0.876214126523317;0.877096780104561;0.877976728308609;0.878853964695334;0.879728482842962;0.880600276348139;0.881469338825985;0.882335663910164;0.883199245252942;0.884060076525249;0.884918151416742;0.885773463635865;0.886626006909912;0.887475774985088;0.888322761626568;0.88916696061856;0.890008365764364;0.890846970886435;0.89168276982644;0.892515756445321;0.893345924623353;0.894173268260203;0.894997781274994;0.895819457606359;0.896638291212503;0.897454276071263;0.898267406180164;0.899077675556479;0.899885078237288;0.900689608279537;0.901491259760094;0.902290026775807;0.903085903443565;0.90387888390035;0.9046689623033;0.905456132829764;0.906240389677357;0.907021727064019;0.907800139228072;0.908575620428275;0.90934816494388;0.91011776707469;0.910884421141112;0.911648121484216;0.912408862465787;0.913166638468382;0.913921443895387;0.914673273171068;0.915422120740627;0.916167981070258;0.9169108486472;0.91765071797979;0.918387583597519;0.919121440051086;0.919852281912448;0.920580103774877;0.92130490025301;0.922026665982904;0.922745395622088;0.923461083849616;0.924173725366119;0.924883314893854;0.925589847176761;0.926293316980511;0.92699371909256;0.927691048322198;0.928385299500598;0.929076467480875;0.929764547138127;0.930449533369489;0.931131421094187;0.931810205253583;0.932485880811225;0.933158442752899;0.933827886086677;0.934494205842967;0.935157397074559;0.935817454856679;0.936474374287031;0.937128150485851;0.937778778595951;0.938426253782768;0.939070571234412;0.939711726161716;0.940349713798277;0.940984529400506;0.941616168247679;0.942244625641977;0.942869896908532;0.943491977395482;0.944110862474005;0.944726547538374;0.945339028005997;0.945948299317464;0.946554356936591;0.947157196350468;0.947756813069498;0.948353202627446;0.948946360581481;0.949536282512219;0.950122964023769;0.950706400743774;0.951286588323455;0.951863522437655;0.952437198784881;0.953007613087343;0.953574761091004;0.954138638565613;0.954699241304754;0.955256565125884;0.955810605870372;0.956361359403548;0.956908821614734;0.957452988417292;0.95799385574866;0.958531419570396;0.959065675868214;0.959596620652025;0.960124249955978;0.960648559838497;0.961169546382321;0.961687205694544;0.962201533906649;0.962712527174551;0.963220181678634;0.963724493623787;0.964225459239442;0.964723074779614;0.965217336522932;0.965708240772684;0.966195783856846;0.966679962128122;0.967160771963981;0.967638209766689;0.96811227196335;0.968582955005935;0.969050255371323;0.969514169561332;0.969974694102756;0.970431825547395;0.970885560472097;0.971335895478783;0.971782827194488;0.972226352271389;0.972666467386842;0.973103169243412;0.973536454568909;0.973966320116415;0.974392762664321;0.97481577901636;0.975235366001631;0.975651520474639;0.976064239315321;0.97647351942908;0.976879357746813;0.977281751224942;0.977680696845445;0.978076191615887;0.978468232569446;0.978856816764947;0.979241941286885;0.979623603245462;0.98000179977661;0.980376528042017;0.980747785229165;0.981115568551347;0.9814798752477;0.981840702583234;0.982198047848854;0.982551908361392;0.98290228146363;0.983249164524326;0.983592554938246;0.98393245012618;0.984268847534979;0.984601744637569;0.984931138932984;0.98525702794639;0.985579409229105;0.985898280358627;0.986213638938657;0.986525482599124;0.986833808996206;0.987138615812356;0.987439900756322;0.987737661563173;0.98803189599432;0.988322601837537;0.988609776906985;0.988893419043231;0.989173526113274;0.989450096010561;0.989723126655011;0.989992615993036;0.990258561997559;0.990520962668036;0.990779816030475;0.991035120137455;0.991286873068149;0.991535072928337;0.991779717850431;0.992020805993488;0.992258335543232;0.992492304712073;0.99272271173912;0.992949554890201;0.993172832457882;0.993392542761483;0.993608684147091;0.993821254987582;0.994030253682635;0.994235678658745;0.994437528369243;0.99463580129431;0.994830495940991;0.995021610843209;0.995209144561783;0.99539309568444;0.995573462825828;0.995750244627533;0.99592343975809;0.996093046912996;0.996259064814724;0.996421492212737;0.996580327883498;0.996735570630482;0.99688721928419;0.997035272702159;0.997179729768976;0.997320589396285;0.997457850522799;0.997591512114315;0.997721573163716;0.99784803269099;0.997970889743233;0.998090143394661;0.998205792746621;0.998317836927595;0.998426275093213;0.998531106426262;0.99863233013669;0.998729945461616;0.998823951665339;0.998914348039344;0.999001133902306;0.999084308600105;0.999163871505822;0.999239822019754;0.999312159569415;0.999380883609544;0.999445993622108;0.999507489116311;0.999565369628596;0.999619634722648;0.999670283989403;0.999717317047049;0.99976073354103;0.999800533144051;0.999836715556079;0.999869280504348;0.99989822774336;0.999923557054889;0.999945268247983;0.999963361158965;0.999977835651433;0.999988691616268;0.999995928971626;0.999999547662946]|9|8|on"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"fir_coef"
		Location		[609, 271, 1389, 957]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 68, 60, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 193, 60, 207]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_gen"
		  Ports			  [1, 1]
		  Position		  [130, 109, 220, 141]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "1024 coefs in bram\n9_8 out/1"
		  UserDataPersistent	  on
		  UserData		  "DataTag101"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Coefficient Generator"
		  MaskDescription	  "A coefficient generator."
		  MaskHelp		  "<pre>\nDescription::\n\nA coefficient generator.\n\nMask Parameters::\n\nCoefficiants (coefs): The coefficients to output.  These should be specified as doubles.\nThey will be rounded/saturated according to the specified number of bits (n_bits)\nand binary point (bin_pt).\n\nNumber of Coefficient Bits (n_bits): The number of bits used for the fixed point binary\nrepresentation of the coefficients.\n\nCoefficient Binary Point (bin_pt): The binary point of the fixed point binary representation\nof the coefficients.\n\nLog2 Cycles per Coefficient (log2_cpc): The log2 value of the number of cycles per coefficient.\nMust be a non-negative integer (i.e. cycles per coefficient must be a power of 2).  \n\nUse BRAM (use_bram): Check this checkbox to store coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Coefficients|Number of Bits|Binary Point|Log2 Cycles per Coefficient|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off"
		  MaskCallbackString	  "||||"
		  MaskEnableString	  "off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on"
		  MaskVarAliasString	  ",,,,"
		  MaskVariables		  "coefs=&1;n_bits=&2;bin_pt=&3;log2_cpc=&4;use_bram=&5;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "[0.000376226431598763;0.00113037704120664;0.00188679033646423;0.00264546512738635;0.00340640020282435;0.00416959433045314;0.00493504625675948;0.00570275470702945;0.00647271838533626;0.00724493597452914;0.00801940613622144;0.00879612751077952;0.00957509871731131;0.0103563183536561;0.0111397849963734;0.0119254972007329;0.0127134535007037;0.0135036524089452;0.0142960924167967;0.0150907719942678;0.0158876895900297;0.0166868436314057;0.0174882325243625;0.0182918546535009;0.0190977083820486;0.019905792051851;0.0207161039833637;0.0215286424756441;0.022343405806345;0.0231603922317064;0.0239795999865484;0.0248010272842649;0.0256246723168164;0.026450533254724;0.0272786082470629;0.0281088954214566;0.0289413928840709;0.0297760987196091;0.0306130109913055;0.0314521277409214;0.0322934469887399;0.0331369667335609;0.0339826849526973;0.0348305996019707;0.035680708615707;0.0365330099067331;0.0373875013663734;0.0382441808644464;0.0391030462492619;0.0399640953476175;0.0408273259647971;0.0416927358845677;0.0425603228691775;0.0434300846593541;0.0443020189743029;0.0451761235117054;0.0460523959477181;0.0469308339369715;0.0478114351125697;0.0486941970860893;0.0495791174475793;0.0504661937655611;0.0513554235870291;0.0522468044374499;0.0531403338207642;0.0540360092193872;0.0549338280942094;0.055833787884598;0.0567358860083988;0.0576401198619378;0.0585464868200229;0.0594549842359465;0.0603656094414881;0.0612783597469165;0.062193232440993;0.0631102247909746;0.0640293340426176;0.0649505574201807;0.0658738921264291;0.066799335342639;0.0677268842286013;0.0686565359226264;0.069588287541549;0.0705221361807334;0.0714580789140785;0.0723961127940227;0.0733362348515507;0.0742784420961991;0.0752227315160621;0.0761691000777984;0.0771175447266376;0.0780680623863875;0.0790206499594406;0.0799753043267821;0.0809320223479969;0.081890800861278;0.0828516366834338;0.0838145266098974;0.0847794674147343;0.0857464558506515;0.0867154886490061;0.0876865625198155;0.0886596741517658;0.0896348202122217;0.0906119973472373;0.091591202181565;0.0925724313186671;0.0935556813407251;0.094540948808652;0.0955282302621025;0.0965175222194845;0.0975088211779706;0.0985021236135104;0.0994974259808421;0.100494724713505;0.10149401622385;0.102495296903059;0.103498563121147;0.104503811226986;0.105511037548312;0.106520238391741;0.107531410042783;0.108544548765853;0.109559650804292;0.110576712380376;0.111595729695331;0.112616698929352;0.113639616241614;0.114664477770291;0.11569127963257;0.116720017924666;0.117750688721843;0.118783288078423;0.11981781202781;0.120854256582503;0.121892617734113;0.122932891453382;0.123975073690202;0.125019160373628;0.126065147411903;0.12711303069247;0.128162806081993;0.129214469426379;0.13026801655079;0.131323443259671;0.132380745336762;0.133439918545122;0.134500958627148;0.135563861304595;0.136628622278597;0.137695237229687;0.138763701817818;0.139834011682386;0.140906162442248;0.141980149695748;0.143055969020734;0.144133615974584;0.145213086094228;0.146294374896168;0.147377477876504;0.148462390510953;0.149549108254878;0.150637626543306;0.151727940790955;0.152820046392257;0.153913938721383;0.155009613132265;0.156107064958625;0.157206289513996;0.158307282091748;0.159410037965114;0.160514552387217;0.161620820591094;0.162728837789721;0.163838599176042;0.164950099922995;0.166063335183536;0.167178300090671;0.168294989757478;0.169413399277137;0.170533523722959;0.171655358148411;0.172778897587147;0.173904137053034;0.175031071540182;0.176159696022971;0.177290005456083;0.178421994774532;0.179555658893686;0.180690992709306;0.181827991097572;0.182966648915113;0.184106960999035;0.185248922166959;0.186392527217044;0.187537770928023;0.188684648059233;0.189833153350645;0.190983281522898;0.192135027277332;0.193288385296015;0.194443350241782;0.195599916758264;0.196758079469921;0.197917832982076;0.199079171880949;0.200242090733689;0.201406584088409;0.202572646474221;0.203740272401268;0.204909456360757;0.206080192825002;0.207252476247449;0.208426301062716;0.209601661686629;0.210778552516257;0.211956967929945;0.213136902287355;0.214318349929498;0.215501305178773;0.216685762339004;0.217871715695474;0.219059159514965;0.220248088045796;0.221438495517857;0.222630376142649;0.223823724113326;0.225018533604724;0.226214798773408;0.227412513757708;0.228611672677756;0.229812269635527;0.231014298714879;0.232217753981592;0.233422629483406;0.234628919250063;0.235836617293348;0.237045717607127;0.23825621416739;0.23946810093229;0.240681371842184;0.241896020819679;0.243112041769665;0.244329428579365;0.245548175118373;0.246768275238695;0.247989722774796;0.249212511543637;0.250436635344722;0.251662087960139;0.252888863154604;0.254116954675506;0.255346356252946;0.256577061599786;0.25780906441169;0.25904235836717;0.260276937127629;0.261512794337407;0.262749923623824;0.26398831859723;0.265227972851043;0.266468879961801;0.267711033489204;0.268954426976162;0.270199053948839;0.271444907916702;0.272691982372566;0.273940270792641;0.27518976663658;0.276440463347524;0.27769235435215;0.278945433060723;0.280199692867136;0.281455127148964;0.282711729267511;0.283969492567857;0.285228410378907;0.286488476013441;0.287749682768163;0.289012023923747;0.290275492744891;0.291540082480364;0.292805786363058;0.294072597610032;0.295340509422572;0.296609514986232;0.29787960747089;0.299150780030799;0.300423025804634;0.301696337915547;0.302970709471217;0.304246133563902;0.305522603270488;0.306800111652548;0.308078651756386;0.309358216613093;0.310638799238603;0.311920392633738;0.313202989784267;0.314486583660959;0.315771167219632;0.317056733401212;0.318343275131781;0.319630785322636;0.320919256870341;0.322208682656779;0.323499055549212;0.324790368400329;0.326082614048306;0.327375785316859;0.328669875015299;0.329964875938589;0.331260780867396;0.33255758256815;0.333855273793101;0.335153847280371;0.336453295754014;0.337753611924068;0.339054788486619;0.34035681812385;0.341659693504104;0.342963407281936;0.344267952098176;0.345573320579982;0.3468795053409;0.348186498980922;0.349494294086542;0.350802883230817;0.352112258973424;0.353422413860719;0.354733340425795;0.356045031188542;0.357357478655706;0.358670675320949;0.359984613664905;0.361299286155246;0.362614685246735;0.363930803381291;0.365247632988046;0.366565166483408;0.367883396271121;0.369202314742321;0.370521914275606;0.371842187237087;0.373163125980459;0.374484722847052;0.375806970165902;0.377129860253808;0.378453385415392;0.379777537943166;0.381102310117591;0.382427694207139;0.383753682468358;0.385080267145932;0.386407440472746;0.387735194669947;0.389063521947008;0.390392414501793;0.391721864520617;0.393051864178314;0.394382405638295;0.395713481052618;0.397045082562048;0.398377202296122;0.399709832373217;0.401042964900608;0.402376591974537;0.403710705680279;0.405045298092203;0.406380361273841;0.40771588727795;0.409051868146579;0.410388295911137;0.411725162592453;0.413062460200849;0.414400180736199;0.415738316188001;0.417076858535439;0.418415799747454;0.419755131782804;0.42109484659014;0.422434936108063;0.423775392265199;0.425116206980262;0.426457372162121;0.427798879709872;0.429140721512899;0.430482889450948;0.431825375394191;0.433168171203296;0.434511268729492;0.435854659814643;0.437198336291311;0.438542289982828;0.439886512703362;0.441230996257989;0.44257573244276;0.44392071304477;0.445265929842227;0.446611374604524;0.447957039092305;0.449302915057537;0.450648994243579;0.451995268385251;0.453341729208906;0.4546883684325;0.456035177765659;0.457382148909753;0.458729273557966;0.460076543395366;0.461423950098973;0.462771485337837;0.464119140773102;0.465466908058079;0.46681477883832;0.468162744751687;0.469510797428423;0.470858928491227;0.47220712955532;0.473555392228522;0.474903708111322;0.47625206879695;0.477600465871449;0.478948890913749;0.480297335495736;0.481645791182329;0.482994249531548;0.484342702094591;0.485691140415903;0.487039556033253;0.488387940477802;0.489736285274183;0.491084581940566;0.49243282198874;0.49378099692418;0.495129098246122;0.49647711744764;0.497825046015716;0.499172875431316;0.500520597169462;0.50186820269931;0.503215683484219;0.50456303098183;0.505910236644137;0.507257291917563;0.508604188243036;0.509950917056061;0.511297469786796;0.512643837860127;0.513990012695743;0.515335985708212;0.516681748307053;0.518027291896815;0.51937260787715;0.52071768764289;0.52206252258412;0.523407104086258;0.524751423530125;0.526095472292026;0.527439241743822;0.52878272325301;0.530125908182794;0.531468787892165;0.532811353735976;0.534153597065018;0.535495509226098;0.536837081562112;0.538178305412124;0.539519172111444;0.5408596729917;0.542199799380921;0.543539542603607;0.544878893980812;0.546217844830218;0.547556386466211;0.54889451019996;0.550232207339496;0.551569469189783;0.552906287052803;0.554242652227627;0.555578556010497;0.556913989694902;0.558248944571653;0.559583411928966;0.560917383052535;0.562250849225612;0.563583801729084;0.564916231841552;0.566248130839409;0.567579489996916;0.568910300586281;0.570240553877741;0.571570241139634;0.572899353638481;0.574227882639063;0.575555819404501;0.576883155196333;0.578209881274593;0.579535988897889;0.580861469323482;0.582186313807366;0.583510513604344;0.584834059968109;0.586156944151322;0.587479157405691;0.588800690982049;0.590121536130435;0.591441684100169;0.592761126139939;0.594079853497869;0.595397857421609;0.596715129158405;0.598031659955185;0.599347441058636;0.60066246371528;0.60197671917156;0.603290198673914;0.604602893468854;0.605914794803051;0.607225893923408;0.608536182077146;0.609845650511876;0.611154290475686;0.612462093217214;0.613769049985734;0.61507515203123;0.616380390604481;0.617684756957135;0.618988242341793;0.620290838012088;0.621592535222764;0.622893325229755;0.624193199290268;0.62549214866286;0.626790164607517;0.628087238385739;0.629383361260614;0.630678524496902;0.631972719361113;0.633265937121587;0.634558169048576;0.635849406414322;0.637139640493137;0.638428862561485;0.63971706389806;0.641004235783867;0.642290369502301;0.643575456339231;0.644859487583075;0.646142454524881;0.647424348458412;0.64870516068022;0.64998488248973;0.651263505189319;0.652541020084396;0.65381741848348;0.655092691698287;0.656366831043801;0.657639827838363;0.658911673403742;0.660182359065225;0.66145187615169;0.662720215995689;0.663987369933525;0.66525332930534;0.666518085455186;0.667781629731109;0.669043953485231;0.670305048073829;0.671564904857411;0.672823515200804;0.674080870473226;0.675336962048371;0.676591781304489;0.677845319624464;0.679097568395895;0.680348519011176;0.681598162867577;0.682846491367321;0.684093495917668;0.685339167930993;0.686583498824865;0.687826480022128;0.689068102950982;0.69030835904506;0.691547239743511;0.692784736491078;0.694020840738178;0.695255543940982;0.696488837561496;0.697720713067638;0.69895116193332;0.700180175638527;0.701407745669397;0.702633863518298;0.703858520683914;0.705081708671316;0.706303418992049;0.707523643164207;0.708742372712514;0.709959599168404;0.711175314070098;0.712389508962686;0.713602175398207;0.714813304935724;0.716022889141407;0.717230919588611;0.718437387857955;0.7196422855374;0.720845604222332;0.722047335515636;0.723247471027779;0.724446002376885;0.725642921188819;0.72683821909726;0.728031887743784;0.729223918777942;0.730414303857337;0.731603034647704;0.732790102822989;0.733975500065425;0.735159218065615;0.736341248522604;0.737521583143965;0.73870021364587;0.739877131753174;0.741052329199488;0.742225797727262;0.743397529087861;0.744567515041641;0.74573574735803;0.746902217815605;0.748066918202168;0.749229840314828;0.750390975960072;0.751550316953849;0.752707855121646;0.753863582298562;0.755017490329388;0.756169571068687;0.757319816380865;0.758468218140255;0.759614768231187;0.760759458548073;0.761902280995477;0.763043227488195;0.764182289951332;0.765319460320378;0.766454730541287;0.767588092570547;0.768719538375264;0.769849059933236;0.770976649233028;0.772102298274047;0.773225999066623;0.774347743632081;0.775467524002819;0.776585332222382;0.777701160345539;0.77881500043836;0.779926844578291;0.781036684854226;0.782144513366589;0.783250322227402;0.784354103560369;0.785455849500942;0.786555552196404;0.787653203805936;0.788748796500701;0.789842322463913;0.790933773890911;0.792023142989237;0.793110421978709;0.794195603091497;0.795278678572193;0.796359640677891;0.797438481678257;0.798515193855602;0.799589769504963;0.800662200934169;0.801732480463917;0.802800600427848;0.80386655317262;0.804930331057977;0.805991926456828;0.807051331755317;0.808108539352896;0.8091635416624;0.810216331110119;0.811266900135868;0.812315241193064;0.813361346748796;0.814405209283897;0.815446821293019;0.8164861752847;0.817523263781442;0.81855807931978;0.819590614450354;0.820620861737978;0.821648813761719;0.822674463114959;0.823697802405475;0.824718824255502;0.825737521301814;0.826753886195782;0.827767911603459;0.828779590205639;0.829788914697934;0.830795877790843;0.831800472209821;0.832802690695352;0.833802526003016;0.834799970903559;0.835795018182967;0.836787660642529;0.837777891098914;0.838765702384234;0.839751087346116;0.840734038847771;0.841714549768064;0.84269261300158;0.843668221458696;0.844641368065647;0.845612045764594;0.846580247513697;0.847545966287178;0.84850919507539;0.849469926884886;0.850428154738489;0.851383871675352;0.852337070751035;0.853287745037565;0.854235887623507;0.855181491614029;0.85612455013097;0.857065056312905;0.858003003315215;0.85893838431015;0.859871192486895;0.86080142105164;0.861729063227642;0.862654112255293;0.863576561392183;0.864496403913169;0.865413633110439;0.866328242293574;0.867240224789617;0.86814957394314;0.869056283116299;0.869960345688909;0.870861755058503;0.871760504640396;0.872656587867754;0.873549998191649;0.874440729081133;0.875328774023292;0.876214126523317;0.877096780104561;0.877976728308609;0.878853964695334;0.879728482842962;0.880600276348139;0.881469338825985;0.882335663910164;0.883199245252942;0.884060076525249;0.884918151416742;0.885773463635865;0.886626006909912;0.887475774985088;0.888322761626568;0.88916696061856;0.890008365764364;0.890846970886435;0.89168276982644;0.892515756445321;0.893345924623353;0.894173268260203;0.894997781274994;0.895819457606359;0.896638291212503;0.897454276071263;0.898267406180164;0.899077675556479;0.899885078237288;0.900689608279537;0.901491259760094;0.902290026775807;0.903085903443565;0.90387888390035;0.9046689623033;0.905456132829764;0.906240389677357;0.907021727064019;0.907800139228072;0.908575620428275;0.90934816494388;0.91011776707469;0.910884421141112;0.911648121484216;0.912408862465787;0.913166638468382;0.913921443895387;0.914673273171068;0.915422120740627;0.916167981070258;0.9169108486472;0.91765071797979;0.918387583597519;0.919121440051086;0.919852281912448;0.920580103774877;0.92130490025301;0.922026665982904;0.922745395622088;0.923461083849616;0.924173725366119;0.924883314893854;0.925589847176761;0.926293316980511;0.92699371909256;0.927691048322198;0.928385299500598;0.929076467480875;0.929764547138127;0.930449533369489;0.931131421094187;0.931810205253583;0.932485880811225;0.933158442752899;0.933827886086677;0.934494205842967;0.935157397074559;0.935817454856679;0.936474374287031;0.937128150485851;0.937778778595951;0.938426253782768;0.939070571234412;0.939711726161716;0.940349713798277;0.940984529400506;0.941616168247679;0.942244625641977;0.942869896908532;0.943491977395482;0.944110862474005;0.944726547538374;0.945339028005997;0.945948299317464;0.946554356936591;0.947157196350468;0.947756813069498;0.948353202627446;0.948946360581481;0.949536282512219;0.950122964023769;0.950706400743774;0.951286588323455;0.951863522437655;0.952437198784881;0.953007613087343;0.953574761091004;0.954138638565613;0.954699241304754;0.955256565125884;0.955810605870372;0.956361359403548;0.956908821614734;0.957452988417292;0.95799385574866;0.958531419570396;0.959065675868214;0.959596620652025;0.960124249955978;0.960648559838497;0.961169546382321;0.961687205694544;0.962201533906649;0.962712527174551;0.963220181678634;0.963724493623787;0.964225459239442;0.964723074779614;0.965217336522932;0.965708240772684;0.966195783856846;0.966679962128122;0.967160771963981;0.967638209766689;0.96811227196335;0.968582955005935;0.969050255371323;0.969514169561332;0.969974694102756;0.970431825547395;0.970885560472097;0.971335895478783;0.971782827194488;0.972226352271389;0.972666467386842;0.973103169243412;0.973536454568909;0.973966320116415;0.974392762664321;0.97481577901636;0.975235366001631;0.975651520474639;0.976064239315321;0.97647351942908;0.976879357746813;0.977281751224942;0.977680696845445;0.978076191615887;0.978468232569446;0.978856816764947;0.979241941286885;0.979623603245462;0.98000179977661;0.980376528042017;0.980747785229165;0.981115568551347;0.9814798752477;0.981840702583234;0.982198047848854;0.982551908361392;0.98290228146363;0.983249164524326;0.983592554938246;0.98393245012618;0.984268847534979;0.984601744637569;0.984931138932984;0.98525702794639;0.985579409229105;0.985898280358627;0.986213638938657;0.986525482599124;0.986833808996206;0.987138615812356;0.987439900756322;0.987737661563173;0.98803189599432;0.988322601837537;0.988609776906985;0.988893419043231;0.989173526113274;0.989450096010561;0.989723126655011;0.989992615993036;0.990258561997559;0.990520962668036;0.990779816030475;0.991035120137455;0.991286873068149;0.991535072928337;0.991779717850431;0.992020805993488;0.992258335543232;0.992492304712073;0.99272271173912;0.992949554890201;0.993172832457882;0.993392542761483;0.993608684147091;0.993821254987582;0.994030253682635;0.994235678658745;0.994437528369243;0.99463580129431;0.994830495940991;0.995021610843209;0.995209144561783;0.99539309568444;0.995573462825828;0.995750244627533;0.99592343975809;0.996093046912996;0.996259064814724;0.996421492212737;0.996580327883498;0.996735570630482;0.99688721928419;0.997035272702159;0.997179729768976;0.997320589396285;0.997457850522799;0.997591512114315;0.997721573163716;0.99784803269099;0.997970889743233;0.998090143394661;0.998205792746621;0.998317836927595;0.998426275093213;0.998531106426262;0.99863233013669;0.998729945461616;0.998823951665339;0.998914348039344;0.999001133902306;0.999084308600105;0.999163871505822;0.999239822019754;0.999312159569415;0.999380883609544;0.999445993622108;0.999507489116311;0.999565369628596;0.999619634722648;0.999670283989403;0.999717317047049;0.99976073354103;0.999800533144051;0.999836715556079;0.999869280504348;0.99989822774336;0.999923557054889;0.999945268247983;0.999963361158965;0.999977835651433;0.999988691616268;0.999995928971626;0.999999547662946]|9|8|0|on"
		  MaskTabNameString	  ",,,,"
		  System {
		    Name		    "c_gen"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1023"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 50 50 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "1024"
		    initVector		    "[0;0;0;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.015625;0.015625;0.015625;0.015625;0.015625;0.01953125;0.01953125;0.01953125;0.01953125;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.02734375;0.02734375;0.02734375;0.02734375;0.02734375;0.03125;0.03125;0.03125;0.03125;0.03125;0.03515625;0.03515625;0.03515625;0.03515625;0.0390625;0.0390625;0.0390625;0.0390625;0.0390625;0.04296875;0.04296875;0.04296875;0.04296875;0.046875;0.046875;0.046875;0.046875;0.046875;0.05078125;0.05078125;0.05078125;0.05078125;0.0546875;0.0546875;0.0546875;0.0546875;0.05859375;0.05859375;0.05859375;0.05859375;0.05859375;0.0625;0.0625;0.0625;0.0625;0.06640625;0.06640625;0.06640625;0.06640625;0.0703125;0.0703125;0.0703125;0.0703125;0.07421875;0.07421875;0.07421875;0.07421875;0.07421875;0.078125;0.078125;0.078125;0.078125;0.08203125;0.08203125;0.08203125;0.08203125;0.0859375;0.0859375;0.0859375;0.0859375;0.08984375;0.08984375;0.08984375;0.08984375;0.09375;0.09375;0.09375;0.09375;0.09765625;0.09765625;0.09765625;0.09765625;0.1015625;0.1015625;0.1015625;0.1015625;0.10546875;0.10546875;0.10546875;0.109375;0.109375;0.109375;0.109375;0.11328125;0.11328125;0.11328125;0.11328125;0.1171875;0.1171875;0.1171875;0.1171875;0.12109375;0.12109375;0.12109375;0.12109375;0.125;0.125;0.125;0.12890625;0.12890625;0.12890625;0.12890625;0.1328125;0.1328125;0.1328125;0.1328125;0.13671875;0.13671875;0.13671875;0.140625;0.140625;0.140625;0.140625;0.14453125;0.14453125;0.14453125;0.14453125;0.1484375;0.1484375;0.1484375;0.15234375;0.15234375;0.15234375;0.15234375;0.15625;0.15625;0.15625;0.16015625;0.16015625;0.16015625;0.16015625;0.1640625;0.1640625;0.1640625;0.16796875;0.16796875;0.16796875;0.16796875;0.171875;0.171875;0.171875;0.17578125;0.17578125;0.17578125;0.17578125;0.1796875;0.1796875;0.1796875;0.18359375;0.18359375;0.18359375;0.18359375;0.1875;0.1875;0.1875;0.19140625;0.19140625;0.19140625;0.19140625;0.1953125;0.1953125;0.1953125;0.19921875;0.19921875;0.19921875;0.203125;0.203125;0.203125;0.203125;0.20703125;0.20703125;0.20703125;0.2109375;0.2109375;0.2109375;0.21484375;0.21484375;0.21484375;0.21484375;0.21875;0.21875;0.21875;0.22265625;0.22265625;0.22265625;0.2265625;0.2265625;0.2265625;0.23046875;0.23046875;0.23046875;0.23046875;0.234375;0.234375;0.234375;0.23828125;0.23828125;0.23828125;0.2421875;0.2421875;0.2421875;0.24609375;0.24609375;0.24609375;0.24609375;0.25;0.25;0.25;0.25390625;0.25390625;0.25390625;0.2578125;0.2578125;0.2578125;0.26171875;0.26171875;0.26171875;0.265625;0.265625;0.265625;0.26953125;0.26953125;0.26953125;0.26953125;0.2734375;0.2734375;0.2734375;0.27734375;0.27734375;0.27734375;0.28125;0.28125;0.28125;0.28515625;0.28515625;0.28515625;0.2890625;0.2890625;0.2890625;0.29296875;0.29296875;0.29296875;0.296875;0.296875;0.296875;0.30078125;0.30078125;0.30078125;0.3046875;0.3046875;0.3046875;0.30859375;0.30859375;0.30859375;0.3125;0.3125;0.3125;0.31640625;0.31640625;0.31640625;0.31640625;0.3203125;0.3203125;0.3203125;0.32421875;0.32421875;0.32421875;0.328125;0.328125;0.328125;0.33203125;0.33203125;0.33203125;0.3359375;0.3359375;0.3359375;0.33984375;0.33984375;0.33984375;0.34375;0.34375;0.34375;0.34765625;0.34765625;0.34765625;0.3515625;0.3515625;0.3515625;0.35546875;0.35546875;0.35546875;0.359375;0.359375;0.359375;0.36328125;0.36328125;0.3671875;0.3671875;0.3671875;0.37109375;0.37109375;0.37109375;0.375;0.375;0.375;0.37890625;0.37890625;0.37890625;0.3828125;0.3828125;0.3828125;0.38671875;0.38671875;0.38671875;0.390625;0.390625;0.390625;0.39453125;0.39453125;0.39453125;0.3984375;0.3984375;0.3984375;0.40234375;0.40234375;0.40234375;0.40625;0.40625;0.40625;0.41015625;0.41015625;0.41015625;0.4140625;0.4140625;0.4140625;0.41796875;0.41796875;0.41796875;0.421875;0.421875;0.421875;0.42578125;0.42578125;0.4296875;0.4296875;0.4296875;0.43359375;0.43359375;0.43359375;0.4375;0.4375;0.4375;0.44140625;0.44140625;0.44140625;0.4453125;0.4453125;0.4453125;0.44921875;0.44921875;0.44921875;0.453125;0.453125;0.453125;0.45703125;0.45703125;0.45703125;0.4609375;0.4609375;0.4609375;0.46484375;0.46484375;0.46875;0.46875;0.46875;0.47265625;0.47265625;0.47265625;0.4765625;0.4765625;0.4765625;0.48046875;0.48046875;0.48046875;0.484375;0.484375;0.484375;0.48828125;0.48828125;0.48828125;0.4921875;0.4921875;0.4921875;0.49609375;0.49609375;0.49609375;0.5;0.5;0.5;0.50390625;0.50390625;0.5078125;0.5078125;0.5078125;0.51171875;0.51171875;0.51171875;0.515625;0.515625;0.515625;0.51953125;0.51953125;0.51953125;0.5234375;0.5234375;0.5234375;0.52734375;0.52734375;0.52734375;0.53125;0.53125;0.53125;0.53515625;0.53515625;0.53515625;0.5390625;0.5390625;0.5390625;0.54296875;0.54296875;0.54296875;0.546875;0.546875;0.55078125;0.55078125;0.55078125;0.5546875;0.5546875;0.5546875;0.55859375;0.55859375;0.55859375;0.5625;0.5625;0.5625;0.56640625;0.56640625;0.56640625;0.5703125;0.5703125;0.5703125;0.57421875;0.57421875;0.57421875;0.578125;0.578125;0.578125;0.58203125;0.58203125;0.58203125;0.5859375;0.5859375;0.5859375;0.58984375;0.58984375;0.58984375;0.59375;0.59375;0.59375;0.59765625;0.59765625;0.59765625;0.6015625;0.6015625;0.6015625;0.60546875;0.60546875;0.60546875;0.609375;0.609375;0.609375;0.61328125;0.61328125;0.61328125;0.6171875;0.6171875;0.6171875;0.62109375;0.62109375;0.62109375;0.625;0.625;0.625;0.62890625;0.62890625;0.62890625;0.6328125;0.6328125;0.6328125;0.63671875;0.63671875;0.63671875;0.640625;0.640625;0.640625;0.64453125;0.64453125;0.64453125;0.6484375;0.6484375;0.6484375;0.65234375;0.65234375;0.65234375;0.65625;0.65625;0.65625;0.66015625;0.66015625;0.66015625;0.6640625;0.6640625;0.6640625;0.66796875;0.66796875;0.66796875;0.671875;0.671875;0.671875;0.67578125;0.67578125;0.67578125;0.6796875;0.6796875;0.6796875;0.6796875;0.68359375;0.68359375;0.68359375;0.6875;0.6875;0.6875;0.69140625;0.69140625;0.69140625;0.6953125;0.6953125;0.6953125;0.69921875;0.69921875;0.69921875;0.703125;0.703125;0.703125;0.70703125;0.70703125;0.70703125;0.70703125;0.7109375;0.7109375;0.7109375;0.71484375;0.71484375;0.71484375;0.71875;0.71875;0.71875;0.72265625;0.72265625;0.72265625;0.72265625;0.7265625;0.7265625;0.7265625;0.73046875;0.73046875;0.73046875;0.734375;0.734375;0.734375;0.73828125;0.73828125;0.73828125;0.73828125;0.7421875;0.7421875;0.7421875;0.74609375;0.74609375;0.74609375;0.75;0.75;0.75;0.75;0.75390625;0.75390625;0.75390625;0.7578125;0.7578125;0.7578125;0.7578125;0.76171875;0.76171875;0.76171875;0.765625;0.765625;0.765625;0.76953125;0.76953125;0.76953125;0.76953125;0.7734375;0.7734375;0.7734375;0.77734375;0.77734375;0.77734375;0.77734375;0.78125;0.78125;0.78125;0.78515625;0.78515625;0.78515625;0.78515625;0.7890625;0.7890625;0.7890625;0.7890625;0.79296875;0.79296875;0.79296875;0.796875;0.796875;0.796875;0.796875;0.80078125;0.80078125;0.80078125;0.8046875;0.8046875;0.8046875;0.8046875;0.80859375;0.80859375;0.80859375;0.80859375;0.8125;0.8125;0.8125;0.8125;0.81640625;0.81640625;0.81640625;0.8203125;0.8203125;0.8203125;0.8203125;0.82421875;0.82421875;0.82421875;0.82421875;0.828125;0.828125;0.828125;0.828125;0.83203125;0.83203125;0.83203125;0.83203125;0.8359375;0.8359375;0.8359375;0.8359375;0.83984375;0.83984375;0.83984375;0.83984375;0.84375;0.84375;0.84375;0.84375;0.84765625;0.84765625;0.84765625;0.84765625;0.8515625;0.8515625;0.8515625;0.8515625;0.85546875;0.85546875;0.85546875;0.85546875;0.859375;0.859375;0.859375;0.859375;0.86328125;0.86328125;0.86328125;0.86328125;0.8671875;0.8671875;0.8671875;0.8671875;0.8671875;0.87109375;0.87109375;0.87109375;0.87109375;0.875;0.875;0.875;0.875;0.87890625;0.87890625;0.87890625;0.87890625;0.87890625;0.8828125;0.8828125;0.8828125;0.8828125;0.88671875;0.88671875;0.88671875;0.88671875;0.88671875;0.890625;0.890625;0.890625;0.890625;0.890625;0.89453125;0.89453125;0.89453125;0.89453125;0.8984375;0.8984375;0.8984375;0.8984375;0.8984375;0.90234375;0.90234375;0.90234375;0.90234375;0.90234375;0.90625;0.90625;0.90625;0.90625;0.90625;0.91015625;0.91015625;0.91015625;0.91015625;0.91015625;0.9140625;0.9140625;0.9140625;0.9140625;0.9140625;0.91796875;0.91796875;0.91796875;0.91796875;0.91796875;0.91796875;0.921875;0.921875;0.921875;0.921875;0.921875;0.92578125;0.92578125;0.92578125;0.92578125;0.92578125;0.92578125;0.9296875;0.9296875;0.9296875;0.9296875;0.9296875;0.93359375;0.93359375;0.93359375;0.93359375;0.93359375;0.93359375;0.9375;0.9375;0.9375;0.9375;0.9375;0.9375;0.94140625;0.94140625;0.94140625;0.94140625;0.94140625;0.94140625;0.9453125;0.9453125;0.9453125;0.9453125;0.9453125;0.9453125;0.9453125;0.94921875;0.94921875;0.94921875;0.94921875;0.94921875;0.94921875;0.953125;0.953125;0.953125;0.953125;0.953125;0.953125;0.953125;0.95703125;0.95703125;0.95703125;0.95703125;0.95703125;0.95703125;0.95703125;0.9609375;0.9609375;0.9609375;0.9609375;0.9609375;0.9609375;0.9609375;0.9609375;0.96484375;0.96484375;0.96484375;0.96484375;0.96484375;0.96484375;0.96484375;0.96484375;0.96875;0.96875;0.96875;0.96875;0.96875;0.96875;0.96875;0.96875;0.97265625;0.97265625;0.97265625;0.97265625;0.97265625;0.97265625;0.97265625;0.97265625;0.97265625;0.9765625;0.9765625;0.9765625;0.9765625;0.9765625;0.9765625;0.9765625;0.9765625;0.9765625;0.9765625;0.98046875;0.98046875;0.98046875;0.98046875;0.98046875;0.98046875;0.98046875;0.98046875;0.98046875;0.98046875;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.984375;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.98828125;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.9921875;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375;0.99609375]"
		    distributed_mem	    "Block RAM"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "8"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[7 15 27 39 47 47 43 47 47 36 47 39 27 15 7 18 7 7 11 7 7 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "coef_out"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mem"
		    SrcPort		    1
		    DstBlock		    "coef_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "data_delay"
		  Ports			  [1, 1]
		  Position		  [145, 17, 200, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sum_delay"
		  Ports			  [1, 1]
		  Position		  [145, 62, 200, 88]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [145, 187, 200, 213]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [295, 23, 325, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [295, 68, 325, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "coef"
		  Position		  [295, 118, 325, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [295, 193, 325, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_gen"
		  SrcPort		  1
		  DstBlock		  "coef"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_delay"
		  SrcPort		  1
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "sum_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [25, 0]
		  Branch {
		    Points		    [0, -75]
		    DstBlock		    "c_gen"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "sync_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_delay"
		  SrcPort		  1
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  DstBlock		  "data_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_core"
	      Ports		      [4, 3]
	      Position		      [270, 29, 360, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "delay 1024 in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag102"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Core"
	      MaskDescription	      "A Finite Impluse Response Filter core with complex inputs and real coefficients.  This FIR filter core does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter core with complex inputs and real coefficients.\n\nThis Finite Impluse Response Filter core is designed to be paired with a FIR Coefficient Generator \nto form a FIR filter tap.  This FIR filter core does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (use_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	      MaskPromptString	      "Tap Delay|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	      MaskStyleString	      "edit,edit,edit,edit,edit,checkbox,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "delay=&1;n_bits_d=&2;bin_pt_d=&3;n_bits_s=&4;bin_pt_s=&5;use_bram=&6;mult_latency=&7;add_latency=&8;add_bypass=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "1024|8|7|17|15|on|3|1|off"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"fir_core"
		Location		[282, 135, 1062, 821]
		Open			on
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 223, 60, 237]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "coef"
		  Position		  [30, 183, 60, 197]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 278, 60, 292]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_d"
		  Ports			  [1, 2]
		  Position		  [120, 69, 160, 111]
		  AttributesFormatString  "8_7 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag103"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|7"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_d"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_s"
		  Ports			  [1, 2]
		  Position		  [120, 209, 160, 251]
		  AttributesFormatString  "17_15 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag104"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "17|15"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_s"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_im"
		  Ports			  [1, 1]
		  Position		  [345, 175, 390, 205]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_re"
		  Ports			  [1, 1]
		  Position		  [345, 80, 390, 110]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "dout_delay"
		  Ports			  [1, 1]
		  Position		  [255, 17, 310, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_im"
		  Ports			  [3, 1]
		  Position		  [255, 164, 305, 216]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag105"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_im"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_re"
		  Ports			  [3, 1]
		  Position		  [255, 69, 305, 121]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag106"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_re"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [455, 119, 495, 161]
		  UserDataPersistent	  on
		  UserData		  "DataTag107"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskInitialization	  "ri_to_c_init(gcb);"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [255, 272, 310, 298]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "tap_delay"
		  Ports			  [1, 1]
		  Position		  [440, 14, 500, 46]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "bram depth = 1024"
		  UserDataPersistent	  on
		  UserData		  "DataTag108"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "BRAM Delay"
		  MaskDescription	  "A delay block that uses BRAM for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses BRAM for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n\nBuffer Latency (buffer_latency): The latency of the underlying storage.\n\nBuffer Latency defaults to 1 and cannot be changed via the block's dialog box.\nFuture versions may enable the setting of that parameter from the dialog.\n</pre>"
		  MaskPromptString	  "Delay Depth|Buffer Latency"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,off"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "delay_depth=&1;buffer_latency=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "1024|"
		  MaskTabNameString	  ","
		  System {
		    Name		    "tap_delay"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Constant"
		    Ports		    [0, 1]
		    Position		    [165, 133, 180, 147]
		    ShowName		    off
		    SourceBlock		    "xbsIndex_r4/Constant"
		    SourceType		    "Xilinx Constant Block Block"
		    arith_type		    "Boolean"
		    const		    "1"
		    n_bits		    "1"
		    bin_pt		    "0"
		    explicit_period	    on
		    period		    "1"
		    dsp48_infoedit	    "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		    equ			    "P=C"
		    opselect		    "C"
		    inp2		    "PCIN>>17"
		    opr			    "+"
		    inp1		    "P"
		    carry		    "CIN"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "constant"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "15,14,1,1,white,blue,0,06094819,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 15 15 0 ],[0 0 14 14 ],[0.77 0.82 0.91]);\npatch([3 1 4 1 3 7 8 9 13 10 7 5 8 5 7 10 13 9 8 7 3 ],[2 4 7 10 12 12 11 12 12 9 12 10 7 4 2 5 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 15 15 0 0 ],[0 0 14 14 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [0, 1]
		    Position		    [130, 71, 180, 89]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1022"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    off
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,a170c862,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bram"
		    Ports		    [3, 1]
		    Position		    [230, 61, 295, 159]
		    SourceBlock		    "xbsIndex_r4/Single Port RAM"
		    SourceType		    "Xilinx Single Port Random Access Memory Block"
		    depth		    "1024"
		    initVector		    "0"
		    distributed_mem	    "Block RAM"
		    write_mode		    "Read Before Write"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "spram"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "65,98,1,1,white,blue,0,90951842,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 98 98 ],[0.77 0.82 0.91]);\npatch([15 4 19 4 15 32 37 42 60 45 31 21 36 21 31 45 60 42 37 32 15 ],[24 35 50 65 76 76 71 76 76 61 75 65 50 35 25 39 24 24 29 24 24 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 98 98 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Constant"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    3
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "bram"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [555, 23, 585, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [555, 133, 585, 147]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 278, 585, 292]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "convert_im"
		  SrcPort		  1
		  Points		  [20, 0; 0, -40]
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "convert_re"
		  SrcPort		  1
		  Points		  [20, 0; 0, 35]
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "tap_delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_im"
		  SrcPort		  1
		  DstBlock		  "convert_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_re"
		  SrcPort		  1
		  DstBlock		  "convert_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  2
		  Points		  [75, 0]
		  DstBlock		  "mult_add_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  1
		  Points		  [75, 0]
		  DstBlock		  "mult_add_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "c_to_ri_s"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "coef"
		  SrcPort		  1
		  Points		  [140, 0]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "mult_add_re"
		    DstPort		    2
		  }
		  Branch {
		    DstBlock		    "mult_add_im"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  2
		  Points		  [20, 0; 0, 75]
		  DstBlock		  "mult_add_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  1
		  DstBlock		  "mult_add_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  Points		  [35, 0]
		  Branch {
		    Points		    [0, 60]
		    DstBlock		    "c_to_ri_d"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "dout_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "dout_delay"
		  SrcPort		  1
		  DstBlock		  "tap_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "data_out"
	      Position		      [435, 23, 465, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [435, 58, 465, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [435, 93, 465, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      3
	      Points		      [25, 0; 0, 15]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      2
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      1
	      Points		      [25, 0; 0, -15]
	      DstBlock		      "data_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, -15]
	      DstBlock		      "fir_coef"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "fir_coef"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "data_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, 15]
	      DstBlock		      "fir_coef"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      4
	      DstBlock		      "fir_core"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      3
	      DstBlock		      "fir_core"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      2
	      DstBlock		      "fir_core"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      1
	      DstBlock		      "fir_core"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_tap_5"
	  Ports			  [3, 3]
	  Position		  [700, 30, 800, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "delay 1024 in bram\n1024 coefs in bram"
	  UserDataPersistent	  on
	  UserData		  "DataTag109"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Tap (Real Coefficients)"
	  MaskDescription	  "A Finite Impluse Response Filter tap with real coefficients.  This FIR filter tap does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter tap with real coefficients.\n\nThis Finite Impluse Response Filter tap is designed to be daisy chained together\nto form a multi-tap FIR filter.  This FIR filter tap does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nTap Coefficiant(s) (coef): The coefficient(s) for this tap.  For a regular FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nUsually, delay==length(coef), but this is not required.  These should be specified as doubles. \nThey will be rounded and saturated according to the specified number of bits (n_bits_c) and\nbinary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	  MaskPromptString	  "Tap Delay|Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	  MaskStyleString	  "edit,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "||||||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,,,,"
	  MaskVariables		  "delay=&1;coef=&2;n_bits_c=&3;bin_pt_c=&4;n_bits_d=&5;bin_pt_d=&6;n_bits_s=&7;bin_pt_s=&8;coef_bram=&9;delay_bram=&10;mult_latency=&11;add_latency=&12;add_bypass=&13;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "1024|[-7.57186305694141e-005;-0.000227564945670749;-0.000379956430889435;-0.000532892796251757;-0.000686373742881339;-0.000840398962979647;-0.000994968139806186;-0.00115008094765919;-0.00130573705185642;-0.00146193610871559;-0.00161867776553536;-0.00177596166057639;-0.00193378742304204;-0.0020921546730598;-0.0022510630216622;-0.00241051207076825;-0.00257050141316491;-0.00273103063248833;-0.00289209930320557;-0.00305370699059638;-0.00321585325073467;-0.00337853763047057;-0.00354175966741245;-0.00370551888990871;-0.00386981481703025;-0.00403464695855241;-0.00420001481493748;-0.00436591787731722;-0.0045323556274752;-0.00469932753782952;-0.00486683307141569;-0.00503487168186923;-0.00520344281340873;-0.00537254590081901;-0.00554218036943399;-0.00571234563512023;-0.00588304110426002;-0.00605426617373492;-0.00622602023090949;-0.00639830265361464;-0.00657111281013151;-0.00674445005917552;-0.00691831374988003;-0.00709270322178053;-0.00726761780479901;-0.00744305681922785;-0.00761901957571464;-0.00779550537524631;-0.0079725135091339;-0.00815004325899737;-0.00832809389675017;-0.0085066646845843;-0.00868575487495546;-0.00886536371056795;-0.00904549042435999;-0.00922613423948933;-0.00940729436931827;-0.0095889700173997;-0.00977116037746245;-0.00995386463339719;-0.0101370819592425;-0.0103208115191707;-0.010505052467474;-0.0106898039485508;-0.0108750650968923;-0.0110608350370682;-0.0112471128837145;-0.011433897741519;-0.0116211887052088;-0.0118089848595372;-0.0119972852792704;-0.0121860890291751;-0.0123753951640054;-0.0125652027284904;-0.0127555107573218;-0.0129463182751411;-0.013137624296528;-0.0133294278259877;-0.0135217278579391;-0.013714523376703;-0.0139078133564902;-0.0141015967613896;-0.0142958725453573;-0.0144906396522044;-0.0146858970155864;-0.0148816435589916;-0.01507787819573;-0.0152745998289226;-0.0154718073514906;-0.0156694996461444;-0.0158676755853733;-0.016066334031435;-0.016265473836345;-0.0164650938418669;-0.016665192879502;-0.0168657697704791;-0.0170668233257453;-0.0172683523459559;-0.0174703556214645;-0.0176728319323143;-0.0178757800482282;-0.0180791987285998;-0.0182830867224842;-0.018487442768589;-0.0186922655952659;-0.0188975539205014;-0.0191033064519087;-0.019309521886719;-0.0195161989117731;-0.0197233362035136;-0.0199309324279764;-0.0201389862407831;-0.020347496287133;-0.0205564612017955;-0.0207658796091025;-0.0209757501229411;-0.0211860713467461;-0.0213968418734932;-0.0216080602856917;-0.0218197251553776;-0.022031835044107;-0.0222443885029495;-0.0224573840724814;-0.0226708202827797;-0.0228846956534157;-0.0230990086934489;-0.0233137579014212;-0.0235289417653507;-0.0237445587627263;-0.0239606073605024;-0.0241770860150929;-0.024393993172366;-0.0246113272676396;-0.0248290867256759;-0.025047269960676;-0.0252658753762764;-0.0254849013655432;-0.0257043463109681;-0.0259242085844644;-0.026144486547362;-0.0263651785504042;-0.026586282933743;-0.026807798026936;-0.0270297221489423;-0.0272520536081191;-0.0274747907022183;-0.0276979317183836;-0.0279214749331467;-0.0281454186124251;-0.0283697610115189;-0.0285945003751079;-0.0288196349372498;-0.029045162921377;-0.0292710825402948;-0.0294973919961793;-0.0297240894805752;-0.0299511731743939;-0.0301786412479123;-0.0304064918607708;-0.0306347231619722;-0.03086333328988;-0.0310923203722177;-0.0313216825260677;-0.0315514178578704;-0.0317815244634236;-0.0320120004278819;-0.0322428438257562;-0.0324740527209136;-0.0327056251665774;-0.0329375592053265;-0.0331698528690966;-0.0334025041791795;-0.0336355111462241;-0.0338688717702371;-0.0341025840405833;-0.0343366459359869;-0.0345710554245323;-0.0348058104636656;-0.0350409090001953;-0.0352763489702948;-0.035512128299503;-0.0357482449027266;-0.0359846966842419;-0.036221481537697;-0.036458597346114;-0.0366960419818909;-0.0369338133068049;-0.0371719091720144;-0.0374103274180622;-0.037649065874878;-0.0378881223617824;-0.038127494687489;-0.0383671806501086;-0.0386071780371525;-0.0388474846255361;-0.0390880981815831;-0.039329016461029;-0.0395702372090256;-0.0398117581601453;-0.0400535770383852;-0.0402956915571721;-0.0405380994193671;-0.0407807983172704;-0.0410237859326265;-0.0412670599366292;-0.0415106179899271;-0.0417544577426293;-0.0419985768343105;-0.0422429728940172;-0.0424876435402736;-0.0427325863810878;-0.0429777990139576;-0.0432232790258777;-0.0434690239933452;-0.0437150314823675;-0.0439612990484682;-0.0442078242366945;-0.0444546045816244;-0.0447016376073741;-0.044948920827605;-0.045196451745532;-0.0454442278539307;-0.0456922466351457;-0.0459405055610986;-0.0461890020932959;-0.046437733682838;-0.0466866977704272;-0.0469358917863767;-0.0471853131506194;-0.0474349592727168;-0.0476848275518681;-0.0479349153769199;-0.0481852201263752;-0.0484357391684033;-0.0486864698608494;-0.0489374095512447;-0.0491885555768165;-0.049439905264498;-0.0496914559309391;-0.0499432048825173;-0.0501951494153474;-0.0504472868152932;-0.0506996143579782;-0.0509521293087968;-0.0512048289229253;-0.0514577104453342;-0.0517107711107988;-0.0519640081439119;-0.0522174187590951;-0.0524710001606109;-0.0527247495425758;-0.0529786640889713;-0.0532327409736577;-0.0534869773603863;-0.0537413704028122;-0.0539959172445073;-0.0542506150189739;-0.0545054608496575;-0.0547604518499607;-0.0550155851232567;-0.0552708577629027;-0.0555262668522548;-0.0557818094646811;-0.0560374826635766;-0.0562932835023776;-0.0565492090245758;-0.0568052562637336;-0.0570614222434986;-0.0573177039776189;-0.0575740984699583;-0.0578306027145112;-0.0580872136954188;-0.0583439283869845;-0.0586007437536894;-0.0588576567502086;-0.0591146643214275;-0.0593717634024577;-0.0596289509186537;-0.0598862237856295;-0.0601435789092752;-0.0604010131857741;-0.0606585235016196;-0.0609161067336326;-0.0611737597489788;-0.0614314794051863;-0.061689262550163;-0.061947106022215;-0.0622050066500641;-0.0624629612528662;-0.0627209666402297;-0.0629790196122337;-0.0632371169594469;-0.0634952554629463;-0.0637534318943358;-0.0640116430157661;-0.064269885579953;-0.0645281563301975;-0.0647864520004051;-0.0650447693151055;-0.0653031049894726;-0.0655614557293443;-0.0658198182312429;-0.0660781891823955;-0.0663365652607541;-0.0665949431350165;-0.0668533194646474;-0.0671116908998989;-0.0673700540818315;-0.0676284056423361;-0.0678867422041547;-0.0681450603809021;-0.0684033567770881;-0.0686616279881388;-0.068919870600419;-0.0691780811912541;-0.0694362563289528;-0.0696943925728293;-0.0699524864732263;-0.0702105345715372;-0.0704685334002297;-0.0707264794828686;-0.0709843693341391;-0.0712421994598703;-0.0714999663570587;-0.0717576665138918;-0.0720152964097724;-0.0722728525153421;-0.0725303312925058;-0.0727877291944562;-0.0730450426656978;-0.073302268142072;-0.0735594020507816;-0.0738164408104159;-0.0740733808309759;-0.0743302185138991;-0.0745869502520857;-0.0748435724299231;-0.0751000814233127;-0.075356473599695;-0.0756127453180758;-0.0758688929290526;-0.0761249127748406;-0.0763808011892994;-0.0766365544979593;-0.0768921690180486;-0.0771476410585198;-0.0774029669200773;-0.0776581428952044;-0.0779131652681904;-0.0781680303151585;-0.0784227343040934;-0.0786772734948688;-0.0789316441392758;-0.0791858424810506;-0.079439864755903;-0.0796937071915449;-0.0799473660077185;-0.0802008374162255;-0.0804541176209555;-0.0807072028179151;-0.0809600891952574;-0.0812127729333109;-0.0814652502046088;-0.0817175171739195;-0.0819695699982751;-0.082221404827002;-0.0824730178017513;-0.0827244050565279;-0.0829755627177218;-0.083226486904138;-0.0834771737270274;-0.0837276192901176;-0.0839778196896433;-0.0842277710143782;-0.0844774693456655;-0.0847269107574494;-0.0849760913163068;-0.0852250070814789;-0.0854736541049025;-0.0857220284312427;-0.0859701260979243;-0.0862179431351643;-0.0864654755660042;-0.0867127194063427;-0.0869596706649676;-0.0872063253435898;-0.0874526794368749;-0.0876987289324774;-0.0879444698110729;-0.0881898980463924;-0.0884350096052548;-0.0886798004476017;-0.0889242665265297;-0.0891684037883258;-0.0894122081725004;-0.0896556756118219;-0.0898988020323511;-0.0901415833534753;-0.0903840154879432;-0.0906260943418998;-0.0908678158149208;-0.0911091758000479;-0.091350170183824;-0.0915907948463285;-0.0918310456612125;-0.0920709184957346;-0.0923104092107966;-0.0925495136609791;-0.0927882276945778;-0.0930265471536394;-0.093264467873998;-0.0935019856853112;-0.0937390964110971;-0.0939757958687704;-0.0942120798696797;-0.0944479442191439;-0.0946833847164898;-0.0949183971550889;-0.095152977322395;-0.0953871209999812;-0.095620823963578;-0.095854081983111;-0.0960868908227382;-0.0963192462408885;-0.0965511439902998;-0.0967825798180567;-0.09701354946563;-0.0972440486689138;-0.0974740731582651;-0.0977036186585424;-0.0979326808891443;-0.0981612555640488;-0.0983893383918524;-0.0986169250758091;-0.0988440113138705;-0.0990705927987245;-0.0992966652178355;-0.099522224253484;-0.0997472655828066;-0.0999717848778359;-0.100195777805541;-0.100419240027867;-0.100642167201777;-0.10086455497929;-0.101086399007525;-0.101307694928738;-0.101528438380368;-0.101748624995071;-0.101968250400767;-0.102187310220681;-0.102405800073379;-0.102623715572817;-0.102841052328376;-0.10305780594491;-0.10327397202278;-0.103489546157905;-0.103704523941797;-0.103918900961607;-0.104132672800167;-0.10434583503603;-0.104558383243515;-0.104770312992751;-0.104981619849715;-0.105192299376281;-0.105402347130257;-0.105611758665433;-0.105820529531622;-0.106028655274704;-0.10623613143667;-0.106442953555663;-0.106649117166026;-0.106854617798343;-0.107059450979484;-0.107263612232647;-0.107467097077407;-0.107669901029754;-0.107872019602144;-0.108073448303537;-0.108274182639448;-0.108474218111987;-0.108673550219905;-0.108872174458642;-0.109070086320367;-0.109267281294027;-0.109463754865391;-0.109659502517097;-0.109854519728693;-0.110048801976688;-0.110242344734596;-0.110435143472979;-0.110627193659497;-0.110818490758952;-0.111009030233334;-0.111198807541867;-0.111387818141058;-0.111576057484741;-0.111763521024123;-0.111950204207832;-0.112136102481964;-0.11232121129013;-0.112505526073501;-0.112689042270857;-0.112871755318635;-0.113053660650972;-0.113234753699757;-0.113415029894677;-0.113594484663264;-0.113773113430942;-0.113950911621077;-0.114127874655023;-0.11430399795217;-0.114479276929993;-0.1146537070041;-0.114827283588279;-0.115000002094548;-0.115171857933203;-0.115342846512864;-0.115512963240528;-0.115682203521616;-0.115850562760017;-0.116018036358147;-0.116184619716987;-0.116350308236141;-0.116515097313878;-0.116678982347186;-0.11684195873182;-0.117004021862351;-0.117165167132216;-0.117325389933767;-0.117484685658321;-0.117643049696209;-0.117800477436828;-0.117956964268688;-0.118112505579464;-0.118267096756046;-0.118420733184589;-0.118573410250562;-0.118725123338799;-0.118875867833551;-0.119025639118535;-0.119174432576984;-0.1193222435917;-0.1194690675451;-0.119614899819273;-0.119759735796028;-0.119903570856942;-0.120046400383417;-0.120188219756726;-0.120329024358068;-0.120468809568615;-0.120607570769567;-0.120745303342203;-0.120882002667932;-0.121017664128342;-0.121152283105255;-0.12128585498078;-0.121418375137358;-0.121549838957822;-0.121680241825444;-0.121809579123986;-0.121937846237758;-0.122065038551663;-0.122191151451255;-0.122316180322788;-0.122440120553267;-0.122562967530506;-0.122684716643174;-0.122805363280853;-0.122924902834086;-0.123043330694433;-0.123160642254522;-0.123276832908101;-0.123391898050093;-0.12350583307665;-0.1236186333852;-0.123730294374506;-0.123840811444718;-0.123950179997422;-0.124058395435699;-0.124165453164175;-0.124271348589074;-0.124376077118273;-0.124479634161354;-0.124582015129658;-0.12468321543634;-0.124783230496419;-0.124882055726836;-0.124979686546505;-0.125076118376365;-0.12517134663944;-0.125265366760885;-0.125358174168047;-0.125449764290513;-0.12554013256017;-0.125629274411252;-0.1257171852804;-0.125803860606714;-0.125889295831806;-0.125973486399857;-0.126056427757669;-0.12613811535472;-0.126218544643217;-0.126297711078153;-0.126375610117361;-0.126452237221565;-0.126527587854441;-0.126601657482665;-0.12667444157597;-0.126745935607204;-0.126816135052377;-0.126885035390726;-0.12695263210476;-0.12701892068032;-0.127083896606635;-0.127147555376371;-0.127209892485693;-0.127270903434314;-0.127330583725555;-0.127388928866395;-0.127445934367531;-0.127501595743429;-0.127555908512382;-0.127608868196561;-0.127660470322078;-0.127710710419032;-0.12775958402157;-0.127807086667941;-0.127853213900551;-0.127897961266018;-0.127941324315228;-0.127983298603389;-0.128023879690088;-0.128063063139347;-0.128100844519676;-0.12813721940413;-0.128172183370362;-0.128205732000685;-0.12823786088212;-0.128268565606454;-0.1282978417703;-0.128325684975145;-0.128352090827411;-0.12837705493851;-0.128400572924896;-0.128422640408125;-0.128443253014909;-0.128462406377172;-0.128480096132103;-0.128496317922217;-0.128511067395406;-0.128524340204996;-0.128536132009803;-0.128546438474192;-0.128555255268125;-0.128562578067225;-0.128568402552826;-0.128572724412033;-0.128575539337773;-0.128576843028855;-0.128576631190026;-0.128574899532022;-0.128571643771628;-0.128566859631735;-0.12856054284139;-0.128552689135858;-0.128543294256673;-0.128532353951698;-0.128519863975179;-0.128505820087798;-0.128490218056735;-0.128473053655717;-0.128454322665079;-0.128434020871817;-0.128412144069646;-0.128388688059053;-0.128363648647355;-0.128337021648755;-0.128308802884396;-0.128278988182416;-0.128247573378009;-0.128214554313474;-0.128179926838275;-0.128143686809098;-0.1281058300899;-0.128066352551973;-0.128025250073994;-0.127982518542083;-0.127938153849857;-0.12789215189849;-0.127844508596762;-0.12779521986112;-0.127744281615732;-0.127691689792542;-0.127637440331325;-0.127581529179746;-0.12752395229341;-0.127464705635923;-0.127403785178944;-0.127341186902242;-0.127276906793752;-0.127210940849628;-0.1271432850743;-0.12707393548053;-0.127002888089467;-0.126930138930701;-0.126855684042321;-0.126779519470967;-0.126701641271888;-0.126622045508995;-0.126540728254919;-0.126457685591063;-0.126372913607659;-0.126286408403824;-0.126198166087613;-0.126108182776074;-0.126016454595306;-0.125922977680511;-0.125827748176048;-0.125730762235494;-0.12563201602169;-0.125531505706804;-0.12542922747238;-0.125325177509398;-0.125219352018322;-0.125111747209161;-0.125002359301522;-0.12489118452466;-0.124778219117541;-0.124663459328888;-0.124546901417241;-0.124428541651009;-0.124308376308528;-0.124186401678108;-0.124062614058095;-0.12393700975692;-0.123809585093158;-0.123680336395576;-0.123549260003193;-0.12341635226533;-0.123281609541668;-0.123145028202296;-0.123006604627771;-0.122866335209169;-0.122724216348138;-0.122580244456954;-0.122434415958572;-0.122286727286684;-0.122137174885766;-0.121985755211139;-0.121832464729017;-0.12167729991656;-0.121520257261934;-0.121361333264356;-0.121200524434153;-0.121037827292813;-0.120873238373037;-0.120706754218796;-0.120538371385378;-0.120368086439447;-0.120195895959092;-0.12002179653388;-0.119845784764912;-0.119667857264872;-0.11948801065808;-0.119306241580546;-0.119122546680023;-0.118936922616057;-0.118749366060041;-0.118559873695267;-0.118368442216977;-0.118175068332418;-0.117979748760891;-0.117782480233803;-0.117583259494722;-0.117382083299426;-0.117178948415955;-0.116973851624663;-0.116766789718271;-0.116557759501917;-0.116346757793206;-0.116133781422266;-0.115918827231792;-0.115701892077107;-0.115482972826202;-0.115262066359796;-0.115039169571384;-0.114814279367284;-0.114587392666694;-0.11435850640174;-0.114127617517525;-0.113894722972181;-0.11365981973692;-0.113422904796084;-0.113183975147195;-0.112943027801003;-0.112700059781542;-0.112455068126173;-0.112208049885639;-0.111959002124111;-0.111707921919243;-0.111454806362214;-0.111199652557785;-0.110942457624343;-0.110683218693955;-0.110421932912413;-0.110158597439284;-0.109893209447962;-0.109625766125715;-0.109356264673732;-0.109084702307174;-0.108811076255224;-0.108535383761131;-0.108257622082262;-0.107977788490152;-0.107695880270546;-0.107411894723454;-0.107125829163193;-0.10683768091844;-0.106547447332278;-0.106255125762242;-0.105960713580369;-0.105664208173243;-0.105365606942047;-0.105064907302604;-0.104762106685429;-0.104457202535775;-0.104150192313679;-0.103841073494009;-0.103529843566511;-0.103216500035856;-0.102901040421687;-0.102583462258662;-0.102263763096507;-0.101941940500055;-0.101617992049296;-0.101291915339421;-0.100963707980872;-0.100633367599381;-0.100300891836022;-0.0999662783472516;-0.0996295248049575;-0.0992906288965024;-0.0989495883247697;-0.0986064008082076;-0.0982610640808748;-0.0979135758924848;-0.0975639340084509;-0.0972121362099301;-0.0968581802938682;-0.0965020640730433;-0.0961437853761105;-0.0957833420476455;-0.0954207319481889;-0.0950559529542894;-0.0946890029585477;-0.09431987986966;-0.0939485816124612;-0.0935751061279683;-0.0931994513734234;-0.0928216153223364;-0.0924415959645284;-0.0920593913061736;-0.0916749993698427;-0.0912884181945446;-0.0908996458357691;-0.0905086803655288;-0.0901155198724016;-0.0897201624615717;-0.0893226062548723;-0.0889228493908263;-0.0885208900246886;-0.0881167263284868;-0.0877103564910625;-0.0873017787181127;-0.0868909912322302;-0.0864779922729447;-0.0860627800967632;-0.0856453529772106;-0.0852257092048699;-0.0848038470874227;-0.0843797649496887;-0.0839534611336661;-0.0835249339985711;-0.0830941819208773;-0.0826612032943558;-0.0822259965301136;-0.0817885600566336;-0.0813488923198131;-0.0809069917830028;-0.0804628569270452;-0.0800164862503141;-0.0795678782687517;-0.0791170315159078;-0.0786639445429775;-0.0782086159188393;-0.0777510442300928;-0.0772912280810962;-0.0768291660940042;-0.0763648569088048;-0.0758982991833568;-0.0754294915934268;-0.0749584328327259;-0.0744851216129466;-0.0740095566637989;-0.0735317367330474;-0.0730516605865468;-0.0725693270082785;-0.0720847348003859;-0.071597882783211;-0.071108769795329;-0.0706173946935843;-0.0701237563531258;-0.0696278536674418;-0.0691296855483946;-0.0686292509262558;-0.0681265487497408;-0.067621577986043;-0.0671143376208679;-0.0666048266584676;-0.0660930441216749;-0.0655789890519362;-0.0650626605093458;-0.0645440575726791;-0.064023179339426;-0.0635000249258237;-0.0629745934668896;-0.0624468841164546;-0.0619168960471949;-0.0613846284506648;-0.0608500805373288;-0.0603132515365938;-0.0597741406968409;-0.0592327472854569;-0.058689070588866;-0.0581431099125613;-0.0575948645811356;-0.0570443339383125;-0.0564915173469777;-0.0559364141892089;-0.0553790238663066;-0.0548193457988244;-0.0542573794265993;-0.0536931242087811;-0.0531265796238626;-0.0525577451697087;-0.0519866203635867;-0.0514132047421944;-0.0508374978616896;-0.0502594992977191;-0.0496792086454471;-0.0490966255195838;-0.0485117495544134;-0.0479245804038229;-0.047335117741329;-0.0467433612601067;-0.0461493106730163;-0.0455529657126312;-0.0449543261312647;-0.0443533917009969;-0.0437501622137022;-0.0431446374810749;-0.0425368173346564;-0.0419267016258609;-0.0413142902260021;-0.0406995830263182;-0.0400825799379981;-0.0394632808922069;-0.0388416858401109;-0.0382177947529027;-0.0375916076218262;-0.0369631244582015;-0.0363323452934489;-0.0356992701791137;-0.0350638991868898;-0.0344262324086442;-0.0337862699564402;-0.0331440119625613;-0.0324994585795345;-0.031852609980153;-0.0312034663574997;-0.0305520279249694;-0.0298982949162921;-0.0292422675855545;-0.0285839462072226;-0.0279233310761635;-0.0272604225076676;-0.0265952208374693;-0.0259277264217688;-0.0252579396372536;-0.0245858608811188;-0.0239114905710882;-0.0232348291454347;-0.0225558770630009;-0.0218746348032188;-0.0211911028661302;-0.0205052817724058;-0.0198171720633655;-0.0191267743009973;-0.0184340890679761;-0.0177391169676835;-0.0170418586242254;-0.0163423146824514;-0.0156404858079725;-0.0149363726871797;-0.0142299760272615;-0.0135212965562215;-0.0128103350228962;-0.0120970921969721;-0.0113815688690025;-0.0106637658504249;-0.00994368397357705;-0.00922132409171369;-0.00849668707902262;-0.00776977383064064;-0.00704058526266978;-0.00630912231219222;-0.00557538593728603;-0.00483937711704019;-0.00410109685156988;-0.00336054616203061;-0.00261772609063303;-0.00187263770065757;-0.00112528207646786;-0.000375660323525046]|9|8|8|7|17|15|on|on|3|1|off"
	  MaskTabNameString	  ",,,,,,,,,,,,"
	  System {
	    Name		    "fir_tap_5"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_in"
	      Position		      [30, 23, 60, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 58, 60, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 93, 60, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_coef"
	      Ports		      [3, 4]
	      Position		      [115, 29, 205, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "1024 coefs in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag110"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Coefficient Generator"
	      MaskDescription	      "A Finite Impluse Response filter coefficient generator.  This FIR filter coefficient generator outputs real coefficients.  It can output one coefficient or cycle through a vector of coefficients for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response filter coefficient generator.\nThis FIR filter coefficient generator outputs real coefficients.\nIt can output one coefficient or cycle through a vector of coefficients for WOLA\n(Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Coefficiant(s) (coef): The coefficient(s) to output.  For a \"regular\" FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nThese should be specified as doubles.   They will be rounded and saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nUse BRAM for Coefficients (use_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n</pre>"
	      MaskPromptString	      "Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Use BRAM for Coefficients"
	      MaskStyleString	      "edit,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "coef=&1;n_bits_c=&2;bin_pt_c=&3;use_bram=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "[-7.57186305694141e-005;-0.000227564945670749;-0.000379956430889435;-0.000532892796251757;-0.000686373742881339;-0.000840398962979647;-0.000994968139806186;-0.00115008094765919;-0.00130573705185642;-0.00146193610871559;-0.00161867776553536;-0.00177596166057639;-0.00193378742304204;-0.0020921546730598;-0.0022510630216622;-0.00241051207076825;-0.00257050141316491;-0.00273103063248833;-0.00289209930320557;-0.00305370699059638;-0.00321585325073467;-0.00337853763047057;-0.00354175966741245;-0.00370551888990871;-0.00386981481703025;-0.00403464695855241;-0.00420001481493748;-0.00436591787731722;-0.0045323556274752;-0.00469932753782952;-0.00486683307141569;-0.00503487168186923;-0.00520344281340873;-0.00537254590081901;-0.00554218036943399;-0.00571234563512023;-0.00588304110426002;-0.00605426617373492;-0.00622602023090949;-0.00639830265361464;-0.00657111281013151;-0.00674445005917552;-0.00691831374988003;-0.00709270322178053;-0.00726761780479901;-0.00744305681922785;-0.00761901957571464;-0.00779550537524631;-0.0079725135091339;-0.00815004325899737;-0.00832809389675017;-0.0085066646845843;-0.00868575487495546;-0.00886536371056795;-0.00904549042435999;-0.00922613423948933;-0.00940729436931827;-0.0095889700173997;-0.00977116037746245;-0.00995386463339719;-0.0101370819592425;-0.0103208115191707;-0.010505052467474;-0.0106898039485508;-0.0108750650968923;-0.0110608350370682;-0.0112471128837145;-0.011433897741519;-0.0116211887052088;-0.0118089848595372;-0.0119972852792704;-0.0121860890291751;-0.0123753951640054;-0.0125652027284904;-0.0127555107573218;-0.0129463182751411;-0.013137624296528;-0.0133294278259877;-0.0135217278579391;-0.013714523376703;-0.0139078133564902;-0.0141015967613896;-0.0142958725453573;-0.0144906396522044;-0.0146858970155864;-0.0148816435589916;-0.01507787819573;-0.0152745998289226;-0.0154718073514906;-0.0156694996461444;-0.0158676755853733;-0.016066334031435;-0.016265473836345;-0.0164650938418669;-0.016665192879502;-0.0168657697704791;-0.0170668233257453;-0.0172683523459559;-0.0174703556214645;-0.0176728319323143;-0.0178757800482282;-0.0180791987285998;-0.0182830867224842;-0.018487442768589;-0.0186922655952659;-0.0188975539205014;-0.0191033064519087;-0.019309521886719;-0.0195161989117731;-0.0197233362035136;-0.0199309324279764;-0.0201389862407831;-0.020347496287133;-0.0205564612017955;-0.0207658796091025;-0.0209757501229411;-0.0211860713467461;-0.0213968418734932;-0.0216080602856917;-0.0218197251553776;-0.022031835044107;-0.0222443885029495;-0.0224573840724814;-0.0226708202827797;-0.0228846956534157;-0.0230990086934489;-0.0233137579014212;-0.0235289417653507;-0.0237445587627263;-0.0239606073605024;-0.0241770860150929;-0.024393993172366;-0.0246113272676396;-0.0248290867256759;-0.025047269960676;-0.0252658753762764;-0.0254849013655432;-0.0257043463109681;-0.0259242085844644;-0.026144486547362;-0.0263651785504042;-0.026586282933743;-0.026807798026936;-0.0270297221489423;-0.0272520536081191;-0.0274747907022183;-0.0276979317183836;-0.0279214749331467;-0.0281454186124251;-0.0283697610115189;-0.0285945003751079;-0.0288196349372498;-0.029045162921377;-0.0292710825402948;-0.0294973919961793;-0.0297240894805752;-0.0299511731743939;-0.0301786412479123;-0.0304064918607708;-0.0306347231619722;-0.03086333328988;-0.0310923203722177;-0.0313216825260677;-0.0315514178578704;-0.0317815244634236;-0.0320120004278819;-0.0322428438257562;-0.0324740527209136;-0.0327056251665774;-0.0329375592053265;-0.0331698528690966;-0.0334025041791795;-0.0336355111462241;-0.0338688717702371;-0.0341025840405833;-0.0343366459359869;-0.0345710554245323;-0.0348058104636656;-0.0350409090001953;-0.0352763489702948;-0.035512128299503;-0.0357482449027266;-0.0359846966842419;-0.036221481537697;-0.036458597346114;-0.0366960419818909;-0.0369338133068049;-0.0371719091720144;-0.0374103274180622;-0.037649065874878;-0.0378881223617824;-0.038127494687489;-0.0383671806501086;-0.0386071780371525;-0.0388474846255361;-0.0390880981815831;-0.039329016461029;-0.0395702372090256;-0.0398117581601453;-0.0400535770383852;-0.0402956915571721;-0.0405380994193671;-0.0407807983172704;-0.0410237859326265;-0.0412670599366292;-0.0415106179899271;-0.0417544577426293;-0.0419985768343105;-0.0422429728940172;-0.0424876435402736;-0.0427325863810878;-0.0429777990139576;-0.0432232790258777;-0.0434690239933452;-0.0437150314823675;-0.0439612990484682;-0.0442078242366945;-0.0444546045816244;-0.0447016376073741;-0.044948920827605;-0.045196451745532;-0.0454442278539307;-0.0456922466351457;-0.0459405055610986;-0.0461890020932959;-0.046437733682838;-0.0466866977704272;-0.0469358917863767;-0.0471853131506194;-0.0474349592727168;-0.0476848275518681;-0.0479349153769199;-0.0481852201263752;-0.0484357391684033;-0.0486864698608494;-0.0489374095512447;-0.0491885555768165;-0.049439905264498;-0.0496914559309391;-0.0499432048825173;-0.0501951494153474;-0.0504472868152932;-0.0506996143579782;-0.0509521293087968;-0.0512048289229253;-0.0514577104453342;-0.0517107711107988;-0.0519640081439119;-0.0522174187590951;-0.0524710001606109;-0.0527247495425758;-0.0529786640889713;-0.0532327409736577;-0.0534869773603863;-0.0537413704028122;-0.0539959172445073;-0.0542506150189739;-0.0545054608496575;-0.0547604518499607;-0.0550155851232567;-0.0552708577629027;-0.0555262668522548;-0.0557818094646811;-0.0560374826635766;-0.0562932835023776;-0.0565492090245758;-0.0568052562637336;-0.0570614222434986;-0.0573177039776189;-0.0575740984699583;-0.0578306027145112;-0.0580872136954188;-0.0583439283869845;-0.0586007437536894;-0.0588576567502086;-0.0591146643214275;-0.0593717634024577;-0.0596289509186537;-0.0598862237856295;-0.0601435789092752;-0.0604010131857741;-0.0606585235016196;-0.0609161067336326;-0.0611737597489788;-0.0614314794051863;-0.061689262550163;-0.061947106022215;-0.0622050066500641;-0.0624629612528662;-0.0627209666402297;-0.0629790196122337;-0.0632371169594469;-0.0634952554629463;-0.0637534318943358;-0.0640116430157661;-0.064269885579953;-0.0645281563301975;-0.0647864520004051;-0.0650447693151055;-0.0653031049894726;-0.0655614557293443;-0.0658198182312429;-0.0660781891823955;-0.0663365652607541;-0.0665949431350165;-0.0668533194646474;-0.0671116908998989;-0.0673700540818315;-0.0676284056423361;-0.0678867422041547;-0.0681450603809021;-0.0684033567770881;-0.0686616279881388;-0.068919870600419;-0.0691780811912541;-0.0694362563289528;-0.0696943925728293;-0.0699524864732263;-0.0702105345715372;-0.0704685334002297;-0.0707264794828686;-0.0709843693341391;-0.0712421994598703;-0.0714999663570587;-0.0717576665138918;-0.0720152964097724;-0.0722728525153421;-0.0725303312925058;-0.0727877291944562;-0.0730450426656978;-0.073302268142072;-0.0735594020507816;-0.0738164408104159;-0.0740733808309759;-0.0743302185138991;-0.0745869502520857;-0.0748435724299231;-0.0751000814233127;-0.075356473599695;-0.0756127453180758;-0.0758688929290526;-0.0761249127748406;-0.0763808011892994;-0.0766365544979593;-0.0768921690180486;-0.0771476410585198;-0.0774029669200773;-0.0776581428952044;-0.0779131652681904;-0.0781680303151585;-0.0784227343040934;-0.0786772734948688;-0.0789316441392758;-0.0791858424810506;-0.079439864755903;-0.0796937071915449;-0.0799473660077185;-0.0802008374162255;-0.0804541176209555;-0.0807072028179151;-0.0809600891952574;-0.0812127729333109;-0.0814652502046088;-0.0817175171739195;-0.0819695699982751;-0.082221404827002;-0.0824730178017513;-0.0827244050565279;-0.0829755627177218;-0.083226486904138;-0.0834771737270274;-0.0837276192901176;-0.0839778196896433;-0.0842277710143782;-0.0844774693456655;-0.0847269107574494;-0.0849760913163068;-0.0852250070814789;-0.0854736541049025;-0.0857220284312427;-0.0859701260979243;-0.0862179431351643;-0.0864654755660042;-0.0867127194063427;-0.0869596706649676;-0.0872063253435898;-0.0874526794368749;-0.0876987289324774;-0.0879444698110729;-0.0881898980463924;-0.0884350096052548;-0.0886798004476017;-0.0889242665265297;-0.0891684037883258;-0.0894122081725004;-0.0896556756118219;-0.0898988020323511;-0.0901415833534753;-0.0903840154879432;-0.0906260943418998;-0.0908678158149208;-0.0911091758000479;-0.091350170183824;-0.0915907948463285;-0.0918310456612125;-0.0920709184957346;-0.0923104092107966;-0.0925495136609791;-0.0927882276945778;-0.0930265471536394;-0.093264467873998;-0.0935019856853112;-0.0937390964110971;-0.0939757958687704;-0.0942120798696797;-0.0944479442191439;-0.0946833847164898;-0.0949183971550889;-0.095152977322395;-0.0953871209999812;-0.095620823963578;-0.095854081983111;-0.0960868908227382;-0.0963192462408885;-0.0965511439902998;-0.0967825798180567;-0.09701354946563;-0.0972440486689138;-0.0974740731582651;-0.0977036186585424;-0.0979326808891443;-0.0981612555640488;-0.0983893383918524;-0.0986169250758091;-0.0988440113138705;-0.0990705927987245;-0.0992966652178355;-0.099522224253484;-0.0997472655828066;-0.0999717848778359;-0.100195777805541;-0.100419240027867;-0.100642167201777;-0.10086455497929;-0.101086399007525;-0.101307694928738;-0.101528438380368;-0.101748624995071;-0.101968250400767;-0.102187310220681;-0.102405800073379;-0.102623715572817;-0.102841052328376;-0.10305780594491;-0.10327397202278;-0.103489546157905;-0.103704523941797;-0.103918900961607;-0.104132672800167;-0.10434583503603;-0.104558383243515;-0.104770312992751;-0.104981619849715;-0.105192299376281;-0.105402347130257;-0.105611758665433;-0.105820529531622;-0.106028655274704;-0.10623613143667;-0.106442953555663;-0.106649117166026;-0.106854617798343;-0.107059450979484;-0.107263612232647;-0.107467097077407;-0.107669901029754;-0.107872019602144;-0.108073448303537;-0.108274182639448;-0.108474218111987;-0.108673550219905;-0.108872174458642;-0.109070086320367;-0.109267281294027;-0.109463754865391;-0.109659502517097;-0.109854519728693;-0.110048801976688;-0.110242344734596;-0.110435143472979;-0.110627193659497;-0.110818490758952;-0.111009030233334;-0.111198807541867;-0.111387818141058;-0.111576057484741;-0.111763521024123;-0.111950204207832;-0.112136102481964;-0.11232121129013;-0.112505526073501;-0.112689042270857;-0.112871755318635;-0.113053660650972;-0.113234753699757;-0.113415029894677;-0.113594484663264;-0.113773113430942;-0.113950911621077;-0.114127874655023;-0.11430399795217;-0.114479276929993;-0.1146537070041;-0.114827283588279;-0.115000002094548;-0.115171857933203;-0.115342846512864;-0.115512963240528;-0.115682203521616;-0.115850562760017;-0.116018036358147;-0.116184619716987;-0.116350308236141;-0.116515097313878;-0.116678982347186;-0.11684195873182;-0.117004021862351;-0.117165167132216;-0.117325389933767;-0.117484685658321;-0.117643049696209;-0.117800477436828;-0.117956964268688;-0.118112505579464;-0.118267096756046;-0.118420733184589;-0.118573410250562;-0.118725123338799;-0.118875867833551;-0.119025639118535;-0.119174432576984;-0.1193222435917;-0.1194690675451;-0.119614899819273;-0.119759735796028;-0.119903570856942;-0.120046400383417;-0.120188219756726;-0.120329024358068;-0.120468809568615;-0.120607570769567;-0.120745303342203;-0.120882002667932;-0.121017664128342;-0.121152283105255;-0.12128585498078;-0.121418375137358;-0.121549838957822;-0.121680241825444;-0.121809579123986;-0.121937846237758;-0.122065038551663;-0.122191151451255;-0.122316180322788;-0.122440120553267;-0.122562967530506;-0.122684716643174;-0.122805363280853;-0.122924902834086;-0.123043330694433;-0.123160642254522;-0.123276832908101;-0.123391898050093;-0.12350583307665;-0.1236186333852;-0.123730294374506;-0.123840811444718;-0.123950179997422;-0.124058395435699;-0.124165453164175;-0.124271348589074;-0.124376077118273;-0.124479634161354;-0.124582015129658;-0.12468321543634;-0.124783230496419;-0.124882055726836;-0.124979686546505;-0.125076118376365;-0.12517134663944;-0.125265366760885;-0.125358174168047;-0.125449764290513;-0.12554013256017;-0.125629274411252;-0.1257171852804;-0.125803860606714;-0.125889295831806;-0.125973486399857;-0.126056427757669;-0.12613811535472;-0.126218544643217;-0.126297711078153;-0.126375610117361;-0.126452237221565;-0.126527587854441;-0.126601657482665;-0.12667444157597;-0.126745935607204;-0.126816135052377;-0.126885035390726;-0.12695263210476;-0.12701892068032;-0.127083896606635;-0.127147555376371;-0.127209892485693;-0.127270903434314;-0.127330583725555;-0.127388928866395;-0.127445934367531;-0.127501595743429;-0.127555908512382;-0.127608868196561;-0.127660470322078;-0.127710710419032;-0.12775958402157;-0.127807086667941;-0.127853213900551;-0.127897961266018;-0.127941324315228;-0.127983298603389;-0.128023879690088;-0.128063063139347;-0.128100844519676;-0.12813721940413;-0.128172183370362;-0.128205732000685;-0.12823786088212;-0.128268565606454;-0.1282978417703;-0.128325684975145;-0.128352090827411;-0.12837705493851;-0.128400572924896;-0.128422640408125;-0.128443253014909;-0.128462406377172;-0.128480096132103;-0.128496317922217;-0.128511067395406;-0.128524340204996;-0.128536132009803;-0.128546438474192;-0.128555255268125;-0.128562578067225;-0.128568402552826;-0.128572724412033;-0.128575539337773;-0.128576843028855;-0.128576631190026;-0.128574899532022;-0.128571643771628;-0.128566859631735;-0.12856054284139;-0.128552689135858;-0.128543294256673;-0.128532353951698;-0.128519863975179;-0.128505820087798;-0.128490218056735;-0.128473053655717;-0.128454322665079;-0.128434020871817;-0.128412144069646;-0.128388688059053;-0.128363648647355;-0.128337021648755;-0.128308802884396;-0.128278988182416;-0.128247573378009;-0.128214554313474;-0.128179926838275;-0.128143686809098;-0.1281058300899;-0.128066352551973;-0.128025250073994;-0.127982518542083;-0.127938153849857;-0.12789215189849;-0.127844508596762;-0.12779521986112;-0.127744281615732;-0.127691689792542;-0.127637440331325;-0.127581529179746;-0.12752395229341;-0.127464705635923;-0.127403785178944;-0.127341186902242;-0.127276906793752;-0.127210940849628;-0.1271432850743;-0.12707393548053;-0.127002888089467;-0.126930138930701;-0.126855684042321;-0.126779519470967;-0.126701641271888;-0.126622045508995;-0.126540728254919;-0.126457685591063;-0.126372913607659;-0.126286408403824;-0.126198166087613;-0.126108182776074;-0.126016454595306;-0.125922977680511;-0.125827748176048;-0.125730762235494;-0.12563201602169;-0.125531505706804;-0.12542922747238;-0.125325177509398;-0.125219352018322;-0.125111747209161;-0.125002359301522;-0.12489118452466;-0.124778219117541;-0.124663459328888;-0.124546901417241;-0.124428541651009;-0.124308376308528;-0.124186401678108;-0.124062614058095;-0.12393700975692;-0.123809585093158;-0.123680336395576;-0.123549260003193;-0.12341635226533;-0.123281609541668;-0.123145028202296;-0.123006604627771;-0.122866335209169;-0.122724216348138;-0.122580244456954;-0.122434415958572;-0.122286727286684;-0.122137174885766;-0.121985755211139;-0.121832464729017;-0.12167729991656;-0.121520257261934;-0.121361333264356;-0.121200524434153;-0.121037827292813;-0.120873238373037;-0.120706754218796;-0.120538371385378;-0.120368086439447;-0.120195895959092;-0.12002179653388;-0.119845784764912;-0.119667857264872;-0.11948801065808;-0.119306241580546;-0.119122546680023;-0.118936922616057;-0.118749366060041;-0.118559873695267;-0.118368442216977;-0.118175068332418;-0.117979748760891;-0.117782480233803;-0.117583259494722;-0.117382083299426;-0.117178948415955;-0.116973851624663;-0.116766789718271;-0.116557759501917;-0.116346757793206;-0.116133781422266;-0.115918827231792;-0.115701892077107;-0.115482972826202;-0.115262066359796;-0.115039169571384;-0.114814279367284;-0.114587392666694;-0.11435850640174;-0.114127617517525;-0.113894722972181;-0.11365981973692;-0.113422904796084;-0.113183975147195;-0.112943027801003;-0.112700059781542;-0.112455068126173;-0.112208049885639;-0.111959002124111;-0.111707921919243;-0.111454806362214;-0.111199652557785;-0.110942457624343;-0.110683218693955;-0.110421932912413;-0.110158597439284;-0.109893209447962;-0.109625766125715;-0.109356264673732;-0.109084702307174;-0.108811076255224;-0.108535383761131;-0.108257622082262;-0.107977788490152;-0.107695880270546;-0.107411894723454;-0.107125829163193;-0.10683768091844;-0.106547447332278;-0.106255125762242;-0.105960713580369;-0.105664208173243;-0.105365606942047;-0.105064907302604;-0.104762106685429;-0.104457202535775;-0.104150192313679;-0.103841073494009;-0.103529843566511;-0.103216500035856;-0.102901040421687;-0.102583462258662;-0.102263763096507;-0.101941940500055;-0.101617992049296;-0.101291915339421;-0.100963707980872;-0.100633367599381;-0.100300891836022;-0.0999662783472516;-0.0996295248049575;-0.0992906288965024;-0.0989495883247697;-0.0986064008082076;-0.0982610640808748;-0.0979135758924848;-0.0975639340084509;-0.0972121362099301;-0.0968581802938682;-0.0965020640730433;-0.0961437853761105;-0.0957833420476455;-0.0954207319481889;-0.0950559529542894;-0.0946890029585477;-0.09431987986966;-0.0939485816124612;-0.0935751061279683;-0.0931994513734234;-0.0928216153223364;-0.0924415959645284;-0.0920593913061736;-0.0916749993698427;-0.0912884181945446;-0.0908996458357691;-0.0905086803655288;-0.0901155198724016;-0.0897201624615717;-0.0893226062548723;-0.0889228493908263;-0.0885208900246886;-0.0881167263284868;-0.0877103564910625;-0.0873017787181127;-0.0868909912322302;-0.0864779922729447;-0.0860627800967632;-0.0856453529772106;-0.0852257092048699;-0.0848038470874227;-0.0843797649496887;-0.0839534611336661;-0.0835249339985711;-0.0830941819208773;-0.0826612032943558;-0.0822259965301136;-0.0817885600566336;-0.0813488923198131;-0.0809069917830028;-0.0804628569270452;-0.0800164862503141;-0.0795678782687517;-0.0791170315159078;-0.0786639445429775;-0.0782086159188393;-0.0777510442300928;-0.0772912280810962;-0.0768291660940042;-0.0763648569088048;-0.0758982991833568;-0.0754294915934268;-0.0749584328327259;-0.0744851216129466;-0.0740095566637989;-0.0735317367330474;-0.0730516605865468;-0.0725693270082785;-0.0720847348003859;-0.071597882783211;-0.071108769795329;-0.0706173946935843;-0.0701237563531258;-0.0696278536674418;-0.0691296855483946;-0.0686292509262558;-0.0681265487497408;-0.067621577986043;-0.0671143376208679;-0.0666048266584676;-0.0660930441216749;-0.0655789890519362;-0.0650626605093458;-0.0645440575726791;-0.064023179339426;-0.0635000249258237;-0.0629745934668896;-0.0624468841164546;-0.0619168960471949;-0.0613846284506648;-0.0608500805373288;-0.0603132515365938;-0.0597741406968409;-0.0592327472854569;-0.058689070588866;-0.0581431099125613;-0.0575948645811356;-0.0570443339383125;-0.0564915173469777;-0.0559364141892089;-0.0553790238663066;-0.0548193457988244;-0.0542573794265993;-0.0536931242087811;-0.0531265796238626;-0.0525577451697087;-0.0519866203635867;-0.0514132047421944;-0.0508374978616896;-0.0502594992977191;-0.0496792086454471;-0.0490966255195838;-0.0485117495544134;-0.0479245804038229;-0.047335117741329;-0.0467433612601067;-0.0461493106730163;-0.0455529657126312;-0.0449543261312647;-0.0443533917009969;-0.0437501622137022;-0.0431446374810749;-0.0425368173346564;-0.0419267016258609;-0.0413142902260021;-0.0406995830263182;-0.0400825799379981;-0.0394632808922069;-0.0388416858401109;-0.0382177947529027;-0.0375916076218262;-0.0369631244582015;-0.0363323452934489;-0.0356992701791137;-0.0350638991868898;-0.0344262324086442;-0.0337862699564402;-0.0331440119625613;-0.0324994585795345;-0.031852609980153;-0.0312034663574997;-0.0305520279249694;-0.0298982949162921;-0.0292422675855545;-0.0285839462072226;-0.0279233310761635;-0.0272604225076676;-0.0265952208374693;-0.0259277264217688;-0.0252579396372536;-0.0245858608811188;-0.0239114905710882;-0.0232348291454347;-0.0225558770630009;-0.0218746348032188;-0.0211911028661302;-0.0205052817724058;-0.0198171720633655;-0.0191267743009973;-0.0184340890679761;-0.0177391169676835;-0.0170418586242254;-0.0163423146824514;-0.0156404858079725;-0.0149363726871797;-0.0142299760272615;-0.0135212965562215;-0.0128103350228962;-0.0120970921969721;-0.0113815688690025;-0.0106637658504249;-0.00994368397357705;-0.00922132409171369;-0.00849668707902262;-0.00776977383064064;-0.00704058526266978;-0.00630912231219222;-0.00557538593728603;-0.00483937711704019;-0.00410109685156988;-0.00336054616203061;-0.00261772609063303;-0.00187263770065757;-0.00112528207646786;-0.000375660323525046]|9|8|on"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"fir_coef"
		Location		[609, 271, 1389, 957]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 68, 60, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 193, 60, 207]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_gen"
		  Ports			  [1, 1]
		  Position		  [130, 109, 220, 141]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "1024 coefs in bram\n9_8 out/1"
		  UserDataPersistent	  on
		  UserData		  "DataTag111"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Coefficient Generator"
		  MaskDescription	  "A coefficient generator."
		  MaskHelp		  "<pre>\nDescription::\n\nA coefficient generator.\n\nMask Parameters::\n\nCoefficiants (coefs): The coefficients to output.  These should be specified as doubles.\nThey will be rounded/saturated according to the specified number of bits (n_bits)\nand binary point (bin_pt).\n\nNumber of Coefficient Bits (n_bits): The number of bits used for the fixed point binary\nrepresentation of the coefficients.\n\nCoefficient Binary Point (bin_pt): The binary point of the fixed point binary representation\nof the coefficients.\n\nLog2 Cycles per Coefficient (log2_cpc): The log2 value of the number of cycles per coefficient.\nMust be a non-negative integer (i.e. cycles per coefficient must be a power of 2).  \n\nUse BRAM (use_bram): Check this checkbox to store coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Coefficients|Number of Bits|Binary Point|Log2 Cycles per Coefficient|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off"
		  MaskCallbackString	  "||||"
		  MaskEnableString	  "off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on"
		  MaskVarAliasString	  ",,,,"
		  MaskVariables		  "coefs=&1;n_bits=&2;bin_pt=&3;log2_cpc=&4;use_bram=&5;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "[-7.57186305694141e-005;-0.000227564945670749;-0.000379956430889435;-0.000532892796251757;-0.000686373742881339;-0.000840398962979647;-0.000994968139806186;-0.00115008094765919;-0.00130573705185642;-0.00146193610871559;-0.00161867776553536;-0.00177596166057639;-0.00193378742304204;-0.0020921546730598;-0.0022510630216622;-0.00241051207076825;-0.00257050141316491;-0.00273103063248833;-0.00289209930320557;-0.00305370699059638;-0.00321585325073467;-0.00337853763047057;-0.00354175966741245;-0.00370551888990871;-0.00386981481703025;-0.00403464695855241;-0.00420001481493748;-0.00436591787731722;-0.0045323556274752;-0.00469932753782952;-0.00486683307141569;-0.00503487168186923;-0.00520344281340873;-0.00537254590081901;-0.00554218036943399;-0.00571234563512023;-0.00588304110426002;-0.00605426617373492;-0.00622602023090949;-0.00639830265361464;-0.00657111281013151;-0.00674445005917552;-0.00691831374988003;-0.00709270322178053;-0.00726761780479901;-0.00744305681922785;-0.00761901957571464;-0.00779550537524631;-0.0079725135091339;-0.00815004325899737;-0.00832809389675017;-0.0085066646845843;-0.00868575487495546;-0.00886536371056795;-0.00904549042435999;-0.00922613423948933;-0.00940729436931827;-0.0095889700173997;-0.00977116037746245;-0.00995386463339719;-0.0101370819592425;-0.0103208115191707;-0.010505052467474;-0.0106898039485508;-0.0108750650968923;-0.0110608350370682;-0.0112471128837145;-0.011433897741519;-0.0116211887052088;-0.0118089848595372;-0.0119972852792704;-0.0121860890291751;-0.0123753951640054;-0.0125652027284904;-0.0127555107573218;-0.0129463182751411;-0.013137624296528;-0.0133294278259877;-0.0135217278579391;-0.013714523376703;-0.0139078133564902;-0.0141015967613896;-0.0142958725453573;-0.0144906396522044;-0.0146858970155864;-0.0148816435589916;-0.01507787819573;-0.0152745998289226;-0.0154718073514906;-0.0156694996461444;-0.0158676755853733;-0.016066334031435;-0.016265473836345;-0.0164650938418669;-0.016665192879502;-0.0168657697704791;-0.0170668233257453;-0.0172683523459559;-0.0174703556214645;-0.0176728319323143;-0.0178757800482282;-0.0180791987285998;-0.0182830867224842;-0.018487442768589;-0.0186922655952659;-0.0188975539205014;-0.0191033064519087;-0.019309521886719;-0.0195161989117731;-0.0197233362035136;-0.0199309324279764;-0.0201389862407831;-0.020347496287133;-0.0205564612017955;-0.0207658796091025;-0.0209757501229411;-0.0211860713467461;-0.0213968418734932;-0.0216080602856917;-0.0218197251553776;-0.022031835044107;-0.0222443885029495;-0.0224573840724814;-0.0226708202827797;-0.0228846956534157;-0.0230990086934489;-0.0233137579014212;-0.0235289417653507;-0.0237445587627263;-0.0239606073605024;-0.0241770860150929;-0.024393993172366;-0.0246113272676396;-0.0248290867256759;-0.025047269960676;-0.0252658753762764;-0.0254849013655432;-0.0257043463109681;-0.0259242085844644;-0.026144486547362;-0.0263651785504042;-0.026586282933743;-0.026807798026936;-0.0270297221489423;-0.0272520536081191;-0.0274747907022183;-0.0276979317183836;-0.0279214749331467;-0.0281454186124251;-0.0283697610115189;-0.0285945003751079;-0.0288196349372498;-0.029045162921377;-0.0292710825402948;-0.0294973919961793;-0.0297240894805752;-0.0299511731743939;-0.0301786412479123;-0.0304064918607708;-0.0306347231619722;-0.03086333328988;-0.0310923203722177;-0.0313216825260677;-0.0315514178578704;-0.0317815244634236;-0.0320120004278819;-0.0322428438257562;-0.0324740527209136;-0.0327056251665774;-0.0329375592053265;-0.0331698528690966;-0.0334025041791795;-0.0336355111462241;-0.0338688717702371;-0.0341025840405833;-0.0343366459359869;-0.0345710554245323;-0.0348058104636656;-0.0350409090001953;-0.0352763489702948;-0.035512128299503;-0.0357482449027266;-0.0359846966842419;-0.036221481537697;-0.036458597346114;-0.0366960419818909;-0.0369338133068049;-0.0371719091720144;-0.0374103274180622;-0.037649065874878;-0.0378881223617824;-0.038127494687489;-0.0383671806501086;-0.0386071780371525;-0.0388474846255361;-0.0390880981815831;-0.039329016461029;-0.0395702372090256;-0.0398117581601453;-0.0400535770383852;-0.0402956915571721;-0.0405380994193671;-0.0407807983172704;-0.0410237859326265;-0.0412670599366292;-0.0415106179899271;-0.0417544577426293;-0.0419985768343105;-0.0422429728940172;-0.0424876435402736;-0.0427325863810878;-0.0429777990139576;-0.0432232790258777;-0.0434690239933452;-0.0437150314823675;-0.0439612990484682;-0.0442078242366945;-0.0444546045816244;-0.0447016376073741;-0.044948920827605;-0.045196451745532;-0.0454442278539307;-0.0456922466351457;-0.0459405055610986;-0.0461890020932959;-0.046437733682838;-0.0466866977704272;-0.0469358917863767;-0.0471853131506194;-0.0474349592727168;-0.0476848275518681;-0.0479349153769199;-0.0481852201263752;-0.0484357391684033;-0.0486864698608494;-0.0489374095512447;-0.0491885555768165;-0.049439905264498;-0.0496914559309391;-0.0499432048825173;-0.0501951494153474;-0.0504472868152932;-0.0506996143579782;-0.0509521293087968;-0.0512048289229253;-0.0514577104453342;-0.0517107711107988;-0.0519640081439119;-0.0522174187590951;-0.0524710001606109;-0.0527247495425758;-0.0529786640889713;-0.0532327409736577;-0.0534869773603863;-0.0537413704028122;-0.0539959172445073;-0.0542506150189739;-0.0545054608496575;-0.0547604518499607;-0.0550155851232567;-0.0552708577629027;-0.0555262668522548;-0.0557818094646811;-0.0560374826635766;-0.0562932835023776;-0.0565492090245758;-0.0568052562637336;-0.0570614222434986;-0.0573177039776189;-0.0575740984699583;-0.0578306027145112;-0.0580872136954188;-0.0583439283869845;-0.0586007437536894;-0.0588576567502086;-0.0591146643214275;-0.0593717634024577;-0.0596289509186537;-0.0598862237856295;-0.0601435789092752;-0.0604010131857741;-0.0606585235016196;-0.0609161067336326;-0.0611737597489788;-0.0614314794051863;-0.061689262550163;-0.061947106022215;-0.0622050066500641;-0.0624629612528662;-0.0627209666402297;-0.0629790196122337;-0.0632371169594469;-0.0634952554629463;-0.0637534318943358;-0.0640116430157661;-0.064269885579953;-0.0645281563301975;-0.0647864520004051;-0.0650447693151055;-0.0653031049894726;-0.0655614557293443;-0.0658198182312429;-0.0660781891823955;-0.0663365652607541;-0.0665949431350165;-0.0668533194646474;-0.0671116908998989;-0.0673700540818315;-0.0676284056423361;-0.0678867422041547;-0.0681450603809021;-0.0684033567770881;-0.0686616279881388;-0.068919870600419;-0.0691780811912541;-0.0694362563289528;-0.0696943925728293;-0.0699524864732263;-0.0702105345715372;-0.0704685334002297;-0.0707264794828686;-0.0709843693341391;-0.0712421994598703;-0.0714999663570587;-0.0717576665138918;-0.0720152964097724;-0.0722728525153421;-0.0725303312925058;-0.0727877291944562;-0.0730450426656978;-0.073302268142072;-0.0735594020507816;-0.0738164408104159;-0.0740733808309759;-0.0743302185138991;-0.0745869502520857;-0.0748435724299231;-0.0751000814233127;-0.075356473599695;-0.0756127453180758;-0.0758688929290526;-0.0761249127748406;-0.0763808011892994;-0.0766365544979593;-0.0768921690180486;-0.0771476410585198;-0.0774029669200773;-0.0776581428952044;-0.0779131652681904;-0.0781680303151585;-0.0784227343040934;-0.0786772734948688;-0.0789316441392758;-0.0791858424810506;-0.079439864755903;-0.0796937071915449;-0.0799473660077185;-0.0802008374162255;-0.0804541176209555;-0.0807072028179151;-0.0809600891952574;-0.0812127729333109;-0.0814652502046088;-0.0817175171739195;-0.0819695699982751;-0.082221404827002;-0.0824730178017513;-0.0827244050565279;-0.0829755627177218;-0.083226486904138;-0.0834771737270274;-0.0837276192901176;-0.0839778196896433;-0.0842277710143782;-0.0844774693456655;-0.0847269107574494;-0.0849760913163068;-0.0852250070814789;-0.0854736541049025;-0.0857220284312427;-0.0859701260979243;-0.0862179431351643;-0.0864654755660042;-0.0867127194063427;-0.0869596706649676;-0.0872063253435898;-0.0874526794368749;-0.0876987289324774;-0.0879444698110729;-0.0881898980463924;-0.0884350096052548;-0.0886798004476017;-0.0889242665265297;-0.0891684037883258;-0.0894122081725004;-0.0896556756118219;-0.0898988020323511;-0.0901415833534753;-0.0903840154879432;-0.0906260943418998;-0.0908678158149208;-0.0911091758000479;-0.091350170183824;-0.0915907948463285;-0.0918310456612125;-0.0920709184957346;-0.0923104092107966;-0.0925495136609791;-0.0927882276945778;-0.0930265471536394;-0.093264467873998;-0.0935019856853112;-0.0937390964110971;-0.0939757958687704;-0.0942120798696797;-0.0944479442191439;-0.0946833847164898;-0.0949183971550889;-0.095152977322395;-0.0953871209999812;-0.095620823963578;-0.095854081983111;-0.0960868908227382;-0.0963192462408885;-0.0965511439902998;-0.0967825798180567;-0.09701354946563;-0.0972440486689138;-0.0974740731582651;-0.0977036186585424;-0.0979326808891443;-0.0981612555640488;-0.0983893383918524;-0.0986169250758091;-0.0988440113138705;-0.0990705927987245;-0.0992966652178355;-0.099522224253484;-0.0997472655828066;-0.0999717848778359;-0.100195777805541;-0.100419240027867;-0.100642167201777;-0.10086455497929;-0.101086399007525;-0.101307694928738;-0.101528438380368;-0.101748624995071;-0.101968250400767;-0.102187310220681;-0.102405800073379;-0.102623715572817;-0.102841052328376;-0.10305780594491;-0.10327397202278;-0.103489546157905;-0.103704523941797;-0.103918900961607;-0.104132672800167;-0.10434583503603;-0.104558383243515;-0.104770312992751;-0.104981619849715;-0.105192299376281;-0.105402347130257;-0.105611758665433;-0.105820529531622;-0.106028655274704;-0.10623613143667;-0.106442953555663;-0.106649117166026;-0.106854617798343;-0.107059450979484;-0.107263612232647;-0.107467097077407;-0.107669901029754;-0.107872019602144;-0.108073448303537;-0.108274182639448;-0.108474218111987;-0.108673550219905;-0.108872174458642;-0.109070086320367;-0.109267281294027;-0.109463754865391;-0.109659502517097;-0.109854519728693;-0.110048801976688;-0.110242344734596;-0.110435143472979;-0.110627193659497;-0.110818490758952;-0.111009030233334;-0.111198807541867;-0.111387818141058;-0.111576057484741;-0.111763521024123;-0.111950204207832;-0.112136102481964;-0.11232121129013;-0.112505526073501;-0.112689042270857;-0.112871755318635;-0.113053660650972;-0.113234753699757;-0.113415029894677;-0.113594484663264;-0.113773113430942;-0.113950911621077;-0.114127874655023;-0.11430399795217;-0.114479276929993;-0.1146537070041;-0.114827283588279;-0.115000002094548;-0.115171857933203;-0.115342846512864;-0.115512963240528;-0.115682203521616;-0.115850562760017;-0.116018036358147;-0.116184619716987;-0.116350308236141;-0.116515097313878;-0.116678982347186;-0.11684195873182;-0.117004021862351;-0.117165167132216;-0.117325389933767;-0.117484685658321;-0.117643049696209;-0.117800477436828;-0.117956964268688;-0.118112505579464;-0.118267096756046;-0.118420733184589;-0.118573410250562;-0.118725123338799;-0.118875867833551;-0.119025639118535;-0.119174432576984;-0.1193222435917;-0.1194690675451;-0.119614899819273;-0.119759735796028;-0.119903570856942;-0.120046400383417;-0.120188219756726;-0.120329024358068;-0.120468809568615;-0.120607570769567;-0.120745303342203;-0.120882002667932;-0.121017664128342;-0.121152283105255;-0.12128585498078;-0.121418375137358;-0.121549838957822;-0.121680241825444;-0.121809579123986;-0.121937846237758;-0.122065038551663;-0.122191151451255;-0.122316180322788;-0.122440120553267;-0.122562967530506;-0.122684716643174;-0.122805363280853;-0.122924902834086;-0.123043330694433;-0.123160642254522;-0.123276832908101;-0.123391898050093;-0.12350583307665;-0.1236186333852;-0.123730294374506;-0.123840811444718;-0.123950179997422;-0.124058395435699;-0.124165453164175;-0.124271348589074;-0.124376077118273;-0.124479634161354;-0.124582015129658;-0.12468321543634;-0.124783230496419;-0.124882055726836;-0.124979686546505;-0.125076118376365;-0.12517134663944;-0.125265366760885;-0.125358174168047;-0.125449764290513;-0.12554013256017;-0.125629274411252;-0.1257171852804;-0.125803860606714;-0.125889295831806;-0.125973486399857;-0.126056427757669;-0.12613811535472;-0.126218544643217;-0.126297711078153;-0.126375610117361;-0.126452237221565;-0.126527587854441;-0.126601657482665;-0.12667444157597;-0.126745935607204;-0.126816135052377;-0.126885035390726;-0.12695263210476;-0.12701892068032;-0.127083896606635;-0.127147555376371;-0.127209892485693;-0.127270903434314;-0.127330583725555;-0.127388928866395;-0.127445934367531;-0.127501595743429;-0.127555908512382;-0.127608868196561;-0.127660470322078;-0.127710710419032;-0.12775958402157;-0.127807086667941;-0.127853213900551;-0.127897961266018;-0.127941324315228;-0.127983298603389;-0.128023879690088;-0.128063063139347;-0.128100844519676;-0.12813721940413;-0.128172183370362;-0.128205732000685;-0.12823786088212;-0.128268565606454;-0.1282978417703;-0.128325684975145;-0.128352090827411;-0.12837705493851;-0.128400572924896;-0.128422640408125;-0.128443253014909;-0.128462406377172;-0.128480096132103;-0.128496317922217;-0.128511067395406;-0.128524340204996;-0.128536132009803;-0.128546438474192;-0.128555255268125;-0.128562578067225;-0.128568402552826;-0.128572724412033;-0.128575539337773;-0.128576843028855;-0.128576631190026;-0.128574899532022;-0.128571643771628;-0.128566859631735;-0.12856054284139;-0.128552689135858;-0.128543294256673;-0.128532353951698;-0.128519863975179;-0.128505820087798;-0.128490218056735;-0.128473053655717;-0.128454322665079;-0.128434020871817;-0.128412144069646;-0.128388688059053;-0.128363648647355;-0.128337021648755;-0.128308802884396;-0.128278988182416;-0.128247573378009;-0.128214554313474;-0.128179926838275;-0.128143686809098;-0.1281058300899;-0.128066352551973;-0.128025250073994;-0.127982518542083;-0.127938153849857;-0.12789215189849;-0.127844508596762;-0.12779521986112;-0.127744281615732;-0.127691689792542;-0.127637440331325;-0.127581529179746;-0.12752395229341;-0.127464705635923;-0.127403785178944;-0.127341186902242;-0.127276906793752;-0.127210940849628;-0.1271432850743;-0.12707393548053;-0.127002888089467;-0.126930138930701;-0.126855684042321;-0.126779519470967;-0.126701641271888;-0.126622045508995;-0.126540728254919;-0.126457685591063;-0.126372913607659;-0.126286408403824;-0.126198166087613;-0.126108182776074;-0.126016454595306;-0.125922977680511;-0.125827748176048;-0.125730762235494;-0.12563201602169;-0.125531505706804;-0.12542922747238;-0.125325177509398;-0.125219352018322;-0.125111747209161;-0.125002359301522;-0.12489118452466;-0.124778219117541;-0.124663459328888;-0.124546901417241;-0.124428541651009;-0.124308376308528;-0.124186401678108;-0.124062614058095;-0.12393700975692;-0.123809585093158;-0.123680336395576;-0.123549260003193;-0.12341635226533;-0.123281609541668;-0.123145028202296;-0.123006604627771;-0.122866335209169;-0.122724216348138;-0.122580244456954;-0.122434415958572;-0.122286727286684;-0.122137174885766;-0.121985755211139;-0.121832464729017;-0.12167729991656;-0.121520257261934;-0.121361333264356;-0.121200524434153;-0.121037827292813;-0.120873238373037;-0.120706754218796;-0.120538371385378;-0.120368086439447;-0.120195895959092;-0.12002179653388;-0.119845784764912;-0.119667857264872;-0.11948801065808;-0.119306241580546;-0.119122546680023;-0.118936922616057;-0.118749366060041;-0.118559873695267;-0.118368442216977;-0.118175068332418;-0.117979748760891;-0.117782480233803;-0.117583259494722;-0.117382083299426;-0.117178948415955;-0.116973851624663;-0.116766789718271;-0.116557759501917;-0.116346757793206;-0.116133781422266;-0.115918827231792;-0.115701892077107;-0.115482972826202;-0.115262066359796;-0.115039169571384;-0.114814279367284;-0.114587392666694;-0.11435850640174;-0.114127617517525;-0.113894722972181;-0.11365981973692;-0.113422904796084;-0.113183975147195;-0.112943027801003;-0.112700059781542;-0.112455068126173;-0.112208049885639;-0.111959002124111;-0.111707921919243;-0.111454806362214;-0.111199652557785;-0.110942457624343;-0.110683218693955;-0.110421932912413;-0.110158597439284;-0.109893209447962;-0.109625766125715;-0.109356264673732;-0.109084702307174;-0.108811076255224;-0.108535383761131;-0.108257622082262;-0.107977788490152;-0.107695880270546;-0.107411894723454;-0.107125829163193;-0.10683768091844;-0.106547447332278;-0.106255125762242;-0.105960713580369;-0.105664208173243;-0.105365606942047;-0.105064907302604;-0.104762106685429;-0.104457202535775;-0.104150192313679;-0.103841073494009;-0.103529843566511;-0.103216500035856;-0.102901040421687;-0.102583462258662;-0.102263763096507;-0.101941940500055;-0.101617992049296;-0.101291915339421;-0.100963707980872;-0.100633367599381;-0.100300891836022;-0.0999662783472516;-0.0996295248049575;-0.0992906288965024;-0.0989495883247697;-0.0986064008082076;-0.0982610640808748;-0.0979135758924848;-0.0975639340084509;-0.0972121362099301;-0.0968581802938682;-0.0965020640730433;-0.0961437853761105;-0.0957833420476455;-0.0954207319481889;-0.0950559529542894;-0.0946890029585477;-0.09431987986966;-0.0939485816124612;-0.0935751061279683;-0.0931994513734234;-0.0928216153223364;-0.0924415959645284;-0.0920593913061736;-0.0916749993698427;-0.0912884181945446;-0.0908996458357691;-0.0905086803655288;-0.0901155198724016;-0.0897201624615717;-0.0893226062548723;-0.0889228493908263;-0.0885208900246886;-0.0881167263284868;-0.0877103564910625;-0.0873017787181127;-0.0868909912322302;-0.0864779922729447;-0.0860627800967632;-0.0856453529772106;-0.0852257092048699;-0.0848038470874227;-0.0843797649496887;-0.0839534611336661;-0.0835249339985711;-0.0830941819208773;-0.0826612032943558;-0.0822259965301136;-0.0817885600566336;-0.0813488923198131;-0.0809069917830028;-0.0804628569270452;-0.0800164862503141;-0.0795678782687517;-0.0791170315159078;-0.0786639445429775;-0.0782086159188393;-0.0777510442300928;-0.0772912280810962;-0.0768291660940042;-0.0763648569088048;-0.0758982991833568;-0.0754294915934268;-0.0749584328327259;-0.0744851216129466;-0.0740095566637989;-0.0735317367330474;-0.0730516605865468;-0.0725693270082785;-0.0720847348003859;-0.071597882783211;-0.071108769795329;-0.0706173946935843;-0.0701237563531258;-0.0696278536674418;-0.0691296855483946;-0.0686292509262558;-0.0681265487497408;-0.067621577986043;-0.0671143376208679;-0.0666048266584676;-0.0660930441216749;-0.0655789890519362;-0.0650626605093458;-0.0645440575726791;-0.064023179339426;-0.0635000249258237;-0.0629745934668896;-0.0624468841164546;-0.0619168960471949;-0.0613846284506648;-0.0608500805373288;-0.0603132515365938;-0.0597741406968409;-0.0592327472854569;-0.058689070588866;-0.0581431099125613;-0.0575948645811356;-0.0570443339383125;-0.0564915173469777;-0.0559364141892089;-0.0553790238663066;-0.0548193457988244;-0.0542573794265993;-0.0536931242087811;-0.0531265796238626;-0.0525577451697087;-0.0519866203635867;-0.0514132047421944;-0.0508374978616896;-0.0502594992977191;-0.0496792086454471;-0.0490966255195838;-0.0485117495544134;-0.0479245804038229;-0.047335117741329;-0.0467433612601067;-0.0461493106730163;-0.0455529657126312;-0.0449543261312647;-0.0443533917009969;-0.0437501622137022;-0.0431446374810749;-0.0425368173346564;-0.0419267016258609;-0.0413142902260021;-0.0406995830263182;-0.0400825799379981;-0.0394632808922069;-0.0388416858401109;-0.0382177947529027;-0.0375916076218262;-0.0369631244582015;-0.0363323452934489;-0.0356992701791137;-0.0350638991868898;-0.0344262324086442;-0.0337862699564402;-0.0331440119625613;-0.0324994585795345;-0.031852609980153;-0.0312034663574997;-0.0305520279249694;-0.0298982949162921;-0.0292422675855545;-0.0285839462072226;-0.0279233310761635;-0.0272604225076676;-0.0265952208374693;-0.0259277264217688;-0.0252579396372536;-0.0245858608811188;-0.0239114905710882;-0.0232348291454347;-0.0225558770630009;-0.0218746348032188;-0.0211911028661302;-0.0205052817724058;-0.0198171720633655;-0.0191267743009973;-0.0184340890679761;-0.0177391169676835;-0.0170418586242254;-0.0163423146824514;-0.0156404858079725;-0.0149363726871797;-0.0142299760272615;-0.0135212965562215;-0.0128103350228962;-0.0120970921969721;-0.0113815688690025;-0.0106637658504249;-0.00994368397357705;-0.00922132409171369;-0.00849668707902262;-0.00776977383064064;-0.00704058526266978;-0.00630912231219222;-0.00557538593728603;-0.00483937711704019;-0.00410109685156988;-0.00336054616203061;-0.00261772609063303;-0.00187263770065757;-0.00112528207646786;-0.000375660323525046]|9|8|0|on"
		  MaskTabNameString	  ",,,,"
		  System {
		    Name		    "c_gen"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1023"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 50 50 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "1024"
		    initVector		    "[0;0;0;0;0;0;0;0;0;0;0;0;0;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.12890625;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.125;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.12109375;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.1171875;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.11328125;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.109375;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.10546875;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.1015625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09765625;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.09375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.08984375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.0859375;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.08203125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.078125;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.07421875;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.0703125;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.06640625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.0625;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.05859375;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.0546875;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.05078125;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.046875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.04296875;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.0390625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03515625;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.03125;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.02734375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.0234375;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.01953125;-0.015625;-0.015625;-0.015625;-0.015625;-0.015625;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.01171875;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.0078125;-0.00390625;-0.00390625;-0.00390625;-0.00390625;-0.00390625;0;0;0]"
		    distributed_mem	    "Block RAM"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "8"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[7 15 27 39 47 47 43 47 47 36 47 39 27 15 7 18 7 7 11 7 7 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "coef_out"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mem"
		    SrcPort		    1
		    DstBlock		    "coef_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "data_delay"
		  Ports			  [1, 1]
		  Position		  [145, 17, 200, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sum_delay"
		  Ports			  [1, 1]
		  Position		  [145, 62, 200, 88]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [145, 187, 200, 213]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [295, 23, 325, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [295, 68, 325, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "coef"
		  Position		  [295, 118, 325, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [295, 193, 325, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_gen"
		  SrcPort		  1
		  DstBlock		  "coef"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_delay"
		  SrcPort		  1
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "sum_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [25, 0]
		  Branch {
		    Points		    [0, -75]
		    DstBlock		    "c_gen"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "sync_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_delay"
		  SrcPort		  1
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  DstBlock		  "data_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_core"
	      Ports		      [4, 3]
	      Position		      [270, 29, 360, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "delay 1024 in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag112"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Core"
	      MaskDescription	      "A Finite Impluse Response Filter core with complex inputs and real coefficients.  This FIR filter core does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter core with complex inputs and real coefficients.\n\nThis Finite Impluse Response Filter core is designed to be paired with a FIR Coefficient Generator \nto form a FIR filter tap.  This FIR filter core does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (use_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	      MaskPromptString	      "Tap Delay|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	      MaskStyleString	      "edit,edit,edit,edit,edit,checkbox,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "delay=&1;n_bits_d=&2;bin_pt_d=&3;n_bits_s=&4;bin_pt_s=&5;use_bram=&6;mult_latency=&7;add_latency=&8;add_bypass=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "1024|8|7|17|15|on|3|1|off"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"fir_core"
		Location		[282, 135, 1062, 821]
		Open			on
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 223, 60, 237]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "coef"
		  Position		  [30, 183, 60, 197]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 278, 60, 292]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_d"
		  Ports			  [1, 2]
		  Position		  [120, 69, 160, 111]
		  AttributesFormatString  "8_7 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag113"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|7"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_d"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_s"
		  Ports			  [1, 2]
		  Position		  [120, 209, 160, 251]
		  AttributesFormatString  "17_15 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag114"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "17|15"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_s"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_im"
		  Ports			  [1, 1]
		  Position		  [345, 175, 390, 205]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_re"
		  Ports			  [1, 1]
		  Position		  [345, 80, 390, 110]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "dout_delay"
		  Ports			  [1, 1]
		  Position		  [255, 17, 310, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_im"
		  Ports			  [3, 1]
		  Position		  [255, 164, 305, 216]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag115"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_im"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_re"
		  Ports			  [3, 1]
		  Position		  [255, 69, 305, 121]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag116"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_re"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [455, 119, 495, 161]
		  UserDataPersistent	  on
		  UserData		  "DataTag117"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskInitialization	  "ri_to_c_init(gcb);"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [255, 272, 310, 298]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "tap_delay"
		  Ports			  [1, 1]
		  Position		  [440, 14, 500, 46]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "bram depth = 1024"
		  UserDataPersistent	  on
		  UserData		  "DataTag118"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "BRAM Delay"
		  MaskDescription	  "A delay block that uses BRAM for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses BRAM for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n\nBuffer Latency (buffer_latency): The latency of the underlying storage.\n\nBuffer Latency defaults to 1 and cannot be changed via the block's dialog box.\nFuture versions may enable the setting of that parameter from the dialog.\n</pre>"
		  MaskPromptString	  "Delay Depth|Buffer Latency"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,off"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "delay_depth=&1;buffer_latency=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "1024|"
		  MaskTabNameString	  ","
		  System {
		    Name		    "tap_delay"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Constant"
		    Ports		    [0, 1]
		    Position		    [165, 133, 180, 147]
		    ShowName		    off
		    SourceBlock		    "xbsIndex_r4/Constant"
		    SourceType		    "Xilinx Constant Block Block"
		    arith_type		    "Boolean"
		    const		    "1"
		    n_bits		    "1"
		    bin_pt		    "0"
		    explicit_period	    on
		    period		    "1"
		    dsp48_infoedit	    "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		    equ			    "P=C"
		    opselect		    "C"
		    inp2		    "PCIN>>17"
		    opr			    "+"
		    inp1		    "P"
		    carry		    "CIN"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "constant"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "15,14,1,1,white,blue,0,06094819,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 15 15 0 ],[0 0 14 14 ],[0.77 0.82 0.91]);\npatch([3 1 4 1 3 7 8 9 13 10 7 5 8 5 7 10 13 9 8 7 3 ],[2 4 7 10 12 12 11 12 12 9 12 10 7 4 2 5 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 15 15 0 0 ],[0 0 14 14 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [0, 1]
		    Position		    [130, 71, 180, 89]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1022"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    off
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,a170c862,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 18 18 ],[0.77 0.82 0.91]);\npatch([20 17 21 17 20 25 26 27 32 28 24 21 25 21 24 28 32 27 26 25 20 ],[2 5 9 13 16 16 15 16 16 12 16 13 9 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 18 18 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bram"
		    Ports		    [3, 1]
		    Position		    [230, 61, 295, 159]
		    SourceBlock		    "xbsIndex_r4/Single Port RAM"
		    SourceType		    "Xilinx Single Port Random Access Memory Block"
		    depth		    "1024"
		    initVector		    "0"
		    distributed_mem	    "Block RAM"
		    write_mode		    "Read Before Write"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "spram"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "65,98,1,1,white,blue,0,90951842,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 98 98 ],[0.77 0.82 0.91]);\npatch([15 4 19 4 15 32 37 42 60 45 31 21 36 21 31 45 60 42 37 32 15 ],[24 35 50 65 76 76 71 76 76 61 75 65 50 35 25 39 24 24 29 24 24 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 98 98 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Constant"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    3
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "bram"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "bram"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [555, 23, 585, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [555, 133, 585, 147]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 278, 585, 292]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "convert_im"
		  SrcPort		  1
		  Points		  [20, 0; 0, -40]
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "convert_re"
		  SrcPort		  1
		  Points		  [20, 0; 0, 35]
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "tap_delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_im"
		  SrcPort		  1
		  DstBlock		  "convert_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_re"
		  SrcPort		  1
		  DstBlock		  "convert_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  2
		  Points		  [75, 0]
		  DstBlock		  "mult_add_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  1
		  Points		  [75, 0]
		  DstBlock		  "mult_add_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "c_to_ri_s"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "coef"
		  SrcPort		  1
		  Points		  [140, 0]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "mult_add_re"
		    DstPort		    2
		  }
		  Branch {
		    DstBlock		    "mult_add_im"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  2
		  Points		  [20, 0; 0, 75]
		  DstBlock		  "mult_add_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  1
		  DstBlock		  "mult_add_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  Points		  [35, 0]
		  Branch {
		    Points		    [0, 60]
		    DstBlock		    "c_to_ri_d"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "dout_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "dout_delay"
		  SrcPort		  1
		  DstBlock		  "tap_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "data_out"
	      Position		      [435, 23, 465, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [435, 58, 465, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [435, 93, 465, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      3
	      Points		      [25, 0; 0, 15]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      2
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      1
	      Points		      [25, 0; 0, -15]
	      DstBlock		      "data_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, -15]
	      DstBlock		      "fir_coef"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "fir_coef"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "data_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, 15]
	      DstBlock		      "fir_coef"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      4
	      DstBlock		      "fir_core"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      3
	      DstBlock		      "fir_core"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      2
	      DstBlock		      "fir_core"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      1
	      DstBlock		      "fir_core"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "fir_tap_6"
	  Ports			  [3, 3]
	  Position		  [850, 30, 950, 80]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "delay 0 in slr\n1024 coefs in bram"
	  UserDataPersistent	  on
	  UserData		  "DataTag119"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "FIR Filter Tap (Real Coefficients)"
	  MaskDescription	  "A Finite Impluse Response Filter tap with real coefficients.  This FIR filter tap does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	  MaskHelp		  "<pre>\nDescription::\n\nA Finite Impluse Response Filter tap with real coefficients.\n\nThis Finite Impluse Response Filter tap is designed to be daisy chained together\nto form a multi-tap FIR filter.  This FIR filter tap does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nTap Coefficiant(s) (coef): The coefficient(s) for this tap.  For a regular FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nUsually, delay==length(coef), but this is not required.  These should be specified as doubles. \nThey will be rounded and saturated according to the specified number of bits (n_bits_c) and\nbinary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (delay_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nUse BRAM for Coefficients (coef_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	  MaskPromptString	  "Tap Delay|Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Coefficients|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	  MaskStyleString	  "edit,edit,edit,edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "||||||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,,,,"
	  MaskVariables		  "delay=&1;coef=&2;n_bits_c=&3;bin_pt_c=&4;n_bits_d=&5;bin_pt_d=&6;n_bits_s=&7;bin_pt_s=&8;coef_bram=&9;delay_bram=&10;mult_latency=&11;add_latency=&12;add_bypass=&13;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "0|[1.30229478472013e-005;3.90815624059165e-005;6.51573367774649e-005;9.12505128142159e-005;0.000117361332654004;0.000143490038707315;0.000169636873644433;0.000195802080382638;0.000221985902073233;0.000248188582088693;0.00027441036400972;0.000300651491612275;0.00032691220885466;0.000353192759864432;0.00037949338892544;0.000405814340464771;0.000432155859039685;0.000458518189324518;0.000484901576097635;0.000511306264228219;0.00053773249866318;0.000564180524413982;0.000590650586543436;0.000617142930152563;0.000643657800367275;0.000670195442325197;0.000696756101162392;0.00072334002200008;0.000749947449931329;0.000776578630007802;0.000803233807226332;0.000829913226515637;0.00085661713272294;0.000883345770600572;0.000910099384792634;0.000936878219821494;0.000963682520074419;0.000990512529790111;0.00101736849304526;0.00104425065374103;0.00107115925558966;0.00109809454210086;0.00112505675656834;0.00115204614205629;0.0011790629413858;0.00120610739712138;0.00123317975155729;0.00126028024670401;0.00128740912427467;0.0013145666256714;0.00134175299197172;0.00136896846391498;0.00139621328188859;0.00142348768591449;0.00145079191563545;0.00147812621030134;0.0015054908087556;0.00153288594942139;0.00156031187028796;0.00158776880889696;0.00161525700232871;0.00164277668718846;0.00167032809959269;0.00169791147515534;0.00172552704897407;0.00175317505561652;0.00178085572910654;0.00180856930291045;0.00183631600992321;0.00186409608245468;0.00189190975221584;0.001919757250305;0.00194763880719397;0.00197555465271432;0.00200350501604353;0.00203149012569121;0.00205951020948525;0.00208756549455806;0.00211565620733274;0.00214378257350922;0.00217194481805049;0.00220014316516874;0.00222837783831153;0.002256649060148;0.00228495705255503;0.00231330203660339;0.00234168423254391;0.00237010385979366;0.00239856113692212;0.00242705628163739;0.00245558951077227;0.0024841610402705;0.00251277108517291;0.00254141985960361;0.00257010757675613;0.00259883444887969;0.00262760068726523;0.00265640650223175;0.00268525210311237;0.00271413769824061;0.00274306349493657;0.00277202969949308;0.00280103651716193;0.00283008415214012;0.00285917280755598;0.00288830268545549;0.00291747398678844;0.00294668691139467;0.00297594165799033;0.00300523842415407;0.00303457740631335;0.00306395879973069;0.00309338279848989;0.00312284959548233;0.00315235938239325;0.00318191234968804;0.00321150868659852;0.00324114858110932;0.00327083221994408;0.00330055978855185;0.00333033147109343;0.00336014745042765;0.00339000790809786;0.00341991302431814;0.0034498629779598;0.00347985794653768;0.00350989810619665;0.00353998363169792;0.0035701146964056;0.00360029147227299;0.00363051412982916;0.00366078283816534;0.00369109776492143;0.00372145907627252;0.00375186693691537;0.00378232151005492;0.00381282295739088;0.00384337143910425;0.00387396711384388;0.00390461013871314;0.00393530066925641;0.00396603885944579;0.00399682486166768;0.00402765882670945;0.0040585409037462;0.00408947124032728;0.00412044998236316;0.00415147727411206;0.00418255325816677;0.00421367807544131;0.00424485186515788;0.00427607476483351;0.00430734691026696;0.00433866843552555;0.00437003947293203;0.00440146015305152;0.00443293060467832;0.00446445095482291;0.00449602132869889;0.00452764184970998;0.00455931263943696;0.00459103381762476;0.00462280550216948;0.00465462780910543;0.00468650085259228;0.0047184247449021;0.00475039959640664;0.00478242551556433;0.00481450260890759;0.00484663098103001;0.00487881073457359;0.00491104197021601;0.00494332478665798;0.00497565928061048;0.00500804554678217;0.00504048367786674;0.00507297376453033;0.00510551589539899;0.0051381101570461;0.00517075663397987;0.00520345540863088;0.00523620656133964;0.0052690101703441;0.00530186631176739;0.00533477505960533;0.00536773648571416;0.00540075065979826;0.00543381764939783;0.00546693751987671;0.00550011033441016;0.00553333615397264;0.00556661503732576;0.00559994704100609;0.00563333221931314;0.00566677062429732;0.0057002623057479;0.00573380731118106;0.00576740568582796;0.00580105747262281;0.00583476271219105;0.00586852144283747;0.00590233370053443;0.0059361995189101;0.00597011892923675;0.00600409196041901;0.00603811863898232;0.0060721989890612;0.00610633303238773;0.00614052078828002;0.00617476227363066;0.00620905750289535;0.00624340648808137;0.00627780923873624;0.0063122657619364;0.00634677606227583;0.00638134014185485;0.00641595800026893;0.00645062963459735;0.00648535503939221;0.00652013420666724;0.00655496712588674;0.00658985378395465;0.00662479416520342;0.00665978825138318;0.00669483602165082;0.00672993745255913;0.00676509251804594;0.00680030118942352;0.00683556343536762;0.00687087922190698;0.00690624851241261;0.00694167126758721;0.00697714744545466;0.00701267700134947;0.00704825988790636;0.00708389605504983;0.00711958544998381;0.00715532801718132;0.00719112369837428;0.00722697243254317;0.00726287415590692;0.00729882880191279;0.00733483630122624;0.00737089658172098;0.00740700956846889;0.00744317518373013;0.00747939334694328;0.00751566397471543;0.00755198698081245;0.00758836227614927;0.00762478976878012;0.00766126936388893;0.00769780096377973;0.00773438446786714;0.00777101977266688;0.00780770677178631;0.00784444535591502;0.00788123541281559;0.00791807682731424;0.00795496948129161;0.00799191325367362;0.00802890802042233;0.00806595365452684;0.00810305002599434;0.00814019700184109;0.00817739444608359;0.00821464221972963;0.00825194018076957;0.00828928818416756;0.0083266860818529;0.00836413372271132;0.00840163095257653;0.00843917761422159;0.00847677354735049;0.00851441858858978;0.0085521125714801;0.0085898553264681;0.00862764668089797;0.00866548645900342;0.00870337448189951;0.00874131056757457;0.00877929453088222;0.00881732618353346;0.0088554053340887;0.00889353178795001;0.00893170534735332;0.00896992581136071;0.00900819297585279;0.00904650663352107;0.00908486657386049;0.00912327258316188;0.00916172444450464;0.00920022193774929;0.00923876483953036;0.00927735292324897;0.0093159859590658;0.00935466371389393;0.00939338595139185;0.0094321524319565;0.00947096291271629;0.00950981714752431;0.00954871488695155;0.00958765587828016;0.00962663986549678;0.00966566658928605;0.00970473578702392;0.00974384719277134;0.00978300053726775;0.00982219554792484;0.00986143194882025;0.00990070946069135;0.0099400278009291;0.00997938668357203;0.0100187858193002;0.0100582249154293;0.0100977036759047;0.0101372218012957;0.01017677898879;0.0102163749321875;0.0102560093218952;0.0102956818449215;0.0103353921848709;0.0103751400219381;0.0104149250329032;0.0104547468911263;0.0104946052665421;0.0105344998256552;0.0105744302315346;0.0106143961438089;0.0106543972186615;0.0106944331088256;0.0107345034635795;0.0107746079287419;0.0108147461466673;0.0108549177562413;0.0108951223928764;0.010935359688507;0.010975629271586;0.0110159307670795;0.0110562637964633;0.0110966279777186;0.0111370229253276;0.0111774482502703;0.0112179035600195;0.011258388458538;0.0112989025462742;0.0113394454201587;0.0113800166736003;0.0114206158964832;0.0114612426751627;0.0115018965924621;0.0115425772276698;0.0115832841565354;0.011624016951267;0.0116647751805277;0.0117055584094329;0.0117463661995474;0.0117871981088822;0.0118280536918919;0.011868932499472;0.0119098340789561;0.0119507579741136;0.0119917037251469;0.0120326708686893;0.0120736589378022;0.0121146674619735;0.0121556959671148;0.0121967439755595;0.0122378110060608;0.0122788965737901;0.0123200001903342;0.0123611213636946;0.0124022595982848;0.0124434143949294;0.0124845852508622;0.0125257716597247;0.0125669731115647;0.0126081890928351;0.0126494190863927;0.0126906625714966;0.0127319190238077;0.0127731879153873;0.0128144687146963;0.0128557608865941;0.0128970638923385;0.0129383771895841;0.0129797002323824;0.0130210324711811;0.0130623733528234;0.0131037223205477;0.0131450788139878;0.0131864422691718;0.013227812118523;0.0132691877908589;0.013310568711392;0.0133519543017293;0.013393343979873;0.0134347371602205;0.0134761332535648;0.0135175316670951;0.013558931804397;0.0136003330654535;0.0136417348466455;0.0136831365407524;0.0137245375369534;0.0137659372208281;0.0138073349743574;0.0138487301759252;0.0138901222003188;0.0139315104187309;0.0139728941987605;0.0140142729044144;0.014055645896109;0.0140970125306716;0.0141383721613421;0.014179724137775;0.0142210678060412;0.0142624025086298;0.0143037275844501;0.014345042368834;0.0143863461935379;0.0144276383867453;0.0144689182730687;0.0145101851735525;0.0145514384056753;0.0145926772833527;0.0146339011169396;0.0146751092132337;0.0147163008754775;0.0147574754033622;0.0147986320930298;0.0148397702370772;0.0148808891245584;0.0149219880409888;0.0149630662683479;0.0150041230850829;0.0150451577661127;0.0150861695828308;0.0151271578031099;0.0151681216913049;0.0152090605082574;0.0152499735112994;0.0152908599542575;0.015331719087457;0.0153725501577262;0.0154133524084007;0.0154541250793279;0.0154948674068714;0.0155355786239159;0.0155762579598713;0.0156169046406781;0.0156575178888119;0.0156980969232886;0.015738640959669;0.0157791492100646;0.015819620883142;0.0158600551841291;0.0159004513148196;0.015940808473579;0.0159811258553503;0.0160214026516591;0.0160616380506197;0.016101831236941;0.0161419813919321;0.0161820876935087;0.0162221493161987;0.0162621654311489;0.0163021352061308;0.0163420578055472;0.0163819323904387;0.01642175811849;0.0164615341440367;0.0165012596180719;0.0165409336882532;0.0165805554989092;0.0166201241910468;0.016659638902358;0.0166990987672274;0.0167385029167391;0.016777850478684;0.0168171405775676;0.0168563723346172;0.0168955448677892;0.0169346572917774;0.0169737087180206;0.0170126982547098;0.0170516250067972;0.0170904880760033;0.0171292865608255;0.0171680195565462;0.0172066861552411;0.0172452854457875;0.0172838165138729;0.0173222784420034;0.0173606703095124;0.0173989911925696;0.0174372401641892;0.0174754162942395;0.0175135186494514;0.0175515462934279;0.0175894982866526;0.0176273736864999;0.0176651715472435;0.0177028909200663;0.01774053085307;0.0177780903912842;0.0178155685766767;0.0178529644481627;0.0178902770416155;0.0179275053898754;0.0179646485227607;0.0180017054670774;0.0180386752466294;0.0180755568822289;0.0181123493917068;0.0181490517899233;0.0181856630887784;0.0182221822972225;0.0182586084212671;0.0182949404639958;0.0183311774255754;0.0183673183032665;0.0184033620914347;0.0184393077815623;0.0184751543622587;0.0185109008192725;0.0185465461355029;0.0185820892910106;0.0186175292630303;0.0186528650259817;0.0186880955514817;0.0187232198083563;0.0187582367626523;0.0187931453776497;0.0188279446138735;0.0188626334291062;0.0188972107784002;0.0189316756140897;0.018966026885804;0.0190002635404793;0.0190343845223718;0.0190683887730704;0.0191022752315096;0.0191360428339821;0.0191696905141523;0.019203217203069;0.0192366218291787;0.0192699033183391;0.0193030605938321;0.0193360925763775;0.0193689981841464;0.0194017763327749;0.0194344259353776;0.0194669459025618;0.0194993351424409;0.0195315925606485;0.0195637170603529;0.0195957075422703;0.0196275629046798;0.0196592820434375;0.0196908638519908;0.0197223072213925;0.0197536110403162;0.0197847741950701;0.0198157955696123;0.0198466740455651;0.0198774085022304;0.0199079978166042;0.0199384408633918;0.0199687365150233;0.0199988836416682;0.020028881111251;0.0200587277894667;0.0200884225397961;0.0201179642235214;0.0201473516997418;0.0201765838253892;0.020205659455244;0.020234577441951;0.0202633366360355;0.020291935885919;0.0203203740379356;0.0203486499363482;0.0203767624233645;0.0204047103391538;0.020432492521863;0.0204601078076336;0.0204875550306177;0.0205148330229955;0.0205419406149913;0.0205688766348906;0.0205956399090575;0.0206222292619508;0.020648643516142;0.0206748814923318;0.0207009420093679;0.0207268238842619;0.0207525259322066;0.0207780469665943;0.0208033857990334;0.0208285412393665;0.0208535120956883;0.020878297174363;0.0209028952800423;0.0209273052156838;0.0209515257825682;0.0209755557803181;0.0209993940069161;0.0210230392587226;0.0210464903304949;0.0210697460154048;0.0210928051050577;0.0211156663895112;0.021138328657293;0.0211607906954207;0.0211830512894198;0.0212051092233429;0.0212269632797886;0.0212486122399205;0.0212700548834864;0.0212912899888375;0.0213123163329474;0.0213331326914318;0.0213537378385675;0.0213741305473122;0.0213943095893242;0.0214142737349813;0.0214340217534013;0.0214535524124615;0.0214728644788182;0.0214919567179271;0.0215108278940632;0.0215294767703405;0.0215479021087327;0.021566102670093;0.0215840772141744;0.0216018244996503;0.0216193432841346;0.0216366323242026;0.0216536903754111;0.0216705161923194;0.0216871085285099;0.0217034661366086;0.0217195877683065;0.02173547217438;0.0217511181047122;0.0217665243083139;0.0217816895333444;0.0217966125271333;0.021811292036201;0.021825726806281;0.0218399155823402;0.0218538571086012;0.0218675501285635;0.021880993385025;0.021894185620104;0.0219071255752605;0.0219198119913184;0.0219322436084871;0.0219444191663836;0.0219563374040542;0.021967997059997;0.0219793968721838;0.021990535578082;0.0220014119146775;0.0220120246184963;0.0220223724256277;0.0220324540717458;0.0220422682921327;0.0220518138217011;0.0220610893950162;0.0220700937463195;0.0220788256095504;0.0220872837183699;0.0220954668061832;0.0221033736061624;0.02211100285127;0.0221183532742814;0.0221254236078085;0.0221322125843227;0.0221387189361781;0.0221449413956349;0.0221508786948827;0.0221565295660639;0.0221618927412975;0.0221669669527021;0.02217175093242;0.0221762434126404;0.0221804431256237;0.0221843488037246;0.0221879591794167;0.0221912729853155;0.0221942889542031;0.0221970058190519;0.0221994223130485;0.0222015371696183;0.0222033491224491;0.0222048569055155;0.0222060592531036;0.0222069548998346;0.0222075425806899;0.0222078210310349;0.0222077889866442;0.0222074451837253;0.0222067883589439;0.0222058172494483;0.0222045305928941;0.0222029271274689;0.0222010055919171;0.022198764725565;0.0221962032683452;0.0221933199608223;0.0221901135442173;0.0221865827604326;0.0221827263520777;0.0221785430624938;0.0221740316357794;0.0221691908168152;0.0221640193512895;0.0221585159857239;0.022152679467498;0.0221465085448756;0.0221400019670297;0.0221331584840681;0.0221259768470592;0.0221184558080573;0.0221105941201285;0.0221023905373766;0.0220938438149682;0.0220849527091593;0.0220757159773207;0.0220661323779637;0.0220562006707666;0.0220459196166004;0.0220352879775545;0.0220243045169635;0.0220129679994325;0.0220012771908637;0.0219892308584827;0.0219768277708642;0.021964066697959;0.0219509464111195;0.0219374656831268;0.0219236232882163;0.0219094180021051;0.0218948486020174;0.021879913866712;0.0218646125765079;0.0218489435133116;0.0218329054606434;0.0218164972036641;0.0217997175292016;0.0217825652257779;0.0217650390836353;0.0217471378947638;0.0217288604529277;0.0217102055536922;0.0216911719944508;0.0216717585744516;0.021651964094825;0.0216317873586099;0.0216112271707815;0.0215902823382775;0.0215689516700262;0.0215472339769727;0.0215251280721066;0.0215026327704889;0.0214797468892794;0.0214564692477637;0.021432798667381;0.0214087339717505;0.0213842739866995;0.0213594175402908;0.0213341634628491;0.0213085105869897;0.0212824577476449;0.0212560037820922;0.0212291475299812;0.0212018878333615;0.02117422353671;0.0211461534869588;0.0211176765335223;0.0210887915283252;0.0210594973258299;0.0210297927830643;0.0209996767596496;0.0209691481178275;0.0209382057224885;0.0209068484411992;0.0208750751442305;0.020842884704585;0.0208102759980249;0.0207772479030999;0.0207437993011751;0.0207099290764587;0.02067563611603;0.0206409193098672;0.0206057775508754;0.0205702097349146;0.0205342147608274;0.0204977915304673;0.0204609389487264;0.0204236559235634;0.0203859413660319;0.0203477941903082;0.0203092133137194;0.0202701976567714;0.020230746143177;0.020190857699884;0.0201505312571035;0.0201097657483373;0.0200685601104072;0.0200269132834817;0.0199848242111055;0.0199422918402268;0.0198993151212255;0.0198558930079418;0.0198120244577041;0.0197677084313573;0.0197229438932907;0.0196777298114666;0.0196320651574482;0.0195859489064282;0.0195393800372564;0.0194923575324687;0.0194448803783146;0.0193969475647859;0.019348558085645;0.0192997109384527;0.0192504051245967;0.0192006396493202;0.0191504135217495;0.0190997257549227;0.0190485753658179;0.0189969613753813;0.0189448828085557;0.0188923386943085;0.0188393280656603;0.0187858499597128;0.0187319034176773;0.0186774874849029;0.0186226012109047;0.0185672436493922;0.0185114138582973;0.018455110899803;0.0183983338403711;0.018341081750771;0.0182833537061072;0.0182251487858485;0.0181664660738554;0.0181073046584087;0.0180476636322377;0.0179875420925484;0.0179269391410516;0.0178658538839913;0.0178042854321725;0.01774223290099;0.0176796954104559;0.0176166720852282;0.0175531620546388;0.0174891644527217;0.0174246784182411;0.0173597030947194;0.0172942376304655;0.0172282811786028;0.0171618328970972;0.0170948919487855;0.0170274575014029;0.0169595287276116;0.0168911048050285;0.0168221849162531;0.016752768248896;0.0166828539956064;0.0166124413541001;0.0165415295271879;0.0164701177228029;0.0163982051540287;0.0163257910391276;0.0162528746015679;0.016179455070052;0.0161055316785444;0.0160311036662993;0.0159561702778886;0.0158807307632293;0.0158047843776117;0.0157283303817268;0.015651368041694;0.0155738966290892;0.0154959154209719;0.0154174236999132;0.0153384207540233;0.0152589058769791;0.0151788783680517;0.0150983375321339;0.0150172826797681;0.014935713127173;0.014853628196272;0.0147710272147199;0.0146879095159304;0.0146042744391039;0.0145201213292544;0.014435449537237;0.0143502584197752;0.0142645473394878;0.0141783156649169;0.0140915627705541;0.0140042880368685;0.0139164908503332;0.0138281706034528;0.0137393266947904;0.0136499585289943;0.0135600655168253;0.0134696470751837;0.013378702627136;0.0132872316019417;0.0131952334350806;0.013102707568279;0.0130096534495371;0.0129160705331552;0.0128219582797607;0.0127273161563346;0.0126321436362382;0.0125364401992397;0.0124402053315406;0.0123434385258024;0.0122461392811728;0.0121483071033125;0.012049941504421;0.0119510420032635;0.0118516081251968;0.0117516394021958;0.0116511353728793;0.0115500955825369;0.0114485195831541;0.0113464069334393;0.0112437571988492;0.0111405699516152;0.0110368447707688;0.010932581242168;0.0108277789585228;0.0107224375194214;0.0106165565313551;0.010510135607745;0.0104031743689668;0.0102956724423769;0.0101876294623378;0.0100790450702434;0.00996991891454458;0.00986025065077467;0.00975003994157455;0.00963928645671813;0.00952798987313748;0.0094161498749479;0.00930376615347321;0.00919083840727075;0.00907736634215623;0.00896334967122888;0.00884878811489629;0.00873368140089908;0.00861802926433593;0.00850183144768805;0.00838508770084402;0.00826779778112436;0.00814996145330591;0.00803157848964654;0.00791264866990946;0.00779317178138749;0.00767314761892755;0.00755257598495482;0.00743145668949677;0.00730978955020755;0.00718757439239176;0.00706481104902866;0.00694149936079604;0.00681763917609391;0.00669323035106852;0.00656827274963604;0.00644276624350604;0.00631671071220536;0.0061901060431015;0.006062952131426;0.00593524888029807;0.00580699620074764;0.00567819401173886;0.00554884224019323;0.00541894082101253;0.00528848969710218;0.00515748881939405;0.00502593814686929;0.00489383764658139;0.00476118729367882;0.00462798707142765;0.00449423697123439;0.00435993699266828;0.00422508714348402;0.00408968743964404;0.00395373790534074;0.00381723857301899;0.00368018948339813;0.00354259068549404;0.00340444223664131;0.00326574420251518;0.00312649665715319;0.00298669968297734;0.00284635337081542;0.00270545781992298;0.00256401313800475;0.00242201944123601;0.0022794768542842;0.00213638551033019;0.00199274555108931;0.00184855712683285;0.00170382039640892;0.00155853552726339;0.00141270269546109;0.00126632208570627;0.00111939389136366;0.000971918314479012;0.000823895565799559;0.000675325864794748;0.000526209439676531;0.000376546527419557;0.000226337373781674;7.55822333239443e-005]|9|8|8|7|17|15|on|off|3|1|off"
	  MaskTabNameString	  ",,,,,,,,,,,,"
	  System {
	    Name		    "fir_tap_6"
	    Location		    [438, 295, 1218, 981]
	    Open		    on
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "data_in"
	      Position		      [30, 23, 60, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sum_in"
	      Position		      [30, 58, 60, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [30, 93, 60, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_coef"
	      Ports		      [3, 4]
	      Position		      [115, 29, 205, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "1024 coefs in bram"
	      UserDataPersistent      on
	      UserData		      "DataTag120"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Coefficient Generator"
	      MaskDescription	      "A Finite Impluse Response filter coefficient generator.  This FIR filter coefficient generator outputs real coefficients.  It can output one coefficient or cycle through a vector of coefficients for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response filter coefficient generator.\nThis FIR filter coefficient generator outputs real coefficients.\nIt can output one coefficient or cycle through a vector of coefficients for WOLA\n(Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Coefficiant(s) (coef): The coefficient(s) to output.  For a \"regular\" FIR filter, this will be a\nsingle number.  For a WOLA (Weighted OverLap Add) filter, this will be a vector of numbers. \nThese should be specified as doubles.   They will be rounded and saturated according to the\nspecified number of bits (n_bits_c) and binary point (bin_pt_c).\n\nNumber of Coefficient Bits (n_bits_c): The number of bits used for the fixed point binary\nrepresentation of the coefficient(s).\n\nCoefficient Binary Point (bin_pt_c): The binary point of the fixed point binary representation\nof the coefficient(s).\n\nUse BRAM for Coefficients (use_bram): Check this checkbox to store the coefficients in BRAM.\nIf unchecked, the coefficients will be stored in distributed memory (i.e. slices).\nThis is only relevant is length(coef) is greater than 1; otherwise, a constant block is used.\n</pre>"
	      MaskPromptString	      "Tap Coefficient(s)|Number of Coefficient Bits|Coefficient Binary Point|Use BRAM for Coefficients"
	      MaskStyleString	      "edit,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "coef=&1;n_bits_c=&2;bin_pt_c=&3;use_bram=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "[1.30229478472013e-005;3.90815624059165e-005;6.51573367774649e-005;9.12505128142159e-005;0.000117361332654004;0.000143490038707315;0.000169636873644433;0.000195802080382638;0.000221985902073233;0.000248188582088693;0.00027441036400972;0.000300651491612275;0.00032691220885466;0.000353192759864432;0.00037949338892544;0.000405814340464771;0.000432155859039685;0.000458518189324518;0.000484901576097635;0.000511306264228219;0.00053773249866318;0.000564180524413982;0.000590650586543436;0.000617142930152563;0.000643657800367275;0.000670195442325197;0.000696756101162392;0.00072334002200008;0.000749947449931329;0.000776578630007802;0.000803233807226332;0.000829913226515637;0.00085661713272294;0.000883345770600572;0.000910099384792634;0.000936878219821494;0.000963682520074419;0.000990512529790111;0.00101736849304526;0.00104425065374103;0.00107115925558966;0.00109809454210086;0.00112505675656834;0.00115204614205629;0.0011790629413858;0.00120610739712138;0.00123317975155729;0.00126028024670401;0.00128740912427467;0.0013145666256714;0.00134175299197172;0.00136896846391498;0.00139621328188859;0.00142348768591449;0.00145079191563545;0.00147812621030134;0.0015054908087556;0.00153288594942139;0.00156031187028796;0.00158776880889696;0.00161525700232871;0.00164277668718846;0.00167032809959269;0.00169791147515534;0.00172552704897407;0.00175317505561652;0.00178085572910654;0.00180856930291045;0.00183631600992321;0.00186409608245468;0.00189190975221584;0.001919757250305;0.00194763880719397;0.00197555465271432;0.00200350501604353;0.00203149012569121;0.00205951020948525;0.00208756549455806;0.00211565620733274;0.00214378257350922;0.00217194481805049;0.00220014316516874;0.00222837783831153;0.002256649060148;0.00228495705255503;0.00231330203660339;0.00234168423254391;0.00237010385979366;0.00239856113692212;0.00242705628163739;0.00245558951077227;0.0024841610402705;0.00251277108517291;0.00254141985960361;0.00257010757675613;0.00259883444887969;0.00262760068726523;0.00265640650223175;0.00268525210311237;0.00271413769824061;0.00274306349493657;0.00277202969949308;0.00280103651716193;0.00283008415214012;0.00285917280755598;0.00288830268545549;0.00291747398678844;0.00294668691139467;0.00297594165799033;0.00300523842415407;0.00303457740631335;0.00306395879973069;0.00309338279848989;0.00312284959548233;0.00315235938239325;0.00318191234968804;0.00321150868659852;0.00324114858110932;0.00327083221994408;0.00330055978855185;0.00333033147109343;0.00336014745042765;0.00339000790809786;0.00341991302431814;0.0034498629779598;0.00347985794653768;0.00350989810619665;0.00353998363169792;0.0035701146964056;0.00360029147227299;0.00363051412982916;0.00366078283816534;0.00369109776492143;0.00372145907627252;0.00375186693691537;0.00378232151005492;0.00381282295739088;0.00384337143910425;0.00387396711384388;0.00390461013871314;0.00393530066925641;0.00396603885944579;0.00399682486166768;0.00402765882670945;0.0040585409037462;0.00408947124032728;0.00412044998236316;0.00415147727411206;0.00418255325816677;0.00421367807544131;0.00424485186515788;0.00427607476483351;0.00430734691026696;0.00433866843552555;0.00437003947293203;0.00440146015305152;0.00443293060467832;0.00446445095482291;0.00449602132869889;0.00452764184970998;0.00455931263943696;0.00459103381762476;0.00462280550216948;0.00465462780910543;0.00468650085259228;0.0047184247449021;0.00475039959640664;0.00478242551556433;0.00481450260890759;0.00484663098103001;0.00487881073457359;0.00491104197021601;0.00494332478665798;0.00497565928061048;0.00500804554678217;0.00504048367786674;0.00507297376453033;0.00510551589539899;0.0051381101570461;0.00517075663397987;0.00520345540863088;0.00523620656133964;0.0052690101703441;0.00530186631176739;0.00533477505960533;0.00536773648571416;0.00540075065979826;0.00543381764939783;0.00546693751987671;0.00550011033441016;0.00553333615397264;0.00556661503732576;0.00559994704100609;0.00563333221931314;0.00566677062429732;0.0057002623057479;0.00573380731118106;0.00576740568582796;0.00580105747262281;0.00583476271219105;0.00586852144283747;0.00590233370053443;0.0059361995189101;0.00597011892923675;0.00600409196041901;0.00603811863898232;0.0060721989890612;0.00610633303238773;0.00614052078828002;0.00617476227363066;0.00620905750289535;0.00624340648808137;0.00627780923873624;0.0063122657619364;0.00634677606227583;0.00638134014185485;0.00641595800026893;0.00645062963459735;0.00648535503939221;0.00652013420666724;0.00655496712588674;0.00658985378395465;0.00662479416520342;0.00665978825138318;0.00669483602165082;0.00672993745255913;0.00676509251804594;0.00680030118942352;0.00683556343536762;0.00687087922190698;0.00690624851241261;0.00694167126758721;0.00697714744545466;0.00701267700134947;0.00704825988790636;0.00708389605504983;0.00711958544998381;0.00715532801718132;0.00719112369837428;0.00722697243254317;0.00726287415590692;0.00729882880191279;0.00733483630122624;0.00737089658172098;0.00740700956846889;0.00744317518373013;0.00747939334694328;0.00751566397471543;0.00755198698081245;0.00758836227614927;0.00762478976878012;0.00766126936388893;0.00769780096377973;0.00773438446786714;0.00777101977266688;0.00780770677178631;0.00784444535591502;0.00788123541281559;0.00791807682731424;0.00795496948129161;0.00799191325367362;0.00802890802042233;0.00806595365452684;0.00810305002599434;0.00814019700184109;0.00817739444608359;0.00821464221972963;0.00825194018076957;0.00828928818416756;0.0083266860818529;0.00836413372271132;0.00840163095257653;0.00843917761422159;0.00847677354735049;0.00851441858858978;0.0085521125714801;0.0085898553264681;0.00862764668089797;0.00866548645900342;0.00870337448189951;0.00874131056757457;0.00877929453088222;0.00881732618353346;0.0088554053340887;0.00889353178795001;0.00893170534735332;0.00896992581136071;0.00900819297585279;0.00904650663352107;0.00908486657386049;0.00912327258316188;0.00916172444450464;0.00920022193774929;0.00923876483953036;0.00927735292324897;0.0093159859590658;0.00935466371389393;0.00939338595139185;0.0094321524319565;0.00947096291271629;0.00950981714752431;0.00954871488695155;0.00958765587828016;0.00962663986549678;0.00966566658928605;0.00970473578702392;0.00974384719277134;0.00978300053726775;0.00982219554792484;0.00986143194882025;0.00990070946069135;0.0099400278009291;0.00997938668357203;0.0100187858193002;0.0100582249154293;0.0100977036759047;0.0101372218012957;0.01017677898879;0.0102163749321875;0.0102560093218952;0.0102956818449215;0.0103353921848709;0.0103751400219381;0.0104149250329032;0.0104547468911263;0.0104946052665421;0.0105344998256552;0.0105744302315346;0.0106143961438089;0.0106543972186615;0.0106944331088256;0.0107345034635795;0.0107746079287419;0.0108147461466673;0.0108549177562413;0.0108951223928764;0.010935359688507;0.010975629271586;0.0110159307670795;0.0110562637964633;0.0110966279777186;0.0111370229253276;0.0111774482502703;0.0112179035600195;0.011258388458538;0.0112989025462742;0.0113394454201587;0.0113800166736003;0.0114206158964832;0.0114612426751627;0.0115018965924621;0.0115425772276698;0.0115832841565354;0.011624016951267;0.0116647751805277;0.0117055584094329;0.0117463661995474;0.0117871981088822;0.0118280536918919;0.011868932499472;0.0119098340789561;0.0119507579741136;0.0119917037251469;0.0120326708686893;0.0120736589378022;0.0121146674619735;0.0121556959671148;0.0121967439755595;0.0122378110060608;0.0122788965737901;0.0123200001903342;0.0123611213636946;0.0124022595982848;0.0124434143949294;0.0124845852508622;0.0125257716597247;0.0125669731115647;0.0126081890928351;0.0126494190863927;0.0126906625714966;0.0127319190238077;0.0127731879153873;0.0128144687146963;0.0128557608865941;0.0128970638923385;0.0129383771895841;0.0129797002323824;0.0130210324711811;0.0130623733528234;0.0131037223205477;0.0131450788139878;0.0131864422691718;0.013227812118523;0.0132691877908589;0.013310568711392;0.0133519543017293;0.013393343979873;0.0134347371602205;0.0134761332535648;0.0135175316670951;0.013558931804397;0.0136003330654535;0.0136417348466455;0.0136831365407524;0.0137245375369534;0.0137659372208281;0.0138073349743574;0.0138487301759252;0.0138901222003188;0.0139315104187309;0.0139728941987605;0.0140142729044144;0.014055645896109;0.0140970125306716;0.0141383721613421;0.014179724137775;0.0142210678060412;0.0142624025086298;0.0143037275844501;0.014345042368834;0.0143863461935379;0.0144276383867453;0.0144689182730687;0.0145101851735525;0.0145514384056753;0.0145926772833527;0.0146339011169396;0.0146751092132337;0.0147163008754775;0.0147574754033622;0.0147986320930298;0.0148397702370772;0.0148808891245584;0.0149219880409888;0.0149630662683479;0.0150041230850829;0.0150451577661127;0.0150861695828308;0.0151271578031099;0.0151681216913049;0.0152090605082574;0.0152499735112994;0.0152908599542575;0.015331719087457;0.0153725501577262;0.0154133524084007;0.0154541250793279;0.0154948674068714;0.0155355786239159;0.0155762579598713;0.0156169046406781;0.0156575178888119;0.0156980969232886;0.015738640959669;0.0157791492100646;0.015819620883142;0.0158600551841291;0.0159004513148196;0.015940808473579;0.0159811258553503;0.0160214026516591;0.0160616380506197;0.016101831236941;0.0161419813919321;0.0161820876935087;0.0162221493161987;0.0162621654311489;0.0163021352061308;0.0163420578055472;0.0163819323904387;0.01642175811849;0.0164615341440367;0.0165012596180719;0.0165409336882532;0.0165805554989092;0.0166201241910468;0.016659638902358;0.0166990987672274;0.0167385029167391;0.016777850478684;0.0168171405775676;0.0168563723346172;0.0168955448677892;0.0169346572917774;0.0169737087180206;0.0170126982547098;0.0170516250067972;0.0170904880760033;0.0171292865608255;0.0171680195565462;0.0172066861552411;0.0172452854457875;0.0172838165138729;0.0173222784420034;0.0173606703095124;0.0173989911925696;0.0174372401641892;0.0174754162942395;0.0175135186494514;0.0175515462934279;0.0175894982866526;0.0176273736864999;0.0176651715472435;0.0177028909200663;0.01774053085307;0.0177780903912842;0.0178155685766767;0.0178529644481627;0.0178902770416155;0.0179275053898754;0.0179646485227607;0.0180017054670774;0.0180386752466294;0.0180755568822289;0.0181123493917068;0.0181490517899233;0.0181856630887784;0.0182221822972225;0.0182586084212671;0.0182949404639958;0.0183311774255754;0.0183673183032665;0.0184033620914347;0.0184393077815623;0.0184751543622587;0.0185109008192725;0.0185465461355029;0.0185820892910106;0.0186175292630303;0.0186528650259817;0.0186880955514817;0.0187232198083563;0.0187582367626523;0.0187931453776497;0.0188279446138735;0.0188626334291062;0.0188972107784002;0.0189316756140897;0.018966026885804;0.0190002635404793;0.0190343845223718;0.0190683887730704;0.0191022752315096;0.0191360428339821;0.0191696905141523;0.019203217203069;0.0192366218291787;0.0192699033183391;0.0193030605938321;0.0193360925763775;0.0193689981841464;0.0194017763327749;0.0194344259353776;0.0194669459025618;0.0194993351424409;0.0195315925606485;0.0195637170603529;0.0195957075422703;0.0196275629046798;0.0196592820434375;0.0196908638519908;0.0197223072213925;0.0197536110403162;0.0197847741950701;0.0198157955696123;0.0198466740455651;0.0198774085022304;0.0199079978166042;0.0199384408633918;0.0199687365150233;0.0199988836416682;0.020028881111251;0.0200587277894667;0.0200884225397961;0.0201179642235214;0.0201473516997418;0.0201765838253892;0.020205659455244;0.020234577441951;0.0202633366360355;0.020291935885919;0.0203203740379356;0.0203486499363482;0.0203767624233645;0.0204047103391538;0.020432492521863;0.0204601078076336;0.0204875550306177;0.0205148330229955;0.0205419406149913;0.0205688766348906;0.0205956399090575;0.0206222292619508;0.020648643516142;0.0206748814923318;0.0207009420093679;0.0207268238842619;0.0207525259322066;0.0207780469665943;0.0208033857990334;0.0208285412393665;0.0208535120956883;0.020878297174363;0.0209028952800423;0.0209273052156838;0.0209515257825682;0.0209755557803181;0.0209993940069161;0.0210230392587226;0.0210464903304949;0.0210697460154048;0.0210928051050577;0.0211156663895112;0.021138328657293;0.0211607906954207;0.0211830512894198;0.0212051092233429;0.0212269632797886;0.0212486122399205;0.0212700548834864;0.0212912899888375;0.0213123163329474;0.0213331326914318;0.0213537378385675;0.0213741305473122;0.0213943095893242;0.0214142737349813;0.0214340217534013;0.0214535524124615;0.0214728644788182;0.0214919567179271;0.0215108278940632;0.0215294767703405;0.0215479021087327;0.021566102670093;0.0215840772141744;0.0216018244996503;0.0216193432841346;0.0216366323242026;0.0216536903754111;0.0216705161923194;0.0216871085285099;0.0217034661366086;0.0217195877683065;0.02173547217438;0.0217511181047122;0.0217665243083139;0.0217816895333444;0.0217966125271333;0.021811292036201;0.021825726806281;0.0218399155823402;0.0218538571086012;0.0218675501285635;0.021880993385025;0.021894185620104;0.0219071255752605;0.0219198119913184;0.0219322436084871;0.0219444191663836;0.0219563374040542;0.021967997059997;0.0219793968721838;0.021990535578082;0.0220014119146775;0.0220120246184963;0.0220223724256277;0.0220324540717458;0.0220422682921327;0.0220518138217011;0.0220610893950162;0.0220700937463195;0.0220788256095504;0.0220872837183699;0.0220954668061832;0.0221033736061624;0.02211100285127;0.0221183532742814;0.0221254236078085;0.0221322125843227;0.0221387189361781;0.0221449413956349;0.0221508786948827;0.0221565295660639;0.0221618927412975;0.0221669669527021;0.02217175093242;0.0221762434126404;0.0221804431256237;0.0221843488037246;0.0221879591794167;0.0221912729853155;0.0221942889542031;0.0221970058190519;0.0221994223130485;0.0222015371696183;0.0222033491224491;0.0222048569055155;0.0222060592531036;0.0222069548998346;0.0222075425806899;0.0222078210310349;0.0222077889866442;0.0222074451837253;0.0222067883589439;0.0222058172494483;0.0222045305928941;0.0222029271274689;0.0222010055919171;0.022198764725565;0.0221962032683452;0.0221933199608223;0.0221901135442173;0.0221865827604326;0.0221827263520777;0.0221785430624938;0.0221740316357794;0.0221691908168152;0.0221640193512895;0.0221585159857239;0.022152679467498;0.0221465085448756;0.0221400019670297;0.0221331584840681;0.0221259768470592;0.0221184558080573;0.0221105941201285;0.0221023905373766;0.0220938438149682;0.0220849527091593;0.0220757159773207;0.0220661323779637;0.0220562006707666;0.0220459196166004;0.0220352879775545;0.0220243045169635;0.0220129679994325;0.0220012771908637;0.0219892308584827;0.0219768277708642;0.021964066697959;0.0219509464111195;0.0219374656831268;0.0219236232882163;0.0219094180021051;0.0218948486020174;0.021879913866712;0.0218646125765079;0.0218489435133116;0.0218329054606434;0.0218164972036641;0.0217997175292016;0.0217825652257779;0.0217650390836353;0.0217471378947638;0.0217288604529277;0.0217102055536922;0.0216911719944508;0.0216717585744516;0.021651964094825;0.0216317873586099;0.0216112271707815;0.0215902823382775;0.0215689516700262;0.0215472339769727;0.0215251280721066;0.0215026327704889;0.0214797468892794;0.0214564692477637;0.021432798667381;0.0214087339717505;0.0213842739866995;0.0213594175402908;0.0213341634628491;0.0213085105869897;0.0212824577476449;0.0212560037820922;0.0212291475299812;0.0212018878333615;0.02117422353671;0.0211461534869588;0.0211176765335223;0.0210887915283252;0.0210594973258299;0.0210297927830643;0.0209996767596496;0.0209691481178275;0.0209382057224885;0.0209068484411992;0.0208750751442305;0.020842884704585;0.0208102759980249;0.0207772479030999;0.0207437993011751;0.0207099290764587;0.02067563611603;0.0206409193098672;0.0206057775508754;0.0205702097349146;0.0205342147608274;0.0204977915304673;0.0204609389487264;0.0204236559235634;0.0203859413660319;0.0203477941903082;0.0203092133137194;0.0202701976567714;0.020230746143177;0.020190857699884;0.0201505312571035;0.0201097657483373;0.0200685601104072;0.0200269132834817;0.0199848242111055;0.0199422918402268;0.0198993151212255;0.0198558930079418;0.0198120244577041;0.0197677084313573;0.0197229438932907;0.0196777298114666;0.0196320651574482;0.0195859489064282;0.0195393800372564;0.0194923575324687;0.0194448803783146;0.0193969475647859;0.019348558085645;0.0192997109384527;0.0192504051245967;0.0192006396493202;0.0191504135217495;0.0190997257549227;0.0190485753658179;0.0189969613753813;0.0189448828085557;0.0188923386943085;0.0188393280656603;0.0187858499597128;0.0187319034176773;0.0186774874849029;0.0186226012109047;0.0185672436493922;0.0185114138582973;0.018455110899803;0.0183983338403711;0.018341081750771;0.0182833537061072;0.0182251487858485;0.0181664660738554;0.0181073046584087;0.0180476636322377;0.0179875420925484;0.0179269391410516;0.0178658538839913;0.0178042854321725;0.01774223290099;0.0176796954104559;0.0176166720852282;0.0175531620546388;0.0174891644527217;0.0174246784182411;0.0173597030947194;0.0172942376304655;0.0172282811786028;0.0171618328970972;0.0170948919487855;0.0170274575014029;0.0169595287276116;0.0168911048050285;0.0168221849162531;0.016752768248896;0.0166828539956064;0.0166124413541001;0.0165415295271879;0.0164701177228029;0.0163982051540287;0.0163257910391276;0.0162528746015679;0.016179455070052;0.0161055316785444;0.0160311036662993;0.0159561702778886;0.0158807307632293;0.0158047843776117;0.0157283303817268;0.015651368041694;0.0155738966290892;0.0154959154209719;0.0154174236999132;0.0153384207540233;0.0152589058769791;0.0151788783680517;0.0150983375321339;0.0150172826797681;0.014935713127173;0.014853628196272;0.0147710272147199;0.0146879095159304;0.0146042744391039;0.0145201213292544;0.014435449537237;0.0143502584197752;0.0142645473394878;0.0141783156649169;0.0140915627705541;0.0140042880368685;0.0139164908503332;0.0138281706034528;0.0137393266947904;0.0136499585289943;0.0135600655168253;0.0134696470751837;0.013378702627136;0.0132872316019417;0.0131952334350806;0.013102707568279;0.0130096534495371;0.0129160705331552;0.0128219582797607;0.0127273161563346;0.0126321436362382;0.0125364401992397;0.0124402053315406;0.0123434385258024;0.0122461392811728;0.0121483071033125;0.012049941504421;0.0119510420032635;0.0118516081251968;0.0117516394021958;0.0116511353728793;0.0115500955825369;0.0114485195831541;0.0113464069334393;0.0112437571988492;0.0111405699516152;0.0110368447707688;0.010932581242168;0.0108277789585228;0.0107224375194214;0.0106165565313551;0.010510135607745;0.0104031743689668;0.0102956724423769;0.0101876294623378;0.0100790450702434;0.00996991891454458;0.00986025065077467;0.00975003994157455;0.00963928645671813;0.00952798987313748;0.0094161498749479;0.00930376615347321;0.00919083840727075;0.00907736634215623;0.00896334967122888;0.00884878811489629;0.00873368140089908;0.00861802926433593;0.00850183144768805;0.00838508770084402;0.00826779778112436;0.00814996145330591;0.00803157848964654;0.00791264866990946;0.00779317178138749;0.00767314761892755;0.00755257598495482;0.00743145668949677;0.00730978955020755;0.00718757439239176;0.00706481104902866;0.00694149936079604;0.00681763917609391;0.00669323035106852;0.00656827274963604;0.00644276624350604;0.00631671071220536;0.0061901060431015;0.006062952131426;0.00593524888029807;0.00580699620074764;0.00567819401173886;0.00554884224019323;0.00541894082101253;0.00528848969710218;0.00515748881939405;0.00502593814686929;0.00489383764658139;0.00476118729367882;0.00462798707142765;0.00449423697123439;0.00435993699266828;0.00422508714348402;0.00408968743964404;0.00395373790534074;0.00381723857301899;0.00368018948339813;0.00354259068549404;0.00340444223664131;0.00326574420251518;0.00312649665715319;0.00298669968297734;0.00284635337081542;0.00270545781992298;0.00256401313800475;0.00242201944123601;0.0022794768542842;0.00213638551033019;0.00199274555108931;0.00184855712683285;0.00170382039640892;0.00155853552726339;0.00141270269546109;0.00126632208570627;0.00111939389136366;0.000971918314479012;0.000823895565799559;0.000675325864794748;0.000526209439676531;0.000376546527419557;0.000226337373781674;7.55822333239443e-005]|9|8|on"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"fir_coef"
		Location		[609, 271, 1389, 957]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 68, 60, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 193, 60, 207]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_gen"
		  Ports			  [1, 1]
		  Position		  [130, 109, 220, 141]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "1024 coefs in bram\n9_8 out/1"
		  UserDataPersistent	  on
		  UserData		  "DataTag121"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Coefficient Generator"
		  MaskDescription	  "A coefficient generator."
		  MaskHelp		  "<pre>\nDescription::\n\nA coefficient generator.\n\nMask Parameters::\n\nCoefficiants (coefs): The coefficients to output.  These should be specified as doubles.\nThey will be rounded/saturated according to the specified number of bits (n_bits)\nand binary point (bin_pt).\n\nNumber of Coefficient Bits (n_bits): The number of bits used for the fixed point binary\nrepresentation of the coefficients.\n\nCoefficient Binary Point (bin_pt): The binary point of the fixed point binary representation\nof the coefficients.\n\nLog2 Cycles per Coefficient (log2_cpc): The log2 value of the number of cycles per coefficient.\nMust be a non-negative integer (i.e. cycles per coefficient must be a power of 2).  \n\nUse BRAM (use_bram): Check this checkbox to store coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Coefficients|Number of Bits|Binary Point|Log2 Cycles per Coefficient|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off"
		  MaskCallbackString	  "||||"
		  MaskEnableString	  "off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on"
		  MaskVarAliasString	  ",,,,"
		  MaskVariables		  "coefs=&1;n_bits=&2;bin_pt=&3;log2_cpc=&4;use_bram=&5;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "[1.30229478472013e-005;3.90815624059165e-005;6.51573367774649e-005;9.12505128142159e-005;0.000117361332654004;0.000143490038707315;0.000169636873644433;0.000195802080382638;0.000221985902073233;0.000248188582088693;0.00027441036400972;0.000300651491612275;0.00032691220885466;0.000353192759864432;0.00037949338892544;0.000405814340464771;0.000432155859039685;0.000458518189324518;0.000484901576097635;0.000511306264228219;0.00053773249866318;0.000564180524413982;0.000590650586543436;0.000617142930152563;0.000643657800367275;0.000670195442325197;0.000696756101162392;0.00072334002200008;0.000749947449931329;0.000776578630007802;0.000803233807226332;0.000829913226515637;0.00085661713272294;0.000883345770600572;0.000910099384792634;0.000936878219821494;0.000963682520074419;0.000990512529790111;0.00101736849304526;0.00104425065374103;0.00107115925558966;0.00109809454210086;0.00112505675656834;0.00115204614205629;0.0011790629413858;0.00120610739712138;0.00123317975155729;0.00126028024670401;0.00128740912427467;0.0013145666256714;0.00134175299197172;0.00136896846391498;0.00139621328188859;0.00142348768591449;0.00145079191563545;0.00147812621030134;0.0015054908087556;0.00153288594942139;0.00156031187028796;0.00158776880889696;0.00161525700232871;0.00164277668718846;0.00167032809959269;0.00169791147515534;0.00172552704897407;0.00175317505561652;0.00178085572910654;0.00180856930291045;0.00183631600992321;0.00186409608245468;0.00189190975221584;0.001919757250305;0.00194763880719397;0.00197555465271432;0.00200350501604353;0.00203149012569121;0.00205951020948525;0.00208756549455806;0.00211565620733274;0.00214378257350922;0.00217194481805049;0.00220014316516874;0.00222837783831153;0.002256649060148;0.00228495705255503;0.00231330203660339;0.00234168423254391;0.00237010385979366;0.00239856113692212;0.00242705628163739;0.00245558951077227;0.0024841610402705;0.00251277108517291;0.00254141985960361;0.00257010757675613;0.00259883444887969;0.00262760068726523;0.00265640650223175;0.00268525210311237;0.00271413769824061;0.00274306349493657;0.00277202969949308;0.00280103651716193;0.00283008415214012;0.00285917280755598;0.00288830268545549;0.00291747398678844;0.00294668691139467;0.00297594165799033;0.00300523842415407;0.00303457740631335;0.00306395879973069;0.00309338279848989;0.00312284959548233;0.00315235938239325;0.00318191234968804;0.00321150868659852;0.00324114858110932;0.00327083221994408;0.00330055978855185;0.00333033147109343;0.00336014745042765;0.00339000790809786;0.00341991302431814;0.0034498629779598;0.00347985794653768;0.00350989810619665;0.00353998363169792;0.0035701146964056;0.00360029147227299;0.00363051412982916;0.00366078283816534;0.00369109776492143;0.00372145907627252;0.00375186693691537;0.00378232151005492;0.00381282295739088;0.00384337143910425;0.00387396711384388;0.00390461013871314;0.00393530066925641;0.00396603885944579;0.00399682486166768;0.00402765882670945;0.0040585409037462;0.00408947124032728;0.00412044998236316;0.00415147727411206;0.00418255325816677;0.00421367807544131;0.00424485186515788;0.00427607476483351;0.00430734691026696;0.00433866843552555;0.00437003947293203;0.00440146015305152;0.00443293060467832;0.00446445095482291;0.00449602132869889;0.00452764184970998;0.00455931263943696;0.00459103381762476;0.00462280550216948;0.00465462780910543;0.00468650085259228;0.0047184247449021;0.00475039959640664;0.00478242551556433;0.00481450260890759;0.00484663098103001;0.00487881073457359;0.00491104197021601;0.00494332478665798;0.00497565928061048;0.00500804554678217;0.00504048367786674;0.00507297376453033;0.00510551589539899;0.0051381101570461;0.00517075663397987;0.00520345540863088;0.00523620656133964;0.0052690101703441;0.00530186631176739;0.00533477505960533;0.00536773648571416;0.00540075065979826;0.00543381764939783;0.00546693751987671;0.00550011033441016;0.00553333615397264;0.00556661503732576;0.00559994704100609;0.00563333221931314;0.00566677062429732;0.0057002623057479;0.00573380731118106;0.00576740568582796;0.00580105747262281;0.00583476271219105;0.00586852144283747;0.00590233370053443;0.0059361995189101;0.00597011892923675;0.00600409196041901;0.00603811863898232;0.0060721989890612;0.00610633303238773;0.00614052078828002;0.00617476227363066;0.00620905750289535;0.00624340648808137;0.00627780923873624;0.0063122657619364;0.00634677606227583;0.00638134014185485;0.00641595800026893;0.00645062963459735;0.00648535503939221;0.00652013420666724;0.00655496712588674;0.00658985378395465;0.00662479416520342;0.00665978825138318;0.00669483602165082;0.00672993745255913;0.00676509251804594;0.00680030118942352;0.00683556343536762;0.00687087922190698;0.00690624851241261;0.00694167126758721;0.00697714744545466;0.00701267700134947;0.00704825988790636;0.00708389605504983;0.00711958544998381;0.00715532801718132;0.00719112369837428;0.00722697243254317;0.00726287415590692;0.00729882880191279;0.00733483630122624;0.00737089658172098;0.00740700956846889;0.00744317518373013;0.00747939334694328;0.00751566397471543;0.00755198698081245;0.00758836227614927;0.00762478976878012;0.00766126936388893;0.00769780096377973;0.00773438446786714;0.00777101977266688;0.00780770677178631;0.00784444535591502;0.00788123541281559;0.00791807682731424;0.00795496948129161;0.00799191325367362;0.00802890802042233;0.00806595365452684;0.00810305002599434;0.00814019700184109;0.00817739444608359;0.00821464221972963;0.00825194018076957;0.00828928818416756;0.0083266860818529;0.00836413372271132;0.00840163095257653;0.00843917761422159;0.00847677354735049;0.00851441858858978;0.0085521125714801;0.0085898553264681;0.00862764668089797;0.00866548645900342;0.00870337448189951;0.00874131056757457;0.00877929453088222;0.00881732618353346;0.0088554053340887;0.00889353178795001;0.00893170534735332;0.00896992581136071;0.00900819297585279;0.00904650663352107;0.00908486657386049;0.00912327258316188;0.00916172444450464;0.00920022193774929;0.00923876483953036;0.00927735292324897;0.0093159859590658;0.00935466371389393;0.00939338595139185;0.0094321524319565;0.00947096291271629;0.00950981714752431;0.00954871488695155;0.00958765587828016;0.00962663986549678;0.00966566658928605;0.00970473578702392;0.00974384719277134;0.00978300053726775;0.00982219554792484;0.00986143194882025;0.00990070946069135;0.0099400278009291;0.00997938668357203;0.0100187858193002;0.0100582249154293;0.0100977036759047;0.0101372218012957;0.01017677898879;0.0102163749321875;0.0102560093218952;0.0102956818449215;0.0103353921848709;0.0103751400219381;0.0104149250329032;0.0104547468911263;0.0104946052665421;0.0105344998256552;0.0105744302315346;0.0106143961438089;0.0106543972186615;0.0106944331088256;0.0107345034635795;0.0107746079287419;0.0108147461466673;0.0108549177562413;0.0108951223928764;0.010935359688507;0.010975629271586;0.0110159307670795;0.0110562637964633;0.0110966279777186;0.0111370229253276;0.0111774482502703;0.0112179035600195;0.011258388458538;0.0112989025462742;0.0113394454201587;0.0113800166736003;0.0114206158964832;0.0114612426751627;0.0115018965924621;0.0115425772276698;0.0115832841565354;0.011624016951267;0.0116647751805277;0.0117055584094329;0.0117463661995474;0.0117871981088822;0.0118280536918919;0.011868932499472;0.0119098340789561;0.0119507579741136;0.0119917037251469;0.0120326708686893;0.0120736589378022;0.0121146674619735;0.0121556959671148;0.0121967439755595;0.0122378110060608;0.0122788965737901;0.0123200001903342;0.0123611213636946;0.0124022595982848;0.0124434143949294;0.0124845852508622;0.0125257716597247;0.0125669731115647;0.0126081890928351;0.0126494190863927;0.0126906625714966;0.0127319190238077;0.0127731879153873;0.0128144687146963;0.0128557608865941;0.0128970638923385;0.0129383771895841;0.0129797002323824;0.0130210324711811;0.0130623733528234;0.0131037223205477;0.0131450788139878;0.0131864422691718;0.013227812118523;0.0132691877908589;0.013310568711392;0.0133519543017293;0.013393343979873;0.0134347371602205;0.0134761332535648;0.0135175316670951;0.013558931804397;0.0136003330654535;0.0136417348466455;0.0136831365407524;0.0137245375369534;0.0137659372208281;0.0138073349743574;0.0138487301759252;0.0138901222003188;0.0139315104187309;0.0139728941987605;0.0140142729044144;0.014055645896109;0.0140970125306716;0.0141383721613421;0.014179724137775;0.0142210678060412;0.0142624025086298;0.0143037275844501;0.014345042368834;0.0143863461935379;0.0144276383867453;0.0144689182730687;0.0145101851735525;0.0145514384056753;0.0145926772833527;0.0146339011169396;0.0146751092132337;0.0147163008754775;0.0147574754033622;0.0147986320930298;0.0148397702370772;0.0148808891245584;0.0149219880409888;0.0149630662683479;0.0150041230850829;0.0150451577661127;0.0150861695828308;0.0151271578031099;0.0151681216913049;0.0152090605082574;0.0152499735112994;0.0152908599542575;0.015331719087457;0.0153725501577262;0.0154133524084007;0.0154541250793279;0.0154948674068714;0.0155355786239159;0.0155762579598713;0.0156169046406781;0.0156575178888119;0.0156980969232886;0.015738640959669;0.0157791492100646;0.015819620883142;0.0158600551841291;0.0159004513148196;0.015940808473579;0.0159811258553503;0.0160214026516591;0.0160616380506197;0.016101831236941;0.0161419813919321;0.0161820876935087;0.0162221493161987;0.0162621654311489;0.0163021352061308;0.0163420578055472;0.0163819323904387;0.01642175811849;0.0164615341440367;0.0165012596180719;0.0165409336882532;0.0165805554989092;0.0166201241910468;0.016659638902358;0.0166990987672274;0.0167385029167391;0.016777850478684;0.0168171405775676;0.0168563723346172;0.0168955448677892;0.0169346572917774;0.0169737087180206;0.0170126982547098;0.0170516250067972;0.0170904880760033;0.0171292865608255;0.0171680195565462;0.0172066861552411;0.0172452854457875;0.0172838165138729;0.0173222784420034;0.0173606703095124;0.0173989911925696;0.0174372401641892;0.0174754162942395;0.0175135186494514;0.0175515462934279;0.0175894982866526;0.0176273736864999;0.0176651715472435;0.0177028909200663;0.01774053085307;0.0177780903912842;0.0178155685766767;0.0178529644481627;0.0178902770416155;0.0179275053898754;0.0179646485227607;0.0180017054670774;0.0180386752466294;0.0180755568822289;0.0181123493917068;0.0181490517899233;0.0181856630887784;0.0182221822972225;0.0182586084212671;0.0182949404639958;0.0183311774255754;0.0183673183032665;0.0184033620914347;0.0184393077815623;0.0184751543622587;0.0185109008192725;0.0185465461355029;0.0185820892910106;0.0186175292630303;0.0186528650259817;0.0186880955514817;0.0187232198083563;0.0187582367626523;0.0187931453776497;0.0188279446138735;0.0188626334291062;0.0188972107784002;0.0189316756140897;0.018966026885804;0.0190002635404793;0.0190343845223718;0.0190683887730704;0.0191022752315096;0.0191360428339821;0.0191696905141523;0.019203217203069;0.0192366218291787;0.0192699033183391;0.0193030605938321;0.0193360925763775;0.0193689981841464;0.0194017763327749;0.0194344259353776;0.0194669459025618;0.0194993351424409;0.0195315925606485;0.0195637170603529;0.0195957075422703;0.0196275629046798;0.0196592820434375;0.0196908638519908;0.0197223072213925;0.0197536110403162;0.0197847741950701;0.0198157955696123;0.0198466740455651;0.0198774085022304;0.0199079978166042;0.0199384408633918;0.0199687365150233;0.0199988836416682;0.020028881111251;0.0200587277894667;0.0200884225397961;0.0201179642235214;0.0201473516997418;0.0201765838253892;0.020205659455244;0.020234577441951;0.0202633366360355;0.020291935885919;0.0203203740379356;0.0203486499363482;0.0203767624233645;0.0204047103391538;0.020432492521863;0.0204601078076336;0.0204875550306177;0.0205148330229955;0.0205419406149913;0.0205688766348906;0.0205956399090575;0.0206222292619508;0.020648643516142;0.0206748814923318;0.0207009420093679;0.0207268238842619;0.0207525259322066;0.0207780469665943;0.0208033857990334;0.0208285412393665;0.0208535120956883;0.020878297174363;0.0209028952800423;0.0209273052156838;0.0209515257825682;0.0209755557803181;0.0209993940069161;0.0210230392587226;0.0210464903304949;0.0210697460154048;0.0210928051050577;0.0211156663895112;0.021138328657293;0.0211607906954207;0.0211830512894198;0.0212051092233429;0.0212269632797886;0.0212486122399205;0.0212700548834864;0.0212912899888375;0.0213123163329474;0.0213331326914318;0.0213537378385675;0.0213741305473122;0.0213943095893242;0.0214142737349813;0.0214340217534013;0.0214535524124615;0.0214728644788182;0.0214919567179271;0.0215108278940632;0.0215294767703405;0.0215479021087327;0.021566102670093;0.0215840772141744;0.0216018244996503;0.0216193432841346;0.0216366323242026;0.0216536903754111;0.0216705161923194;0.0216871085285099;0.0217034661366086;0.0217195877683065;0.02173547217438;0.0217511181047122;0.0217665243083139;0.0217816895333444;0.0217966125271333;0.021811292036201;0.021825726806281;0.0218399155823402;0.0218538571086012;0.0218675501285635;0.021880993385025;0.021894185620104;0.0219071255752605;0.0219198119913184;0.0219322436084871;0.0219444191663836;0.0219563374040542;0.021967997059997;0.0219793968721838;0.021990535578082;0.0220014119146775;0.0220120246184963;0.0220223724256277;0.0220324540717458;0.0220422682921327;0.0220518138217011;0.0220610893950162;0.0220700937463195;0.0220788256095504;0.0220872837183699;0.0220954668061832;0.0221033736061624;0.02211100285127;0.0221183532742814;0.0221254236078085;0.0221322125843227;0.0221387189361781;0.0221449413956349;0.0221508786948827;0.0221565295660639;0.0221618927412975;0.0221669669527021;0.02217175093242;0.0221762434126404;0.0221804431256237;0.0221843488037246;0.0221879591794167;0.0221912729853155;0.0221942889542031;0.0221970058190519;0.0221994223130485;0.0222015371696183;0.0222033491224491;0.0222048569055155;0.0222060592531036;0.0222069548998346;0.0222075425806899;0.0222078210310349;0.0222077889866442;0.0222074451837253;0.0222067883589439;0.0222058172494483;0.0222045305928941;0.0222029271274689;0.0222010055919171;0.022198764725565;0.0221962032683452;0.0221933199608223;0.0221901135442173;0.0221865827604326;0.0221827263520777;0.0221785430624938;0.0221740316357794;0.0221691908168152;0.0221640193512895;0.0221585159857239;0.022152679467498;0.0221465085448756;0.0221400019670297;0.0221331584840681;0.0221259768470592;0.0221184558080573;0.0221105941201285;0.0221023905373766;0.0220938438149682;0.0220849527091593;0.0220757159773207;0.0220661323779637;0.0220562006707666;0.0220459196166004;0.0220352879775545;0.0220243045169635;0.0220129679994325;0.0220012771908637;0.0219892308584827;0.0219768277708642;0.021964066697959;0.0219509464111195;0.0219374656831268;0.0219236232882163;0.0219094180021051;0.0218948486020174;0.021879913866712;0.0218646125765079;0.0218489435133116;0.0218329054606434;0.0218164972036641;0.0217997175292016;0.0217825652257779;0.0217650390836353;0.0217471378947638;0.0217288604529277;0.0217102055536922;0.0216911719944508;0.0216717585744516;0.021651964094825;0.0216317873586099;0.0216112271707815;0.0215902823382775;0.0215689516700262;0.0215472339769727;0.0215251280721066;0.0215026327704889;0.0214797468892794;0.0214564692477637;0.021432798667381;0.0214087339717505;0.0213842739866995;0.0213594175402908;0.0213341634628491;0.0213085105869897;0.0212824577476449;0.0212560037820922;0.0212291475299812;0.0212018878333615;0.02117422353671;0.0211461534869588;0.0211176765335223;0.0210887915283252;0.0210594973258299;0.0210297927830643;0.0209996767596496;0.0209691481178275;0.0209382057224885;0.0209068484411992;0.0208750751442305;0.020842884704585;0.0208102759980249;0.0207772479030999;0.0207437993011751;0.0207099290764587;0.02067563611603;0.0206409193098672;0.0206057775508754;0.0205702097349146;0.0205342147608274;0.0204977915304673;0.0204609389487264;0.0204236559235634;0.0203859413660319;0.0203477941903082;0.0203092133137194;0.0202701976567714;0.020230746143177;0.020190857699884;0.0201505312571035;0.0201097657483373;0.0200685601104072;0.0200269132834817;0.0199848242111055;0.0199422918402268;0.0198993151212255;0.0198558930079418;0.0198120244577041;0.0197677084313573;0.0197229438932907;0.0196777298114666;0.0196320651574482;0.0195859489064282;0.0195393800372564;0.0194923575324687;0.0194448803783146;0.0193969475647859;0.019348558085645;0.0192997109384527;0.0192504051245967;0.0192006396493202;0.0191504135217495;0.0190997257549227;0.0190485753658179;0.0189969613753813;0.0189448828085557;0.0188923386943085;0.0188393280656603;0.0187858499597128;0.0187319034176773;0.0186774874849029;0.0186226012109047;0.0185672436493922;0.0185114138582973;0.018455110899803;0.0183983338403711;0.018341081750771;0.0182833537061072;0.0182251487858485;0.0181664660738554;0.0181073046584087;0.0180476636322377;0.0179875420925484;0.0179269391410516;0.0178658538839913;0.0178042854321725;0.01774223290099;0.0176796954104559;0.0176166720852282;0.0175531620546388;0.0174891644527217;0.0174246784182411;0.0173597030947194;0.0172942376304655;0.0172282811786028;0.0171618328970972;0.0170948919487855;0.0170274575014029;0.0169595287276116;0.0168911048050285;0.0168221849162531;0.016752768248896;0.0166828539956064;0.0166124413541001;0.0165415295271879;0.0164701177228029;0.0163982051540287;0.0163257910391276;0.0162528746015679;0.016179455070052;0.0161055316785444;0.0160311036662993;0.0159561702778886;0.0158807307632293;0.0158047843776117;0.0157283303817268;0.015651368041694;0.0155738966290892;0.0154959154209719;0.0154174236999132;0.0153384207540233;0.0152589058769791;0.0151788783680517;0.0150983375321339;0.0150172826797681;0.014935713127173;0.014853628196272;0.0147710272147199;0.0146879095159304;0.0146042744391039;0.0145201213292544;0.014435449537237;0.0143502584197752;0.0142645473394878;0.0141783156649169;0.0140915627705541;0.0140042880368685;0.0139164908503332;0.0138281706034528;0.0137393266947904;0.0136499585289943;0.0135600655168253;0.0134696470751837;0.013378702627136;0.0132872316019417;0.0131952334350806;0.013102707568279;0.0130096534495371;0.0129160705331552;0.0128219582797607;0.0127273161563346;0.0126321436362382;0.0125364401992397;0.0124402053315406;0.0123434385258024;0.0122461392811728;0.0121483071033125;0.012049941504421;0.0119510420032635;0.0118516081251968;0.0117516394021958;0.0116511353728793;0.0115500955825369;0.0114485195831541;0.0113464069334393;0.0112437571988492;0.0111405699516152;0.0110368447707688;0.010932581242168;0.0108277789585228;0.0107224375194214;0.0106165565313551;0.010510135607745;0.0104031743689668;0.0102956724423769;0.0101876294623378;0.0100790450702434;0.00996991891454458;0.00986025065077467;0.00975003994157455;0.00963928645671813;0.00952798987313748;0.0094161498749479;0.00930376615347321;0.00919083840727075;0.00907736634215623;0.00896334967122888;0.00884878811489629;0.00873368140089908;0.00861802926433593;0.00850183144768805;0.00838508770084402;0.00826779778112436;0.00814996145330591;0.00803157848964654;0.00791264866990946;0.00779317178138749;0.00767314761892755;0.00755257598495482;0.00743145668949677;0.00730978955020755;0.00718757439239176;0.00706481104902866;0.00694149936079604;0.00681763917609391;0.00669323035106852;0.00656827274963604;0.00644276624350604;0.00631671071220536;0.0061901060431015;0.006062952131426;0.00593524888029807;0.00580699620074764;0.00567819401173886;0.00554884224019323;0.00541894082101253;0.00528848969710218;0.00515748881939405;0.00502593814686929;0.00489383764658139;0.00476118729367882;0.00462798707142765;0.00449423697123439;0.00435993699266828;0.00422508714348402;0.00408968743964404;0.00395373790534074;0.00381723857301899;0.00368018948339813;0.00354259068549404;0.00340444223664131;0.00326574420251518;0.00312649665715319;0.00298669968297734;0.00284635337081542;0.00270545781992298;0.00256401313800475;0.00242201944123601;0.0022794768542842;0.00213638551033019;0.00199274555108931;0.00184855712683285;0.00170382039640892;0.00155853552726339;0.00141270269546109;0.00126632208570627;0.00111939389136366;0.000971918314479012;0.000823895565799559;0.000675325864794748;0.000526209439676531;0.000376546527419557;0.000226337373781674;7.55822333239443e-005]|9|8|0|on"
		  MaskTabNameString	  ",,,,"
		  System {
		    Name		    "c_gen"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Count Limited"
		    cnt_to		    "1023"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "10"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 50 50 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "1024"
		    initVector		    "[0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.0234375;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.01953125;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.015625;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.01171875;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.0078125;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0.00390625;0;0;0;0;0;0;0;0;0;0;0;0;0]"
		    distributed_mem	    "Block RAM"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "8"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[7 15 27 39 47 47 43 47 47 36 47 39 27 15 7 18 7 7 11 7 7 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "coef_out"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mem"
		    SrcPort		    1
		    DstBlock		    "coef_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "data_delay"
		  Ports			  [1, 1]
		  Position		  [145, 17, 200, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sum_delay"
		  Ports			  [1, 1]
		  Position		  [145, 62, 200, 88]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [145, 187, 200, 213]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [295, 23, 325, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [295, 68, 325, 82]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "coef"
		  Position		  [295, 118, 325, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [295, 193, 325, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_gen"
		  SrcPort		  1
		  DstBlock		  "coef"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_delay"
		  SrcPort		  1
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "sum_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [25, 0]
		  Branch {
		    Points		    [0, -75]
		    DstBlock		    "c_gen"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "sync_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_delay"
		  SrcPort		  1
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  DstBlock		  "data_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "fir_core"
	      Ports		      [4, 3]
	      Position		      [270, 29, 360, 96]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "delay 0 in slr"
	      UserDataPersistent      on
	      UserData		      "DataTag122"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "FIR Filter Core"
	      MaskDescription	      "A Finite Impluse Response Filter core with complex inputs and real coefficients.  This FIR filter core does not have provisions for folding the input sequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA) FIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters."
	      MaskHelp		      "<pre>\nDescription::\n\nA Finite Impluse Response Filter core with complex inputs and real coefficients.\n\nThis Finite Impluse Response Filter core is designed to be paired with a FIR Coefficient Generator \nto form a FIR filter tap.  This FIR filter core does not have provisions for folding the input\nsequence to improve multiplier efficiency, so it is suboptimal for \"regular\" (i.e. non-WOLA)\nFIR filters.  It is intended primarily for WOLA (Weighted OverLap Add) FIR filters.\n\nMask Parameters::\n\nTap Delay (delay):  The inter-tap delay (the N in \"z^-N\").  For a regular FIR filter, this will be 1.\n\nNumber of Data Bits (n_bits_d): The number of bits for real/imaginary components of the data.\n\nData Binary Point (bin_pt_d): The binary point for real/imaginary components of the data.\n\nNumber of Sum Bits (n_bits_s): Specifies the width of the sum (overflow wraps).\n\nSum Binary Point (bin_pt_s): Specifies the binary point of the sum (quantization truncates).\n\nUse BRAM for Delay (use_bram): Check this checkbox to implement the delay using BRAM.\nIf unchecked, the delay will be implemented using SLR16 elements (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying multiplier.\n\nAdder Latency (add_latency): Latency to use for the underlying adder.\n\nAdder Bypass (add_bypass): Check this checkbox to bypass the adder.\nTypically used for the first tap of a multi-tap FIR filter.\n</pre>"
	      MaskPromptString	      "Tap Delay|Number of Data Bits|Data Binary Point|Number of Sum Bits|Sum Binary Point|Use BRAM for Delay|Multiplier Latency|Adder Latency|Bypass Adder"
	      MaskStyleString	      "edit,edit,edit,edit,edit,checkbox,edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "delay=&1;n_bits_d=&2;bin_pt_d=&3;n_bits_s=&4;bin_pt_s=&5;use_bram=&6;mult_latency=&7;add_latency=&8;add_bypass=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "0|8|7|17|15|off|3|1|off"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"fir_core"
		Location		[282, 135, 1062, 821]
		Open			on
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "data_in"
		  Position		  [30, 23, 60, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sum_in"
		  Position		  [30, 223, 60, 237]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "coef"
		  Position		  [30, 183, 60, 197]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [30, 278, 60, 292]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_d"
		  Ports			  [1, 2]
		  Position		  [120, 69, 160, 111]
		  AttributesFormatString  "8_7 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag123"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|7"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_d"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri_s"
		  Ports			  [1, 2]
		  Position		  [120, 209, 160, 251]
		  AttributesFormatString  "17_15 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag124"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "17|15"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri_s"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "15"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "17"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 28 28 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 22 24 26 34 28 22 18 26 18 22 28 34 26 24 22 15 ],[3 8 15 22 27 27 25 27 27 21 27 23 15 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 28 28 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_im"
		  Ports			  [1, 1]
		  Position		  [345, 175, 390, 205]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "convert_re"
		  Ports			  [1, 1]
		  Position		  [345, 80, 390, 110]
		  SourceBlock		  "xbsIndex_r4/Convert"
		  SourceType		  "Xilinx Type Converter Block"
		  infoedit		  "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "17"
		  bin_pt		  "15"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  latency		  "0"
		  dbl_ovrd		  off
		  pipeline		  on
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "convert"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,30,1,1,white,blue,0,74901e60,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "dout_delay"
		  Ports			  [1, 1]
		  Position		  [255, 17, 310, 43]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_im"
		  Ports			  [3, 1]
		  Position		  [255, 164, 305, 216]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag125"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_im"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "mult_add_re"
		  Ports			  [3, 1]
		  Position		  [255, 69, 305, 121]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "out = a*b+c\nlatency = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag126"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Multiply Add Block"
		  MaskDescription	  "A full precision multiply-add block.  Produces a*b+c at its ab_c output.  The add operation can be optionally bypassed.\n"
		  MaskHelp		  "<pre>\nDescription::\n\nThis full precision multiply-add block produces a*b+c at its ab_c output.\nThe add operation can be optionally bypassed.\n\nLatency is one multiplier latency plus one adder latency (if not bypassing adder).\n\nMask Parameters::\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nBypass Adder (add_bypass): Check this checkbox to bypass the adder.\n</pre>"
		  MaskPromptString	  "Multiplier Latency|Adder Latency|Bypass Adder"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "mult_latency=&1;add_latency=&2;add_bypass=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|1|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "mult_add_re"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [30, 43, 60, 57]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [30, 98, 60, 112]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [30, 158, 60, 172]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add"
		    Ports		    [2, 1]
		    Position		    [230, 120, 275, 180]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "7"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,60,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[12 19 30 41 48 48 45 48 48 38 48 41 30 19 12 22 12 12 15 12 12 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "delay"
		    Ports		    [1, 1]
		    Position		    [125, 152, 180, 178]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,26,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mult"
		    Ports		    [2, 1]
		    Position		    [125, 22, 180, 133]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,111,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 111 111 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[34 43 56 69 78 78 74 78 78 66 78 69 56 43 34 46 34 34 38 34 34 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 111 111 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [330, 73, 360, 87]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "add"
		    SrcPort		    1
		    Points		    [15, 0; 0, -70]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "mult"
		    SrcPort		    1
		    Points		    [30, 0]
		    DstBlock		    "add"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay"
		    SrcPort		    1
		    DstBlock		    "add"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "mult"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    DstBlock		    "delay"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [455, 119, 495, 161]
		  UserDataPersistent	  on
		  UserData		  "DataTag127"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskInitialization	  "ri_to_c_init(gcb);"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [282, 135, 1062, 821]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([11 3 15 3 11 24 28 32 46 35 24 16 28 16 24 35 46 32 28 24 11 ],[8 16 28 40 48 48 44 48 48 37 48 40 28 16 8 19 8 8 12 8 8 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 40 40 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([11 6 13 6 11 19 21 23 32 25 18 13 20 13 18 25 32 23 21 19 11 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 40 40 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "sync_delay"
		  Ports			  [1, 1]
		  Position		  [255, 272, 310, 298]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "4"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "55,26,1,1,white,blue,0,c2217bc4,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "tap_delay"
		  Ports			  [1, 1]
		  Position		  [440, 14, 500, 46]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "slr depth = 0"
		  UserDataPersistent	  on
		  UserData		  "DataTag128"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "SLR16 Delay"
		  MaskDescription	  "A delay block that uses SLR16 elements for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		  MaskPromptString	  "Delay Depth"
		  MaskStyleString	  "edit"
		  MaskTunableValueString  "off"
		  MaskEnableString	  "off"
		  MaskVisibilityString	  "on"
		  MaskToolTipString	  "on"
		  MaskVariables		  "delay_depth=&1;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "0"
		  System {
		    Name		    "tap_delay"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "0"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,d74ee26d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 46 46 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[5 12 23 34 41 41 38 41 41 31 41 34 23 12 5 15 5 5 8 5 5 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 46 46 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-0}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "data_out"
		  Position		  [555, 23, 585, 37]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sum_out"
		  Position		  [555, 133, 585, 147]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 278, 585, 292]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "convert_im"
		  SrcPort		  1
		  Points		  [20, 0; 0, -40]
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "convert_re"
		  SrcPort		  1
		  Points		  [20, 0; 0, 35]
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "tap_delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "data_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_im"
		  SrcPort		  1
		  DstBlock		  "convert_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "mult_add_re"
		  SrcPort		  1
		  DstBlock		  "convert_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  2
		  Points		  [75, 0]
		  DstBlock		  "mult_add_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "c_to_ri_s"
		  SrcPort		  1
		  Points		  [75, 0]
		  DstBlock		  "mult_add_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "sum_in"
		  SrcPort		  1
		  DstBlock		  "c_to_ri_s"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "coef"
		  SrcPort		  1
		  Points		  [140, 0]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "mult_add_re"
		    DstPort		    2
		  }
		  Branch {
		    DstBlock		    "mult_add_im"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  2
		  Points		  [20, 0; 0, 75]
		  DstBlock		  "mult_add_im"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri_d"
		  SrcPort		  1
		  DstBlock		  "mult_add_re"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "data_in"
		  SrcPort		  1
		  Points		  [35, 0]
		  Branch {
		    Points		    [0, 60]
		    DstBlock		    "c_to_ri_d"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "dout_delay"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "dout_delay"
		  SrcPort		  1
		  DstBlock		  "tap_delay"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sum_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_delay"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "data_out"
	      Position		      [435, 23, 465, 37]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sum_out"
	      Position		      [435, 58, 465, 72]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [435, 93, 465, 107]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      3
	      Points		      [25, 0; 0, 15]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      2
	      DstBlock		      "sum_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_core"
	      SrcPort		      1
	      Points		      [25, 0; 0, -15]
	      DstBlock		      "data_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, -15]
	      DstBlock		      "fir_coef"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "sum_in"
	      SrcPort		      1
	      DstBlock		      "fir_coef"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "data_in"
	      SrcPort		      1
	      Points		      [15, 0; 0, 15]
	      DstBlock		      "fir_coef"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      4
	      DstBlock		      "fir_core"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      3
	      DstBlock		      "fir_core"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      2
	      DstBlock		      "fir_core"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "fir_coef"
	      SrcPort		      1
	      DstBlock		      "fir_core"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  Outport
	  Name			  "out"
	  Position		  [1150, 13, 1180, 27]
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "sync_out"
	  Position		  [1150, 83, 1180, 97]
	  Port			  "2"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Line {
	  SrcBlock		  "in"
	  SrcPort		  1
	  DstBlock		  "fir_tap_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "sync_in"
	  SrcPort		  1
	  DstBlock		  "fir_tap_1"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_tap_1"
	  SrcPort		  1
	  DstBlock		  "fir_tap_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_tap_1"
	  SrcPort		  2
	  DstBlock		  "fir_tap_2"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "fir_tap_1"
	  SrcPort		  3
	  DstBlock		  "fir_tap_2"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_tap_2"
	  SrcPort		  1
	  DstBlock		  "fir_tap_3"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_tap_2"
	  SrcPort		  2
	  DstBlock		  "fir_tap_3"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "fir_tap_2"
	  SrcPort		  3
	  DstBlock		  "fir_tap_3"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_tap_3"
	  SrcPort		  1
	  DstBlock		  "fir_tap_4"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_tap_3"
	  SrcPort		  2
	  DstBlock		  "fir_tap_4"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "fir_tap_3"
	  SrcPort		  3
	  DstBlock		  "fir_tap_4"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_tap_4"
	  SrcPort		  1
	  DstBlock		  "fir_tap_5"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_tap_4"
	  SrcPort		  2
	  DstBlock		  "fir_tap_5"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "fir_tap_4"
	  SrcPort		  3
	  DstBlock		  "fir_tap_5"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_tap_5"
	  SrcPort		  1
	  DstBlock		  "fir_tap_6"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_tap_5"
	  SrcPort		  2
	  DstBlock		  "fir_tap_6"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "fir_tap_5"
	  SrcPort		  3
	  DstBlock		  "fir_tap_6"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_tap_6"
	  SrcPort		  1
	  DstBlock		  "fir_quantize"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_tap_6"
	  SrcPort		  2
	  DstBlock		  "fir_quantize"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "fir_tap_6"
	  SrcPort		  3
	  DstBlock		  "fir_quantize"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "fir_quantize"
	  SrcPort		  1
	  DstBlock		  "out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "fir_quantize"
	  SrcPort		  2
	  DstBlock		  "sync_out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Constant"
	  SrcPort		  1
	  DstBlock		  "fir_tap_1"
	  DstPort		  2
	}
      }
    }
    Block {
      BlockType		      Reference
      Name		      "pol1_in"
      Ports		      [1, 1]
      Position		      [215, 194, 270, 216]
      SourceBlock	      "xbsIndex_r4/Gateway In"
      SourceType	      "Xilinx Gateway In Block"
      infoedit		      "Gateway in block.  Converts inputs of type Simulink integer, double and fixed point to  Xilinx fixed point type.<P><P>Hardware notes:  In hardware these blocks become top level input ports."
      arith_type	      "Unsigned"
      n_bits		      "16"
      bin_pt		      "0"
      quantization	      "Truncate"
      overflow		      "Wrap"
      period		      "1"
      dbl_ovrd		      off
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0, 0, 0, 0, 0, 0, 0]"
      has_advanced_control    "0"
      sggui_pos		      "20,20,351,390"
      block_type	      "gatewayin"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,bc55d28f,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 22 22 ],[0.95 0.93 0.65]);\npatch([22 18 23 18 22 28 30 32 38 33 28 25 31 25 28 33 38 32 30 28 22 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'\\fontsize{11pt}\\bf In ','texmode','on');\ncolor('black');port_label('output',1,' ');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "pol1_out"
      Ports		      [1, 1]
      Position		      [545, 194, 600, 216]
      SourceBlock	      "xbsIndex_r4/Gateway Out"
      SourceType	      "Xilinx Gateway Out Block"
      infoedit		      "Gateway out block.  Converts Xilinx fixed point inputs into ouputs of type Simulink integer, double, or fixed point.<P><P>Hardware notes:  In hardware these blocks become top level output ports or are discarded, depending on how they are configured."
      hdl_port		      on
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0, 0, 0, 0, 0, 0, 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayout"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,38220381,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 22 22 ],[0.95 0.93 0.65]);\npatch([22 18 23 18 22 28 30 32 38 33 28 25 31 25 28 33 38 32 30 28 22 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,' ');\ncolor('black');port_label('output',1,'\\fontsize{11pt}\\bf Out ','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "pol2_in"
      Ports		      [1, 1]
      Position		      [215, 324, 270, 346]
      SourceBlock	      "xbsIndex_r4/Gateway In"
      SourceType	      "Xilinx Gateway In Block"
      infoedit		      "Gateway in block.  Converts inputs of type Simulink integer, double and fixed point to  Xilinx fixed point type.<P><P>Hardware notes:  In hardware these blocks become top level input ports."
      arith_type	      "Unsigned"
      n_bits		      "16"
      bin_pt		      "0"
      quantization	      "Truncate"
      overflow		      "Wrap"
      period		      "1"
      dbl_ovrd		      off
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0, 0, 0, 0, 0, 0, 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayin"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,bc55d28f,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 22 22 ],[0.95 0.93 0.65]);\npatch([22 18 23 18 22 28 30 32 38 33 28 25 31 25 28 33 38 32 30 28 22 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'\\fontsize{11pt}\\bf In ','texmode','on');\ncolor('black');port_label('output',1,' ');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "pol2_out"
      Ports		      [1, 1]
      Position		      [545, 324, 600, 346]
      SourceBlock	      "xbsIndex_r4/Gateway Out"
      SourceType	      "Xilinx Gateway Out Block"
      infoedit		      "Gateway out block.  Converts Xilinx fixed point inputs into ouputs of type Simulink integer, double, or fixed point.<P><P>Hardware notes:  In hardware these blocks become top level output ports or are discarded, depending on how they are configured."
      hdl_port		      on
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0, 0, 0, 0, 0, 0, 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayout"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,38220381,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 22 22 ],[0.95 0.93 0.65]);\npatch([22 18 23 18 22 28 30 32 38 33 28 25 31 25 28 33 38 32 30 28 22 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,' ');\ncolor('black');port_label('output',1,'\\fontsize{11pt}\\bf Out ','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "sync_in"
      Ports		      [1, 1]
      Position		      [215, 394, 270, 416]
      SourceBlock	      "xbsIndex_r4/Gateway In"
      SourceType	      "Xilinx Gateway In Block"
      infoedit		      "Gateway in block.  Converts inputs of type Simulink integer, double and fixed point to  Xilinx fixed point type.<P><P>Hardware notes:  In hardware these blocks become top level input ports."
      arith_type	      "Boolean"
      n_bits		      "8"
      bin_pt		      "6"
      quantization	      "Truncate"
      overflow		      "Wrap"
      period		      "1"
      dbl_ovrd		      off
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0, 0, 0, 0, 0, 0, 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayin"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,bc55d28f,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 22 22 ],[0.95 0.93 0.65]);\npatch([22 18 23 18 22 28 30 32 38 33 28 25 31 25 28 33 38 32 30 28 22 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'\\fontsize{11pt}\\bf In ','texmode','on');\ncolor('black');port_label('output',1,' ');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "sync_out"
      Ports		      [1, 1]
      Position		      [545, 394, 600, 416]
      SourceBlock	      "xbsIndex_r4/Gateway Out"
      SourceType	      "Xilinx Gateway Out Block"
      infoedit		      "Gateway out block.  Converts Xilinx fixed point inputs into ouputs of type Simulink integer, double, or fixed point.<P><P>Hardware notes:  In hardware these blocks become top level output ports or are discarded, depending on how they are configured."
      hdl_port		      on
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0, 0, 0, 0, 0, 0, 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayout"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,38220381,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 22 22 ],[0.95 0.93 0.65]);\npatch([22 18 23 18 22 28 30 32 38 33 28 25 31 25 28 33 38 32 30 28 22 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,' ');\ncolor('black');port_label('output',1,'\\fontsize{11pt}\\bf Out ','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
    }
    Line {
      SrcBlock		      "sync_in"
      SrcPort		      1
      Points		      [40, 0; 0, -40]
      Branch {
	Points			[0, 0]
	DstBlock		"fir_2"
	DstPort			2
      }
      Branch {
	Points			[0, -130]
	DstBlock		"fir_1"
	DstPort			2
      }
    }
    Line {
      SrcBlock		      "Constant"
      SrcPort		      1
      Points		      [0, 0]
      DstBlock		      "sync_in"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Constant1"
      SrcPort		      1
      DstBlock		      "pol1_in"
      DstPort		      1
    }
    Line {
      SrcBlock		      "sync_out"
      SrcPort		      1
      DstBlock		      "Terminator"
      DstPort		      1
    }
    Line {
      SrcBlock		      "pol1_out"
      SrcPort		      1
      DstBlock		      "Terminator1"
      DstPort		      1
    }
    Line {
      SrcBlock		      "pol1_in"
      SrcPort		      1
      DstBlock		      "fir_1"
      DstPort		      1
    }
    Line {
      SrcBlock		      "fir_1"
      SrcPort		      1
      DstBlock		      "pol1_out"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Constant2"
      SrcPort		      1
      DstBlock		      "pol2_in"
      DstPort		      1
    }
    Line {
      SrcBlock		      "pol2_in"
      SrcPort		      1
      DstBlock		      "fir_2"
      DstPort		      1
    }
    Line {
      SrcBlock		      "pol2_out"
      SrcPort		      1
      DstBlock		      "Terminator2"
      DstPort		      1
    }
    Line {
      SrcBlock		      "fir_2"
      SrcPort		      1
      DstBlock		      "pol2_out"
      DstPort		      1
    }
    Line {
      SrcBlock		      "fir_2"
      SrcPort		      2
      Points		      [35, 0; 0, 40]
      DstBlock		      "sync_out"
      DstPort		      1
    }
    Line {
      SrcBlock		      "fir_1"
      SrcPort		      2
      DstBlock		      "Terminator4"
      DstPort		      1
    }
  }
}
MatData {
  NumRecords		  129
  DataRecord {
    Tag			    DataTag128
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"               #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag127
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag126
    Data		
  }
  DataRecord {
    Tag			    DataTag125
    Data		
  }
  DataRecord {
    Tag			    DataTag124
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag123
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag122
    Data		
  }
  DataRecord {
    Tag			    DataTag121
    Data		
  }
  DataRecord {
    Tag			    DataTag120
    Data		
  }
  DataRecord {
    Tag			    DataTag119
    Data		
  }
  DataRecord {
    Tag			    DataTag118
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    /     0         0    #P   &1E;&%Y7V)R86U?:6YI=  .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag117
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag116
    Data		
  }
  DataRecord {
    Tag			    DataTag115
    Data		
  }
  DataRecord {
    Tag			    DataTag114
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag113
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag112
    Data		
  }
  DataRecord {
    Tag			    DataTag111
    Data		
  }
  DataRecord {
    Tag			    DataTag110
    Data		
  }
  DataRecord {
    Tag			    DataTag109
    Data		
  }
  DataRecord {
    Tag			    DataTag108
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    /     0         0    #P   &1E;&%Y7V)R86U?:6YI=  .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag107
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag106
    Data		
  }
  DataRecord {
    Tag			    DataTag105
    Data		
  }
  DataRecord {
    Tag			    DataTag104
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag103
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag102
    Data		    "  %)30     .    Z (   8    (     0         %    \"     $    +     0         .    0     8    (    !          %    \"     $    -     0         0    #0   &9I<E]C;W)E7VEN:70    .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            @0 X    X    !@    @    &          4    (     0    $    !          D    (            '$ .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    &          4    (     0    $    !          D    (            \\#\\.    .     8    (    !@         %    \"     $    !     0         )    \"             A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @           #P/PX    P    !@    @    ) @        4    (     0    $    !          (  0      #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag101
    Data		
  }
  DataRecord {
    Tag			    DataTag100
    Data		    "  %)30     .    J\"$   8    (     0         %    \"     $    &     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &9I<E]T87!?:6YI=      .    ,\"    8    (    !@         %    \"      $   !     0         )     \"   .HQ.#@(J#@_>ODD&R6%4C\\]BH>RQ>E>/Y3]C4;QJV4_!J7[+KWG:S_H$I?T(A1Q/R.V;F3%-G0_*[MKC\\5;=S^)\\G\\<(X-Z/XO,)['=K'T_Q1&U>'IL@#\\#!>P_M .\"/WE+QOX;G(,_WUL6A;$UA3].?_.A=-\"&/T\"ZN2-E;(@_L+0)V(()BC\\7I<B+S:>+/\\PY( M%1XT_N8)^(>GGCC_\\[LK,W$20/R9QKAY;%I$_X\"4':V_HD3^(<Q26&;N2/RG MX-9CI,_L6=T%R]BE#\\_LV\\TFC:5/]W/<+V:\"Y8_S,;@E##AEC_G=,J<6[>7/T\"\"VK8;CI@_+UM?Q'!EF3]0*$FF6CV:/XG'*3W9%9L_D,0T:>SNFS_^4C\\*E,B</S]'P/_/HIT_K1#0**!]GC\\2LRAD!%F?/]C@$DA^&J _NBQB1<2(H#^JC=$85/>@/Q84 ;$M9J$_P(UA_%#5H3^K@S3IO42B/[DWC&5TM*(_(J-+7W0DHS]3=\";$O92C/V -H8%0!:0_)((0A2QVI#\\[EYJ[4>>D/W7 -1+ 6*4_=A^I=7?*I3\\&@XS2=SRF/]]E2!7!KJ8__^T5*E,AIS^TZ_[\\+92G/W;9W7E1!Z@_--M=C+UZJ#\\OOOH?<NZH/X#X \"!O8JD_AJF-=[36J3_!F8X10DNJ/\\PZPM@7P*H_-*BWMS4UJS^?I\\Z8FZJK/Y&I-V9)(*P_W\\GS\"3^6K#_[T-1M? RM/[XT?7L!@ZT_5QE@',[YK3_P4L$YXG\"N/]!FM;P]Z*X_\"XTACN!?KS_2L;N6RM>O/]@[A=_])[ _F)RR]SEDL#]]!?J'F:\"P/^G>5X0<W; _G/\"PX,(9L3_:8M*0C%:Q/Y._<8AYD[$_\\O,LNXG0L3^H48H<O0VR/W20^)\\32[(_CL_..(V(LC]OETS:*<:R/W';F7?I [,_A/O& \\Q!LS_KQ<QQT7^S/TAYC+3YO;,_>,;/OD3\\LS]TTDB#LCJT/YTXDO1\">;0_M@PO!?:WM#\\QW8JGR_:T/T6U^<W#-;4_BA^X:MYTM3\\H*.MO&[2U/VQ?H,]Z\\[4_*=S->_PRMC^,/E)FH'*V/Y^R](!FLK8_]/)DO4[RMC^B2SL-63*W/_^<^&&%<K<_GEX&K=.RMS\\HHK;?0_.W/Z<61.O5,[@_>0O2P(ETN#^?<VQ17[6X/\\[H!XY6]K@_ Z^!9V\\WN3_#MY_.J7BY/WZE$+0%NKD_0,]K\"(/[N3\\N1#&\\(3VZ/S?/R;_A?KH_LOJ& \\/ NC].%*-WQ0*[/]HP00SI1+L_-C!ML2V'NS\\TP1M7D\\F[/]!E*NT9#+P_/G=?8\\%.O#_X*6JIB9&\\/S>2XJYRU+P_':A)8WP7O3\\M3 FVIEJ]/XY+=);QG;T_UF3&\\USAO3]S3\"2]Z\"2^/URQF^&4:+X_JT$C4&&LOC^7KYKW3?\"^/S>VRL9:-+\\_11YEK(=XOS]9PP27U+R_/V7,EKJ@ , _<E>F&N<BP#_M&]QB/47 /Z_&5XJC9\\ _U9HMB!F*P#^\"=&93GZS /X3+_^(TS\\ _*;;K+=KQP#\\)[! KCQ3!/[;(2M%3-\\$_Q4YI%RA:P3^0*C'T\"WW!/S*U6U[_G\\$_9/>63 +#P3^2K(6U%.;!/]1%OX\\V\"<(_ NW/T6<LPC^HASARJ$_\"/UBZ;F?X<L(_K^O<IU>6PC]Z1^(IQKG\"/PW\"TN-#W<(_:1OWR]  PS^-XHS8;\"3#/[QXQO\\72,,_XA3+-])KPS_QQK9VFX_#/TE[FK)SL\\,_&OY[X5K7PS_Z_E7Y4/O#/UD4&/!5'\\0_^+ZFNVE#Q#^B;=M1C&?$/ZN A*B]B\\0_HDUEM?VOQ#_G(C9N3-3$/WM+I,BI^,0_JQ)2NA4=Q3_AQ]8XD$'%/U?\"OCD99L4_$&6+LK\"*Q3^<(K.85J_%/P*!H>$*U,4_N!VW@LWXQ3^1L4EQGAW&/\\@4I*)]0L8_Y$(&#&MGQC_W7J6B9HS&/Y6WJUMPL<8_\",LX+(C6QC]92V$)KOO&/Z8B+^CA(,<_2G>AO2-&QS\\*L*Q^<VO'/X9X.B#1D,<_;\\4IESRVQS_EV$[8M=O'/]5&<]@\\ <@_;OE5C-$FR#^2-:OH<TS(/SN?'.(C<L@_%CY);>&7R#\\+@L5^K+W(/\\9'&PN%X\\@_2=W)!FL)R3^F!D9F7B_)/Y\\\"^AU?5<D_78]%(FU[R3\\2[WUGB*')/^KL[>&PQ\\D_N.'5A>;MR3^^N&M'*13*/[+TVAIY.LH_>[1$]-5@RC\\XN+_'/X?*/Q%F6(FVK<H_7<\\0+3K4RC^-M>\"FROK*/T\"/M>IG(<L_1(UR[!%(RS_/G_\"?R&[+/YE[_OB+E<L_\\IY@ZUN\\RS\\95]%J../+/U[% &LA\"LP_>.24WQ8QS#^UC2F\\&%C,/VU^4/0F?\\P_45V1>T&FS#_)OVE%:,W,/V$O346;],P_0\"^E;MH;S3^O0=&T)4/-/W7M)@M]:LT_DL/Q9.\"1S3^T9'.U3[G-/]Z&X^_*X,T_]/IO!U((SC^#LCSOY\"_./W+%8YJ#5\\X_G'?U^RU_SC^D/O@&Y*;./\\S':*ZESLX_O/TYY7+VSC]\"#E6>2Q[//U]PF<PO1L\\_#>K<8A]NSS](ENM3&I;//^#JAY(@OL\\_G[YJ$3+FSS^CIZ%A)P?0/\\BC6TT[&] _HV(QQ50OT#^W+VS\"<T/0/SJ64#Z85] _%V0>,L)KT#\\AK1\"7\\7_0/R;.768FE- _$' WF6\"HT#\\)B\\HHH+S0/ZEI/P[ET- _):RY0B_ET#]\\2UB_?OG0/Z6<-7W3#=$_UU-G=2TBT3^\\A_Z@C#;1/ZFT!_GP2M$_\\;^*=EI?T3\\E^XH2R7/1/V G!\\8\\B-$_C7CYB;6<T3_)F%=7,['1/Z^K$B>VQ=$_M5$7\\CW:T3^\"JTVQRN[1/UI=F5U< ](_@I+9[_(7TC^8 .E@CBS2/Q7KG:DN0=(_KR;*PM-5TC_1'#NE?6K2/PG/N4DL?](_E]H*J=^3TC_2>^Z[EZC2/[R1('M4O=(_?*%8WQ72TC_IV4GAV^;2/R47HWFF^](_#N8.H740TS_QAS-02273/PWVLG\\A.M,_.N4J*/Y.TS]UR31\"WV/3/YC99<;$>-,_[Q)/K:Z-TS_M/'WOG*+3/\\+L>(6/M],_)(G&9X;,TS_W3>:.@>'3/_Q/5/. ]M,_E8\"(C80+U#^&L?95C\"#4/Z>8#D68-=0_K=,[4ZA*U#_^Z^5XO%_4/VQ:<*[4=-0_#XLZ[/\")U#\\'X9\\J$9_4/V:Z]V$UM-0__G.5BEW)U#\\R;<B<B=[4/^H+W)\"Y\\]0_9\\ 77^T(U3\\R\";__)![5/_IV$6M@,]4_BK!*F9](U3^W=J*\"XEW5/U2H3!\\I<]4_'49Y9W.(U3_#=E13P9W5/^\"*!ML2L]4_[ \"T]F?(U3]:B7V>P-W5/X@*@,H<\\]4_U*34<GP(UC^AMI\"/WQW6/W+@Q1A&,]8_^@B\"!K!(UC\\J8<]0'5[6/U)HM.^-<]8_1? SVP&)UC]O(4T+>9[6/_5^^W?SL]8_Z>HV&7')UC]IJO/F\\=[6/]5I(MEU]-8_\\$\"PY_P)US\\AMX8*AQ_7/ZO'BSD4-=<_S>6A;*1*US\\C :B;-V#7/\\F)>;[-==<_K73NS&:+US_)/]N^ J'7/W#V$(RAMM<_H#5=+$/,US]*,(J7Y^'7/YRS7L6.]]<_9\"N>K3@-V#]CI@A(Y2+8/YO:6HR4.-@_OBE.<D9.V#^%I9CQ^F/8/Q@4[0&R>=@_8O3ZFFN/V#^;@FZT)Z78/Y*\\\\$7FNM@_.&8G1Z?0V#_U#;6O:N;8/S@1.7<P_-@_X:!/E?@1V3^RQ9$!PR?9/^%DE;.//=D_C$3MHEY3V3\\W$\"G'+VG9/U9=U1<#?]D_W:][C-B4V3^\\?J(<L*K9/WTXS;^)P-D_P$=\\;676V3_D%RT=0^S9/Y096L8B MH_4L=Z8 08VC\\HJ@/CYRW:/T!>9D7-0]H_=I<1?[19VC\\/)G&'G6_:/U'[[56(A=H_.2[NX72;VC\\5 -4B8[':/T#A A!3Q]H_SG75H$3=VC\\ZFJ?,-_/:/R5HT8HL\"=L_!CNHTB(?VS_IM'Z;&C7;/RK#I-P32]L_/*-GC0YAVS]=YQ&E\"G?;/VA[ZQH(C=L_DZDYY@:CVS]&'S_^!KG;/]?Q.UH(S]L_7Z-M\\0KEVS^2)P^[#OO;/XGH6*X3$=P_H,N PADGW#]&-KKN(#W</^ 2-BHI4]P_G=4B;#)IW#]D@:RK/'_</Z*L_-]'E=P_0X8Z %2KW#^&VHH#8<'</_87$.%NU]P_2U3JCWWMW#]943<'C0/=/P.\"$CZ=&=T_*0^5*ZXOW3^BW-7&OT7=/RV.Z0;26]T_:XSBXN1QW3_<\"=%1^(?=/]L'PTH,GMT_G%O$Q\"\"TW3\\ML]ZV-<K=/X::&1A+X-T_<X!ZWV#VW3^^NP0$=PS>/Q^0N7R-(MX_53.80*0XWC\\KTIU&NT[>/YR5Q8729-X_R:<(]>EZWC\\C.5Z+ 9'>/WV%NS\\9I]X_'MD3\"3&]WC_AE5C>2-/>/U(X>;9@Z=X_REQCB'C_WC^/Q )+D!7?/_]:0?6G*]\\_ICH'?K]!WS]NLCK<UE??/\\A*P ;N;=\\_S<IZ] 2$WS]]/4N<&YK?/]#V$/4QL-\\_!)FI]4?&WS^Y&?&47=S?/S/'P<ER\\M\\_PB9ZQ4,$X#_DW:_G30_@/Z_$[,97&N _E,V:7F$EX#]<)\".J:C#@/] P[J1S.^ _5YEC2GQ&X#^-1>J5A%'@/_9@Z(*,7. _D%W##)1GX#^$]M\\NFW+@/[PRHN2A?> _F6=M*:B(X#^&.Z3XK9/@/[\"HJ$VSGN _HO_;([BIX#_SZ9YVO+3@/^ML44' O^ _+^Q2?\\/*X#]Q+ (LQM7@/PU6O4+(X. _QO?AOLGKX#]F\"<V;RO;@/W7NVM3* >$_W'AG9<H,X3^FZ\\U(R1?A/YO]:'K'(N$__]N2]<0MX3\\_+:6UP3CA/Z(3^;6]0^$_^R_G\\;A.X3]BI,=DLUGA/]X6\\@FM9.$_)K2]W*5OX3]+,H'8G7KA/W;3DOB4A>$_F6A(.(N0X3\\N5/>2@)OA/^&,] -UIN$_7*\"4AFBQX3_NM2L66[SA/U*1#:Y,Q^$_7I6-23W2X3_*QO[C+-WA/^/.LW@;Z.$_2_[^ @GSX3^S3S)^]?WA/YEJG^7@\".(_#::7-,L3XC]A\"VQFM![B/_I8;7:<*>(_^P3L7X,TXC\\;0#@>:3_B/U+XH:Q-2N(_J=MX!C%5XC_S6@PG$V#B/Y&LJPGT:N(_-<^EJ=-UXC^HC$D\"LH#B/XE\\Y0Z/B^(_$@?(RFJ6XC_B9S\\Q1:'B/[>PF3T>K.(_0,PDZ_6VXC_9@\"XUS,'B/U=S!!>AS.(_S2GTBW37XC]3#DN/1N+B/\\MQ5AP7[>(_KHYC+N;WXC_4B[_ LP+C/SA_M\\Y_#>,_PW\"84TH8XS\\77:]*$R/C/UDX2:_:+>,_^O\"R?* XXS^#<CFN9$/C/URH*3\\G3N,_G8#0*NA8XS_5[GILIV/C/]7N=?]D;N,_A8<.WR!YXS^FS9$&VX/C/Z/F3'&3CN,_7@N-&DJ9XS_[BI_]_J/C/[?-T16RKN,_J5=Q7F.YXS^5R\\O2$L3C/\\'M+F[ SN,_N*;H*VS9XS\\A!D<'%N3C/XY%F/N][N,_1,LJ!&3YXS\\3+4T<\" 3D/R0S3C^J#N0_Q-I\\:$H9Y#\\X62B3Z\"/D/XL>H+J$+N0_9-@SVAXYY#_-=#/MMD/D/P\\E[^Y,3N0_=V\"WVN!8Y#\\RY]RK<F/D/Q7%L%T\";N0_=E2$ZX]XY#_W0*E0&X/D/UZ*<8BDC>0_7(<OCBN8Y#]OZ#5=L*+D/Y^ZU_ RK>0_8VIH1+.WY#]JQCM3,<+D/VL\"IABMS.0_^[G[CR;7Y#]>\\Y&TG>'D/ULBOH$2[.0_!RO6\\H3VY#^B9# #]0#E/UV<(ZYB\"^4_.!@'[\\T5Y3_)F3+!-B#E/QAA_A^=*N4_;\"_#!@$UY3\\:2MIP8C_E/V!]G5G!2>4_+!]GO!U4Y3_[$9*4=U[E/YC'>=W.:.4_!41ZDB-SY3\\Y(/\"N=7WE/_^,.\"[%A^4_O%6Q\"Q*2Y3]+X[A\"7)SE/\\D^KLZCIN4_913QJNBPY3\\SMN'2*KOE/P(?X4%JQ>4_(?50\\Z;/Y3\\XC9/BX-GE/QWM\"PL8Y.4_ELX=:$SNY3\\THBWU??CE/R*2H*VL N8_\\83<C-@,YC]M($B. 1?F/V?,2JTG(>8_A+5,Y4HKYC\\1T+8Q:S7F/\\_:\\HV(/^8_P6%K]:))YC_YP(MCNE/F/V@GP-/.7>8_L9EU0>!GYC_G]!FH[G'F/VKQ&P/Z>^8_L\"7K30*&YC\\+\"?B#!Y#F/WKVLZ )FN8_=R^1GPBDYC_!W@)\\!*[F/R,;?3']M^8_2.ITN_+!YC][0V 5Y<OF/WT2MCK4U>8_0CKN)L#?YC_(EX'5J.GF/]<$ZD&.\\^8_REJB9W#]YC]?=29\"3P?G/W8U\\\\PJ$><_X(.& P,;YS\\?5%_AUR3G/S6G_6&I+N<_9H[B@'<XYS_]+9 Y0D+G/Q+ B8<)3.<_49=39LU5YS^_(7/1C5_G/WGK;L1*:><_@*'..@1SYS]V%!LPNGSG/V$[WI]LAN<_;C:CA1N0YS^Y4?;<QIGG/P (9:%NH^<_<P5^SA*MYS]K*M%?L[;G/RF.[U!0P.<_G8%KG>G)YS\\=DMA ?]/G/R:,RS81W><_%7[:>I_FYS_RNIP(*O#G/Q/=JMNP^><_]<B>[S,#Z#_=KQ- LPSH/Z02IL@N%N@_:L3SA*8?Z#]-[9MP&BGH/RH-/X>*,N@_1_Y^Q/8[Z#\\=^/XC7T7H/_F18Z'#3N@_P\\52.\"18Z#^O\\G/D@&'H/^S?;Z'9:N@_7;_P:BYTZ#]+,*(\\?WWH/QE\",1+,AN@_[W9,YQ20Z#]XQJ.W69GH/X2@Z'Z:HN@_Q>_-.->KZ#]N' CA#[7H/_$.37-$ON@_I3)4ZW3'Z#]R>-9$H=#H/W]9CGO)V>@_UMDWB^WBZ#\\ABY!O#>SH/SJ/5R0I]>@_YYI-I4#^Z#]\\^#3N4P?I/WV*T?IB$.D_2\\[HQFT9Z3_)WD%.=\"+I/_MVI8QV*^D_K_3=?70TZ3\\<6[<=;CWI/XA5_V=C1ND_ZSF%6%1/Z3]_\"QKK0%CI/WA]D!LI8>D_D/6\\Y0QJZ3^NCG5%['+I/WL;DC;'>^D_!2GLM)V$Z3]5 5^\\;XWI/PJNQT@]END_]_H$5@:?Z3^N>/??RJ?I/RE_@>**L.D_4#\"'64:YZ3^7>NY _<'I/XP;GY2ORND_=:*\"4%W3Z3_4<H1P!MSI/P+'D?\"JY.D_O;*9S$KMZ3^R)8T YO7I/Q7N7HA\\_ND_)[L#8 X'ZC^^'W*#FP_J/]R4HNXC&.H_+GR/G:<@ZC^=(C6,)BGJ/]#\"D;:@,>H_L8>E&!8ZZC_]CG*NAD+J/[WK_'/R2NH_TJA*95E3ZC]PRV-^NUOJ/Z554KL89.H_V4@B&'%LZC]%J.&0Q'3J/WY[H\"$3?>H_YM!PQER%ZC\\MP&9[H8WJ/\\ULF#SAE>H_@@@>!AR>ZC^\\U1'44:;J/Q\\JD**\"KNH_\\G\"W;:ZVZC^:+:@QU;[J/PC^A.KVQNH_+IURE!//ZC]KY9<K*]?J/P33':P]W^H_AX8O$DOGZC]&1_I94^_J/[:%K7]6]^H_X=UZ?U3_ZC_0&99530?K/^HS-?Y #^L_:UF0=2\\7ZS^[[.&W&!_K/]F'9L'\\)NL_POY<CMLNZS_'808;M3;K/_S_I6.)/NL_C&F!9%A&ZS\\<<N 9(D[K/RDS#8#F5>L_70Y4DZ5=ZS_SKP-07V7K/P$1;;(3;>L_XGGCML)TZS]\\A+Q9;'SK/YH>4)<0A.L_08SX:Z^+ZS\\\":A+42)/K/TBO_,O<FNL_I[ 84&NBZS\\G(LI<]*GK/YX9=^YWL>L_Y1\"( ?:XZS\\UZ&>2;L#K/V3H@YWAQ^L_+L5+'T_/ZS]YGS$4M];K/Z$'JG@9WNL_J?\\K27;EZS^1_3\"\"S>SK/X3M-\" ?].L_'C2V'VO[ZS^EL#5]L0+L/TJ_-C7R\">P_5SL_1\"T1[#]T@=>F8ACL/]9QBEF2'^P_<7+E6+PF[#\\Q<7BAX\"WL/R_FU2__-.P_UM62 !@\\[#\\:TT80*T/L/Z@!C%LX2NP_!1C_WC]1[#_&83^705CL/Z_![H ]7^P_X;.QF#-F[#_Y3R_;(VWL/SM+$44.=.P_K/H#T_)Z[#\\Y5;:!T8'L/]+UV4VJB.P_BATC-'V/[#^VM4@Q2I;L/_Q1!$(1G>P_>#(28]*C[#_-13&1C:KL/SDK(\\E\"L>P_KS2L!_*W[#_A:)-)F[[L/U2%HHL^Q>P_= \"FRMO+[#^5\"VT#<]+L/PZ5R3($V>P_,$J058_?[#]BF9AH%.;L/Q6TO&B3[.P_UI#94@SS[#]/[<XC?_GL/SI0?]CK_^P_>0O0;5(&[3_^/:G@L@SM/]+5]2T-$^T_#Y*C4F$9[3_3!*-+KQ_M/SR5YQ7W)>T_7(%GKC@L[3\\OX!L2=#+M/W^C #ZI..T_Z9D4+]@^[3^^<%GB $7M/^NUTU0C2^T_\\MF*@S]1[3_+,8EK55?M/\\'XVPEE7>T_;E*36VYC[3^#3,)=<6GM/\\;@?@UN;^T_V?;A9V1U[3\\D9@=J5'OM/[3W#1$^@>T_\"V@76B&'[3_]:$A\"_HSM/XZCR,;4DNT_N;G\"Y*28[3],2&29;I[M/[;HW>$QI.T_VS)CN^ZI[3_4OBHCI:_M/\\LF;A95M>T_O@AJDOZZ[3\\[\"%Z4H<#M/SC0C!D^QNT_SA0\\']3+[3_[E+2B8]'M/V$<0J'LUNT_!(4S&&_<[3\\0N=H$Z^'M/X\"TC&1@Y^T_Z(:A-,_L[3\\C571R-_+M/PI;8QN9]^T_(^W/+/3\\[3]4>AZD2 +N/Y6-MGZ6!^X_E<\\\"NMT,[C]M\"'%3'A+N/SXA<DA8%^X_Y25ZEHL<[C^71@ [N\"'N/X39?C/>)NX_>5QS??TK[C^ =EX6%C'N/W[YP_LG-NX_R.,J*S,[[C_$81VB-T#N/WC/*%XU1>X_(+K=7\"Q*[C_(X<^;'$_N/](ZEA@&5.X_D>_*T.A8[C_&80O\"Q%WN/SDL^.F98NX_.20U1FAG[C\\I6VG4+VSN/_T?/Y+P<.X_P0!D?:IU[C\\8S(B377KN/[N28=()?^X_^*BE-Z^#[C\\BJ _!38CN/Q=P76SEC.X_K\"A0-W:1[C\\B0ZP? );N/YY[.2.#FNX_C=K\"/_^>[C\\DMA9S=*/N/[6S!KOBI^X_*<EG%4JL[C]B/A* JK#N/Y^NX?@#M>X_X FU?5:Y[C](EFX,HKWN/W?Q\\Z+FP>X_\\1$N/R3&[C]L2 G?6LKN/S)!=8\"*SNX_; 5E(;/2[C^&_,Z_U-;N/W3MK%GOVNX_\" #\\[ +?[C\\ZOKQW#^/N/WL5\\_<4Y^X_]5>F:Q/K[C_>/>'0\"N_N/['FL27[\\NX_=]HI:.3V[C\\%\"UZ6QOKN/S_59JZA_NX_3P)@KG4\"[S_AR&B40@;O/UK.HUX(\"N\\_#2@W\"\\<-[S]R7$R8?A'O/U)D$ 0O%>\\_^ZNS3-@8[S]H%&IP>ASO/VWT:FT5(.\\_X1GQ0:DC[S_&RCKL-2?O/V3&B6J[*N\\_<T8CNSDN[S\\Y %#<L#'O/Z,E7,P@->\\_8F:7B8DX[S\\(\\502ZSOO/Q=TZV1%/^\\_&1^U?YA\"[S^VHP]AY$7O/[8V7 <I2>\\_'Y'_<&9,[S\\U\\6&<G$_O/X<;[X?+4N\\_]%L6,O-5[S^OADJ9$UGO/T7Y ;PL7.\\_E9NVF#Y?[S_5X.4M26+O/XO($'I,9>\\_?M^[>TAH[S^_0&\\Q/6OO/X.6MIDJ;N\\_,1LALQ!Q[S\\ZFD%\\[W/O/Q=QKO/&=N\\_*I !&)=Y[S^J>]CG7WSO/XI,U&$A?^\\_7+&9A-N![S\\U[]!.CH3O/XKB);\\YA^\\_#0!(U-V)[S^(5>J,>HSO/[J*P^</C^\\_(>*-XYV1[S_A.0=_))3O/X$,\\;BCEN\\_QG$0D!N9[S^\"'RX#C)OO/U-J%A'UG>\\_>$:9N%:@[S^+2(KXL*+O/T^FP,\\#I>\\_9S<7/4^G[S\\?=FP_DZGO/Q^ HM7/J^\\_*Q>?_@2N[S_6H4NY,K#O/T$LE019LN\\_O6ALWW>T[S^+L,5(C[;O/X8$F3^?N.\\_QPWBPJ>Z[S]='J#1J+SO/^0QUFJBON\\_,^Z*C93 [S\\$I,@X?\\+O/WY/G6MBQ.\\_\\)@:)3[&[S]6U55D$LCO/_4&:\"C?R>\\__MUM<*3+[S\\4N8<[8LWO/^.EV8@8S^\\_KV&+5\\?0[S_C6<BF;M+O/Y:LOW4.U.\\_%RFDPZ;5[S]T4*R/-]?O/_95$MG V.\\_K1\\4GT+:[S_@1O/@O-OO/YP8]9TOW>\\_&)9BU9K>[S\\\\=8B&_M_O/Q AM[!:X>\\_++I\"4Z_B[S\\Q%X-M_./O/R?%T_Y!Y>\\__ >4!H#F[S_:VB:$MN?O/YKP\\G;EZ.\\_'K1BW@SJ[S^]2.2Y+.OO/YJ*Z0A%[.\\_ P_HRE7M[S_-)%G_7N[O/Z74N:5@[^\\_<^&*O5KP[S^>R%!&3?'O/V7\"DS\\X\\N\\_)\\+?J!OS[S^V=L2!]_/O/YU*U<G+].\\_962I@)CU[S_8IMNE7?;O/TRQ\"CD;]^\\_U-_8.='W[S^+2^RG?_CO/\\/*[H(F^>\\_2/&-RL7Y[S^-$'M^7?KO/^4W:Y[M^N\\_K#07*G;[[S^ DCLA]_OO/V>;F(-P_.\\_^%?R4.+\\[S^\"CQ\")3/WO/S+(OBNO_>\\_.D?,. K^[S_H$ RP7?[O/\\3H5)&I_N\\_M5&!W.W^[S\\-CF^1*O_O/Z>? ;!?_^\\_]D<=.(W_[S\\;\"*PIL__O/^T@FX31_^\\_#9/;2.C_[S_I'F)V]__O/\\5$)PW__^\\_#@   #@    &    \"     8         !0    @    !     0    $         \"0    @            B0 X    X    !@    @    &          4    (     0    $    !          D    (            ($ .    .     8    (    !@         %    \"     $    !     0         )    \"            / _#@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag99
    Data		
  }
  DataRecord {
    Tag			    DataTag98
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    /     0         0    #P   &1E;&%Y7V)R86U?:6YI=  .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag97
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag96
    Data		
  }
  DataRecord {
    Tag			    DataTag95
    Data		
  }
  DataRecord {
    Tag			    DataTag94
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag93
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag92
    Data		    "  %)30     .    Z (   8    (     0         %    \"     $    +     0         .    0     8    (    !          %    \"     $    -     0         0    #0   &9I<E]C;W)E7VEN:70    .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            @0 X    X    !@    @    &          4    (     0    $    !          D    (            '$ .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    &          4    (     0    $    !          D    (            \\#\\.    .     8    (    !@         %    \"     $    !     0         )    \"             A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @           #P/PX    P    !@    @    ) @        4    (     0    $    !          (  0      #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag91
    Data		
  }
  DataRecord {
    Tag			    DataTag90
    Data		
  }
  DataRecord {
    Tag			    DataTag89
    Data		
  }
  DataRecord {
    Tag			    DataTag88
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    /     0         0    #P   &1E;&%Y7V)R86U?:6YI=  .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag87
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag86
    Data		
  }
  DataRecord {
    Tag			    DataTag85
    Data		
  }
  DataRecord {
    Tag			    DataTag84
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag83
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag82
    Data		
  }
  DataRecord {
    Tag			    DataTag81
    Data		    "  %)30     .    Z\"$   8    (     0         %    \"     $    '     0         .    0     8    (    !          %    \"     $    -     0         0    #0   &-O969?9V5N7VEN:70    .    ,\"    8    (    !@         %    \"      $   !     0         )     \"   'A4S\\V(GCB_7JWF;<9O4K]U!9]K::Y>O^%Y7_[$<66_S)2:>Y.':[]M_*[-3\\QPOX /-F=TTG._%\"@V1#?6=K_ #_4?F-=YO]5U*K>6UGR_-:K_QS+3?[_[K <)MF:!OR^D,BNAXH*_RP6_JUI=A+_68:-LXM:%O\\%ICE X3X>_[LKF.ES&B+\\T\"\\L/3CR*OZ9B$;0-L8N_!I5'#9LDC;_!S+(!]I:.OYJY)SP/!)\"_WH1H+ J\\D+^- -'%:W.1OS[)\\?PS*I*_]LJVQF+@DK_%+&<8^)63OX$[I>?S2I2_955N*E;_E+]OU!K7'K.5OX7X7>1-9I:_9-)%2>,8E[\\T+3O]WLJ7OWYX ?A ?)B_7+&V,0DMF;]L3-.B-]V9OWX>*D3,C)J_K47H#L<[F[^,$97\\)^J;OTCL$0?OEYR_?D*:*!Q%G;_<:L-;K_&=OXN.?)NHG9Z_1) .XP=)G[_5\\QLNS?.?OUQB4#S\\3J\"_T#YYW\\2CH+]0]]]^0/B@O^>1\"!EO3*&_?J6CK%\"@H;\\K38XXY?.AO^0:TKLL1Z*_&PJE-2>:HK^Q<FFEU.RBOTG[K0HU/Z._U(LM94B1H[^G/\\^T#N.COP=8IOF'-*2_\"\"[R,[2%I+^E)!YDD]:DOW&:P8HE)Z6_I-N?J&IWI;^N$ZB^8L>EOX4^]<T-%Z:_@1K.UVMFIK]O&:7=?+6FO_!1&.% !*>_8'#QX[=2I[\\NJ\"7HX:\"GOZ&DU>^^[J>_>GE-_4X\\J+\\\"E 03DHFHOV:KG3.(UJB_3K'F83$CJ;\\8PMB@C6^IOVL5F/.<NZF_+^YS75\\'JK^XBN;AU%*JOY44E83]G:J_MI!/2=GHJK\\/SQ T:#.KOPM:_DBJ?:N_BV9HC)_'J[\\$P\\D\"2!&LOPO'Q[\"C6JR_8D(RF[*CK+];; /'=.RLO\\W27SGJ-*V_\"4F6]Q)]K;^8UA\\'[\\2MOS*FGVU^#*Z_4/3B,,%3KK^)_>!6MYJNOUSMNN5@X:Z_3LR[X[TGK[],;EA7SFVOOYA@+T>2LZ^_--@(N@GYK[_)3VM;&A^POTL\"6J*)0;\"_%>-RM=)CL+\\4 6V8]86POVL1%$_RI[\"_&&9(W<C)L+_-Y/Y&>>NPOW;]0) ##;&_Y: LO6<NL;]\"-_31I4^QOZV6WM*]<+&_H?E&Q*^1L;]8]9RJ>[*QOR-P9(HAT[&_T)<U:*'SL;_;U[Q(^Q.ROY[/NC O-+*_ED@$)3U4LK]Q+((J)72RORQ[,4;GD[*_!4$C?8.SLK^;C'S4^=*RO\\1D=E%*\\K*_A;Y=^701L[_-<I/1>3\"SOVXTC-]83[._Q870*!)NL[]HKORRI8RSO_.PP(,3J[._CT#@H%O)L[^0MC(0?N>SO_$'H]=Z!;2_[;HO_5$CM+]@W.J& T&TOS+U^7J/7K2_KO^5W_5[M+_F7 N[-IFTO_#)N1-2MK2_$%44\\$?3M+\\+4Z%6&/\"TOS54^DW##+6_FAG,W$@IM;_VB=8)J46UO]ZF[-OC8;6_GX'T6?E]M;]!,.>*Z9FUOU/\"T'6TM;6_XS70(5K1M;]!;!>6VNRUO[@>Z]DU\"+:_9=.B]&LCMK_0T:CM?#ZVOZ$7>LQH6;:_*DVFF\"]TMK\\/NL]9T8ZVO\\,YJQ=.J;:_!#  VJ7#MK]$?:BHV-VVORQSD(OF][:_Y\\BVBL\\1M[]PCRRNDRNWO_DE%?XR1;>_#BZF@JU>M[_D?R=$ WBWOV4>\\THTD;>_@2MUGT\"JM[\\?W\"M**,.WOT=LIU/KV[>_#A.*Q(GTM[^M]H>E PVXOVD@9_]8);B_<7#_VHD]N+_0D3I!EE6XOSCN$SM^;;B_U*&8T4&%N+\\ ;^<-X9RXOQ>R,/E;M+B_$%6VG+++N+\\UP\\L!Y>*XO['<U3'S^;B_-^I*-MT0N;^#D+(8HR>YO]K#I>)$/KF_C;O.G<)4N;]HY>A3'&NYOR#9P Y2@;F_ETLTV&.7N;]2 C*Z4:VYO\\#&N;X;P[F_=5G<[\\'8N;]G9;M71.ZYORMSB0\"C [J_'MR)]-T8NK]TO1 ^]2VZOWOK@N?H0KJ_A.15^[A7NK\\'Q ^$96RZOXHU1XSN@+J_M6>C'E25NK\\Y_]M%EJFZOZ@)N0RUO;J_;? 2?K#1NK^<:]*DB.6ZO[MT\\(L]^;J_ACEV/L\\,N[_$#GW'/2\"[O^MB+C*),[N_W;##B;%&N[^ <H;9MEF[OV\\3T\"R9;+N_D^,)CUA_N[^@\":T+]9&[O[-U0JYNI+N_T]-B@L6VN[]??K:3^<B[OX=P]>T*V[N_MSCGG/GLN[\\#ZV*LQ?Z[OWH33RAO$+R_<ZBA'/8AO+_Z_%^56C.\\O_BRGIZ<1+R_>ZV!1+Q5O+_\\ CR3N6:\\OX/O#Y>4=[R_W<9.7$V(O+^FYECOXYB\\OXRHG5Q8J;R_3%2;L*JYO+_)$=_WVLF\\OPW;!#_IV;R_5FZWDM7IO+\\00+#_G_F\\O[ULMY)(\";V_]*JC6,\\8O;] /5I>-\"B]OP'DSK!W-[V_1<\\#79E&O;^=D EPF56]O_P,__9W9+V_96X1_S1SO;^Y%7R5T(&]OW6,B,=*D+V_8W:.HJ.>O;])@_,SVZR]OYE@*XGQNKV_#ZNWK^;(O;]/X\">UNM:]OW=0&:=MY+V_PP\\WD__QO;\\&Z#F'</^]OSI*Z)# #+Z__S\\6ON\\9OK\\77:4<_B:^O]VPA+KK,[Z_K;>PI;A OK]:3#/L9$V^OY\"9(YSP6;Z_. NFPUMFOK^[/^QPIG*^OWWY-++0?KZ_$!#,E=J*OK^580HJQ):^O^?#57V-HKZ__?4@GC:NOK\\*D>N:O[F^O[_Y08(HQ;Z_A5&]8G'0OK^@9P-+FMN^OV\"JQDFCYKZ_,!C&;8SQOK_4,,W%5?R^OW7FLV#_!K^_LHY>38D1O[^ST[V:\\QN_OSZESE<^)K^_OBF:DVDPO[\\\\KS5==3J_OW\"<PL-A1+^_J&%NUBY.O[_=:7*DW%>_OX,+%#UK8;^_E'FDK]IJO[]MM( +*W2_O[1Z$6!<?;^_2CK+O&Z&O[\\; 2XQ8H^_O_-MQ<PVF+^_=*$HG^R@O[_++OJW@ZF_OX(,Z\";\\L;^_;X6K^U6ZO[]'*0E&D<*_OY.]T!6NRK^_4R[=>JS2O[_!?A2%C-J_OR>Z9T1.XK^_<.32R/'IO[_EZEPB=_&_O_V4%V'>^+^_<KJ/RA, P+\\7[$UGJ0/ OTU<WPXP!\\\"_159BR:<*P+_H:_J>$ [ OQ5NT)=J$<\"_]F02O+44P+]/B/,3\\A? O\\,WK*<?&\\\"_'_-Y?SX>P+^G4I^C3B' OUK_8QQ0),\"_+JL4\\D(GP+]I\"0,M)RK O\\O&A=7\\+,\"_ZX'X\\\\,OP+]?P[N0?#+ OP7V-+0F-<\"_2E_.9L(WP+]9%_>P3SK OUL!(YO./,\"_P,/*+3\\_P+]AP&MQH4' O\\8,B&[U0\\\"_9FJF+3M&P+_,/E*W<DC O]N+&Q2<2L\"__>>63+=,P+]4=EUIQ$[ O_K>#'/#4,\"_)4='<K12P+]@2;-OEU3 O[[M^W-L5L\"_ Z+0AS-8P+_7,>6S[%G O_J^\\0\"86\\\"_:+FR=S5=P+^0U^@@Q5[ OWD.605'8,\"_[8G,+;MAP+^UI!\"C(6/ OZS@]FUZ9,\"_]]Y4E\\5EP+\\S6 0H V? OY04XR@S:,\"_#^32HE5IP+^.EKF>:FK OP?T@\"5R:\\\"_L[060&QLP+\\L>6SW6&W OY;\"=U0X;L\"_RNHQ8 IOP+]U')@CSV_ OT1+JZ>&<,\"_\"\"QP]3!QP+_;+.\\5SG' OT9M-!)><L\"_:K9/\\^!RP+\\9<U3\"5G/ OP^H68B_<\\\"_!.QY3AMTP+_97],=:G3 O\\*FA_^K=,\"_7]Z[_.!TP+_KEI@>\"77 OU[+26XD=<\"_C]G^]#)UP+]:>NJ[-'7 O\\RY0LPI=<\"_/^] +Q)UP+^&M2'N[73 OPKC)!*]=,\"__H&-I']TP+]YR*&N-73 OY\\0JSG?<\\\"_RM#U3GQSP+^SD]'W#'/ OY3PD#V1<L\"_4(.)*0ERP+^AY!/%='' OSFBBQG4<,\"_\\C9/,\"=PP+_P L 2;F_ O]!#0LJH;L\"_T P]8-=MP+_[/AK>^6S OU2!1DT0;,\"_ CDQMQIKP+]]@4PE&6K O[@D#:$+:<\"_5)/J,_)GP+_+W%[GS&; OYZGYL2;9<\"_BBD!UEYDP+^U'S D%F/ O]_&][C!8<\"_E=/>G6%@P+]B:F[<]5[ OPL8,GY^7<\"_N\\FWC/M;P+\\XQ8\\1;5K OR&A3!;36,\"_'SV#I\"U7P+\\ANLK%?%7 OY1RO(/ 4\\\"_G?+SY_A1P+]5\\ [\\)5# OP-$K<E'3L\"_9.!P6EY,P+_8ROVW:4K OZ\\3^NMI2,\"_:,X- %]&P+_O\">/]2$3 O^/()>\\G0L\"_V_F#W?L_P+^I;ZW2Q#W OZ;94]B\".\\\"_]KLJ^#4YP+_/9^<[WC; O\\KS0*U[-,\"_,#3P50XRP+\\_LZ\\_EB_ OX2I.W03+<\"_(/91_84JP+\\G%[+D[2? O^,A'31+)<\"_/;M5]9TBP+\\!$\" RYA_ OT#-0?0C'<\"_J!B\"15<:P+_;B*DO@!? O],=@KR>%,\"_.#G7];(1P+_%EG7EO [ OZY$*Y6\\\"\\\"_]IO'#K((P+_@.!M<G07 OU/S]X9^ L\"_?ZYA,JO^O[\\7.C0Y1?B_OP9$$C;+\\;^_><&H/#WKO[\\@TZ9@F^2_OQ&VO;7EW;^_K+2@3QS7O[]_%P5\"/]\"_OT86HJ!.R;^_S\\@P?TK\"O[_V%VSQ,KN_OZ\"N$ L(M+^_N.K<W\\FLO[\\VSI\"#>*6_OR3P[0D4GK^_HFVWAIR6O[\\&V[$-$H^_O^$TH[)TA[^_(-%2B<1_O[\\=4(FE 7B_O]*-$!LL<+^_[)*S_4-HO[\\!ACYA26\"_O[F<?ED\\6+^_!0U\"^AQ0O[]/_E=7ZT>_O[YZD(2G/[^_;V\"\\E5$WO[_,4JV>Z2Z_O[VK-;-O)K^_!6THY^,=O[^B,5E.1A6_OP8?G/R6#+^_E=;%!=8#O[_Y9JM] _N^OXH](G@?\\KZ_PA< \"2KIOK^B]!I$(^\"^OS@&23T+U[Z_$J-@\".+-OK_%-SBYI\\2^OW(XIF-<N[Z_4!*!&P\"ROK]\"'9_TDJB^OVJ-U@(5G[Z_RV3]68:5OK_C9.D-YXN^OU@ <#(W@KZ_K$QFVW9XOK_@\\Z <IFZ^OS,F] G%9+Z_YHLSM]-:OK_\\-C(XTE\"^O_Z4PJ# 1KZ_T&\"V!)\\\\OK^$E-YW;3*^OSU;\"PXL*+Z__P(,V]H=OK^J[J[R>1.^O]\"'P6@)\";Z_OS 048G^O;]L-F:_^?.]OW/\"C<=:Z;V_),U/?:S>O;^##W3T[M.]OV3UP$ BR;V_>8_[=4:^O;]_A>>G6[.]OU (1^IAJ+V_(,3:4%F=O;^8TF'O09*]ORFMF=D;A[V_,Q\\^(^=[O;]5. G@HW\"]O[@^LR-29;V_7Z'R ?)9O;]_ZGN.@TZ]O]NQ =T&0[V_,H\\T 7PWO;^F#,,.XRN]OS&961D\\(+V_''NB-(<4O;^&PD5TQ B]O^8[Z>OS_+R_H&(PKQ7QO+^24[S1*>6\\O[R_*V<PV;R_U]X:@RG-O+\\08B,Y%<&\\OZ9FW)SSM+R_LFC:P<2HO+_J-:^[B)R\\OU?@Z9T_D+R_-+$6?.F#O+^^&[]IAG>\\OPZP:7H6:[R_ 0Z:P9E>O+\\LV-!2$%*\\O[VFBT%Z1;R_A?I$H=<XO+_P+W2%*\"R\\OR)RC0%M'[R_[:T!*:42O+_[A#X/T06\\O^M KL?P^+N_>\\:W903LN[^SB+[\\\"]^[OR-\\(J 'TKN_&@I 8_?$N[_P W!9V[>[OV*6!Y:SJKN_T#Q8+(\"=N[^KM*\\O09\"[O^+P5[/V@KN_.PV7RJ!UN[_=0:^(/VB[O\\?6W@#36KN_31=@1EM-N[^]16ELV#^[O]Z.+(9*,KN_G/W7IK$DN[^N;I7A#1>[OS:$BDE?\";N_E9G8\\:7[NK\\0MYSMX>VZOYR%[T\\3X+J_O4+E*SK2NK].M(V45L2ZOVL<])QHMKJ_4RT?6'\"HNK]@_1#9;9JZO_SZQC)AC+J_I. Y>$I^NK_VJ%V\\*7\"ZO[^\"(1+_8;J_'L5OC,I3NK^AXRT^C$6ZOWAB/#I$-[J_J,IVD_(HNK]#GK-<EQJZO\\!,Q*@R#+J_/R=UBL3]N;_85(T43>^YOQC'SEG,X+F_2B[V;$+2N;\\%[KI@K\\.YOZ,1ST<3M;F_KT#?-&ZFN;^2LY(ZP)>YOQDHBVL)B;F_%]9DVDEZN;\\-9+:9@6NYO][;$+RP7+F_A9__4]=-N;_C70AT]3ZYOW\\'JRX+,+F_8\\-AEA@AN;\\!Y*\"]'1*YOPG<UK8: [F_=#-LE _TN+]J?,-H_.2XOT9(.4;AU;B_N1PD/[[&N+_1:-1ED[>XOP9ZE,Q@J+B_E'&HA2:9N+][.4ZCY(FXO]YYO3>;>KB_/(XG54IKN+^S>K<-\\ENXOW3AD7.23+B_#_C4F\"L]N+_>?)B/O2VXOXNL[6E('KB_A3??.<P.N+]_-W$12?^WOQ,EH0*_[[>_4,UE'R[@M[]D1Z]YEM\"WOU7J9B/XP+>_H$)O+E.QM[\\6\"*2LIZ&WOYL3VJ_UD;>_^%3?23V\"M[_'R'J,?G*WOU-N;(FY8K>_BCUM4NY2M[\\#'2_Y'$.WO_?77(]%,[>_912:)F@CM[\\?28/0A!.WO^>SK9Z; [>_MD^GHJSSMK_CRO;MM^.VOV)]&Y*]T[:_'E^-H+W#MK],_KPJN+.VO[]U$T*MH[:_;6/R]YR3MK^^WK-=AX.VOS-OJH1L<[:_UP(A?DQCMK_2Y%I;)U.VOQ2TDRW]0K:_\\UG_!<XRMK_7 ,KUF2*VOP@+& YA$K:_9PD&8\",\"MK\\\\LJC\\X/&UOQC8#/69X;6_PF W6D[1M;\\*/\"4]_L\"UO^=:RZZIL+6_6*86P%\"@M;^1]NN!\\X^UOP8** 62?[6_A'R?6BQOM;]NOAZ3PEZUO_<+:K]43K6_4F0]\\.(]M;\\2@4PV;2VUOWG-0J+S'+6_TEW#1'8,M;_UYF@N]?NTOYZUQ6]PZ[2_\"J9C&>C:M+]X&\\0[7,JTO[?W7^?,N;2_V)*G+#JIM+_4L@(<I)BTOS\"#T,4*B+2_W(QG.FYWM+_PK16*SF:TOW81(,4K5K2_9R?#^X5%M+]TG#(^W32TOQY2F9PQ)+2_JE89)X,3M+\\:W<OMT0*TOV UP0 >\\K._<L0 <&?AL[]N_(A+KM\"SO^943Z/RO[._#$- AS2OL[\\%,C\\'=)ZSOTQ[)C.QC;.__5['&NQ\\L[]5_.G-)&RSOR=*35Q;6[._3@^GU8]*L[].VZ-)PCFSO^C^YL?R*+._JX0*8\"$8L[^[*9\\A3@>SOWY6+!QY]K*_6!<P7Z+ELK^+%1_ZR=2RO_N/9/SOP[*_*E1B=12SLK\\9MW!T-Z*ROS^.W@A9D;*_E2CQ07F LK^M1^0NF&^RO[@8ZMZU7K*_QBTK8=)-LK_I=L;$[3RROV@[T1@(++*_(1-7;\"$;LK^[WUG..0JROR'&T4U1^;&_VB>M^6?HL;]UG-#@?=>QOQ_K%A*3QK&_'011G*>UL;];^D6.NZ2QOQ?]LO;.D[&_DE%+Y.&\"L;^K3+AE]'&QO[Y,F8D&8;&_6K.#7AA0L;\\GWP+S*3^QO\\8EF%4[+K&_KLVZE$P=L;\\[\"-B^70RQOZGK4N)N^[\"_%FV$#8#JL+^W6KM.D=FPO^55/+2BR+\"_4<U!3+2WL+]2]_LDQJ:POPW,D$S8E;\"_Y_\\;T>J$L+_+_:[ _7.POY7A4\"D18[\"_DG+^&\"52L+_W':J=.4&POUSQ.\\5.,+\"_;I61G60?L+]^2'XT>PZPOSJRE2\\E^Z^_^$%KJE79K[_\\_N3TA[>OOU2I52J\\E:^_Z/?Z9?)SK[\\LCOW\"*E*OORCR<%QE,*^_5H)33:(.K[^7:XZPX>RNOWV?]: CRZZ_:\\I'.6BIKK_/22Z4KX>NO[DB/<SY9:Z_%_CR^T9$KK]] ;D]ER*NOZD!XZOJ *Z_2#VO8$'?K;_3<49VF[VMOWS,NP;YFZV_\".$,+%IZK;\\?H2$ OUBMOUU3S)PG-ZV_A(K)&Y05K;\\\"'<\"6!/2LOS <02=YTJR_\"<S'YO&PK+^YFKGN;H^LORD89ECP;:R_\".X&/79,K+^1U[^U \"NLOV:9GMN/\":R_U_F:QR/HJ[_EN):2O,:KOV2(755:I:N_E02E*/V#J[\\_K PEI6*KOV#9'6-20:N_NKE+^P0@J[]<1_,%O?ZJOY5!6YMZW:J_N\"6TTSV\\JK_F)QC'!INJOU,LBXW5>:J_/\\#Z/JI8JK\\,$S[SA#>JO\\_O%<)E%JJ_5;8LPTSUJ;_D5!8..M2IOZ1!4+HMLZF_*W1!WR>2J;]=7SJ4*'&IOS/K=/ O4*F_<FX4\"SXOJ;_FJ\"7[4@ZIOTR]GM=N[:B_<\"M?MY',J+^8RB^QNZNHOY7#PMOLBJB_;8NS325JJ+^]W88=94FHOS>WJF&L**B_@E!V,/L'J+_B&\"J@4>>GO_\"P[\\:OQJ>_SN79NA6FI[_ZJ^21@X6GOV0:]6'Y9*>_S&790'=$I[_0VTA$_2.GOW;>XX&+ Z>_F]\\S#R+CIK]37*L!P<*FO[78I6YHHJ:_CMMG:QB\"IK__Z1X-T6&FOYJ#X6B20::_-QZODUPAIK_W(7\"B+P&FOY/E]:D+X:6_6JKZOO# I;^WF\"'VWJ\"EOWZ\\]F/6@*6_40'O'-=@I;]<+V@UX4\"EO^7GJ,'T(*6_\\J'@U1$!I;]&IR>&..&DOS@1?^9HP:2_DL70\"J.AI+_><^\\&YX&DOT^2ENXT8J2_.%MJU8Q\"I+])RO?.[B*DO]N9M.Y: Z2_JT#_1]'CH[]'[Q[N4<2COZZ-0_3<I*._/;F%;7*%H[]BPN9L$F:COX&J4 6]1J._(\"*627(GH[_ AG),,@BCOSSAB2#]Z**_ N1HV-+)HK\\\\Z82&LZJBOW;Q.SV?BZ*_\":+4#I9LHK^50WX-F$VBO]O 4$NE+J*_;J5,VKT/HK]G'%O,X?\"AOXKO33,1TJ&_#8;?($RSH;_BX[*FDI2AO\\.H4];D=:&_8@\\VP4)7H;_G[+9XK#BAOTVP&PXB&J&_N&&2DJ/[H+])HC$7,=V@OZ&K^*S*OJ\"_CT_/9'\"@H+\\9^(5/(H*@OR*GU7W@8Z\"_G/9? *M%H+^$&*_G@2>@O^_6-41E\":\"_Z2B?3*K6G[_%F( \\HYJ?OQ@F:7BU7I^_Y\"R#(.$BG[]Q/<I4)N>>OUD=\"S6%JYZ_9LGCX/UOGK^N=L-WD#2>O[B4ZA@]^9V_/\\]JXP.^G;\\ $\"?VY(*=OU^!TV_@1YV_G)#U;O8,G;\\:\\.,1)]*<OX::QG9REYR_<]66N]A<G+\\U-!_^62*<OWZ;^UOVYYN_)$29\\JVMF[\\;OS;?@'.;O^?XXSYO.9N_+SV\"+GG_FK\\:.\\3*GL6:OSD)+C#@BYJ_E2D5>SU2FK^!CJ#'MAB:O_R>R#%,WYF_,CM7U?VEF;_@P>?-RVR9O\\\\4YS:V,YF_=)Z3*[WZF+\\G5_W&X,&8OU[*!20AB9B_Q1Q@77Y0F+_7$9&-^!>8OY@1[\\Z/WY>_&B^B.T2GE[^2+J3M%6^7OXB+P/X$-Y>_S'^4B!'_EK_Z\"8^D.\\>6OR;T\\&N#CY:_4=O,]^A7EK\\2-@=A;\"\"6OUA<5L -Z96_HXY\"+LVQE;^!_27#JGJ5OZ'1+)>F0Y6_FS-5PL ,E;^W4V]<^=64OY-R'7U0GY2_1>G3.\\9HE+^K,=FO6C*4OW/O1? -_)._>O@$%.#%D[\\67M,QT8^3OP5V0&#A69._<N.MM1 DD[^NH$](7^Z2OXP(+\"[-N)*_T]\\;?5J#DK]H7\\I*!TZ2OQ,^M:S3&)*_8;HLN+_CD;]1I5.\"RZZ1ORYL'R#W>9&_AR-8ID)%D;^<D9@IKA\"1OP,Y3KXYW)\"_\\F.Y>.6GD+\\A+^ULL7.0O].4SZZ=/Y\"_B7@94JH+D+^O9*W4KJ^/O[8TS!5*2(^_LBGSC2;ACK^(.RQC1'J.OSFJ)[NC$XZ__14\\NT2MC;^&EV:()T>-OY+92D=,X8R_SS$S'+-[C+_CN1 K7!:,O^]I>Y='L8N_&3*RA'5,B[^*%)L5YN>*O[M PVR9@XJ_5BU?K(\\?BK\\9M$KVR+N)O\\4L\"6Q%6(F_:8C%+@7UB+_S;5)?\")*(O]]5*AY/+XB_8:9OB]G,A[^@T.S&IVJ'OTUM%/\"Y\"(>_@5D!)A\"GAK_JU':'JD6&OY\">X#*)Y(6_FQ-31JR#A;\\F38O?$R.%OV(^[QO PH2_]M.-&+%BA+^A$A_RY@*$OQ4V!,5AHX._*-%'K2%$@[\\H[9W&)N6\"OX@I9\"QQAH*_W=RA^0 H@K]S- A)ULF!O\\]5\\C3Q:X&_2']EUU$.@;_\\*!%*^+\" O]4F3Z;D4X\"_ )1'\"B[N?[_X!'S^'C5_O_<#[UF<?'Z__KNI3*;$?;]39 L&/0U]O^.'R;1@5GR_T$GPAA&@>[_ K>*I3^IZOX?>6DH;-7J_*G5JE'2 >;]DPGJS6\\QXO[H63=+0&'B_\\0K[&M1E=[_^RO:V9;-VOV9?\"\\^% 7:_.?=<BS10=;^$-&D3<I]TOQ9V!XX^[W._ZB1I(9H_<[_F_QGSA)!ROPEH \"C_X7&_^JY=Y @T<;\\D9,Y+HH9POW]$E0*7LV^_:KY,3@E;;K\\I=2.^FP-MO^R8,I1.K6N_O.U,$2)8:K\\,:?]T%@1IOR[6D?TKL6>_N'<'Z&)?9K^=J1]PNPYEO_*'5M UOV._T9+E0=)P8K\\=4\\3\\D\"-AOY '4F_DKE^_BG 24.P87;_'!S4$.H5:O^U+IO'-\\U>_K6'5>ZAD5;]K;[4#RM=2OYWRON<R35\"_@\"WB!\\>)2[]8*J9CN'U&OZX>ZY Z=D&_Y:K/<9SF.+_\\JZW_S],MO[Q: \"MDV1._#@   #@    &    \"     8         !0    @    !     0    $         \"0    @            B0 X    X    !@    @    &          4    (     0    $    !          D    (            ($ .    .     8    (    !@         %    \"     $    !     0         )    \"               #@   #@    &    \"     8         !0    @    !     0    $         \"0    @           #P/PX    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag80
    Data		
  }
  DataRecord {
    Tag			    DataTag79
    Data		
  }
  DataRecord {
    Tag			    DataTag78
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    /     0         0    #P   &1E;&%Y7V)R86U?:6YI=  .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag77
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag76
    Data		
  }
  DataRecord {
    Tag			    DataTag75
    Data		
  }
  DataRecord {
    Tag			    DataTag74
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag73
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag72
    Data		    "  %)30     .    Z (   8    (     0         %    \"     $    +     0         .    0     8    (    !          %    \"     $    -     0         0    #0   &9I<E]C;W)E7VEN:70    .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            @0 X    X    !@    @    &          4    (     0    $    !          D    (            '$ .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    &          4    (     0    $    !          D    (            \\#\\.    .     8    (    !@         %    \"     $    !     0         )    \"             A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @           #P/PX    P    !@    @    ) @        4    (     0    $    !          (  0 !    #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag71
    Data		
  }
  DataRecord {
    Tag			    DataTag70
    Data		
  }
  DataRecord {
    Tag			    DataTag69
    Data		
  }
  DataRecord {
    Tag			    DataTag68
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag67
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag66
    Data		
  }
  DataRecord {
    Tag			    DataTag65
    Data		
  }
  DataRecord {
    Tag			    DataTag64
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"               #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag63
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag62
    Data		
  }
  DataRecord {
    Tag			    DataTag61
    Data		
  }
  DataRecord {
    Tag			    DataTag60
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag59
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag58
    Data		
  }
  DataRecord {
    Tag			    DataTag57
    Data		
  }
  DataRecord {
    Tag			    DataTag56
    Data		
  }
  DataRecord {
    Tag			    DataTag55
    Data		
  }
  DataRecord {
    Tag			    DataTag54
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    /     0         0    #P   &1E;&%Y7V)R86U?:6YI=  .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag53
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag52
    Data		    "  %)30     .    : $   8    (     0         %    \"     $    %     0         .    0     8    (    !          %    \"     $    -     0         0    #0   &UU;'1?861D7VEN:70    .    .     8    (    !@         %    \"     $    !     0         )    \"             A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @           #P/PX    P    !@    @    ) @        4    (     0    $    !          (  0      #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag51
    Data		
  }
  DataRecord {
    Tag			    DataTag50
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag49
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag48
    Data		
  }
  DataRecord {
    Tag			    DataTag47
    Data		
  }
  DataRecord {
    Tag			    DataTag46
    Data		
  }
  DataRecord {
    Tag			    DataTag45
    Data		
  }
  DataRecord {
    Tag			    DataTag44
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    /     0         0    #P   &1E;&%Y7V)R86U?:6YI=  .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag43
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag42
    Data		
  }
  DataRecord {
    Tag			    DataTag41
    Data		
  }
  DataRecord {
    Tag			    DataTag40
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag39
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag38
    Data		
  }
  DataRecord {
    Tag			    DataTag37
    Data		    "  %)30     .    Z\"$   8    (     0         %    \"     $    '     0         .    0     8    (    !          %    \"     $    -     0         0    #0   &-O969?9V5N7VEN:70    .    ,\"    8    (    !@         %    \"      $   !     0         )     \"   .HQ.#@(J#@_>ODD&R6%4C\\]BH>RQ>E>/Y3]C4;QJV4_!J7[+KWG:S_H$I?T(A1Q/R.V;F3%-G0_*[MKC\\5;=S^)\\G\\<(X-Z/XO,)['=K'T_Q1&U>'IL@#\\#!>P_M .\"/WE+QOX;G(,_WUL6A;$UA3].?_.A=-\"&/T\"ZN2-E;(@_L+0)V(()BC\\7I<B+S:>+/\\PY( M%1XT_N8)^(>GGCC_\\[LK,W$20/R9QKAY;%I$_X\"4':V_HD3^(<Q26&;N2/RG MX-9CI,_L6=T%R]BE#\\_LV\\TFC:5/]W/<+V:\"Y8_S,;@E##AEC_G=,J<6[>7/T\"\"VK8;CI@_+UM?Q'!EF3]0*$FF6CV:/XG'*3W9%9L_D,0T:>SNFS_^4C\\*E,B</S]'P/_/HIT_K1#0**!]GC\\2LRAD!%F?/]C@$DA^&J _NBQB1<2(H#^JC=$85/>@/Q84 ;$M9J$_P(UA_%#5H3^K@S3IO42B/[DWC&5TM*(_(J-+7W0DHS]3=\";$O92C/V -H8%0!:0_)((0A2QVI#\\[EYJ[4>>D/W7 -1+ 6*4_=A^I=7?*I3\\&@XS2=SRF/]]E2!7!KJ8__^T5*E,AIS^TZ_[\\+92G/W;9W7E1!Z@_--M=C+UZJ#\\OOOH?<NZH/X#X \"!O8JD_AJF-=[36J3_!F8X10DNJ/\\PZPM@7P*H_-*BWMS4UJS^?I\\Z8FZJK/Y&I-V9)(*P_W\\GS\"3^6K#_[T-1M? RM/[XT?7L!@ZT_5QE@',[YK3_P4L$YXG\"N/]!FM;P]Z*X_\"XTACN!?KS_2L;N6RM>O/]@[A=_])[ _F)RR]SEDL#]]!?J'F:\"P/^G>5X0<W; _G/\"PX,(9L3_:8M*0C%:Q/Y._<8AYD[$_\\O,LNXG0L3^H48H<O0VR/W20^)\\32[(_CL_..(V(LC]OETS:*<:R/W';F7?I [,_A/O& \\Q!LS_KQ<QQT7^S/TAYC+3YO;,_>,;/OD3\\LS]TTDB#LCJT/YTXDO1\">;0_M@PO!?:WM#\\QW8JGR_:T/T6U^<W#-;4_BA^X:MYTM3\\H*.MO&[2U/VQ?H,]Z\\[4_*=S->_PRMC^,/E)FH'*V/Y^R](!FLK8_]/)DO4[RMC^B2SL-63*W/_^<^&&%<K<_GEX&K=.RMS\\HHK;?0_.W/Z<61.O5,[@_>0O2P(ETN#^?<VQ17[6X/\\[H!XY6]K@_ Z^!9V\\WN3_#MY_.J7BY/WZE$+0%NKD_0,]K\"(/[N3\\N1#&\\(3VZ/S?/R;_A?KH_LOJ& \\/ NC].%*-WQ0*[/]HP00SI1+L_-C!ML2V'NS\\TP1M7D\\F[/]!E*NT9#+P_/G=?8\\%.O#_X*6JIB9&\\/S>2XJYRU+P_':A)8WP7O3\\M3 FVIEJ]/XY+=);QG;T_UF3&\\USAO3]S3\"2]Z\"2^/URQF^&4:+X_JT$C4&&LOC^7KYKW3?\"^/S>VRL9:-+\\_11YEK(=XOS]9PP27U+R_/V7,EKJ@ , _<E>F&N<BP#_M&]QB/47 /Z_&5XJC9\\ _U9HMB!F*P#^\"=&93GZS /X3+_^(TS\\ _*;;K+=KQP#\\)[! KCQ3!/[;(2M%3-\\$_Q4YI%RA:P3^0*C'T\"WW!/S*U6U[_G\\$_9/>63 +#P3^2K(6U%.;!/]1%OX\\V\"<(_ NW/T6<LPC^HASARJ$_\"/UBZ;F?X<L(_K^O<IU>6PC]Z1^(IQKG\"/PW\"TN-#W<(_:1OWR]  PS^-XHS8;\"3#/[QXQO\\72,,_XA3+-])KPS_QQK9VFX_#/TE[FK)SL\\,_&OY[X5K7PS_Z_E7Y4/O#/UD4&/!5'\\0_^+ZFNVE#Q#^B;=M1C&?$/ZN A*B]B\\0_HDUEM?VOQ#_G(C9N3-3$/WM+I,BI^,0_JQ)2NA4=Q3_AQ]8XD$'%/U?\"OCD99L4_$&6+LK\"*Q3^<(K.85J_%/P*!H>$*U,4_N!VW@LWXQ3^1L4EQGAW&/\\@4I*)]0L8_Y$(&#&MGQC_W7J6B9HS&/Y6WJUMPL<8_\",LX+(C6QC]92V$)KOO&/Z8B+^CA(,<_2G>AO2-&QS\\*L*Q^<VO'/X9X.B#1D,<_;\\4IESRVQS_EV$[8M=O'/]5&<]@\\ <@_;OE5C-$FR#^2-:OH<TS(/SN?'.(C<L@_%CY);>&7R#\\+@L5^K+W(/\\9'&PN%X\\@_2=W)!FL)R3^F!D9F7B_)/Y\\\"^AU?5<D_78]%(FU[R3\\2[WUGB*')/^KL[>&PQ\\D_N.'5A>;MR3^^N&M'*13*/[+TVAIY.LH_>[1$]-5@RC\\XN+_'/X?*/Q%F6(FVK<H_7<\\0+3K4RC^-M>\"FROK*/T\"/M>IG(<L_1(UR[!%(RS_/G_\"?R&[+/YE[_OB+E<L_\\IY@ZUN\\RS\\95]%J../+/U[% &LA\"LP_>.24WQ8QS#^UC2F\\&%C,/VU^4/0F?\\P_45V1>T&FS#_)OVE%:,W,/V$O346;],P_0\"^E;MH;S3^O0=&T)4/-/W7M)@M]:LT_DL/Q9.\"1S3^T9'.U3[G-/]Z&X^_*X,T_]/IO!U((SC^#LCSOY\"_./W+%8YJ#5\\X_G'?U^RU_SC^D/O@&Y*;./\\S':*ZESLX_O/TYY7+VSC]\"#E6>2Q[//U]PF<PO1L\\_#>K<8A]NSS](ENM3&I;//^#JAY(@OL\\_G[YJ$3+FSS^CIZ%A)P?0/\\BC6TT[&] _HV(QQ50OT#^W+VS\"<T/0/SJ64#Z85] _%V0>,L)KT#\\AK1\"7\\7_0/R;.768FE- _$' WF6\"HT#\\)B\\HHH+S0/ZEI/P[ET- _):RY0B_ET#]\\2UB_?OG0/Z6<-7W3#=$_UU-G=2TBT3^\\A_Z@C#;1/ZFT!_GP2M$_\\;^*=EI?T3\\E^XH2R7/1/V G!\\8\\B-$_C7CYB;6<T3_)F%=7,['1/Z^K$B>VQ=$_M5$7\\CW:T3^\"JTVQRN[1/UI=F5U< ](_@I+9[_(7TC^8 .E@CBS2/Q7KG:DN0=(_KR;*PM-5TC_1'#NE?6K2/PG/N4DL?](_E]H*J=^3TC_2>^Z[EZC2/[R1('M4O=(_?*%8WQ72TC_IV4GAV^;2/R47HWFF^](_#N8.H740TS_QAS-02273/PWVLG\\A.M,_.N4J*/Y.TS]UR31\"WV/3/YC99<;$>-,_[Q)/K:Z-TS_M/'WOG*+3/\\+L>(6/M],_)(G&9X;,TS_W3>:.@>'3/_Q/5/. ]M,_E8\"(C80+U#^&L?95C\"#4/Z>8#D68-=0_K=,[4ZA*U#_^Z^5XO%_4/VQ:<*[4=-0_#XLZ[/\")U#\\'X9\\J$9_4/V:Z]V$UM-0__G.5BEW)U#\\R;<B<B=[4/^H+W)\"Y\\]0_9\\ 77^T(U3\\R\";__)![5/_IV$6M@,]4_BK!*F9](U3^W=J*\"XEW5/U2H3!\\I<]4_'49Y9W.(U3_#=E13P9W5/^\"*!ML2L]4_[ \"T]F?(U3]:B7V>P-W5/X@*@,H<\\]4_U*34<GP(UC^AMI\"/WQW6/W+@Q1A&,]8_^@B\"!K!(UC\\J8<]0'5[6/U)HM.^-<]8_1? SVP&)UC]O(4T+>9[6/_5^^W?SL]8_Z>HV&7')UC]IJO/F\\=[6/]5I(MEU]-8_\\$\"PY_P)US\\AMX8*AQ_7/ZO'BSD4-=<_S>6A;*1*US\\C :B;-V#7/\\F)>;[-==<_K73NS&:+US_)/]N^ J'7/W#V$(RAMM<_H#5=+$/,US]*,(J7Y^'7/YRS7L6.]]<_9\"N>K3@-V#]CI@A(Y2+8/YO:6HR4.-@_OBE.<D9.V#^%I9CQ^F/8/Q@4[0&R>=@_8O3ZFFN/V#^;@FZT)Z78/Y*\\\\$7FNM@_.&8G1Z?0V#_U#;6O:N;8/S@1.7<P_-@_X:!/E?@1V3^RQ9$!PR?9/^%DE;.//=D_C$3MHEY3V3\\W$\"G'+VG9/U9=U1<#?]D_W:][C-B4V3^\\?J(<L*K9/WTXS;^)P-D_P$=\\;676V3_D%RT=0^S9/Y096L8B MH_4L=Z8 08VC\\HJ@/CYRW:/T!>9D7-0]H_=I<1?[19VC\\/)G&'G6_:/U'[[56(A=H_.2[NX72;VC\\5 -4B8[':/T#A A!3Q]H_SG75H$3=VC\\ZFJ?,-_/:/R5HT8HL\"=L_!CNHTB(?VS_IM'Z;&C7;/RK#I-P32]L_/*-GC0YAVS]=YQ&E\"G?;/VA[ZQH(C=L_DZDYY@:CVS]&'S_^!KG;/]?Q.UH(S]L_7Z-M\\0KEVS^2)P^[#OO;/XGH6*X3$=P_H,N PADGW#]&-KKN(#W</^ 2-BHI4]P_G=4B;#)IW#]D@:RK/'_</Z*L_-]'E=P_0X8Z %2KW#^&VHH#8<'</_87$.%NU]P_2U3JCWWMW#]943<'C0/=/P.\"$CZ=&=T_*0^5*ZXOW3^BW-7&OT7=/RV.Z0;26]T_:XSBXN1QW3_<\"=%1^(?=/]L'PTH,GMT_G%O$Q\"\"TW3\\ML]ZV-<K=/X::&1A+X-T_<X!ZWV#VW3^^NP0$=PS>/Q^0N7R-(MX_53.80*0XWC\\KTIU&NT[>/YR5Q8729-X_R:<(]>EZWC\\C.5Z+ 9'>/WV%NS\\9I]X_'MD3\"3&]WC_AE5C>2-/>/U(X>;9@Z=X_REQCB'C_WC^/Q )+D!7?/_]:0?6G*]\\_ICH'?K]!WS]NLCK<UE??/\\A*P ;N;=\\_S<IZ] 2$WS]]/4N<&YK?/]#V$/4QL-\\_!)FI]4?&WS^Y&?&47=S?/S/'P<ER\\M\\_PB9ZQ4,$X#_DW:_G30_@/Z_$[,97&N _E,V:7F$EX#]<)\".J:C#@/] P[J1S.^ _5YEC2GQ&X#^-1>J5A%'@/_9@Z(*,7. _D%W##)1GX#^$]M\\NFW+@/[PRHN2A?> _F6=M*:B(X#^&.Z3XK9/@/[\"HJ$VSGN _HO_;([BIX#_SZ9YVO+3@/^ML44' O^ _+^Q2?\\/*X#]Q+ (LQM7@/PU6O4+(X. _QO?AOLGKX#]F\"<V;RO;@/W7NVM3* >$_W'AG9<H,X3^FZ\\U(R1?A/YO]:'K'(N$__]N2]<0MX3\\_+:6UP3CA/Z(3^;6]0^$_^R_G\\;A.X3]BI,=DLUGA/]X6\\@FM9.$_)K2]W*5OX3]+,H'8G7KA/W;3DOB4A>$_F6A(.(N0X3\\N5/>2@)OA/^&,] -UIN$_7*\"4AFBQX3_NM2L66[SA/U*1#:Y,Q^$_7I6-23W2X3_*QO[C+-WA/^/.LW@;Z.$_2_[^ @GSX3^S3S)^]?WA/YEJG^7@\".(_#::7-,L3XC]A\"VQFM![B/_I8;7:<*>(_^P3L7X,TXC\\;0#@>:3_B/U+XH:Q-2N(_J=MX!C%5XC_S6@PG$V#B/Y&LJPGT:N(_-<^EJ=-UXC^HC$D\"LH#B/XE\\Y0Z/B^(_$@?(RFJ6XC_B9S\\Q1:'B/[>PF3T>K.(_0,PDZ_6VXC_9@\"XUS,'B/U=S!!>AS.(_S2GTBW37XC]3#DN/1N+B/\\MQ5AP7[>(_KHYC+N;WXC_4B[_ LP+C/SA_M\\Y_#>,_PW\"84TH8XS\\77:]*$R/C/UDX2:_:+>,_^O\"R?* XXS^#<CFN9$/C/URH*3\\G3N,_G8#0*NA8XS_5[GILIV/C/]7N=?]D;N,_A8<.WR!YXS^FS9$&VX/C/Z/F3'&3CN,_7@N-&DJ9XS_[BI_]_J/C/[?-T16RKN,_J5=Q7F.YXS^5R\\O2$L3C/\\'M+F[ SN,_N*;H*VS9XS\\A!D<'%N3C/XY%F/N][N,_1,LJ!&3YXS\\3+4T<\" 3D/R0S3C^J#N0_Q-I\\:$H9Y#\\X62B3Z\"/D/XL>H+J$+N0_9-@SVAXYY#_-=#/MMD/D/P\\E[^Y,3N0_=V\"WVN!8Y#\\RY]RK<F/D/Q7%L%T\";N0_=E2$ZX]XY#_W0*E0&X/D/UZ*<8BDC>0_7(<OCBN8Y#]OZ#5=L*+D/Y^ZU_ RK>0_8VIH1+.WY#]JQCM3,<+D/VL\"IABMS.0_^[G[CR;7Y#]>\\Y&TG>'D/ULBOH$2[.0_!RO6\\H3VY#^B9# #]0#E/UV<(ZYB\"^4_.!@'[\\T5Y3_)F3+!-B#E/QAA_A^=*N4_;\"_#!@$UY3\\:2MIP8C_E/V!]G5G!2>4_+!]GO!U4Y3_[$9*4=U[E/YC'>=W.:.4_!41ZDB-SY3\\Y(/\"N=7WE/_^,.\"[%A^4_O%6Q\"Q*2Y3]+X[A\"7)SE/\\D^KLZCIN4_913QJNBPY3\\SMN'2*KOE/P(?X4%JQ>4_(?50\\Z;/Y3\\XC9/BX-GE/QWM\"PL8Y.4_ELX=:$SNY3\\THBWU??CE/R*2H*VL N8_\\83<C-@,YC]M($B. 1?F/V?,2JTG(>8_A+5,Y4HKYC\\1T+8Q:S7F/\\_:\\HV(/^8_P6%K]:))YC_YP(MCNE/F/V@GP-/.7>8_L9EU0>!GYC_G]!FH[G'F/VKQ&P/Z>^8_L\"7K30*&YC\\+\"?B#!Y#F/WKVLZ )FN8_=R^1GPBDYC_!W@)\\!*[F/R,;?3']M^8_2.ITN_+!YC][0V 5Y<OF/WT2MCK4U>8_0CKN)L#?YC_(EX'5J.GF/]<$ZD&.\\^8_REJB9W#]YC]?=29\"3P?G/W8U\\\\PJ$><_X(.& P,;YS\\?5%_AUR3G/S6G_6&I+N<_9H[B@'<XYS_]+9 Y0D+G/Q+ B8<)3.<_49=39LU5YS^_(7/1C5_G/WGK;L1*:><_@*'..@1SYS]V%!LPNGSG/V$[WI]LAN<_;C:CA1N0YS^Y4?;<QIGG/P (9:%NH^<_<P5^SA*MYS]K*M%?L[;G/RF.[U!0P.<_G8%KG>G)YS\\=DMA ?]/G/R:,RS81W><_%7[:>I_FYS_RNIP(*O#G/Q/=JMNP^><_]<B>[S,#Z#_=KQ- LPSH/Z02IL@N%N@_:L3SA*8?Z#]-[9MP&BGH/RH-/X>*,N@_1_Y^Q/8[Z#\\=^/XC7T7H/_F18Z'#3N@_P\\52.\"18Z#^O\\G/D@&'H/^S?;Z'9:N@_7;_P:BYTZ#]+,*(\\?WWH/QE\",1+,AN@_[W9,YQ20Z#]XQJ.W69GH/X2@Z'Z:HN@_Q>_-.->KZ#]N' CA#[7H/_$.37-$ON@_I3)4ZW3'Z#]R>-9$H=#H/W]9CGO)V>@_UMDWB^WBZ#\\ABY!O#>SH/SJ/5R0I]>@_YYI-I4#^Z#]\\^#3N4P?I/WV*T?IB$.D_2\\[HQFT9Z3_)WD%.=\"+I/_MVI8QV*^D_K_3=?70TZ3\\<6[<=;CWI/XA5_V=C1ND_ZSF%6%1/Z3]_\"QKK0%CI/WA]D!LI8>D_D/6\\Y0QJZ3^NCG5%['+I/WL;DC;'>^D_!2GLM)V$Z3]5 5^\\;XWI/PJNQT@]END_]_H$5@:?Z3^N>/??RJ?I/RE_@>**L.D_4#\"'64:YZ3^7>NY _<'I/XP;GY2ORND_=:*\"4%W3Z3_4<H1P!MSI/P+'D?\"JY.D_O;*9S$KMZ3^R)8T YO7I/Q7N7HA\\_ND_)[L#8 X'ZC^^'W*#FP_J/]R4HNXC&.H_+GR/G:<@ZC^=(C6,)BGJ/]#\"D;:@,>H_L8>E&!8ZZC_]CG*NAD+J/[WK_'/R2NH_TJA*95E3ZC]PRV-^NUOJ/Z554KL89.H_V4@B&'%LZC]%J.&0Q'3J/WY[H\"$3?>H_YM!PQER%ZC\\MP&9[H8WJ/\\ULF#SAE>H_@@@>!AR>ZC^\\U1'44:;J/Q\\JD**\"KNH_\\G\"W;:ZVZC^:+:@QU;[J/PC^A.KVQNH_+IURE!//ZC]KY9<K*]?J/P33':P]W^H_AX8O$DOGZC]&1_I94^_J/[:%K7]6]^H_X=UZ?U3_ZC_0&99530?K/^HS-?Y #^L_:UF0=2\\7ZS^[[.&W&!_K/]F'9L'\\)NL_POY<CMLNZS_'808;M3;K/_S_I6.)/NL_C&F!9%A&ZS\\<<N 9(D[K/RDS#8#F5>L_70Y4DZ5=ZS_SKP-07V7K/P$1;;(3;>L_XGGCML)TZS]\\A+Q9;'SK/YH>4)<0A.L_08SX:Z^+ZS\\\":A+42)/K/TBO_,O<FNL_I[ 84&NBZS\\G(LI<]*GK/YX9=^YWL>L_Y1\"( ?:XZS\\UZ&>2;L#K/V3H@YWAQ^L_+L5+'T_/ZS]YGS$4M];K/Z$'JG@9WNL_J?\\K27;EZS^1_3\"\"S>SK/X3M-\" ?].L_'C2V'VO[ZS^EL#5]L0+L/TJ_-C7R\">P_5SL_1\"T1[#]T@=>F8ACL/]9QBEF2'^P_<7+E6+PF[#\\Q<7BAX\"WL/R_FU2__-.P_UM62 !@\\[#\\:TT80*T/L/Z@!C%LX2NP_!1C_WC]1[#_&83^705CL/Z_![H ]7^P_X;.QF#-F[#_Y3R_;(VWL/SM+$44.=.P_K/H#T_)Z[#\\Y5;:!T8'L/]+UV4VJB.P_BATC-'V/[#^VM4@Q2I;L/_Q1!$(1G>P_>#(28]*C[#_-13&1C:KL/SDK(\\E\"L>P_KS2L!_*W[#_A:)-)F[[L/U2%HHL^Q>P_= \"FRMO+[#^5\"VT#<]+L/PZ5R3($V>P_,$J058_?[#]BF9AH%.;L/Q6TO&B3[.P_UI#94@SS[#]/[<XC?_GL/SI0?]CK_^P_>0O0;5(&[3_^/:G@L@SM/]+5]2T-$^T_#Y*C4F$9[3_3!*-+KQ_M/SR5YQ7W)>T_7(%GKC@L[3\\OX!L2=#+M/W^C #ZI..T_Z9D4+]@^[3^^<%GB $7M/^NUTU0C2^T_\\MF*@S]1[3_+,8EK55?M/\\'XVPEE7>T_;E*36VYC[3^#3,)=<6GM/\\;@?@UN;^T_V?;A9V1U[3\\D9@=J5'OM/[3W#1$^@>T_\"V@76B&'[3_]:$A\"_HSM/XZCR,;4DNT_N;G\"Y*28[3],2&29;I[M/[;HW>$QI.T_VS)CN^ZI[3_4OBHCI:_M/\\LF;A95M>T_O@AJDOZZ[3\\[\"%Z4H<#M/SC0C!D^QNT_SA0\\']3+[3_[E+2B8]'M/V$<0J'LUNT_!(4S&&_<[3\\0N=H$Z^'M/X\"TC&1@Y^T_Z(:A-,_L[3\\C571R-_+M/PI;8QN9]^T_(^W/+/3\\[3]4>AZD2 +N/Y6-MGZ6!^X_E<\\\"NMT,[C]M\"'%3'A+N/SXA<DA8%^X_Y25ZEHL<[C^71@ [N\"'N/X39?C/>)NX_>5QS??TK[C^ =EX6%C'N/W[YP_LG-NX_R.,J*S,[[C_$81VB-T#N/WC/*%XU1>X_(+K=7\"Q*[C_(X<^;'$_N/](ZEA@&5.X_D>_*T.A8[C_&80O\"Q%WN/SDL^.F98NX_.20U1FAG[C\\I6VG4+VSN/_T?/Y+P<.X_P0!D?:IU[C\\8S(B377KN/[N28=()?^X_^*BE-Z^#[C\\BJ _!38CN/Q=P76SEC.X_K\"A0-W:1[C\\B0ZP? );N/YY[.2.#FNX_C=K\"/_^>[C\\DMA9S=*/N/[6S!KOBI^X_*<EG%4JL[C]B/A* JK#N/Y^NX?@#M>X_X FU?5:Y[C](EFX,HKWN/W?Q\\Z+FP>X_\\1$N/R3&[C]L2 G?6LKN/S)!=8\"*SNX_; 5E(;/2[C^&_,Z_U-;N/W3MK%GOVNX_\" #\\[ +?[C\\ZOKQW#^/N/WL5\\_<4Y^X_]5>F:Q/K[C_>/>'0\"N_N/['FL27[\\NX_=]HI:.3V[C\\%\"UZ6QOKN/S_59JZA_NX_3P)@KG4\"[S_AR&B40@;O/UK.HUX(\"N\\_#2@W\"\\<-[S]R7$R8?A'O/U)D$ 0O%>\\_^ZNS3-@8[S]H%&IP>ASO/VWT:FT5(.\\_X1GQ0:DC[S_&RCKL-2?O/V3&B6J[*N\\_<T8CNSDN[S\\Y %#<L#'O/Z,E7,P@->\\_8F:7B8DX[S\\(\\502ZSOO/Q=TZV1%/^\\_&1^U?YA\"[S^VHP]AY$7O/[8V7 <I2>\\_'Y'_<&9,[S\\U\\6&<G$_O/X<;[X?+4N\\_]%L6,O-5[S^OADJ9$UGO/T7Y ;PL7.\\_E9NVF#Y?[S_5X.4M26+O/XO($'I,9>\\_?M^[>TAH[S^_0&\\Q/6OO/X.6MIDJ;N\\_,1LALQ!Q[S\\ZFD%\\[W/O/Q=QKO/&=N\\_*I !&)=Y[S^J>]CG7WSO/XI,U&$A?^\\_7+&9A-N![S\\U[]!.CH3O/XKB);\\YA^\\_#0!(U-V)[S^(5>J,>HSO/[J*P^</C^\\_(>*-XYV1[S_A.0=_))3O/X$,\\;BCEN\\_QG$0D!N9[S^\"'RX#C)OO/U-J%A'UG>\\_>$:9N%:@[S^+2(KXL*+O/T^FP,\\#I>\\_9S<7/4^G[S\\?=FP_DZGO/Q^ HM7/J^\\_*Q>?_@2N[S_6H4NY,K#O/T$LE019LN\\_O6ALWW>T[S^+L,5(C[;O/X8$F3^?N.\\_QPWBPJ>Z[S]='J#1J+SO/^0QUFJBON\\_,^Z*C93 [S\\$I,@X?\\+O/WY/G6MBQ.\\_\\)@:)3[&[S]6U55D$LCO/_4&:\"C?R>\\__MUM<*3+[S\\4N8<[8LWO/^.EV8@8S^\\_KV&+5\\?0[S_C6<BF;M+O/Y:LOW4.U.\\_%RFDPZ;5[S]T4*R/-]?O/_95$MG V.\\_K1\\4GT+:[S_@1O/@O-OO/YP8]9TOW>\\_&)9BU9K>[S\\\\=8B&_M_O/Q AM[!:X>\\_++I\"4Z_B[S\\Q%X-M_./O/R?%T_Y!Y>\\__ >4!H#F[S_:VB:$MN?O/YKP\\G;EZ.\\_'K1BW@SJ[S^]2.2Y+.OO/YJ*Z0A%[.\\_ P_HRE7M[S_-)%G_7N[O/Z74N:5@[^\\_<^&*O5KP[S^>R%!&3?'O/V7\"DS\\X\\N\\_)\\+?J!OS[S^V=L2!]_/O/YU*U<G+].\\_962I@)CU[S_8IMNE7?;O/TRQ\"CD;]^\\_U-_8.='W[S^+2^RG?_CO/\\/*[H(F^>\\_2/&-RL7Y[S^-$'M^7?KO/^4W:Y[M^N\\_K#07*G;[[S^ DCLA]_OO/V>;F(-P_.\\_^%?R4.+\\[S^\"CQ\")3/WO/S+(OBNO_>\\_.D?,. K^[S_H$ RP7?[O/\\3H5)&I_N\\_M5&!W.W^[S\\-CF^1*O_O/Z>? ;!?_^\\_]D<=.(W_[S\\;\"*PIL__O/^T@FX31_^\\_#9/;2.C_[S_I'F)V]__O/\\5$)PW__^\\_#@   #@    &    \"     8         !0    @    !     0    $         \"0    @            B0 X    X    !@    @    &          4    (     0    $    !          D    (            ($ .    .     8    (    !@         %    \"     $    !     0         )    \"               #@   #@    &    \"     8         !0    @    !     0    $         \"0    @           #P/PX    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag36
    Data		
  }
  DataRecord {
    Tag			    DataTag35
    Data		
  }
  DataRecord {
    Tag			    DataTag34
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    /     0         0    #P   &1E;&%Y7V)R86U?:6YI=  .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag33
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag32
    Data		
  }
  DataRecord {
    Tag			    DataTag31
    Data		
  }
  DataRecord {
    Tag			    DataTag30
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag29
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag28
    Data		
  }
  DataRecord {
    Tag			    DataTag27
    Data		
  }
  DataRecord {
    Tag			    DataTag26
    Data		    "  %)30     .    J\"$   8    (     0         %    \"     $    &     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &9I<E]T87!?:6YI=      .    ,\"    8    (    !@         %    \"      $   !     0         )     \"   ,5$)PW__^\\_Z1YB=O?_[S\\-D]M(Z/_O/^T@FX31_^\\_&PBL*;/_[S_V1QTXC?_O/Z>? ;!?_^\\_#8YOD2K_[S^U48'<[?[O/\\3H5)&I_N\\_Z! ,L%W^[S\\Z1\\PX\"O[O/S+(OBNO_>\\_@H\\0B4S][S_X5_)0XOSO/V>;F(-P_.\\_@)([(??[[S^L-!<J=OOO/^4W:Y[M^N\\_C1![?EWZ[S](\\8W*Q?GO/\\/*[H(F^>\\_BTOLIW_X[S_4W]@YT??O/TRQ\"CD;]^\\_V*;;I5WV[S]E9*F F/7O/YU*U<G+].\\_MG;$@??S[S\\GPM^H&_/O/V7\"DS\\X\\N\\_GLA01DWQ[S]SX8J]6O#O/Z74N:5@[^\\_S219_U[N[S\\##^C*5>WO/YJ*Z0A%[.\\_O4CDN2SK[S\\>M&+>#.KO/YKP\\G;EZ.\\_VMHFA+;G[S_\\!Y0&@.;O/R?%T_Y!Y>\\_,1>#;?SC[S\\LND)3K^+O/Q AM[!:X>\\_/'6(AO[?[S\\8EF+5FM[O/YP8]9TOW>\\_X$;SX+S;[S^M'Q2?0MKO/_95$MG V.\\_=%\"LCS?7[S\\7*:3#IM7O/Y:LOW4.U.\\_XUG(IF[2[S^O88M7Q]#O/^.EV8@8S^\\_%+F'.V+-[S_^W6UPI,OO/_4&:\"C?R>\\_5M559!+([S_PF!HE/L;O/WY/G6MBQ.\\_!*3(.'_\"[S\\S[HJ-E,#O/^0QUFJBON\\_71Z@T:B\\[S_'#>+\"I[KO/X8$F3^?N.\\_B[#%2(^V[S^]:&S?=[3O/T$LE019LN\\_UJ%+N3*P[S\\K%Y_^!*[O/Q^ HM7/J^\\_'W9L/Y.I[S]G-Q<]3Z?O/T^FP,\\#I>\\_BTB*^+\"B[S]X1IFX5J#O/U-J%A'UG>\\_@A\\N XR;[S_&<1\"0&YGO/X$,\\;BCEN\\_X3D'?R24[S\\AXHWCG9'O/[J*P^</C^\\_B%7JC'J,[S\\- $C4W8GO/XKB);\\YA^\\_->_03HZ$[S]<L9F$VX'O/XI,U&$A?^\\_JGO8YU]\\[S\\JD $8EWGO/Q=QKO/&=N\\_.II!?.]S[S\\Q&R&S$''O/X.6MIDJ;N\\_OT!O,3UK[S]^W[M[2&CO/XO($'I,9>\\_U>#E+4EB[S^5F[:8/E_O/T7Y ;PL7.\\_KX9*F1-9[S_T6Q8R\\U7O/X<;[X?+4N\\_-?%AG)Q/[S\\?D?]P9DSO/[8V7 <I2>\\_MJ,/8>1%[S\\9'[5_F$+O/Q=TZV1%/^\\_\"/%4$NL[[S]B9I>)B3CO/Z,E7,P@->\\_.0!0W+ Q[S]S1B.[.2[O/V3&B6J[*N\\_QLHZ[#4G[S_A&?%!J2/O/VWT:FT5(.\\_:!1J<'H<[S_[J[-,V!CO/U)D$ 0O%>\\_<EQ,F'X1[S\\-*#<+QPWO/UK.HUX(\"N\\_X<AHE$(&[S]/ F\"N=0+O/S_59JZA_NX_!0M>EL;Z[C]WVBEHY/;N/['FL27[\\NX_WCWAT KO[C_U5Z9K$^ON/WL5\\_<4Y^X_.KZ\\=P_C[C\\( /SL M_N/W3MK%GOVNX_AOS.O]36[C]L!64AL]+N/S)!=8\"*SNX_;$@)WUK*[C_Q$2X_),;N/W?Q\\Z+FP>X_2)9N#**][C_@\";5]5KGN/Y^NX?@#M>X_8CX2@*JP[C\\IR6<52JSN/[6S!KOBI^X_)+86<W2C[C^-VL(__Y[N/YY[.2.#FNX_(D.L'P\"6[C^L*% W=I'N/Q=P76SEC.X_(J@/P4V([C_XJ*4WKX/N/[N28=()?^X_&,R(DUUZ[C_! &1]JG7N/_T?/Y+P<.X_*5MIU\"]L[C\\Y)#5&:&?N/SDL^.F98NX_QF$+PL1=[C^1[\\K0Z%CN/](ZEA@&5.X_R.'/FQQ/[C\\@NMU<+$KN/WC/*%XU1>X_Q&$=HC= [C_(XRHK,SON/W[YP_LG-NX_@'9>%A8Q[C]Y7'-]_2ON/X39?C/>)NX_ET8 .[@A[C_E)7J6BQSN/SXA<DA8%^X_;0AQ4QX2[C^5SP*ZW0SN/Y6-MGZ6!^X_5'H>I$@\"[C\\C[<\\L]/SM/PI;8QN9]^T_(U5T<C?R[3_HAJ$TS^SM/X\"TC&1@Y^T_$+G:!.OA[3\\$A3,8;]SM/V$<0J'LUNT_^Y2THF/1[3_.%#P?U,OM/SC0C!D^QNT_.PA>E*' [3^^\"&J2_KKM/\\LF;A95M>T_U+XJ(Z6O[3_;,F.[[JGM/[;HW>$QI.T_3$ADF6Z>[3^YN<+DI)CM/XZCR,;4DNT__6A(0OZ,[3\\+:!=:(8?M/[3W#1$^@>T_)&8':E1[[3_9]N%G9'7M/\\;@?@UN;^T_@TS\"77%I[3]N4I-;;F/M/\\'XVPEE7>T_RS&):U57[3_RV8J#/U'M/^NUTU0C2^T_OG!9X@!%[3_IF10OV#[M/W^C #ZI..T_+^ ;$G0R[3]<@6>N.\"SM/SR5YQ7W)>T_TP2C2Z\\?[3\\/DJ-281GM/]+5]2T-$^T__CVIX+(,[3]Y\"]!M4@;M/SI0?]CK_^P_3^W.(W_Y[#_6D-E2#//L/Q6TO&B3[.P_8IF8:!3F[#\\P2I!5C]_L/PZ5R3($V>P_E0MM W/2[#]T *;*V\\OL/U2%HHL^Q>P_X6B329N^[#^O-*P'\\K?L/SDK(\\E\"L>P_S44QD8VJ[#]X,A)CTJ/L/_Q1!$(1G>P_MK5(,4J6[#^*'2,T?8_L/]+UV4VJB.P_.56V@=&![#^L^@/3\\GKL/SM+$44.=.P_^4\\OVR-M[#_AL[&8,V;L/Z_![H ]7^P_QF$_ET%8[#\\%&/_>/U'L/Z@!C%LX2NP_&M-&$\"M#[#_6U9( &#SL/R_FU2__-.P_,7%XH> M[#]Q<N58O\";L/]9QBEF2'^P_=('7IF(8[#]7.S]$+1'L/TJ_-C7R\">P_I; U?;$\"[#\\>-+8?:_OK/X3M-\" ?].L_D?TP@LWLZS^I_RM)=N7K/Z$'JG@9WNL_>9\\Q%+?6ZS\\NQ4L?3\\_K/V3H@YWAQ^L_->AGDF[ ZS_E$(@!]KCK/YX9=^YWL>L_)R+*7/2IZS^GL!A0:Z+K/TBO_,O<FNL_ FH2U$B3ZS]!C/AKKXOK/YH>4)<0A.L_?(2\\66Q\\ZS_B>>.VPG3K/P$1;;(3;>L_\\Z\\#4%]EZS]=#E23I5WK/RDS#8#F5>L_''+@&2).ZS^,:8%D6$;K/_S_I6.)/NL_QV$&&[4VZS_\"_ER.VR[K/]F'9L'\\)NL_N^SAMQ@?ZS]K69!U+Q?K/^HS-?Y #^L_T!F654T'ZS_AW7I_5/_J/[:%K7]6]^H_1D?Z65/OZC^'AB\\22^?J/P33':P]W^H_:^67*RO7ZC\\NG7*4$\\_J/PC^A.KVQNH_FBVH,=6^ZC_R<+=MKK;J/Q\\JD**\"KNH_O-41U%&FZC^\"\"!X&')[J/\\ULF#SAE>H_+<!F>Z&-ZC_FT'#&7(7J/WY[H\"$3?>H_1:CAD,1TZC_92\"(8<6SJ/Z554KL89.H_<,MC?KM;ZC_2J$IE65/J/[WK_'/R2NH__8YRKH9\"ZC^QAZ48%CKJ/]#\"D;:@,>H_G2(UC\"8IZC\\N?(^=IR#J/]R4HNXC&.H_OA]R@YL/ZC\\GNP-@#@?J/Q7N7HA\\_ND_LB6- .;UZ3^]LIG,2NWI/P+'D?\"JY.D_U'*$< ;<Z3]UHH)07=/I/XP;GY2ORND_EWKN0/W!Z3]0,(=91KGI/RE_@>**L.D_KGCWW\\JGZ3_W^@16!I_I/PJNQT@]END_50%?O&^-Z3\\%*>RTG83I/WL;DC;'>^D_KHYU1>QRZ3^0];SE#&KI/WA]D!LI8>D_?PL:ZT!8Z3_K.8585$_I/XA5_V=C1ND_'%NW'6X]Z3^O]-U]=#3I/_MVI8QV*^D_R=Y!3G0BZ3]+SNC&;1GI/WV*T?IB$.D_?/@T[E,'Z3_GFDVE0/[H/SJ/5R0I]>@_(8N0;PWLZ#_6V3>+[>+H/W]9CGO)V>@_<GC61*'0Z#^E,E3K=,?H/_$.37-$ON@_;AP(X0^UZ#_%[\\TXUZOH/X2@Z'Z:HN@_>,:CMUF9Z#_O=DSG%)#H/QE\",1+,AN@_2S\"B/']]Z#]=O_!J+G3H/^S?;Z'9:N@_K_)SY(!AZ#_#Q5(X)%CH/_F18Z'#3N@_'?C^(U]%Z#]'_G[$]COH/RH-/X>*,N@_3>V;<!HIZ#]JQ/.$IA_H/Z02IL@N%N@_W:\\30+,,Z#_UR)[O,P/H/Q/=JMNP^><_\\KJ<\"\"KPYS\\5?MIZG^;G/R:,RS81W><_'9+80'_3YS^=@6N=Z<GG/RF.[U!0P.<_:RK17[.VYS]S!7[.$JWG/P (9:%NH^<_N5'VW,:9YS]N-J.%&Y#G/V$[WI]LAN<_=A0;,+I\\YS^ H<XZ!'/G/WGK;L1*:><_OR%ST8U?YS]1EU-FS57G/Q+ B8<)3.<__2V0.4)\"YS]FCN* =SCG/S6G_6&I+N<_'U1?X=<DYS_@@X8# QOG/W8U\\\\PJ$><_7W4F0D\\'YS_*6J)G</WF/]<$ZD&.\\^8_R)>!U:CIYC]\".NXFP-_F/WT2MCK4U>8_>T-@%>7+YC](ZG2[\\L'F/R,;?3']M^8_P=X\"? 2NYC]W+Y&?\"*3F/WKVLZ )FN8_\"PGX@P>0YC^P)>M- H;F/VKQ&P/Z>^8_Y_09J.YQYC^QF75!X&?F/V@GP-/.7>8_^<\"+8[I3YC_!86OUHDGF/\\_:\\HV(/^8_$=\"V,6LUYC^$M4SE2BOF/V?,2JTG(>8_;2!(C@$7YC_QA-R,V SF/R*2H*VL N8_-*(M]7WXY3^6SAUH3.[E/QWM\"PL8Y.4_.(V3XN#9Y3\\A]5#SIL_E/P(?X4%JQ>4_,[;ATBJ[Y3]E%/&JZ+#E/\\D^KLZCIN4_2^.X0ER<Y3^\\5;$+$I+E/_^,.\"[%A^4_.2#PKG5]Y3\\%1'J2(W/E/YC'>=W.:.4_^Q&2E'=>Y3\\L'V>\\'53E/V!]G5G!2>4_&DK:<&(_Y3]L+\\,& 37E/QAA_A^=*N4_R9DRP38@Y3\\X& ?OS17E/UV<(ZYB\"^4_HF0P _4 Y3\\'*];RA/;D/ULBOH$2[.0_7O.1M)WAY#_[N?N/)M?D/VL\"IABMS.0_:L8[4S'\"Y#]C:FA$L[?D/Y^ZU_ RK>0_;^@U7;\"BY#]<AR^.*YCD/UZ*<8BDC>0_]T\"I4!N#Y#]V5(3KCWCD/Q7%L%T\";N0_,N?<JW)CY#]W8+?:X%CD/P\\E[^Y,3N0_S70S[;9#Y#]DV#/:'CGD/XL>H+J$+N0_.%DHD^@CY#_$VGQH2AGD/R0S3C^J#N0_$RU-' @$Y#]$RRH$9/GC/XY%F/N][N,_(09'!Q;DXS^XIN@K;-GC/\\'M+F[ SN,_E<O+TA+$XS^I5W%>8[GC/[?-T16RKN,_^XJ?_?ZCXS]>\"XT:2IGC/Z/F3'&3CN,_ILV1!MN#XS^%AP[?('GC/]7N=?]D;N,_U>YZ;*=CXS^=@- JZ%CC/URH*3\\G3N,_@W(YKF1#XS_Z\\+)\\H#CC/UDX2:_:+>,_%UVO2A,CXS_#<)A32ACC/SA_M\\Y_#>,_U(N_P+,\"XS^NCF,NYO?B/\\MQ5AP7[>(_4PY+CT;BXC_-*?2+=-?B/U=S!!>AS.(_V8 N-<S!XC] S\"3K];;B/[>PF3T>K.(_XF<_,46AXC\\2!\\C*:I;B/XE\\Y0Z/B^(_J(Q) K* XC\\USZ6ITW7B/Y&LJPGT:N(_\\UH,)Q-@XC^IVW@&,57B/U+XH:Q-2N(_&T X'FD_XC_[!.Q?@S3B/_I8;7:<*>(_80ML9K0>XC\\-II<TRQ/B/YEJG^7@\".(_LT\\R?O7]X3]+_OX\"\"?/A/^/.LW@;Z.$_RL;^XRS=X3]>E8U)/=+A/U*1#:Y,Q^$_[K4K%EN\\X3]<H)2&:+'A/^&,] -UIN$_+E3WDH\";X3^9:$@XBY#A/W;3DOB4A>$_2S*!V)UZX3\\FM+W<I6_A/]X6\\@FM9.$_8J3'9+-9X3_[+^?QN$[A/Z(3^;6]0^$_/RVEM<$XX3__VY+UQ\"WA/YO]:'K'(N$_INO-2,D7X3_<>&=ER@SA/W7NVM3* >$_9@G-F\\KVX#_&]^&^R>O@/PU6O4+(X. _<2P\"+,;5X#\\O[%)_P\\K@/^ML44' O^ _\\^F>=KRTX#^B_]LCN*G@/[\"HJ$VSGN _ACND^*V3X#^99VTIJ(C@/[PRHN2A?> _A/;?+IMRX#^07<,,E&?@/_9@Z(*,7. _C47JE811X#]7F6-*?$;@/] P[J1S.^ _7\"0CJFHPX#^4S9I>827@/Z_$[,97&N _Y-VOYTT/X#_\")GK%0P3@/S/'P<ER\\M\\_N1GQE%W<WS\\$F:GU1\\;?/]#V$/4QL-\\_?3U+G!N:WS_-RGKT!(3?/\\A*P ;N;=\\_;K(ZW-97WS^F.@=^OT'?/_]:0?6G*]\\_C\\0\"2Y 5WS_*7&.(>/_>/U(X>;9@Z=X_X958WDC3WC\\>V1,),;W>/WV%NS\\9I]X_(SE>BP&1WC_)IPCUZ7K>/YR5Q8729-X_*]*=1KM.WC]5,YA I#C>/Q^0N7R-(MX_OKL$!'<,WC]S@'K?8/;=/X::&1A+X-T_+;/>MC7*W3^<6\\3$(+3=/]L'PTH,GMT_W G14?B'W3]KC.+BY''=/RV.Z0;26]T_HMS5QK]%W3\\I#Y4KKB_=/P.\"$CZ=&=T_65$W!XT#W3]+5.J/?>W</_87$.%NU]P_AMJ* V'!W#]#ACH 5*O</Z*L_-]'E=P_9(&LJSQ_W#^=U2)L,FG</^ 2-BHI4]P_1C:Z[B ]W#^@RX#\"&2?</XGH6*X3$=P_DB</NP[[VS]?HVWQ\"N7;/]?Q.UH(S]L_1A\\__@:YVS^3J3GF!J/;/VA[ZQH(C=L_7><1I0IWVS\\\\HV>-#F';/RK#I-P32]L_Z;1^FQHUVS\\&.ZC2(A_;/R5HT8HL\"=L_.IJGS#?SVC_.==6@1-W:/T#A A!3Q]H_%0#5(F.QVC\\Y+N[A=)O:/U'[[56(A=H_#R9QAYUOVC]VEQ%_M%G:/T!>9D7-0]H_**H#X^<MVC]2QWI@!!C:/Y096L8B MH_Y!<M'4/LV3_ 1WQM9=;9/WTXS;^)P-D_O'ZB'+\"JV3_=KWN,V)39/U9=U1<#?]D_-Q IQR]IV3^,1.VB7E/9/^%DE;.//=D_LL61 <,GV3_AH$^5^!'9/S@1.7<P_-@_]0VUKVKFV#\\X9B='I]#8/Y*\\\\$7FNM@_FX)NM\">EV#]B]/J::X_8/Q@4[0&R>=@_A:68\\?ICV#^^*4YR1D[8/YO:6HR4.-@_8Z8(2.4BV#]D*YZM. W8/YRS7L6.]]<_2C\"*E^?AUS^@-5TL0\\S7/W#V$(RAMM<_R3_;O@*AUS^M=.[,9HO7/\\F)>;[-==<_(P&HFS=@US_-Y:%LI$K7/ZO'BSD4-=<_(;>&\"H<?US_P0+#G_ G7/]5I(MEU]-8_::KSYO'>UC_IZC89<<G6/_5^^W?SL]8_;R%-\"WF>UC]%\\#/; 8G6/U)HM.^-<]8_*F'/4!U>UC_Z\"((&L$C6/W+@Q1A&,]8_H;:0C]\\=UC_4I-1R? C6/X@*@,H<\\]4_6HE]GL#=U3_L +3V9\\C5/^\"*!ML2L]4_PW944\\&=U3\\=1GEG<XC5/U2H3!\\I<]4_MW:B@N)=U3^*L$J9GTC5/_IV$6M@,]4_,@F__R0>U3]GP!=?[0C5/^H+W)\"Y\\]0_,FW(G(G>U#_^<Y6*7<G4/V:Z]V$UM-0_!^&?*A&?U#\\/BSKL\\(G4/VQ:<*[4=-0__NOE>+Q?U#^MTSM3J$K4/Z>8#D68-=0_AK'V58P@U#^5@(B-A O4/_Q/5/. ]M,_]TWFCH'ATS\\DB<9GALS3/\\+L>(6/M],_[3Q][YRBTS_O$D^MKHW3/YC99<;$>-,_=<DT0M]CTS\\ZY2HH_D[3/PWVLG\\A.M,_\\8<S4$DETS\\.Y@ZA=1#3/R47HWFF^](_Z=E)X=OFTC]\\H5C?%=+2/[R1('M4O=(_TGONNY>HTC^7V@JIWY/2/PG/N4DL?](_T1P[I7UJTC^O)LK\"TU72/Q7KG:DN0=(_F #I8(XLTC^\"DMGO\\A?2/UI=F5U< ](_@JM-L<KNT3^U41?R/=K1/Z^K$B>VQ=$_R9A75S.QT3^->/F)M9S1/V G!\\8\\B-$_)?N*$LEST3_QOXIV6E_1/ZFT!_GP2M$_O(?^H(PVT3_74V=U+2+1/Z6<-7W3#=$_?$M8OW[YT#\\EK+E\"+^70/ZEI/P[ET- _\"8O***\"\\T#\\0<#>98*C0/R;.768FE- _(:T0E_%_T#\\79!XRPFO0/SJ64#Z85] _MR]LPG-#T#^C8C'%5\"_0/\\BC6TT[&] _HZ>A82<'T#^?OFH1,N;//^#JAY(@OL\\_2);K4QJ6SS\\-ZMQB'V[//U]PF<PO1L\\_0@Y5GDL>SS^\\_3GE<O;./\\S':*ZESLX_I#[X!N2FSC^<=_7[+7_./W+%8YJ#5\\X_@[(\\[^0OSC_T^F\\'4@C./]Z&X^_*X,T_M&1SM4^YS3^2P_%DX)'-/W7M)@M]:LT_KT'1M\"5#S3] +Z5NVAO-/V$O346;],P_R;]I16C-S#]179%[0:;,/VU^4/0F?\\P_M8TIO!A8S#]XY)3?%C',/U[% &LA\"LP_&5?1:CCCRS_RGF#K6[S+/YE[_OB+E<L_SY_PG\\ANRS]$C7+L$4C+/T\"/M>IG(<L_C;7@ILKZRC]=SQ M.M3*/Q%F6(FVK<H_.+B_QS^'RC][M$3TU6#*/[+TVAIY.LH_OKAK1RD4RC^XX=6%YNW)/^KL[>&PQ\\D_$N]]9XBAR3]=CT4B;7O)/Y\\\"^AU?5<D_I@9&9EXOR3])W<D&:PG)/\\9'&PN%X\\@_\"X+%?JR]R#\\6/DEMX9?(/SN?'.(C<L@_DC6KZ'-,R#]N^56,T2;(/]5&<]@\\ <@_Y=A.V+7;QS]OQ2F7/+;'/X9X.B#1D,<_\"K\"L?G-KQS]*=Z&](T;'/Z8B+^CA(,<_64MA\":[[QC\\(RS@LB-;&/Y6WJUMPL<8_]UZEHF:,QC_D0@8,:V?&/\\@4I*)]0L8_D;%)<9X=QC^X';>\"S?C%/P*!H>$*U,4_G\"*SF%:OQ3\\098NRL(K%/U?\"OCD99L4_X<?6.)!!Q3^K$E*Z%1W%/WM+I,BI^,0_YR(V;DS4Q#^B366U_:_$/ZN A*B]B\\0_HFW;48QGQ#_XOJ:[:4/$/UD4&/!5'\\0_^OY5^5#[PS\\:_GOA6M?#/TE[FK)SL\\,_\\<:V=IN/PS_B%,LWTFO#/[QXQO\\72,,_C>*,V&PDPS]I&_?+T ##/PW\"TN-#W<(_>D?B*<:YPC^OZ]RG5Y;\"/UBZ;F?X<L(_J(<X<JA/PC\\\"[<_19RS\"/]1%OX\\V\"<(_DJR%M13FP3]D]Y9, L/!/S*U6U[_G\\$_D\"HQ] M]P3_%3FD7*%K!/[;(2M%3-\\$_\">P0*X\\4P3\\IMNLMVO' /X3+_^(TS\\ _@G1F4Y^LP#_5FBV(&8K /Z_&5XJC9\\ _[1O<8CU%P#]R5Z8:YR+ /V7,EKJ@ , _6<,$E]2\\OS]%'F6LAWB_/S>VRL9:-+\\_EZ^:]TWPOC^K02-08:R^/URQF^&4:+X_<TPDO>@DOC_69,;S7.&]/XY+=);QG;T_+4P)MJ9:O3\\=J$EC?!>]/S>2XJYRU+P_^\"EJJ8F1O#\\^=U]CP4Z\\/]!E*NT9#+P_-,$;5Y/)NS\\V,&VQ+8>[/]HP00SI1+L_3A2C=\\4\"NS^R^H8#P\\\"Z/S?/R;_A?KH_+D0QO\"$]NC] SVL(@_NY/WZE$+0%NKD_P[>?SJEXN3\\#KX%G;S>Y/\\[H!XY6]K@_GW-L45^UN#]Y\"]+ B72X/Z<61.O5,[@_***VWT/SMS^>7@:MT[*W/_^<^&&%<K<_HDL[#5DRMS_T\\F2]3O*V/Y^R](!FLK8_C#Y29J!RMC\\IW,U[_#*V/VQ?H,]Z\\[4_*\"CK;QNTM3^*'[AJWG2U/T6U^<W#-;4_,=V*I\\OVM#^V#\"\\%]K>T/YTXDO1\">;0_=-)(@[(ZM#]XQL^^1/RS/TAYC+3YO;,_Z\\7,<=%_LS^$^\\8#S$&S/W';F7?I [,_;Y=,VBG&LC^.S\\XXC8BR/W20^)\\32[(_J%&*'+T-LC_R\\RR[B=\"Q/Y._<8AYD[$_VF+2D(Q6L3^<\\+#@PAFQ/^G>5X0<W; _?07ZAYF@L#^8G++W.62P/]@[A=_])[ _TK&[ELK7KS\\+C2&.X%^O/]!FM;P]Z*X_\\%+!.>)PKC]7&6 <SOFM/[XT?7L!@ZT_^]#4;7P,K3_?R?,)/Y:L/Y&I-V9)(*P_GZ?.F)NJJS\\TJ+>W-36K/\\PZPM@7P*H_P9F.$4)+JC^&J8UWM-:I/X#X \"!O8JD_+[[Z'W+NJ#\\TVUV,O7JH/W;9W7E1!Z@_M.O^_\"V4IS__[14J4R&G/]]E2!7!KJ8_!H.,TG<\\IC]V'ZEU=\\JE/W7 -1+ 6*4_.Y>:NU'GI#\\D@A\"%+':D/V -H8%0!:0_4W0FQ+V4HS\\BHTM?=\"2C/[DWC&5TM*(_JX,TZ;U$HC_ C6'\\4-6A/Q84 ;$M9J$_JHW1&%3WH#^Z+&)%Q(B@/]C@$DA^&J _$K,H9 19GS^M$- HH'V>/S]'P/_/HIT__E(_\"I3(G#^0Q#1I[.Z;/XG'*3W9%9L_4\"A)IEH]FC\\O6U_$<&69/T\"\"VK8;CI@_YW3*G%NWES_,QN\"4,.&6/]W/<+V:\"Y8_/[-O-)HVE3^Q9W07+V*4/RG MX-9CI,_B',4EAF[DC_@)0=K;^B1/R9QKAY;%I$__.[*S-Q$D#^Y@GXAZ>>./\\PY( M%1XT_%Z7(B\\VGBS^PM G8@@F*/T\"ZN2-E;(@_3G_SH730AC_?6Q:%L36%/WE+QOX;G(,_ P7L/[0#@C_%$;5X>FR /XO,)['=K'T_B?)_'\".#>C\\KNVN/Q5MW/R.V;F3%-G0_Z!*7]\"(4<3\\&I?LNO>=K/Y3]C4;QJV4_/8J'LL7I7C]Z^20;)852/^HQ.#@(J#@_#@   #@    &    \"     8         !0    @    !     0    $         \"0    @            B0 X    X    !@    @    &          4    (     0    $    !          D    (            ($ .    .     8    (    !@         %    \"     $    !     0         )    \"            / _#@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag25
    Data		
  }
  DataRecord {
    Tag			    DataTag24
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    /     0         0    #P   &1E;&%Y7V)R86U?:6YI=  .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag23
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag22
    Data		
  }
  DataRecord {
    Tag			    DataTag21
    Data		
  }
  DataRecord {
    Tag			    DataTag20
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag19
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag18
    Data		
  }
  DataRecord {
    Tag			    DataTag17
    Data		
  }
  DataRecord {
    Tag			    DataTag16
    Data		
  }
  DataRecord {
    Tag			    DataTag15
    Data		
  }
  DataRecord {
    Tag			    DataTag14
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    /     0         0    #P   &1E;&%Y7V)R86U?:6YI=  .    .     8    (    !@         %    \"     $    !     0         )    \"            )! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag13
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag12
    Data		
  }
  DataRecord {
    Tag			    DataTag11
    Data		
  }
  DataRecord {
    Tag			    DataTag10
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag9
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag8
    Data		
  }
  DataRecord {
    Tag			    DataTag7
    Data		
  }
  DataRecord {
    Tag			    DataTag6
    Data		
  }
  DataRecord {
    Tag			    DataTag5
    Data		
  }
  DataRecord {
    Tag			    DataTag4
    Data		    "  %)30     .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      "
  }
  DataRecord {
    Tag			    DataTag3
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            #% #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            N0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag2
    Data		
  }
  DataRecord {
    Tag			    DataTag1
    Data		
  }
  DataRecord {
    Tag			    DataTag0
    Data		
  }
}
