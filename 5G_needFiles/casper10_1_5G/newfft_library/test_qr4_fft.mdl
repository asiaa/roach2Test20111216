Model {
  Name			  "test_qr4_fft"
  Version		  7.0
  MdlSubVersion		  0
  GraphicalInterface {
    NumRootInports	    0
    NumRootOutports	    2
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "a_out"
    }
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "sync_out"
    }
    ParameterArgumentNames  ""
    ComputedModelVersion    "1.81"
    NumModelReferences	    0
    NumTestPointedSignals   0
  }
  SavedCharacterEncoding  "ibm-5348_P100-1997"
  SaveDefaultBlockParams  on
  SampleTimeColors	  off
  LibraryLinkDisplay	  "all"
  WideLines		  off
  ShowLineDimensions	  off
  ShowPortDataTypes	  on
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  ShowStorageClass	  off
  ShowTestPointIcons	  on
  ShowViewerIcons	  on
  SortedOrder		  off
  ExecutionContextIcon	  off
  ShowLinearizationAnnotations on
  ScopeRefreshTime	  0.035000
  OverrideScopeRefreshTime on
  DisableAllScopes	  off
  DataTypeOverride	  "UseLocalSettings"
  MinMaxOverflowLogging	  "UseLocalSettings"
  MinMaxOverflowArchiveMode "Overwrite"
  BlockNameDataTip	  off
  BlockParametersDataTip  off
  BlockDescriptionStringDataTip	off
  ToolBar		  on
  StatusBar		  on
  BrowserShowLibraryLinks on
  BrowserLookUnderMasks	  on
  Created		  "Thu Aug 24 19:29:31 2006"
  Creator		  "homin"
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedByFormat	  "%<Auto>"
  LastModifiedBy	  "homin"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Fri Jul 09 11:07:37 2010"
  RTWModifiedTimeStamp	  0
  ModelVersionFormat	  "1.%<AutoIncrement:81>"
  ConfigurationManager	  "None"
  SimulationMode	  "normal"
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  AccelSystemTargetFile	  "accel.tlc"
  AccelTemplateMakefile	  "accel_default_tmf"
  AccelMakeCommand	  "make_rtw"
  TryForcingSFcnDF	  off
  RecordCoverage	  off
  CovPath		  "/"
  CovSaveName		  "covdata"
  CovMetricSettings	  "dw"
  CovNameIncrementing	  off
  CovHtmlReporting	  on
  covSaveCumulativeToWorkspaceVar on
  CovSaveSingleToWorkspaceVar on
  CovCumulativeVarName	  "covCumulativeData"
  CovCumulativeReport	  off
  CovReportOnPause	  on
  ExtModeBatchMode	  off
  ExtModeEnableFloating	  on
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigDurationFloating "auto"
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock on
  BufferReuse		  on
  ShowModelReferenceBlockVersion off
  ShowModelReferenceBlockIO off
  Array {
    Type		    "Handle"
    Dimension		    1
    Simulink.ConfigSet {
      $ObjectID		      1
      Version		      "1.3.0"
      Array {
	Type			"Handle"
	Dimension		7
	Simulink.SolverCC {
	  $ObjectID		  2
	  Version		  "1.3.0"
	  StartTime		  "0.0"
	  StopTime		  "100"
	  AbsTol		  "auto"
	  FixedStep		  "auto"
	  InitialStep		  "auto"
	  MaxNumMinSteps	  "-1"
	  MaxOrder		  5
	  ConsecutiveZCsStepRelTol "10*128*eps"
	  MaxConsecutiveZCs	  "1000"
	  ExtrapolationOrder	  4
	  NumberNewtonIterations  1
	  MaxStep		  "auto"
	  MinStep		  "auto"
	  MaxConsecutiveMinStep	  "1"
	  RelTol		  "1e-3"
	  SolverMode		  "Auto"
	  Solver		  "ode45"
	  SolverName		  "ode45"
	  ZeroCrossControl	  "UseLocalSettings"
	  AlgebraicLoopSolver	  "TrustRegion"
	  SolverResetMethod	  "Fast"
	  PositivePriorityOrder	  off
	  AutoInsertRateTranBlk	  off
	  SampleTimeConstraint	  "Unconstrained"
	  RateTranMode		  "Deterministic"
	}
	Simulink.DataIOCC {
	  $ObjectID		  3
	  Version		  "1.3.0"
	  Decimation		  "1"
	  ExternalInput		  "[t, u]"
	  FinalStateName	  "xFinal"
	  InitialState		  "xInitial"
	  LimitDataPoints	  on
	  MaxDataPoints		  "1000"
	  LoadExternalInput	  off
	  LoadInitialState	  off
	  SaveFinalState	  off
	  SaveFormat		  "Array"
	  SaveOutput		  on
	  SaveState		  off
	  SignalLogging		  on
	  InspectSignalLogs	  off
	  SaveTime		  on
	  StateSaveName		  "xout"
	  TimeSaveName		  "tout"
	  OutputSaveName	  "yout"
	  SignalLoggingName	  "logsout"
	  OutputOption		  "RefineOutputTimes"
	  OutputTimes		  "[]"
	  Refine		  "1"
	}
	Simulink.OptimizationCC {
	  $ObjectID		  4
	  Array {
	    Type		    "Cell"
	    Dimension		    5
	    Cell		    "ZeroExternalMemoryAtStartup"
	    Cell		    "ZeroInternalMemoryAtStartup"
	    Cell		    "InitFltsAndDblsToZero"
	    Cell		    "OptimizeModelRefInitCode"
	    Cell		    "NoFixptDivByZeroProtection"
	    PropName		    "DisabledProps"
	  }
	  Version		  "1.3.0"
	  BlockReduction	  on
	  BooleanDataType	  on
	  ConditionallyExecuteInputs on
	  InlineParams		  off
	  InlineInvariantSignals  off
	  OptimizeBlockIOStorage  on
	  BufferReuse		  on
	  EnforceIntegerDowncast  on
	  ExpressionFolding	  on
	  ExpressionDepthLimit	  2147483647
	  FoldNonRolledExpr	  on
	  LocalBlockOutputs	  on
	  RollThreshold		  5
	  SystemCodeInlineAuto	  off
	  StateBitsets		  off
	  DataBitsets		  off
	  UseTempVars		  off
	  ZeroExternalMemoryAtStartup on
	  ZeroInternalMemoryAtStartup on
	  InitFltsAndDblsToZero	  on
	  NoFixptDivByZeroProtection off
	  EfficientFloat2IntCast  off
	  OptimizeModelRefInitCode off
	  LifeSpan		  "inf"
	  BufferReusableBoundary  on
	  SimCompilerOptimization "Off"
	  AccelVerboseBuild	  off
	}
	Simulink.DebuggingCC {
	  $ObjectID		  5
	  Version		  "1.3.0"
	  RTPrefix		  "error"
	  ConsistencyChecking	  "none"
	  ArrayBoundsChecking	  "none"
	  SignalInfNanChecking	  "none"
	  SignalRangeChecking	  "none"
	  ReadBeforeWriteMsg	  "UseLocalSettings"
	  WriteAfterWriteMsg	  "UseLocalSettings"
	  WriteAfterReadMsg	  "UseLocalSettings"
	  AlgebraicLoopMsg	  "warning"
	  ArtificialAlgebraicLoopMsg "warning"
	  SaveWithDisabledLinksMsg "warning"
	  SaveWithParameterizedLinksMsg	"none"
	  CheckSSInitialOutputMsg on
	  CheckExecutionContextPreStartOutputMsg off
	  CheckExecutionContextRuntimeOutputMsg	off
	  SignalResolutionControl "TryResolveAllWithWarning"
	  BlockPriorityViolationMsg "warning"
	  MinStepSizeMsg	  "warning"
	  TimeAdjustmentMsg	  "none"
	  MaxConsecutiveZCsMsg	  "error"
	  SolverPrmCheckMsg	  "warning"
	  InheritedTsInSrcMsg	  "warning"
	  DiscreteInheritContinuousMsg "warning"
	  MultiTaskDSMMsg	  "warning"
	  MultiTaskCondExecSysMsg "none"
	  MultiTaskRateTransMsg	  "error"
	  SingleTaskRateTransMsg  "none"
	  TasksWithSamePriorityMsg "warning"
	  SigSpecEnsureSampleTimeMsg "warning"
	  CheckMatrixSingularityMsg "none"
	  IntegerOverflowMsg	  "warning"
	  Int32ToFloatConvMsg	  "warning"
	  ParameterDowncastMsg	  "error"
	  ParameterOverflowMsg	  "error"
	  ParameterUnderflowMsg	  "none"
	  ParameterPrecisionLossMsg "warning"
	  ParameterTunabilityLossMsg "warning"
	  UnderSpecifiedDataTypeMsg "none"
	  UnnecessaryDatatypeConvMsg "none"
	  VectorMatrixConversionMsg "none"
	  InvalidFcnCallConnMsg	  "error"
	  FcnCallInpInsideContextMsg "Use local settings"
	  SignalLabelMismatchMsg  "none"
	  UnconnectedInputMsg	  "warning"
	  UnconnectedOutputMsg	  "warning"
	  UnconnectedLineMsg	  "warning"
	  SFcnCompatibilityMsg	  "none"
	  UniqueDataStoreMsg	  "none"
	  BusObjectLabelMismatch  "warning"
	  RootOutportRequireBusObject "warning"
	  AssertControl		  "UseLocalSettings"
	  EnableOverflowDetection off
	  ModelReferenceIOMsg	  "none"
	  ModelReferenceVersionMismatchMessage "none"
	  ModelReferenceIOMismatchMessage "none"
	  ModelReferenceCSMismatchMessage "none"
	  ModelReferenceSimTargetVerbose off
	  UnknownTsInhSupMsg	  "warning"
	  ModelReferenceDataLoggingMessage "warning"
	  ModelReferenceSymbolNameMessage "warning"
	  ModelReferenceExtraNoncontSigs "error"
	  StateNameClashWarn	  "warning"
	  StrictBusMsg		  "None"
	  LoggingUnavailableSignals "error"
	}
	Simulink.HardwareCC {
	  $ObjectID		  6
	  Version		  "1.3.0"
	  ProdBitPerChar	  8
	  ProdBitPerShort	  16
	  ProdBitPerInt		  32
	  ProdBitPerLong	  32
	  ProdIntDivRoundTo	  "Undefined"
	  ProdEndianess		  "Unspecified"
	  ProdWordSize		  32
	  ProdShiftRightIntArith  on
	  ProdHWDeviceType	  "32-bit Generic"
	  TargetBitPerChar	  8
	  TargetBitPerShort	  16
	  TargetBitPerInt	  32
	  TargetBitPerLong	  32
	  TargetShiftRightIntArith on
	  TargetIntDivRoundTo	  "Undefined"
	  TargetEndianess	  "Unspecified"
	  TargetWordSize	  32
	  TargetTypeEmulationWarnSuppressLevel 0
	  TargetPreprocMaxBitsSint 32
	  TargetPreprocMaxBitsUint 32
	  TargetHWDeviceType	  "Specified"
	  TargetUnknown		  off
	  ProdEqTarget		  on
	}
	Simulink.ModelReferenceCC {
	  $ObjectID		  7
	  Version		  "1.3.0"
	  UpdateModelReferenceTargets "IfOutOfDateOrStructuralChange"
	  CheckModelReferenceTargetMessage "error"
	  ModelReferenceNumInstancesAllowed "Multi"
	  ModelReferencePassRootInputsByReference on
	  ModelReferenceMinAlgLoopOccurrences off
	}
	Simulink.RTWCC {
	  $BackupClass		  "Simulink.RTWCC"
	  $ObjectID		  8
	  Array {
	    Type		    "Cell"
	    Dimension		    1
	    Cell		    "IncludeHyperlinkInReport"
	    PropName		    "DisabledProps"
	  }
	  Version		  "1.3.0"
	  SystemTargetFile	  "grt.tlc"
	  GenCodeOnly		  off
	  MakeCommand		  "make_rtw"
	  GenerateMakefile	  on
	  TemplateMakefile	  "grt_default_tmf"
	  GenerateReport	  off
	  SaveLog		  off
	  RTWVerbose		  on
	  RetainRTWFile		  off
	  ProfileTLC		  off
	  TLCDebug		  off
	  TLCCoverage		  off
	  TLCAssert		  off
	  ProcessScriptMode	  "Default"
	  ConfigurationMode	  "Optimized"
	  ConfigAtBuild		  off
	  IncludeHyperlinkInReport off
	  LaunchReport		  off
	  TargetLang		  "C"
	  IncludeBusHierarchyInRTWFileBlockHierarchyMap	off
	  IncludeERTFirstTime	  on
	  GenerateTraceInfo	  off
	  RTWCompilerOptimization "Off"
	  Array {
	    Type		    "Handle"
	    Dimension		    2
	    Simulink.CodeAppCC {
	      $ObjectID		      9
	      Array {
		Type			"Cell"
		Dimension		9
		Cell			"IgnoreCustomStorageClasses"
		Cell			"InsertBlockDesc"
		Cell			"SFDataObjDesc"
		Cell			"SimulinkDataObjDesc"
		Cell			"DefineNamingRule"
		Cell			"SignalNamingRule"
		Cell			"ParamNamingRule"
		Cell			"InlinedPrmAccess"
		Cell			"CustomSymbolStr"
		PropName		"DisabledProps"
	      }
	      Version		      "1.3.0"
	      ForceParamTrailComments off
	      GenerateComments	      on
	      IgnoreCustomStorageClasses on
	      IncHierarchyInIds	      off
	      MaxIdLength	      31
	      PreserveName	      off
	      PreserveNameWithParent  off
	      ShowEliminatedStatement off
	      IncAutoGenComments      off
	      SimulinkDataObjDesc     off
	      SFDataObjDesc	      off
	      IncDataTypeInIds	      off
	      MangleLength	      1
	      CustomSymbolStrGlobalVar "$R$N$M"
	      CustomSymbolStrType     "$N$R$M"
	      CustomSymbolStrField    "$N$M"
	      CustomSymbolStrFcn      "$R$N$M$F"
	      CustomSymbolStrBlkIO    "rtb_$N$M"
	      CustomSymbolStrTmpVar   "$N$M"
	      CustomSymbolStrMacro    "$R$N$M"
	      DefineNamingRule	      "None"
	      ParamNamingRule	      "None"
	      SignalNamingRule	      "None"
	      InsertBlockDesc	      off
	      SimulinkBlockComments   on
	      EnableCustomComments    off
	      InlinedPrmAccess	      "Literals"
	      ReqsInCode	      off
	    }
	    Simulink.GRTTargetCC {
	      $BackupClass	      "Simulink.TargetCC"
	      $ObjectID		      10
	      Array {
		Type			"Cell"
		Dimension		12
		Cell			"IncludeMdlTerminateFcn"
		Cell			"CombineOutputUpdateFcns"
		Cell			"SuppressErrorStatus"
		Cell			"ERTCustomFileBanners"
		Cell			"GenerateSampleERTMain"
		Cell			"MultiInstanceERTCode"
		Cell			"PurelyIntegerCode"
		Cell			"SupportNonFinite"
		Cell			"SupportComplex"
		Cell			"SupportAbsoluteTime"
		Cell			"SupportContinuousTime"
		Cell			"SupportNonInlinedSFcns"
		PropName		"DisabledProps"
	      }
	      Version		      "1.3.0"
	      TargetFcnLib	      "ansi_tfl_tmw.mat"
	      TargetLibSuffix	      ""
	      TargetPreCompLibLocation ""
	      GenFloatMathFcnCalls    "ANSI_C"
	      UtilityFuncGeneration   "Auto"
	      GenerateFullHeader      on
	      GenerateSampleERTMain   off
	      GenerateTestInterfaces  off
	      IsPILTarget	      off
	      ModelReferenceCompliant on
	      CompOptLevelCompliant   on
	      IncludeMdlTerminateFcn  on
	      CombineOutputUpdateFcns off
	      SuppressErrorStatus     off
	      IncludeFileDelimiter    "Auto"
	      ERTCustomFileBanners    off
	      SupportAbsoluteTime     on
	      LogVarNameModifier      "rt_"
	      MatFileLogging	      on
	      MultiInstanceERTCode    off
	      SupportNonFinite	      on
	      SupportComplex	      on
	      PurelyIntegerCode	      off
	      SupportContinuousTime   on
	      SupportNonInlinedSFcns  on
	      EnableShiftOperators    on
	      ParenthesesLevel	      "Nominal"
	      PortableWordSizes	      off
	      ModelStepFunctionPrototypeControlCompliant off
	      ExtMode		      off
	      ExtModeStaticAlloc      off
	      ExtModeTesting	      off
	      ExtModeStaticAllocSize  1000000
	      ExtModeTransport	      0
	      ExtModeMexFile	      "ext_comm"
	      ExtModeIntrfLevel	      "Level1"
	      RTWCAPISignals	      off
	      RTWCAPIParams	      off
	      RTWCAPIStates	      off
	      GenerateASAP2	      off
	    }
	    PropName		    "Components"
	  }
	}
	PropName		"Components"
      }
      Name		      "Configuration"
      CurrentDlgPage	      "Data Import//Export"
    }
    PropName		    "ConfigurationSets"
  }
  Simulink.ConfigSet {
    $PropName		    "ActiveConfigurationSet"
    $ObjectID		    1
  }
  BlockDefaults {
    Orientation		    "right"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
  }
  BlockParameterDefaults {
    Block {
      BlockType		      Clock
      DisplayTime	      off
    }
    Block {
      BlockType		      Fcn
      Expr		      "sin(u[1])"
      SampleTime	      "-1"
    }
    Block {
      BlockType		      SignalConversion
      OverrideOpt	      off
    }
    Block {
      BlockType		      Inport
      Port		      "1"
      UseBusObject	      off
      BusObject		      "BusObject"
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      SampleTime	      "-1"
      OutMin		      "[]"
      OutMax		      "[]"
      DataType		      "auto"
      OutDataType	      "fixdt(1,16,0)"
      OutScaling	      "[]"
      SignalType	      "auto"
      SamplingMode	      "auto"
      LatchByDelayingOutsideSignal off
      LatchByCopyingInsideSignal off
      Interpolate	      on
    }
    Block {
      BlockType		      SignalViewerScope
      Floating		      off
      ModelBased	      off
      TickLabels	      "OneTimeTick"
      ZoomMode		      "on"
      Grid		      "on"
      TimeRange		      "auto"
      YMin		      "-5"
      YMax		      "5"
      SaveToWorkspace	      off
      SaveName		      "ScopeData"
      LimitDataPoints	      on
      MaxDataPoints	      "5000"
      Decimation	      "1"
      SampleInput	      off
      SampleTime	      "0"
      Disabled		      off
      ScrollMode	      on
    }
    Block {
      BlockType		      Outport
      Port		      "1"
      UseBusObject	      off
      BusObject		      "BusObject"
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      SampleTime	      "-1"
      OutMin		      "[]"
      OutMax		      "[]"
      DataType		      "auto"
      OutDataType	      "fixdt(1,16,0)"
      OutScaling	      "[]"
      SignalType	      "auto"
      SamplingMode	      "auto"
      OutputWhenDisabled      "held"
      InitialOutput	      "[]"
    }
    Block {
      BlockType		      RealImagToComplex
      Input		      "Real and imag"
      ConstantPart	      "0"
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Scope
      ModelBased	      off
      TickLabels	      "OneTimeTick"
      ZoomMode		      "on"
      Grid		      "on"
      TimeRange		      "auto"
      YMin		      "-5"
      YMax		      "5"
      SaveToWorkspace	      off
      SaveName		      "ScopeData"
      LimitDataPoints	      on
      MaxDataPoints	      "5000"
      Decimation	      "1"
      SampleInput	      off
      SampleTime	      "-1"
    }
    Block {
      BlockType		      "S-Function"
      FunctionName	      "system"
      SFunctionModules	      "''"
      PortCounts	      "[]"
    }
    Block {
      BlockType		      SubSystem
      ShowPortLabels	      "FromPortIcon"
      Permissions	      "ReadWrite"
      PermitHierarchicalResolution "All"
      TreatAsAtomicUnit	      off
      SystemSampleTime	      "-1"
      RTWFcnNameOpts	      "Auto"
      RTWFileNameOpts	      "Auto"
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      SimViewingDevice	      off
      DataTypeOverride	      "UseLocalSettings"
      MinMaxOverflowLogging   "UseLocalSettings"
    }
    Block {
      BlockType		      Sum
      IconShape		      "rectangular"
      Inputs		      "++"
      CollapseMode	      "All dimensions"
      CollapseDim	      "1"
      InputSameDT	      on
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeMode	      "Same as first input"
      OutDataType	      "fixdt(1,16,0)"
      OutScaling	      "[]"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Terminator
    }
    Block {
      BlockType		      Constant
      Value		      "1"
      VectorParams1D	      on
      SamplingMode	      "Sample based"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeMode	      "Inherit from 'Constant value'"
      OutDataType	      "fixdt(1,16,0)"
      ConRadixGroup	      "Use specified scaling"
      OutScaling	      "[]"
      SampleTime	      "inf"
      FramePeriod	      "inf"
    }
    Block {
      BlockType		      DiscretePulseGenerator
      PulseType		      "Sample based"
      TimeSource	      "Use simulation time"
      Amplitude		      "1"
      Period		      "2"
      PulseWidth	      "1"
      PhaseDelay	      "0"
      SampleTime	      "1"
      VectorParams1D	      on
    }
    Block {
      BlockType		      Lookup
      InputValues	      "[-4:5]"
      Table		      " rand(1,10)-0.5"
      LookUpMeth	      "Interpolation-Extrapolation"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeMode	      "Same as input"
      OutDataType	      "fixdt(1,16,0)"
      OutScaling	      "[]"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
      SampleTime	      "-1"
      LUTDesignTableMode      "Redesign Table"
      LUTDesignDataSource     "Block Dialog"
      LUTDesignFunctionName   "sqrt(x)"
      LUTDesignUseExistingBP  on
      LUTDesignRelError	      "0.01"
      LUTDesignAbsError	      "1e-6"
    }
  }
  AnnotationDefaults {
    HorizontalAlignment	    "center"
    VerticalAlignment	    "middle"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    UseDisplayTextAsClickCallback off
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  System {
    Name		    "test_qr4_fft"
    Location		    [335, 262, 1707, 804]
    Open		    on
    ModelBrowserVisibility  on
    ModelBrowserWidth	    212
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "usletter"
    PaperUnits		    "inches"
    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
    TiledPageScale	    1
    ShowPageBoundaries	    off
    ZoomFactor		    "100"
    ReportName		    "simulink-default.rpt"
    Block {
      BlockType		      Reference
      Name		      " System Generator"
      Tag		      "genX"
      Ports		      []
      Position		      [47, 228, 98, 278]
      ShowName		      off
      AttributesFormatString  "System\\nGenerator"
      UserDataPersistent      on
      UserData		      "DataTag0"
      SourceBlock	      "xbsIndex_r4/ System Generator"
      SourceType	      "Xilinx System Generator Block"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      infoedit		      " System Generator"
      xilinxfamily	      "Virtex2"
      part		      "xc2v1000"
      speed		      "-4"
      package		      "bg575"
      synthesis_tool	      "XST"
      clock_wrapper	      "Clock Enables"
      directory		      "./netlist"
      testbench		      off
      simulink_period	      "1"
      sysclk_period	      "100"
      dcm_input_clock_period  "100"
      incr_netlist	      off
      trim_vbits	      "Everywhere in SubSystem"
      dbl_ovrd		      "According to Block Masks"
      core_generation	      "According to Block Masks"
      run_coregen	      off
      deprecated_control      off
      eval_field	      "0"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "sysgen"
      block_version	      "10.1.3"
      sg_icon_stat	      "51,50,-1,-1,red,beige,0,07734,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 51 51 0 ],[0 0 50 50 ],[0.93 0.92 0.86]);\npatch([12 4 16 4 12 25 29 33 47 36 25 17 29 17 25 36 47 33 29 25 12 ],[5 13 25 37 45 45 41 45 45 34 45 37 25 13 5 16 5 5 9 5 5 ],[0.6 0.2 0.25]);\nplot([0 51 51 0 0 ],[0 0 50 50 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant1"
      Position		      [315, 198, 330, 212]
      ShowName		      off
      Value		      "0"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant2"
      Position		      [315, 158, 330, 172]
      ShowName		      off
      Value		      "0"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant3"
      Position		      [315, 238, 330, 252]
      ShowName		      off
      Value		      "0"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
    }
    Block {
      BlockType		      Reference
      Name		      "Constant4"
      Ports		      [0, 1]
      Position		      [320, 303, 335, 317]
      ShowName		      off
      SourceBlock	      "xbsIndex_r4/Constant"
      SourceType	      "Xilinx Constant Block Block"
      arith_type	      "Unsigned"
      const		      "0"
      n_bits		      "16"
      bin_pt		      "0"
      explicit_period	      off
      period		      "1"
      dsp48_infoedit	      "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
      equ		      "P=C"
      opselect		      "C"
      inp2		      "PCIN>>17"
      opr		      "+"
      inp1		      "P"
      carry		      "CIN"
      dbl_ovrd		      off
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "constant"
      block_version	      "10.1.3"
      sg_icon_stat	      "15,14,1,1,white,blue,0,72d575a1,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'0');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant6"
      Position		      [1050, 288, 1065, 302]
      ShowName		      off
      Value		      "0"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
    }
    Block {
      BlockType		      Reference
      Name		      "Delay"
      Ports		      [1, 1]
      Position		      [320, 115, 370, 135]
      SourceBlock	      "xbsIndex_r4/Delay"
      SourceType	      "Xilinx Delay Block"
      infoedit		      "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
      en		      off
      latency		      "2"
      dbl_ovrd		      off
      reg_retiming	      off
      xl_use_area	      off
      xl_area		      "[8 16 0 16 0 0 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "delay"
      block_version	      "10.1.3"
      sg_icon_stat	      "50,20,1,1,white,blue,0,0a7a6cf1,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-2}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "Gateway In"
      Ports		      [1, 1]
      Position		      [170, 114, 225, 136]
      SourceBlock	      "xbsIndex_r4/Gateway In"
      SourceType	      "Xilinx Gateway In Block"
      infoedit		      "Gateway in block.  Converts inputs of type Simulink integer, double and fixed point to  Xilinx fixed point type.<P><P>Hardware notes:  In hardware these blocks become top level input ports."
      arith_type	      "Unsigned"
      n_bits		      "16"
      bin_pt		      "0"
      quantization	      "Truncate"
      overflow		      "Wrap"
      period		      "1"
      dbl_ovrd		      off
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0 0 0 0 16 0 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayin"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,bc55d28f,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 20 20 ],[0.95 0.93 0.65]);\npatch([27 24 29 24 27 32 33 34 40 36 32 29 34 29 32 36 40 34 33 32 27 ],[2 5 10 15 18 18 17 18 18 14 18 15 10 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 20 20 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'\\fontsize{11pt}\\bf In ','texmode','on');\ncolor('black');port_label('output',1,' ');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "Gateway In1"
      Ports		      [1, 1]
      Position		      [345, 154, 400, 176]
      SourceBlock	      "xbsIndex_r4/Gateway In"
      SourceType	      "Xilinx Gateway In Block"
      infoedit		      "Gateway in block.  Converts inputs of type Simulink integer, double and fixed point to  Xilinx fixed point type.<P><P>Hardware notes:  In hardware these blocks become top level input ports."
      arith_type	      "Unsigned"
      n_bits		      "16"
      bin_pt		      "0"
      quantization	      "Truncate"
      overflow		      "Wrap"
      period		      "1"
      dbl_ovrd		      off
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0 0 0 0 16 0 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayin"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,bc55d28f,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 20 20 ],[0.95 0.93 0.65]);\npatch([27 24 29 24 27 32 33 34 40 36 32 29 34 29 32 36 40 34 33 32 27 ],[2 5 10 15 18 18 17 18 18 14 18 15 10 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 20 20 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'\\fontsize{11pt}\\bf In ','texmode','on');\ncolor('black');port_label('output',1,' ');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "Gateway In2"
      Ports		      [1, 1]
      Position		      [345, 194, 400, 216]
      SourceBlock	      "xbsIndex_r4/Gateway In"
      SourceType	      "Xilinx Gateway In Block"
      infoedit		      "Gateway in block.  Converts inputs of type Simulink integer, double and fixed point to  Xilinx fixed point type.<P><P>Hardware notes:  In hardware these blocks become top level input ports."
      arith_type	      "Unsigned"
      n_bits		      "16"
      bin_pt		      "0"
      quantization	      "Truncate"
      overflow		      "Wrap"
      period		      "1"
      dbl_ovrd		      off
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0 0 0 0 16 0 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayin"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,bc55d28f,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 20 20 ],[0.95 0.93 0.65]);\npatch([27 24 29 24 27 32 33 34 40 36 32 29 34 29 32 36 40 34 33 32 27 ],[2 5 10 15 18 18 17 18 18 14 18 15 10 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 20 20 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'\\fontsize{11pt}\\bf In ','texmode','on');\ncolor('black');port_label('output',1,' ');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "Gateway In3"
      Ports		      [1, 1]
      Position		      [345, 234, 400, 256]
      SourceBlock	      "xbsIndex_r4/Gateway In"
      SourceType	      "Xilinx Gateway In Block"
      infoedit		      "Gateway in block.  Converts inputs of type Simulink integer, double and fixed point to  Xilinx fixed point type.<P><P>Hardware notes:  In hardware these blocks become top level input ports."
      arith_type	      "Unsigned"
      n_bits		      "16"
      bin_pt		      "0"
      quantization	      "Truncate"
      overflow		      "Wrap"
      period		      "1"
      dbl_ovrd		      off
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0 0 0 0 16 0 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayin"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,bc55d28f,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 65 65 0 ],[0 0 20 20 ],[0.95 0.93 0.65]);\npatch([27 24 29 24 27 32 33 34 40 36 32 29 34 29 32 36 40 34 33 32 27 ],[2 5 10 15 18 18 17 18 18 14 18 15 10 5 2 6 2 2 3 2 2 ],[0.98 0.96 0.92]);\nplot([0 65 65 0 0 ],[0 0 20 20 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'\\fontsize{11pt}\\bf In ','texmode','on');\ncolor('black');port_label('output',1,' ');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "Gateway Out"
      Ports		      [1, 1]
      Position		      [785, 64, 840, 86]
      SourceBlock	      "xbsIndex_r4/Gateway Out"
      SourceType	      "Xilinx Gateway Out Block"
      infoedit		      "Gateway out block.  Converts Xilinx fixed point inputs into ouputs of type Simulink integer, double, or fixed point.<P><P>Hardware notes:  In hardware these blocks become top level output ports or are discarded, depending on how they are configured."
      hdl_port		      on
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0 0 0 0 11 0 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayout"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,38220381,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 22 22 ],[0.95 0.93 0.65]);\npatch([22 18 23 18 22 28 30 32 38 33 28 25 31 25 28 33 38 32 30 28 22 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,' ');\ncolor('black');port_label('output',1,'\\fontsize{11pt}\\bf Out ','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "Gateway Out1"
      Ports		      [1, 1]
      Position		      [785, 104, 840, 126]
      SourceBlock	      "xbsIndex_r4/Gateway Out"
      SourceType	      "Xilinx Gateway Out Block"
      infoedit		      "Gateway out block.  Converts Xilinx fixed point inputs into ouputs of type Simulink integer, double, or fixed point.<P><P>Hardware notes:  In hardware these blocks become top level output ports or are discarded, depending on how they are configured."
      hdl_port		      on
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0 0 0 0 11 0 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayout"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,38220381,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 22 22 ],[0.95 0.93 0.65]);\npatch([22 18 23 18 22 28 30 32 38 33 28 25 31 25 28 33 38 32 30 28 22 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,' ');\ncolor('black');port_label('output',1,'\\fontsize{11pt}\\bf Out ','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "Gateway Out2"
      Ports		      [1, 1]
      Position		      [785, 144, 840, 166]
      SourceBlock	      "xbsIndex_r4/Gateway Out"
      SourceType	      "Xilinx Gateway Out Block"
      infoedit		      "Gateway out block.  Converts Xilinx fixed point inputs into ouputs of type Simulink integer, double, or fixed point.<P><P>Hardware notes:  In hardware these blocks become top level output ports or are discarded, depending on how they are configured."
      hdl_port		      on
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0 0 0 0 11 0 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayout"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,38220381,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 22 22 ],[0.95 0.93 0.65]);\npatch([22 18 23 18 22 28 30 32 38 33 28 25 31 25 28 33 38 32 30 28 22 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,' ');\ncolor('black');port_label('output',1,'\\fontsize{11pt}\\bf Out ','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "Gateway Out3"
      Ports		      [1, 1]
      Position		      [785, 184, 840, 206]
      SourceBlock	      "xbsIndex_r4/Gateway Out"
      SourceType	      "Xilinx Gateway Out Block"
      infoedit		      "Gateway out block.  Converts Xilinx fixed point inputs into ouputs of type Simulink integer, double, or fixed point.<P><P>Hardware notes:  In hardware these blocks become top level output ports or are discarded, depending on how they are configured."
      hdl_port		      on
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0 0 0 0 11 0 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayout"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,38220381,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 22 22 ],[0.95 0.93 0.65]);\npatch([22 18 23 18 22 28 30 32 38 33 28 25 31 25 28 33 38 32 30 28 22 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,' ');\ncolor('black');port_label('output',1,'\\fontsize{11pt}\\bf Out ','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "Gateway Out4"
      Ports		      [1, 1]
      Position		      [785, 224, 840, 246]
      SourceBlock	      "xbsIndex_r4/Gateway Out"
      SourceType	      "Xilinx Gateway Out Block"
      infoedit		      "Gateway out block.  Converts Xilinx fixed point inputs into ouputs of type Simulink integer, double, or fixed point.<P><P>Hardware notes:  In hardware these blocks become top level output ports or are discarded, depending on how they are configured."
      hdl_port		      on
      timing_constraint	      "None"
      locs_specified	      off
      LOCs		      "{}"
      xl_use_area	      off
      xl_area		      "[0 0 0 0 1 0 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "gatewayout"
      block_version	      "10.1.3"
      sg_icon_stat	      "55,22,1,1,white,yellow,0,38220381,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 22 22 ],[0.95 0.93 0.65]);\npatch([22 18 23 18 22 28 30 32 38 33 28 25 31 25 28 33 38 32 30 28 22 ],[2 6 11 16 20 20 18 20 20 15 20 17 11 5 2 7 2 2 4 2 2 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 22 22 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,' ');\ncolor('black');port_label('output',1,'\\fontsize{11pt}\\bf Out ','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      RealImagToComplex
      Name		      "Real-Imag to\nComplex"
      Ports		      [2, 1]
      Position		      [1075, 13, 1105, 42]
    }
    Block {
      BlockType		      RealImagToComplex
      Name		      "Real-Imag to\nComplex1"
      Ports		      [2, 1]
      Position		      [1080, 273, 1110, 302]
    }
    Block {
      BlockType		      Reference
      Name		      "Relational"
      Ports		      [2, 1]
      Position		      [350, 278, 395, 322]
      SourceBlock	      "xbsIndex_r4/Relational"
      SourceType	      "Xilinx Arithmetic Relational Operator Block"
      mode		      "a!=b"
      en		      off
      latency		      "0"
      dbl_ovrd		      off
      xl_use_area	      off
      xl_area		      "[4 0 0 8 0 0 0]"
      has_advanced_control    "0"
      sggui_pos		      "-1,-1,-1,-1"
      block_type	      "relational"
      block_version	      "10.1.3"
      sg_icon_stat	      "45,44,1,1,white,blue,0,1d65505e,right"
      sg_mask_display	      "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');disp('\\newline\\bf{a!=b}\\newlinez^{-0}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
    }
    Block {
      BlockType		      Reference
      Name		      "Repeating\nSequence"
      Ports		      [0, 1]
      Position		      [70, 110, 100, 140]
      SourceBlock	      "simulink/Sources/Repeating\nSequence"
      SourceType	      "Repeating table"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      rep_seq_t		      "[0:16]"
      rep_seq_y		      "[1 zeros(1,15) 1]*hex2dec('7f00')"
    }
    Block {
      BlockType		      Scope
      Name		      "Scope"
      Ports		      [5]
      Position		      [925, 54, 995, 256]
      Floating		      off
      Location		      [57, 146, 1464, 1077]
      Open		      off
      NumInputPorts	      "5"
      ZoomMode		      "xonly"
      List {
	ListType		AxesTitles
	axes1			"%<SignalLabel>"
	axes2			"%<SignalLabel>"
	axes3			"%<SignalLabel>"
	axes4			"%<SignalLabel>"
	axes5			"%<SignalLabel>"
      }
      YMin		      "-5~-5~-5~-5~-5"
      YMax		      "5~5~5~5~5"
      DataFormat	      "StructureWithTime"
      SampleTime	      "0"
    }
    Block {
      BlockType		      Terminator
      Name		      "Terminator"
      Position		      [600, 175, 610, 185]
      ShowName		      off
    }
    Block {
      BlockType		      Terminator
      Name		      "Terminator2"
      Position		      [600, 190, 610, 200]
      ShowName		      off
    }
    Block {
      BlockType		      SubSystem
      Name		      "c_to_ri"
      Ports		      [1, 2]
      Position		      [700, 64, 740, 106]
      BackgroundColor	      "gray"
      AttributesFormatString  "12_7 r/i"
      UserDataPersistent      on
      UserData		      "DataTag1"
      MinAlgLoopOccurrences   off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      MaskType		      "Complex to Real-Imag"
      MaskDescription	      "Outputs real and imaginary components of a complex input."
      MaskHelp		      "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
      MaskPromptString	      "Bit Width|Binary Point"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "n_bits=@1;bin_pt=@2;"
      MaskInitialization      "c_to_ri_init(gcb,n_bits,bin_pt);"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "12|7"
      MaskTabNameString	      ","
      System {
	Name			"c_to_ri"
	Location		[567, 157, 837, 310]
	Open			off
	ModelBrowserVisibility	on
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "c"
	  Position		  [20, 63, 50, 77]
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Reference
	  Name			  "force_im"
	  Ports			  [1, 1]
	  Position		  [150, 79, 190, 111]
	  SourceBlock		  "xbsIndex_r4/Reinterpret"
	  SourceType		  "Xilinx Type Reinterpreter Block"
	  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
	  force_arith_type	  on
	  arith_type		  "Signed  (2's comp)"
	  force_bin_pt		  on
	  bin_pt		  "7"
	  has_advanced_control	  "0"
	  sggui_pos		  "-1,-1,-1,-1"
	  block_type		  "reinterpret"
	  block_version		  "10.1.3"
	  sg_icon_stat		  "40,32,1,1,white,blue,0,8982c1db,right"
	  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
	}
	Block {
	  BlockType		  Reference
	  Name			  "force_re"
	  Ports			  [1, 1]
	  Position		  [150, 29, 190, 61]
	  SourceBlock		  "xbsIndex_r4/Reinterpret"
	  SourceType		  "Xilinx Type Reinterpreter Block"
	  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
	  force_arith_type	  on
	  arith_type		  "Signed  (2's comp)"
	  force_bin_pt		  on
	  bin_pt		  "7"
	  has_advanced_control	  "0"
	  sggui_pos		  "-1,-1,-1,-1"
	  block_type		  "reinterpret"
	  block_version		  "10.1.3"
	  sg_icon_stat		  "40,32,1,1,white,blue,0,8982c1db,right"
	  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
	}
	Block {
	  BlockType		  Reference
	  Name			  "slice_im"
	  Ports			  [1, 1]
	  Position		  [80, 81, 125, 109]
	  SourceBlock		  "xbsIndex_r4/Slice"
	  SourceType		  "Xilinx Bit Slice Extractor Block"
	  infoedit		  "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
	  nbits			  "12"
	  boolean_output	  off
	  mode			  "Lower Bit Location + Width"
	  bit1			  "0"
	  base1			  "MSB of Input"
	  bit0			  "0"
	  base0			  "LSB of Input"
	  dbl_ovrd		  off
	  has_advanced_control	  "0"
	  sggui_pos		  "-1,-1,-1,-1"
	  block_type		  "slice"
	  block_version		  "10.1.3"
	  sg_icon_stat		  "45,28,1,1,white,blue,0,b1026674,right"
	  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
	}
	Block {
	  BlockType		  Reference
	  Name			  "slice_re"
	  Ports			  [1, 1]
	  Position		  [80, 31, 125, 59]
	  SourceBlock		  "xbsIndex_r4/Slice"
	  SourceType		  "Xilinx Bit Slice Extractor Block"
	  infoedit		  "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
	  nbits			  "12"
	  boolean_output	  off
	  mode			  "Upper Bit Location + Width"
	  bit1			  "0"
	  base1			  "MSB of Input"
	  bit0			  "0"
	  base0			  "LSB of Input"
	  dbl_ovrd		  off
	  has_advanced_control	  "0"
	  sggui_pos		  "-1,-1,-1,-1"
	  block_type		  "slice"
	  block_version		  "10.1.3"
	  sg_icon_stat		  "45,28,1,1,white,blue,0,b1026674,right"
	  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
	}
	Block {
	  BlockType		  Outport
	  Name			  "re"
	  Position		  [215, 38, 245, 52]
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "im"
	  Position		  [215, 88, 245, 102]
	  Port			  "2"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Line {
	  SrcBlock		  "slice_re"
	  SrcPort		  1
	  DstBlock		  "force_re"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "slice_im"
	  SrcPort		  1
	  DstBlock		  "force_im"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "force_re"
	  SrcPort		  1
	  DstBlock		  "re"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "force_im"
	  SrcPort		  1
	  DstBlock		  "im"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "c"
	  SrcPort		  1
	  Points		  [5, 0]
	  Branch {
	    Points		    [0, -25]
	    DstBlock		    "slice_re"
	    DstPort		    1
	  }
	  Branch {
	    Points		    [0, 25]
	    DstBlock		    "slice_im"
	    DstPort		    1
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "c_to_ri1"
      Ports		      [1, 2]
      Position		      [700, 144, 740, 186]
      BackgroundColor	      "gray"
      AttributesFormatString  "12_7 r/i"
      UserDataPersistent      on
      UserData		      "DataTag2"
      MinAlgLoopOccurrences   off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      MaskType		      "Complex to Real-Imag"
      MaskDescription	      "Outputs real and imaginary components of a complex input."
      MaskHelp		      "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
      MaskPromptString	      "Bit Width|Binary Point"
      MaskStyleString	      "edit,edit"
      MaskTunableValueString  "on,on"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,on"
      MaskToolTipString	      "on,on"
      MaskVarAliasString      ","
      MaskVariables	      "n_bits=@1;bin_pt=@2;"
      MaskInitialization      "c_to_ri_init(gcb,n_bits,bin_pt);"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "12|7"
      MaskTabNameString	      ","
      System {
	Name			"c_to_ri1"
	Location		[567, 157, 837, 310]
	Open			off
	ModelBrowserVisibility	on
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "c"
	  Position		  [20, 63, 50, 77]
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Reference
	  Name			  "force_im"
	  Ports			  [1, 1]
	  Position		  [150, 79, 190, 111]
	  SourceBlock		  "xbsIndex_r4/Reinterpret"
	  SourceType		  "Xilinx Type Reinterpreter Block"
	  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
	  force_arith_type	  on
	  arith_type		  "Signed  (2's comp)"
	  force_bin_pt		  on
	  bin_pt		  "7"
	  has_advanced_control	  "0"
	  sggui_pos		  "-1,-1,-1,-1"
	  block_type		  "reinterpret"
	  block_version		  "10.1.3"
	  sg_icon_stat		  "40,32,1,1,white,blue,0,8982c1db,right"
	  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
	}
	Block {
	  BlockType		  Reference
	  Name			  "force_re"
	  Ports			  [1, 1]
	  Position		  [150, 29, 190, 61]
	  SourceBlock		  "xbsIndex_r4/Reinterpret"
	  SourceType		  "Xilinx Type Reinterpreter Block"
	  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
	  force_arith_type	  on
	  arith_type		  "Signed  (2's comp)"
	  force_bin_pt		  on
	  bin_pt		  "7"
	  has_advanced_control	  "0"
	  sggui_pos		  "-1,-1,-1,-1"
	  block_type		  "reinterpret"
	  block_version		  "10.1.3"
	  sg_icon_stat		  "40,32,1,1,white,blue,0,8982c1db,right"
	  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
	}
	Block {
	  BlockType		  Reference
	  Name			  "slice_im"
	  Ports			  [1, 1]
	  Position		  [80, 81, 125, 109]
	  SourceBlock		  "xbsIndex_r4/Slice"
	  SourceType		  "Xilinx Bit Slice Extractor Block"
	  infoedit		  "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
	  nbits			  "12"
	  boolean_output	  off
	  mode			  "Lower Bit Location + Width"
	  bit1			  "0"
	  base1			  "MSB of Input"
	  bit0			  "0"
	  base0			  "LSB of Input"
	  dbl_ovrd		  off
	  has_advanced_control	  "0"
	  sggui_pos		  "-1,-1,-1,-1"
	  block_type		  "slice"
	  block_version		  "10.1.3"
	  sg_icon_stat		  "45,28,1,1,white,blue,0,b1026674,right"
	  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
	}
	Block {
	  BlockType		  Reference
	  Name			  "slice_re"
	  Ports			  [1, 1]
	  Position		  [80, 31, 125, 59]
	  SourceBlock		  "xbsIndex_r4/Slice"
	  SourceType		  "Xilinx Bit Slice Extractor Block"
	  infoedit		  "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
	  nbits			  "12"
	  boolean_output	  off
	  mode			  "Upper Bit Location + Width"
	  bit1			  "0"
	  base1			  "MSB of Input"
	  bit0			  "0"
	  base0			  "LSB of Input"
	  dbl_ovrd		  off
	  has_advanced_control	  "0"
	  sggui_pos		  "-1,-1,-1,-1"
	  block_type		  "slice"
	  block_version		  "10.1.3"
	  sg_icon_stat		  "45,28,1,1,white,blue,0,b1026674,right"
	  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
	}
	Block {
	  BlockType		  Outport
	  Name			  "re"
	  Position		  [215, 38, 245, 52]
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "im"
	  Position		  [215, 88, 245, 102]
	  Port			  "2"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Line {
	  SrcBlock		  "c"
	  SrcPort		  1
	  Points		  [5, 0]
	  Branch {
	    Points		    [0, 25]
	    DstBlock		    "slice_im"
	    DstPort		    1
	  }
	  Branch {
	    Points		    [0, -25]
	    DstBlock		    "slice_re"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "force_im"
	  SrcPort		  1
	  DstBlock		  "im"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "force_re"
	  SrcPort		  1
	  DstBlock		  "re"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "slice_im"
	  SrcPort		  1
	  DstBlock		  "force_im"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "slice_re"
	  SrcPort		  1
	  DstBlock		  "force_re"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "r4_dit_fft"
      Ports		      [5, 5]
      Position		      [495, 141, 585, 219]
      BackgroundColor	      "[0.501961, 1.000000, 0.501961]"
      AttributesFormatString  "16 points\n8_7 r/i in\n9_7 twiddles"
      AncestorBlock	      "newfft_library/FFT/r4_dit_fft"
      UserDataPersistent      on
      UserData		      "DataTag3"
      MinAlgLoopOccurrences   off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      MaskType		      "Quadplex Radix-4 DIT FFT"
      MaskDescription	      "A quadplex radix-4 decimation-in-time Fast Fourier Transform."
      MaskHelp		      "<pre>\nDescription::\n\nA quadplex radix-4 decimation-in-time Fast Fourier Transform.\n\nThe four inputs to the quadplex FFT are independent complex signals (e.g. A, B, C, D).\n\nWithout an output commutator, the four outputs of the FFT are commuted such that the\na_out signal is really the first quarter of A's transform followed by the first quarter of B's\ntransform, the first quarter of C's transform and the first quarter of D's transform.\nb_out is really the seconds quarter of A's transform followed by the second quarter of\nB's transform and so on for the rest of b_out as well as c_out and d_out.\n\nIf it is desired to have the four quarters of A's transform follow each other on the\nsame path (and so on for the transforms of B, C, and D), then be sure to check the\n\"Output Commutator\" checkbox.  This will result in the four quarters of A's transform\n(or B's, C's, D's) being in sequential order.  Including the output commutator uses additional\nresources.\n\nIf the Normal Ouput Order option is chosen, the output will be in normal order (though still in\ncommuted quarters if no output commutator is used).  If the \"Bit Reversed\" Output Order\"\noption is selected, the output quarters (either commuted or not) will each be in bit reversed\norder (i.e. each quarter of each transform will be in bit reversed output order).   Normal output\nis easier for humans to work with (especially for testing), but it uses additional resources.\nBit reversed output is the implementation's inhernet output order so that option uses no\nadditional resources.\n\n\nThe number of bits for each real and imaginary component grows by two through this stage.\nIf the bit width grows to exceed 17 bits (when using three real multiplies per complex multiply;\n18 bits when using 4 real multiplies per complex multiply), then subsequent stages will\ncomsume more FPGA resources.  A future version will provide an option to limit bit growth.\n\nThe number of bits for each real and imaginary component grows by two through each stage.\nIf a stage's input bit width is 17 or less, three embedded multipliers will be used per complex multiply.\nIf a stage's input bit width is 18, four embedded multipliers will be used per complex multiply.\nIf a stage's input bit width exceeds 18, then substantially more embedded multipliers will be used\nper complex multiply.  Enabling \"shifting\" in some (or all) stages can limit the bit growth\nto prevent this.  See the Shifting Schedule parameter for more info.\n\n\nMask Parameters::\n\nTotal Stages (n_stages):  The number of total stages in the FFT.\nThe FFT will have 4^n_stages points.\n\nNumber of Bits In (n_bits): Specifies the width of the real/imaginary components of ports\na_in and b_in.  Assumed equal for both components.  The output bit width will be\nn_bits+2*n_stages (assuming sum(shifts)==0).\n\nBinary Point In/Out (bin_pt): Specifies the binary point position of the real/imaginary\ncomponents of ports a_in, b_in, c_in, and d_in.  Assumed equal for both components.\n\nShifting Schedule (shifts): A vector specifying how many bits to shift by at each stage.\nMissing values are assumed to be zero; extra values are ignored.\n\nNumber of Stages Using BRAM for Biplex Commutators (commutator_bram): Number of stages\nthat will use BRAM for commutator memory.  Remaining stages will use SLR16 elements (slices).\n\nNumber of Stages Using BRAM for Twiddle Coefficients (twiddle_bram): Number of stages that\nwill use BRAM for twiddle coeeficient storage.  Remaining stages will use distributed memory\n(slices).\n\nTwiddle Coefficient Bitwidth (n_bits_w): Specifies the width of the real/imaginary\ncomponents of the twiddle coefficients.  Assumed equal for both components.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n\nCommute Output (commute_output): Popup options for an output commutator.  See decription\nabove for details on the output commutator.  Choices are:\n    \"No\" - No output commutator\n    \"Yes (SLR16)\" - Include output commutator using SLR16 elements\n    \"Yes (BRAM)\" - Include output commutator using BRAM\n\nOutput Order (output_order): Popup options for selecting the output order.  See description\nabove for details on the output order.  Choices are:\n    \"Bit Reversed\" - Output each half of each transform in bit reversed order.\n    \"Normal\" - Output each half of each transform in normal order.\n</pre>"
      MaskPromptString	      "Total Stages|Number of Bits In|Binary Point In|Shifting Schedule|Number of Stages Using BRAM for Biplex Commutators (i.e. delays)|Number of Stages Using BRAM for Twiddle Coefficients|Twiddle Coefficient Bitwidth|Multiplier Latency|Adder Latency|Commute Output|Output Order|Show Sub-Block Options|Sub-Block Masks"
      MaskStyleString	      "edit,edit,edit,edit,edit,edit,edit,edit,edit,popup(No|Yes (SLR16)|Yes (BRAM)),popup(Bit Reversed|Normal),checkbox,popup(Keep|DumbDown|Unmask)"
      MaskTunableValueString  "on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskCallbackString      "|||||||||||mvs=get_param(gcb,'MaskVisibilityString');\nif strcmp(get_param(gcb,'show_sbo'),'on')\n  onoff='on';\nelse\n  onoff='off';\nend\nmvs=regexprep(mvs,'o[nf]*$',onoff);\nset_param(gcb,'MaskVisibilityString',mvs);\n|"
      MaskEnableString	      "on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskVisibilityString    "on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskToolTipString	      "on,on,on,on,on,on,on,on,on,on,on,on,on"
      MaskVarAliasString      ",,,,,,,,,,,,"
      MaskVariables	      "n_stages=@1;n_bits=@2;bin_pt=@3;shifts=@4;commutator_bram=@5;twiddle_bram=@6;n_bits_w=@7;mult_latency=@8;add_latency=@9;commute_output=@10;output_order=@11;show_sbo=@12;munge_submasks=@13;"
      MaskInitialization      "tic\nr4_dit_fft_init(gcb, ...\n  n_stages, ...\n  n_bits, ...\n  bin_pt, ...\n  shifts, ...\n  commutator_bram, ...\n  twiddle_bram, ...\n  n_bits_w, ...\n  mult_latency, ...\n  add_latency, ...\n  commute_output, ...\n  output_order, ...\n  lower(get_param(gcb,'munge_submasks')) );\ndisp('r4_dit_fft initialization complete.');\ntoc"
      MaskSelfModifiable      on
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "2|8|7|[0]|0|0|9|3|1|Yes (SLR16)|Normal|on|DumbDown"
      MaskTabNameString	      ",,,,,,,,,,,,"
      System {
	Name			"r4_dit_fft"
	Location		[475, 316, 1517, 1126]
	Open			off
	ModelBrowserVisibility	on
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "a_in"
	  Position		  [25, 13, 55, 27]
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Inport
	  Name			  "b_in"
	  Position		  [25, 48, 55, 62]
	  Port			  "2"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Inport
	  Name			  "c_in"
	  Position		  [25, 83, 55, 97]
	  Port			  "3"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Inport
	  Name			  "d_in"
	  Position		  [25, 118, 55, 132]
	  Port			  "4"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Inport
	  Name			  "sync_in"
	  Position		  [25, 153, 55, 167]
	  Port			  "5"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "quadplex_bitrev"
	  Ports			  [5, 5]
	  Position		  [550, 50, 650, 130]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "size = 4"
	  UserDataPersistent	  on
	  UserData		  "DataTag4"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "Quadplex Bit Reverse Reorder"
	  MaskDescription	  "Reorders the input sequences from normal order to bit reverse order (or vise versa)."
	  MaskHelp		  "<pre>\nDescription::\n\nReorders the input sequences from normal order to bit reverse order (or vise versa).\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nNumber of Bits (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n</pre>"
	  MaskPromptString	  "Log2 Block Size|Number of Bits"
	  MaskStyleString	  "edit,edit"
	  MaskTunableValueString  "off,off"
	  MaskCallbackString	  "|"
	  MaskEnableString	  "off,off"
	  MaskVisibilityString	  "on,on"
	  MaskToolTipString	  "on,on"
	  MaskVarAliasString	  ","
	  MaskVariables		  "log2_size=&1;n_bits=&2;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "2|12"
	  MaskTabNameString	  ","
	  System {
	    Name		    "quadplex_bitrev"
	    Location		    [475, 316, 1517, 1126]
	    Open		    off
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "a_in"
	      Position		      [30, 38, 60, 52]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "b_in"
	      Position		      [30, 73, 60, 87]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "c_in"
	      Position		      [25, 138, 55, 152]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "d_in"
	      Position		      [25, 173, 55, 187]
	      Port		      "4"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [25, 223, 55, 237]
	      Port		      "5"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Terminator
	      Name		      "Terminator"
	      Position		      [245, 80, 255, 90]
	      ShowName		      off
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "biplex_bitrev0"
	      Ports		      [3, 3]
	      Position		      [140, 45, 230, 95]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "size = 4"
	      UserDataPersistent      on
	      UserData		      "DataTag5"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Biplex Bit Reverse Reorder"
	      MaskDescription	      "Reorders the input sequence from normal order to bit reverse order (or vise versa)."
	      MaskHelp		      "<pre>\nDescription::\n\nReorders the input sequence from normal order to bit reverse order (or vise versa).\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nNumber of Bits (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n</pre>"
	      MaskPromptString	      "Log2 Block Size|Number of Bits"
	      MaskStyleString	      "edit,edit"
	      MaskTunableValueString  "off,off"
	      MaskCallbackString      "|"
	      MaskEnableString	      "off,off"
	      MaskVisibilityString    "on,on"
	      MaskToolTipString	      "on,on"
	      MaskVarAliasString      ","
	      MaskVariables	      "log2_size=&1;n_bits=&2;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "2|12"
	      MaskTabNameString	      ","
	      System {
		Name			"biplex_bitrev0"
		Location		[475, 316, 1517, 1126]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "a_in"
		  Position		  [40, 78, 70, 92]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "b_in"
		  Position		  [40, 248, 70, 262]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [45, 398, 75, 412]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Constant"
		  Ports			  [0, 1]
		  Position		  [285, 128, 300, 142]
		  ShowName		  off
		  SourceBlock		  "xbsIndex_r4/Constant"
		  SourceType		  "Xilinx Constant Block Block"
		  arith_type		  "Boolean"
		  const			  "1"
		  n_bits		  "1"
		  bin_pt		  "0"
		  explicit_period	  on
		  period		  "1"
		  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		  equ			  "P=C"
		  opselect		  "C"
		  inp2			  "PCIN>>17"
		  opr			  "+"
		  inp1			  "P"
		  carry			  "CIN"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "constant"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "15,14,1,1,white,blue,0,06094819,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Constant1"
		  Ports			  [0, 1]
		  Position		  [255, 388, 270, 402]
		  ShowName		  off
		  SourceBlock		  "xbsIndex_r4/Constant"
		  SourceType		  "Xilinx Constant Block Block"
		  arith_type		  "Signed (2's comp)"
		  const			  "-1"
		  n_bits		  "1"
		  bin_pt		  "0"
		  explicit_period	  on
		  period		  "1"
		  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		  equ			  "P=C"
		  opselect		  "C"
		  inp2			  "PCIN>>17"
		  opr			  "+"
		  inp1			  "P"
		  carry			  "CIN"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "constant"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "15,14,1,1,white,blue,0,ba00a726,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'-1');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Constant2"
		  Ports			  [0, 1]
		  Position		  [285, 58, 300, 72]
		  ShowName		  off
		  SourceBlock		  "xbsIndex_r4/Constant"
		  SourceType		  "Xilinx Constant Block Block"
		  arith_type		  "Boolean"
		  const			  "1"
		  n_bits		  "1"
		  bin_pt		  "0"
		  explicit_period	  on
		  period		  "1"
		  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		  equ			  "P=C"
		  opselect		  "C"
		  inp2			  "PCIN>>17"
		  opr			  "+"
		  inp1			  "P"
		  carry			  "CIN"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "constant"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "15,14,1,1,white,blue,0,06094819,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Constant4"
		  Ports			  [0, 1]
		  Position		  [285, 298, 300, 312]
		  ShowName		  off
		  SourceBlock		  "xbsIndex_r4/Constant"
		  SourceType		  "Xilinx Constant Block Block"
		  arith_type		  "Boolean"
		  const			  "1"
		  n_bits		  "1"
		  bin_pt		  "0"
		  explicit_period	  on
		  period		  "1"
		  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		  equ			  "P=C"
		  opselect		  "C"
		  inp2			  "PCIN>>17"
		  opr			  "+"
		  inp1			  "P"
		  carry			  "CIN"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "constant"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "15,14,1,1,white,blue,0,06094819,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Constant6"
		  Ports			  [0, 1]
		  Position		  [285, 228, 300, 242]
		  ShowName		  off
		  SourceBlock		  "xbsIndex_r4/Constant"
		  SourceType		  "Xilinx Constant Block Block"
		  arith_type		  "Boolean"
		  const			  "1"
		  n_bits		  "1"
		  bin_pt		  "0"
		  explicit_period	  on
		  period		  "1"
		  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		  equ			  "P=C"
		  opselect		  "C"
		  inp2			  "PCIN>>17"
		  opr			  "+"
		  inp1			  "P"
		  carry			  "CIN"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "constant"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "15,14,1,1,white,blue,0,06094819,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Counter"
		  Ports			  [1, 1]
		  Position		  [125, 441, 175, 469]
		  SourceBlock		  "xbsIndex_r4/Counter"
		  SourceType		  "Xilinx Counter Block"
		  infoedit		  "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		  cnt_type		  "Free Running"
		  cnt_to		  "Inf"
		  operation		  "Up"
		  start_count		  "0"
		  cnt_by_val		  "1"
		  arith_type		  "Unsigned"
		  n_bits		  "2"
		  bin_pt		  "0"
		  load_pin		  off
		  rst			  on
		  en			  off
		  explicit_period	  "off"
		  period		  "1"
		  dbl_ovrd		  off
		  use_behavioral_HDL	  off
		  use_rpm		  on
		  implementation	  "Fabric"
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "counter"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "50,28,1,1,white,blue,0,300e9576,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Counter1"
		  Ports			  [1, 1]
		  Position		  [360, 391, 410, 419]
		  SourceBlock		  "xbsIndex_r4/Counter"
		  SourceType		  "Xilinx Counter Block"
		  infoedit		  "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		  cnt_type		  "Free Running"
		  cnt_to		  "Inf"
		  operation		  "Up"
		  start_count		  "0"
		  cnt_by_val		  "1"
		  arith_type		  "Unsigned"
		  n_bits		  "1"
		  bin_pt		  "0"
		  load_pin		  off
		  rst			  off
		  en			  on
		  explicit_period	  "off"
		  period		  "1"
		  dbl_ovrd		  off
		  use_behavioral_HDL	  off
		  use_rpm		  on
		  implementation	  "Fabric"
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "counter"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "50,28,1,1,white,blue,0,1018756c,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'en');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay"
		  Ports			  [1, 1]
		  Position		  [315, 557, 360, 603]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "6"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,46,1,1,white,blue,0,23386583,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-6}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay1"
		  Ports			  [1, 1]
		  Position		  [115, 241, 140, 269]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,28,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay2"
		  Ports			  [1, 1]
		  Position		  [115, 71, 140, 99]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,28,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Mux"
		  Ports			  [3, 1]
		  Position		  [440, 422, 465, 488]
		  SourceBlock		  "xbsIndex_r4/Mux"
		  SourceType		  "Xilinx Bus Multiplexer Block"
		  inputs		  "2"
		  en			  off
		  latency		  "1"
		  precision		  "Full"
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "8"
		  bin_pt		  "2"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  dbl_ovrd		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "mux"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,66,1,1,white,blue,3,03f9c9b9,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Reinterpret"
		  Ports			  [1, 1]
		  Position		  [220, 407, 250, 423]
		  SourceBlock		  "xbsIndex_r4/Reinterpret"
		  SourceType		  "Xilinx Type Reinterpreter Block"
		  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		  force_arith_type	  on
		  arith_type		  "Signed  (2's comp)"
		  force_bin_pt		  off
		  bin_pt		  "0"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "reinterpret"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "30,16,1,1,white,blue,0,8982c1db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Relational"
		  Ports			  [2, 1]
		  Position		  [290, 383, 335, 427]
		  SourceBlock		  "xbsIndex_r4/Relational"
		  SourceType		  "Xilinx Arithmetic Relational Operator Block"
		  mode			  "a=b"
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "relational"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,44,1,1,white,blue,0,1cf02e61,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');disp('\\newline\\bf{a=b}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "bit_reverse"
		  Ports			  [1, 1]
		  Position		  [295, 485, 365, 525]
		  AttributesFormatString  "2 bits"
		  UserDataPersistent	  on
		  UserData		  "DataTag6"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Bit Reversal"
		  MaskDescription	  "Reverses the bit order of the input.  Input must be unsigned with binary point at position 0.  Costs nothing in hardware."
		  MaskHelp		  "<pre>\nDescription::\n\nReverses the bit order of the input.\n\nInput must be unsigned with binary point at position 0.\n\nCosts nothing in hardware.\n\nMask Parameters::\n\nNumber of Bits (n_bits): Specifies the width of the input.\n</pre>"
		  MaskPromptString	  "Number of Bits"
		  MaskStyleString	  "edit"
		  MaskTunableValueString  "off"
		  MaskEnableString	  "off"
		  MaskVisibilityString	  "on"
		  MaskToolTipString	  "on"
		  MaskVariables		  "n_bits=&1;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "2"
		  System {
		    Name		    "bit_reverse"
		    Location		    [225, 486, 880, 877]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [20, 53, 50, 67]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bit0"
		    Ports		    [1, 1]
		    Position		    [100, 100, 140, 120]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "1"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,20,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bit1"
		    Ports		    [1, 1]
		    Position		    [100, 140, 140, 160]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "1"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "1"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,20,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [450, 100, 500, 140]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,40,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [565, 53, 595, 67]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    Points		    [0, 0]
		    Branch {
		    Points		    [15, 0; 0, 90]
		    DstBlock		    "bit1"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [15, 0; 0, 50]
		    DstBlock		    "bit0"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "bit1"
		    SrcPort		    1
		    Points		    [145, 0; 0, -20]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "bit0"
		    SrcPort		    1
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    Points		    [20, 0; 0, -60]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri"
		  Ports			  [1, 2]
		  Position		  [160, 15, 200, 155]
		  AttributesFormatString  "12_0 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag7"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "12|0"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "12"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "12"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri1"
		  Ports			  [1, 2]
		  Position		  [160, 185, 200, 325]
		  AttributesFormatString  "12_0 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag8"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "12|0"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "12"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "12"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "ram_a_im"
		  Ports			  [3, 1]
		  Position		  [315, 94, 380, 146]
		  SourceBlock		  "xbsIndex_r4/Single Port RAM"
		  SourceType		  "Xilinx Single Port Random Access Memory Block"
		  depth			  "4"
		  initVector		  "0"
		  distributed_mem	  "Block RAM"
		  write_mode		  "Read Before Write"
		  rst			  off
		  init_reg		  "0"
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  optimize		  "Area"
		  use_rpm		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "spram"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "65,52,1,1,white,blue,0,90951842,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([16 7 20 7 16 30 34 38 53 41 29 21 35 21 29 41 53 38 34 30 16 ],[6 15 28 41 50 50 46 50 50 38 50 42 28 14 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "ram_a_re"
		  Ports			  [3, 1]
		  Position		  [315, 24, 380, 76]
		  SourceBlock		  "xbsIndex_r4/Single Port RAM"
		  SourceType		  "Xilinx Single Port Random Access Memory Block"
		  depth			  "4"
		  initVector		  "0"
		  distributed_mem	  "Block RAM"
		  write_mode		  "Read Before Write"
		  rst			  off
		  init_reg		  "0"
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  optimize		  "Area"
		  use_rpm		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "spram"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "65,52,1,1,white,blue,0,90951842,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([16 7 20 7 16 30 34 38 53 41 29 21 35 21 29 41 53 38 34 30 16 ],[6 15 28 41 50 50 46 50 50 38 50 42 28 14 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "ram_b_im"
		  Ports			  [3, 1]
		  Position		  [315, 264, 380, 316]
		  SourceBlock		  "xbsIndex_r4/Single Port RAM"
		  SourceType		  "Xilinx Single Port Random Access Memory Block"
		  depth			  "4"
		  initVector		  "0"
		  distributed_mem	  "Block RAM"
		  write_mode		  "Read Before Write"
		  rst			  off
		  init_reg		  "0"
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  optimize		  "Area"
		  use_rpm		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "spram"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "65,52,1,1,white,blue,0,90951842,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([16 7 20 7 16 30 34 38 53 41 29 21 35 21 29 41 53 38 34 30 16 ],[6 15 28 41 50 50 46 50 50 38 50 42 28 14 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "ram_b_re"
		  Ports			  [3, 1]
		  Position		  [315, 194, 380, 246]
		  SourceBlock		  "xbsIndex_r4/Single Port RAM"
		  SourceType		  "Xilinx Single Port Random Access Memory Block"
		  depth			  "4"
		  initVector		  "0"
		  distributed_mem	  "Block RAM"
		  write_mode		  "Read Before Write"
		  rst			  off
		  init_reg		  "0"
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  optimize		  "Area"
		  use_rpm		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "spram"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "65,52,1,1,white,blue,0,90951842,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([16 7 20 7 16 30 34 38 53 41 29 21 35 21 29 41 53 38 34 30 16 ],[6 15 28 41 50 50 46 50 50 38 50 42 28 14 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [450, 15, 500, 155]
		  UserDataPersistent	  on
		  UserData		  "DataTag9"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c1"
		  Ports			  [2, 1]
		  Position		  [450, 185, 500, 325]
		  UserDataPersistent	  on
		  UserData		  "DataTag10"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c1"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "a_out"
		  Position		  [555, 78, 585, 92]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "b_out"
		  Position		  [555, 248, 585, 262]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 573, 585, 587]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "Reinterpret"
		  SrcPort		  1
		  DstBlock		  "Relational"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "Relational"
		  SrcPort		  1
		  DstBlock		  "Counter1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Constant1"
		  SrcPort		  1
		  DstBlock		  "Relational"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Counter1"
		  SrcPort		  1
		  Points		  [10, 0]
		  DstBlock		  "Mux"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Counter"
		  SrcPort		  1
		  Points		  [0, 0; 20, 0]
		  Branch {
		    Points		    [0, -40]
		    DstBlock		    "Reinterpret"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		  }
		  Branch {
		    Points		    [0, 50]
		    DstBlock		    "bit_reverse"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "Constant6"
		  SrcPort		  1
		  DstBlock		  "ram_b_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "Constant4"
		  SrcPort		  1
		  DstBlock		  "ram_b_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "Constant2"
		  SrcPort		  1
		  DstBlock		  "ram_a_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "Constant"
		  SrcPort		  1
		  DstBlock		  "ram_a_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "Delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Mux"
		  SrcPort		  1
		  Points		  [30, 0; 0, -95; -245, 0; 0, -85]
		  Branch {
		    DstBlock		    "ram_b_im"
		    DstPort		    1
		  }
		  Branch {
		    Points		    [0, -70]
		    Branch {
		    DstBlock		    "ram_b_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -100]
		    Branch {
		    DstBlock		    "ram_a_im"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -70]
		    DstBlock		    "ram_a_re"
		    DstPort		    1
		    }
		    }
		  }
		}
		Line {
		  SrcBlock		  "bit_reverse"
		  SrcPort		  1
		  Points		  [55, 0]
		  DstBlock		  "Mux"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "b_in"
		  SrcPort		  1
		  DstBlock		  "Delay1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "a_in"
		  SrcPort		  1
		  DstBlock		  "Delay2"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri1"
		  SrcPort		  2
		  DstBlock		  "ram_b_im"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "c_to_ri1"
		  SrcPort		  1
		  DstBlock		  "ram_b_re"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "c_to_ri"
		  SrcPort		  2
		  DstBlock		  "ram_a_im"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "c_to_ri"
		  SrcPort		  1
		  DstBlock		  "ram_a_re"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "ri_to_c1"
		  SrcPort		  1
		  DstBlock		  "b_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  DstBlock		  "a_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ram_b_im"
		  SrcPort		  1
		  DstBlock		  "ri_to_c1"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "ram_b_re"
		  SrcPort		  1
		  DstBlock		  "ri_to_c1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ram_a_im"
		  SrcPort		  1
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "ram_a_re"
		  SrcPort		  1
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [10, 0; 0, 50]
		  Branch {
		    Points		    [0, 125]
		    DstBlock		    "Delay"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "Counter"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "Delay1"
		  SrcPort		  1
		  DstBlock		  "c_to_ri1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Delay2"
		  SrcPort		  1
		  DstBlock		  "c_to_ri"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "biplex_bitrev1"
	      Ports		      [3, 3]
	      Position		      [140, 145, 230, 195]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "size = 4"
	      UserDataPersistent      on
	      UserData		      "DataTag11"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Biplex Bit Reverse Reorder"
	      MaskDescription	      "Reorders the input sequence from normal order to bit reverse order (or vise versa)."
	      MaskHelp		      "<pre>\nDescription::\n\nReorders the input sequence from normal order to bit reverse order (or vise versa).\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nNumber of Bits (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n</pre>"
	      MaskPromptString	      "Log2 Block Size|Number of Bits"
	      MaskStyleString	      "edit,edit"
	      MaskTunableValueString  "off,off"
	      MaskCallbackString      "|"
	      MaskEnableString	      "off,off"
	      MaskVisibilityString    "on,on"
	      MaskToolTipString	      "on,on"
	      MaskVarAliasString      ","
	      MaskVariables	      "log2_size=&1;n_bits=&2;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "2|12"
	      MaskTabNameString	      ","
	      System {
		Name			"biplex_bitrev1"
		Location		[475, 316, 1517, 1126]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "a_in"
		  Position		  [40, 78, 70, 92]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "b_in"
		  Position		  [40, 248, 70, 262]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [45, 398, 75, 412]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Constant"
		  Ports			  [0, 1]
		  Position		  [285, 128, 300, 142]
		  ShowName		  off
		  SourceBlock		  "xbsIndex_r4/Constant"
		  SourceType		  "Xilinx Constant Block Block"
		  arith_type		  "Boolean"
		  const			  "1"
		  n_bits		  "1"
		  bin_pt		  "0"
		  explicit_period	  on
		  period		  "1"
		  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		  equ			  "P=C"
		  opselect		  "C"
		  inp2			  "PCIN>>17"
		  opr			  "+"
		  inp1			  "P"
		  carry			  "CIN"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "constant"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "15,14,1,1,white,blue,0,06094819,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Constant1"
		  Ports			  [0, 1]
		  Position		  [255, 388, 270, 402]
		  ShowName		  off
		  SourceBlock		  "xbsIndex_r4/Constant"
		  SourceType		  "Xilinx Constant Block Block"
		  arith_type		  "Signed (2's comp)"
		  const			  "-1"
		  n_bits		  "1"
		  bin_pt		  "0"
		  explicit_period	  on
		  period		  "1"
		  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		  equ			  "P=C"
		  opselect		  "C"
		  inp2			  "PCIN>>17"
		  opr			  "+"
		  inp1			  "P"
		  carry			  "CIN"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "constant"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "15,14,1,1,white,blue,0,ba00a726,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'-1');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Constant2"
		  Ports			  [0, 1]
		  Position		  [285, 58, 300, 72]
		  ShowName		  off
		  SourceBlock		  "xbsIndex_r4/Constant"
		  SourceType		  "Xilinx Constant Block Block"
		  arith_type		  "Boolean"
		  const			  "1"
		  n_bits		  "1"
		  bin_pt		  "0"
		  explicit_period	  on
		  period		  "1"
		  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		  equ			  "P=C"
		  opselect		  "C"
		  inp2			  "PCIN>>17"
		  opr			  "+"
		  inp1			  "P"
		  carry			  "CIN"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "constant"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "15,14,1,1,white,blue,0,06094819,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Constant4"
		  Ports			  [0, 1]
		  Position		  [285, 298, 300, 312]
		  ShowName		  off
		  SourceBlock		  "xbsIndex_r4/Constant"
		  SourceType		  "Xilinx Constant Block Block"
		  arith_type		  "Boolean"
		  const			  "1"
		  n_bits		  "1"
		  bin_pt		  "0"
		  explicit_period	  on
		  period		  "1"
		  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		  equ			  "P=C"
		  opselect		  "C"
		  inp2			  "PCIN>>17"
		  opr			  "+"
		  inp1			  "P"
		  carry			  "CIN"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "constant"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "15,14,1,1,white,blue,0,06094819,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Constant6"
		  Ports			  [0, 1]
		  Position		  [285, 228, 300, 242]
		  ShowName		  off
		  SourceBlock		  "xbsIndex_r4/Constant"
		  SourceType		  "Xilinx Constant Block Block"
		  arith_type		  "Boolean"
		  const			  "1"
		  n_bits		  "1"
		  bin_pt		  "0"
		  explicit_period	  on
		  period		  "1"
		  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		  equ			  "P=C"
		  opselect		  "C"
		  inp2			  "PCIN>>17"
		  opr			  "+"
		  inp1			  "P"
		  carry			  "CIN"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "constant"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "15,14,1,1,white,blue,0,06094819,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'1');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Counter"
		  Ports			  [1, 1]
		  Position		  [125, 441, 175, 469]
		  SourceBlock		  "xbsIndex_r4/Counter"
		  SourceType		  "Xilinx Counter Block"
		  infoedit		  "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		  cnt_type		  "Free Running"
		  cnt_to		  "Inf"
		  operation		  "Up"
		  start_count		  "0"
		  cnt_by_val		  "1"
		  arith_type		  "Unsigned"
		  n_bits		  "2"
		  bin_pt		  "0"
		  load_pin		  off
		  rst			  on
		  en			  off
		  explicit_period	  "off"
		  period		  "1"
		  dbl_ovrd		  off
		  use_behavioral_HDL	  off
		  use_rpm		  on
		  implementation	  "Fabric"
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "counter"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "50,28,1,1,white,blue,0,300e9576,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Counter1"
		  Ports			  [1, 1]
		  Position		  [360, 391, 410, 419]
		  SourceBlock		  "xbsIndex_r4/Counter"
		  SourceType		  "Xilinx Counter Block"
		  infoedit		  "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		  cnt_type		  "Free Running"
		  cnt_to		  "Inf"
		  operation		  "Up"
		  start_count		  "0"
		  cnt_by_val		  "1"
		  arith_type		  "Unsigned"
		  n_bits		  "1"
		  bin_pt		  "0"
		  load_pin		  off
		  rst			  off
		  en			  on
		  explicit_period	  "off"
		  period		  "1"
		  dbl_ovrd		  off
		  use_behavioral_HDL	  off
		  use_rpm		  on
		  implementation	  "Fabric"
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "counter"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "50,28,1,1,white,blue,0,1018756c,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'en');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay"
		  Ports			  [1, 1]
		  Position		  [315, 557, 360, 603]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "6"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,46,1,1,white,blue,0,23386583,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-6}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay1"
		  Ports			  [1, 1]
		  Position		  [115, 241, 140, 269]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,28,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay2"
		  Ports			  [1, 1]
		  Position		  [115, 71, 140, 99]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,28,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Mux"
		  Ports			  [3, 1]
		  Position		  [440, 422, 465, 488]
		  SourceBlock		  "xbsIndex_r4/Mux"
		  SourceType		  "Xilinx Bus Multiplexer Block"
		  inputs		  "2"
		  en			  off
		  latency		  "1"
		  precision		  "Full"
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "8"
		  bin_pt		  "2"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  dbl_ovrd		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "mux"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,66,1,1,white,blue,3,03f9c9b9,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Reinterpret"
		  Ports			  [1, 1]
		  Position		  [220, 407, 250, 423]
		  SourceBlock		  "xbsIndex_r4/Reinterpret"
		  SourceType		  "Xilinx Type Reinterpreter Block"
		  infoedit		  "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		  force_arith_type	  on
		  arith_type		  "Signed  (2's comp)"
		  force_bin_pt		  off
		  bin_pt		  "0"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "reinterpret"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "30,16,1,1,white,blue,0,8982c1db,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Relational"
		  Ports			  [2, 1]
		  Position		  [290, 383, 335, 427]
		  SourceBlock		  "xbsIndex_r4/Relational"
		  SourceType		  "Xilinx Arithmetic Relational Operator Block"
		  mode			  "a=b"
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "relational"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,44,1,1,white,blue,0,1cf02e61,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');disp('\\newline\\bf{a=b}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "bit_reverse"
		  Ports			  [1, 1]
		  Position		  [295, 485, 365, 525]
		  AttributesFormatString  "2 bits"
		  UserDataPersistent	  on
		  UserData		  "DataTag12"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Bit Reversal"
		  MaskDescription	  "Reverses the bit order of the input.  Input must be unsigned with binary point at position 0.  Costs nothing in hardware."
		  MaskHelp		  "<pre>\nDescription::\n\nReverses the bit order of the input.\n\nInput must be unsigned with binary point at position 0.\n\nCosts nothing in hardware.\n\nMask Parameters::\n\nNumber of Bits (n_bits): Specifies the width of the input.\n</pre>"
		  MaskPromptString	  "Number of Bits"
		  MaskStyleString	  "edit"
		  MaskTunableValueString  "off"
		  MaskEnableString	  "off"
		  MaskVisibilityString	  "on"
		  MaskToolTipString	  "on"
		  MaskVariables		  "n_bits=&1;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "2"
		  System {
		    Name		    "bit_reverse"
		    Location		    [225, 486, 880, 877]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [20, 53, 50, 67]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bit0"
		    Ports		    [1, 1]
		    Position		    [100, 100, 140, 120]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "1"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,20,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "bit1"
		    Ports		    [1, 1]
		    Position		    [100, 140, 140, 160]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "1"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "1"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,20,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [450, 100, 500, 140]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,40,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [565, 53, 595, 67]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    Points		    [0, 0]
		    Branch {
		    Points		    [15, 0; 0, 90]
		    DstBlock		    "bit1"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [15, 0; 0, 50]
		    DstBlock		    "bit0"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "bit1"
		    SrcPort		    1
		    Points		    [145, 0; 0, -20]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "bit0"
		    SrcPort		    1
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    Points		    [20, 0; 0, -60]
		    DstBlock		    "out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri"
		  Ports			  [1, 2]
		  Position		  [160, 15, 200, 155]
		  AttributesFormatString  "12_0 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag13"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "12|0"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "12"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "12"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "c_to_ri1"
		  Ports			  [1, 2]
		  Position		  [160, 185, 200, 325]
		  AttributesFormatString  "12_0 r/i"
		  UserDataPersistent	  on
		  UserData		  "DataTag14"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex to Real-Imag"
		  MaskDescription	  "Outputs real and imaginary components of a complex input."
		  MaskHelp		  "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		  MaskPromptString	  "Bit Width|Binary Point"
		  MaskStyleString	  "edit,edit"
		  MaskTunableValueString  "off,off"
		  MaskCallbackString	  "|"
		  MaskEnableString	  "off,off"
		  MaskVisibilityString	  "on,on"
		  MaskToolTipString	  "on,on"
		  MaskVarAliasString	  ","
		  MaskVariables		  "n_bits=&1;bin_pt=&2;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "12|0"
		  MaskTabNameString	  ","
		  System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "12"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "12"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "ram_a_im"
		  Ports			  [3, 1]
		  Position		  [315, 94, 380, 146]
		  SourceBlock		  "xbsIndex_r4/Single Port RAM"
		  SourceType		  "Xilinx Single Port Random Access Memory Block"
		  depth			  "4"
		  initVector		  "0"
		  distributed_mem	  "Block RAM"
		  write_mode		  "Read Before Write"
		  rst			  off
		  init_reg		  "0"
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  optimize		  "Area"
		  use_rpm		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "spram"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "65,52,1,1,white,blue,0,90951842,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([16 7 20 7 16 30 34 38 53 41 29 21 35 21 29 41 53 38 34 30 16 ],[6 15 28 41 50 50 46 50 50 38 50 42 28 14 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "ram_a_re"
		  Ports			  [3, 1]
		  Position		  [315, 24, 380, 76]
		  SourceBlock		  "xbsIndex_r4/Single Port RAM"
		  SourceType		  "Xilinx Single Port Random Access Memory Block"
		  depth			  "4"
		  initVector		  "0"
		  distributed_mem	  "Block RAM"
		  write_mode		  "Read Before Write"
		  rst			  off
		  init_reg		  "0"
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  optimize		  "Area"
		  use_rpm		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "spram"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "65,52,1,1,white,blue,0,90951842,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([16 7 20 7 16 30 34 38 53 41 29 21 35 21 29 41 53 38 34 30 16 ],[6 15 28 41 50 50 46 50 50 38 50 42 28 14 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "ram_b_im"
		  Ports			  [3, 1]
		  Position		  [315, 264, 380, 316]
		  SourceBlock		  "xbsIndex_r4/Single Port RAM"
		  SourceType		  "Xilinx Single Port Random Access Memory Block"
		  depth			  "4"
		  initVector		  "0"
		  distributed_mem	  "Block RAM"
		  write_mode		  "Read Before Write"
		  rst			  off
		  init_reg		  "0"
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  optimize		  "Area"
		  use_rpm		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "spram"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "65,52,1,1,white,blue,0,90951842,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([16 7 20 7 16 30 34 38 53 41 29 21 35 21 29 41 53 38 34 30 16 ],[6 15 28 41 50 50 46 50 50 38 50 42 28 14 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "ram_b_re"
		  Ports			  [3, 1]
		  Position		  [315, 194, 380, 246]
		  SourceBlock		  "xbsIndex_r4/Single Port RAM"
		  SourceType		  "Xilinx Single Port Random Access Memory Block"
		  depth			  "4"
		  initVector		  "0"
		  distributed_mem	  "Block RAM"
		  write_mode		  "Read Before Write"
		  rst			  off
		  init_reg		  "0"
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  optimize		  "Area"
		  use_rpm		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "spram"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "65,52,1,1,white,blue,0,90951842,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 54 54 ],[0.77 0.82 0.91]);\npatch([16 7 20 7 16 30 34 38 53 41 29 21 35 21 29 41 53 38 34 30 16 ],[6 15 28 41 50 50 46 50 50 38 50 42 28 14 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 54 54 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');port_label('input',2,'data');\ncolor('black');port_label('input',3,'we');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c"
		  Ports			  [2, 1]
		  Position		  [450, 15, 500, 155]
		  UserDataPersistent	  on
		  UserData		  "DataTag15"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "ri_to_c1"
		  Ports			  [2, 1]
		  Position		  [450, 185, 500, 325]
		  UserDataPersistent	  on
		  UserData		  "DataTag16"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Real-Imag to Complex"
		  MaskDescription	  "Concatenates real and imaginary inputs into a complex output."
		  MaskHelp		  "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  System {
		    Name		    "ri_to_c1"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "a_out"
		  Position		  [555, 78, 585, 92]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "b_out"
		  Position		  [555, 248, 585, 262]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [555, 573, 585, 587]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "Reinterpret"
		  SrcPort		  1
		  DstBlock		  "Relational"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "Relational"
		  SrcPort		  1
		  DstBlock		  "Counter1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Constant1"
		  SrcPort		  1
		  DstBlock		  "Relational"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Counter1"
		  SrcPort		  1
		  Points		  [10, 0]
		  DstBlock		  "Mux"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Counter"
		  SrcPort		  1
		  Points		  [0, 0; 20, 0]
		  Branch {
		    Points		    [0, -40]
		    DstBlock		    "Reinterpret"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		  }
		  Branch {
		    Points		    [0, 50]
		    DstBlock		    "bit_reverse"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "Constant6"
		  SrcPort		  1
		  DstBlock		  "ram_b_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "Constant4"
		  SrcPort		  1
		  DstBlock		  "ram_b_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "Constant2"
		  SrcPort		  1
		  DstBlock		  "ram_a_re"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "Constant"
		  SrcPort		  1
		  DstBlock		  "ram_a_im"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "Delay"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Mux"
		  SrcPort		  1
		  Points		  [30, 0; 0, -95; -245, 0; 0, -85]
		  Branch {
		    DstBlock		    "ram_b_im"
		    DstPort		    1
		  }
		  Branch {
		    Points		    [0, -70]
		    Branch {
		    DstBlock		    "ram_b_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -100]
		    Branch {
		    DstBlock		    "ram_a_im"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -70]
		    DstBlock		    "ram_a_re"
		    DstPort		    1
		    }
		    }
		  }
		}
		Line {
		  SrcBlock		  "bit_reverse"
		  SrcPort		  1
		  Points		  [55, 0]
		  DstBlock		  "Mux"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "b_in"
		  SrcPort		  1
		  DstBlock		  "Delay1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "a_in"
		  SrcPort		  1
		  DstBlock		  "Delay2"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c_to_ri1"
		  SrcPort		  2
		  DstBlock		  "ram_b_im"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "c_to_ri1"
		  SrcPort		  1
		  DstBlock		  "ram_b_re"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "c_to_ri"
		  SrcPort		  2
		  DstBlock		  "ram_a_im"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "c_to_ri"
		  SrcPort		  1
		  DstBlock		  "ram_a_re"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "ri_to_c1"
		  SrcPort		  1
		  DstBlock		  "b_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ri_to_c"
		  SrcPort		  1
		  DstBlock		  "a_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ram_b_im"
		  SrcPort		  1
		  DstBlock		  "ri_to_c1"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "ram_b_re"
		  SrcPort		  1
		  DstBlock		  "ri_to_c1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "ram_a_im"
		  SrcPort		  1
		  DstBlock		  "ri_to_c"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "ram_a_re"
		  SrcPort		  1
		  DstBlock		  "ri_to_c"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [10, 0; 0, 50]
		  Branch {
		    Points		    [0, 125]
		    DstBlock		    "Delay"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "Counter"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "Delay1"
		  SrcPort		  1
		  DstBlock		  "c_to_ri1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Delay2"
		  SrcPort		  1
		  DstBlock		  "c_to_ri"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "a_out"
	      Position		      [295, 38, 325, 52]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "b_out"
	      Position		      [295, 73, 325, 87]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "c_out"
	      Position		      [295, 138, 325, 152]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "d_out"
	      Position		      [295, 173, 325, 187]
	      Port		      "4"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [295, 223, 325, 237]
	      Port		      "5"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "biplex_bitrev0"
	      SrcPort		      3
	      DstBlock		      "Terminator"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "biplex_bitrev1"
	      SrcPort		      3
	      Points		      [20, 0; 0, 45]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [50, 0; 0, -45]
	      Branch {
		DstBlock		"biplex_bitrev1"
		DstPort			3
	      }
	      Branch {
		Points			[0, -100]
		DstBlock		"biplex_bitrev0"
		DstPort			3
	      }
	    }
	    Line {
	      SrcBlock		      "biplex_bitrev1"
	      SrcPort		      2
	      Points		      [45, 0]
	      DstBlock		      "d_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "biplex_bitrev1"
	      SrcPort		      1
	      Points		      [45, 0]
	      DstBlock		      "c_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "d_in"
	      SrcPort		      1
	      Points		      [25, 0; 0, -10]
	      DstBlock		      "biplex_bitrev1"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "c_in"
	      SrcPort		      1
	      Points		      [25, 0; 0, 10]
	      DstBlock		      "biplex_bitrev1"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "biplex_bitrev0"
	      SrcPort		      2
	      Points		      [45, 0]
	      DstBlock		      "b_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "biplex_bitrev0"
	      SrcPort		      1
	      Points		      [45, 0]
	      DstBlock		      "a_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "b_in"
	      SrcPort		      1
	      Points		      [20, 0; 0, -10]
	      DstBlock		      "biplex_bitrev0"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "a_in"
	      SrcPort		      1
	      Points		      [20, 0; 0, 10]
	      DstBlock		      "biplex_bitrev0"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "quadplex_commutator"
	  Ports			  [5, 5]
	  Position		  [400, 50, 500, 130]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "size = 16\n0/4 bram"
	  UserDataPersistent	  on
	  UserData		  "DataTag17"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "Quadplex Commutator"
	  MaskDescription	  "The quadplex commutator performs a \"quarter-blockwise\" commutation of the four inputs.  A \"block\" is 4^log4_size consecutive samples (i.e. always a power of 4).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log4_size)+2^(log4_size-1)+2."
	  MaskHelp		  "<pre>\nDescription::\n\nThe quadplex commutator performs a \"quarter-blockwise\" commutation of the four inputs.\nA \"block\" is 4^log4_size consecutive samples (i.e. always a power of 4).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(log4_size)+2^(log4_size-1)+2.\n\nMask Parameters::\n\nLog4 Block Size (log4_size): The base-4 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 4.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
	  MaskPromptString	  "Log4 Block Size|Bit Width|Use BRAM"
	  MaskStyleString	  "edit,edit,checkbox"
	  MaskTunableValueString  "off,off,off"
	  MaskCallbackString	  "||"
	  MaskEnableString	  "off,off,off"
	  MaskVisibilityString	  "on,on,on"
	  MaskToolTipString	  "on,on,on"
	  MaskVarAliasString	  ",,"
	  MaskVariables		  "log4_size=&1;n_bits=&2;use_bram=&3;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "2|12|off"
	  MaskTabNameString	  ",,"
	  System {
	    Name		    "quadplex_commutator"
	    Location		    [475, 316, 1517, 1126]
	    Open		    off
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "a"
	      Position		      [35, 43, 65, 57]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "b"
	      Position		      [35, 138, 65, 152]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "c"
	      Position		      [35, 78, 65, 92]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "d"
	      Position		      [35, 173, 65, 187]
	      Port		      "4"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [35, 228, 65, 242]
	      Port		      "5"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Terminator
	      Name		      "Terminator"
	      Position		      [450, 85, 460, 95]
	      ShowName		      off
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "biplex_commutator_01"
	      Ports		      [3, 3]
	      Position		      [345, 49, 435, 101]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "size = 8\ndelay slr"
	      UserDataPersistent      on
	      UserData		      "DataTag18"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Biplex Commutator"
	      MaskDescription	      "The biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half of the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a power of 2).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log2_size-1)+1."
	      MaskHelp		      "<pre>\nDescription::\n\nThe biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half\nof the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a\npower of 2).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(N-1)+1.\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
	      MaskPromptString	      "Log2 Block Size|Bit Width|Use BRAM"
	      MaskStyleString	      "edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off"
	      MaskCallbackString      "||"
	      MaskEnableString	      "off,off,off"
	      MaskVisibilityString    "on,on,on"
	      MaskToolTipString	      "on,on,on"
	      MaskVarAliasString      ",,"
	      MaskVariables	      "log2_size=&1;n_bits=&2;use_bram=&3;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "3|12|off"
	      MaskTabNameString	      ",,"
	      System {
		Name			"biplex_commutator_01"
		Location		[475, 316, 1517, 1126]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "AloAhi"
		  Position		  [40, 48, 70, 62]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "BloBhi"
		  Position		  [40, 153, 70, 167]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [40, 273, 70, 287]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Counter"
		  Ports			  [1, 1]
		  Position		  [110, 241, 160, 259]
		  SourceBlock		  "xbsIndex_r4/Counter"
		  SourceType		  "Xilinx Counter Block"
		  infoedit		  "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		  cnt_type		  "Free Running"
		  cnt_to		  "Inf"
		  operation		  "Up"
		  start_count		  "0"
		  cnt_by_val		  "1"
		  arith_type		  "Unsigned"
		  n_bits		  "3"
		  bin_pt		  "0"
		  load_pin		  off
		  rst			  on
		  en			  off
		  explicit_period	  "off"
		  period		  "1"
		  dbl_ovrd		  off
		  use_behavioral_HDL	  off
		  use_rpm		  on
		  implementation	  "Fabric"
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "counter"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "50,18,1,1,white,blue,0,300e9576,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay"
		  Ports			  [1, 1]
		  Position		  [280, 270, 325, 290]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "5"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,20,1,1,white,blue,0,4edfc01c,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-5}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Mux"
		  Ports			  [3, 1]
		  Position		  [285, 22, 310, 88]
		  SourceBlock		  "xbsIndex_r4/Mux"
		  SourceType		  "Xilinx Bus Multiplexer Block"
		  inputs		  "2"
		  en			  off
		  latency		  "1"
		  precision		  "Full"
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "8"
		  bin_pt		  "2"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  dbl_ovrd		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "mux"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,66,1,1,white,blue,3,03f9c9b9,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Mux1"
		  Ports			  [3, 1]
		  Position		  [285, 127, 310, 193]
		  SourceBlock		  "xbsIndex_r4/Mux"
		  SourceType		  "Xilinx Bus Multiplexer Block"
		  inputs		  "2"
		  en			  off
		  latency		  "1"
		  precision		  "Full"
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "8"
		  bin_pt		  "2"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  dbl_ovrd		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "mux"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,66,1,1,white,blue,3,03f9c9b9,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "delay_b"
		  Ports			  [1, 1]
		  Position		  [115, 144, 175, 176]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "slr depth = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag19"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "SLR16 Delay"
		  MaskDescription	  "A delay block that uses SLR16 elements for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		  MaskPromptString	  "Delay Depth"
		  MaskStyleString	  "edit"
		  MaskTunableValueString  "off"
		  MaskEnableString	  "off"
		  MaskVisibilityString	  "on"
		  MaskToolTipString	  "on"
		  MaskVariables		  "delay_depth=&1;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "4"
		  System {
		    Name		    "delay_b"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "4"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,c2217bc4,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "delay_lo"
		  Ports			  [1, 1]
		  Position		  [350, 39, 410, 71]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "slr depth = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag20"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "SLR16 Delay"
		  MaskDescription	  "A delay block that uses SLR16 elements for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		  MaskPromptString	  "Delay Depth"
		  MaskStyleString	  "edit"
		  MaskTunableValueString  "off"
		  MaskEnableString	  "off"
		  MaskVisibilityString	  "on"
		  MaskToolTipString	  "on"
		  MaskVariables		  "delay_depth=&1;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "4"
		  System {
		    Name		    "delay_lo"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "4"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,c2217bc4,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "top_bit"
		  Ports			  [1, 1]
		  Position		  [195, 242, 230, 258]
		  SourceBlock		  "xbsIndex_r4/Slice"
		  SourceType		  "Xilinx Bit Slice Extractor Block"
		  infoedit		  "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		  nbits			  "1"
		  boolean_output	  off
		  mode			  "Upper Bit Location + Width"
		  bit1			  "0"
		  base1			  "MSB of Input"
		  bit0			  "0"
		  base0			  "LSB of Input"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "slice"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "35,16,1,1,white,blue,0,b1026674,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "AloBlo"
		  Position		  [605, 48, 635, 62]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "AhiBhi"
		  Position		  [605, 153, 635, 167]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [605, 273, 635, 287]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "Delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "delay_lo"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "AloBlo"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Mux"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "delay_lo"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "delay_b"
		  SrcPort		  1
		  Points		  [0, 0; 40, 0]
		  Branch {
		    Points		    [0, -85]
		    DstBlock		    "Mux"
		    DstPort		    3
		  }
		  Branch {
		    DstBlock		    "Mux1"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "BloBhi"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "delay_b"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Mux1"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "AhiBhi"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "AloAhi"
		  SrcPort		  1
		  Points		  [0, 0; 160, 0]
		  Branch {
		    Points		    [0, 125]
		    DstBlock		    "Mux1"
		    DstPort		    3
		  }
		  Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "top_bit"
		  SrcPort		  1
		  Points		  [15, 0; 0, -110]
		  Branch {
		    Points		    [0, -105]
		    DstBlock		    "Mux"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "Mux1"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "Counter"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "top_bit"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [0, 0; 10, 0]
		  Branch {
		    DstBlock		    "Delay"
		    DstPort		    1
		  }
		  Branch {
		    Points		    [0, -30]
		    DstBlock		    "Counter"
		    DstPort		    1
		  }
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "biplex_commutator_23"
	      Ports		      [3, 3]
	      Position		      [345, 144, 435, 196]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "size = 8\ndelay slr"
	      UserDataPersistent      on
	      UserData		      "DataTag21"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Biplex Commutator"
	      MaskDescription	      "The biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half of the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a power of 2).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log2_size-1)+1."
	      MaskHelp		      "<pre>\nDescription::\n\nThe biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half\nof the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a\npower of 2).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(N-1)+1.\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
	      MaskPromptString	      "Log2 Block Size|Bit Width|Use BRAM"
	      MaskStyleString	      "edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off"
	      MaskCallbackString      "||"
	      MaskEnableString	      "off,off,off"
	      MaskVisibilityString    "on,on,on"
	      MaskToolTipString	      "on,on,on"
	      MaskVarAliasString      ",,"
	      MaskVariables	      "log2_size=&1;n_bits=&2;use_bram=&3;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "3|12|off"
	      MaskTabNameString	      ",,"
	      System {
		Name			"biplex_commutator_23"
		Location		[272, 537, 1491, 1090]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "AloAhi"
		  Position		  [40, 48, 70, 62]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "BloBhi"
		  Position		  [40, 153, 70, 167]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [40, 273, 70, 287]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Counter"
		  Ports			  [1, 1]
		  Position		  [110, 241, 160, 259]
		  SourceBlock		  "xbsIndex_r4/Counter"
		  SourceType		  "Xilinx Counter Block"
		  infoedit		  "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		  cnt_type		  "Free Running"
		  cnt_to		  "Inf"
		  operation		  "Up"
		  start_count		  "0"
		  cnt_by_val		  "1"
		  arith_type		  "Unsigned"
		  n_bits		  "3"
		  bin_pt		  "0"
		  load_pin		  off
		  rst			  on
		  en			  off
		  explicit_period	  "off"
		  period		  "1"
		  dbl_ovrd		  off
		  use_behavioral_HDL	  off
		  use_rpm		  on
		  implementation	  "Fabric"
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "counter"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "50,18,1,1,white,blue,0,300e9576,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay"
		  Ports			  [1, 1]
		  Position		  [280, 270, 325, 290]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "5"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,20,1,1,white,blue,0,4edfc01c,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-5}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Mux"
		  Ports			  [3, 1]
		  Position		  [285, 22, 310, 88]
		  SourceBlock		  "xbsIndex_r4/Mux"
		  SourceType		  "Xilinx Bus Multiplexer Block"
		  inputs		  "2"
		  en			  off
		  latency		  "1"
		  precision		  "Full"
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "8"
		  bin_pt		  "2"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  dbl_ovrd		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "mux"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,66,1,1,white,blue,3,03f9c9b9,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Mux1"
		  Ports			  [3, 1]
		  Position		  [285, 127, 310, 193]
		  SourceBlock		  "xbsIndex_r4/Mux"
		  SourceType		  "Xilinx Bus Multiplexer Block"
		  inputs		  "2"
		  en			  off
		  latency		  "1"
		  precision		  "Full"
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "8"
		  bin_pt		  "2"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  dbl_ovrd		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "mux"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,66,1,1,white,blue,3,03f9c9b9,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "delay_b"
		  Ports			  [1, 1]
		  Position		  [115, 144, 175, 176]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "slr depth = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag22"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "SLR16 Delay"
		  MaskDescription	  "A delay block that uses SLR16 elements for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		  MaskPromptString	  "Delay Depth"
		  MaskStyleString	  "edit"
		  MaskTunableValueString  "off"
		  MaskEnableString	  "off"
		  MaskVisibilityString	  "on"
		  MaskToolTipString	  "on"
		  MaskVariables		  "delay_depth=&1;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "4"
		  System {
		    Name		    "delay_b"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "4"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,c2217bc4,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "delay_lo"
		  Ports			  [1, 1]
		  Position		  [350, 39, 410, 71]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "slr depth = 4"
		  UserDataPersistent	  on
		  UserData		  "DataTag23"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "SLR16 Delay"
		  MaskDescription	  "A delay block that uses SLR16 elements for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		  MaskPromptString	  "Delay Depth"
		  MaskStyleString	  "edit"
		  MaskTunableValueString  "off"
		  MaskEnableString	  "off"
		  MaskVisibilityString	  "on"
		  MaskToolTipString	  "on"
		  MaskVariables		  "delay_depth=&1;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "4"
		  System {
		    Name		    "delay_lo"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "4"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,c2217bc4,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "top_bit"
		  Ports			  [1, 1]
		  Position		  [195, 242, 230, 258]
		  SourceBlock		  "xbsIndex_r4/Slice"
		  SourceType		  "Xilinx Bit Slice Extractor Block"
		  infoedit		  "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		  nbits			  "1"
		  boolean_output	  off
		  mode			  "Upper Bit Location + Width"
		  bit1			  "0"
		  base1			  "MSB of Input"
		  bit0			  "0"
		  base0			  "LSB of Input"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "slice"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "35,16,1,1,white,blue,0,b1026674,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "AloBlo"
		  Position		  [605, 48, 635, 62]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "AhiBhi"
		  Position		  [605, 153, 635, 167]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [605, 273, 635, 287]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "Delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "delay_lo"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "AloBlo"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Mux"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "delay_lo"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "delay_b"
		  SrcPort		  1
		  Points		  [0, 0; 40, 0]
		  Branch {
		    Points		    [0, -85]
		    DstBlock		    "Mux"
		    DstPort		    3
		  }
		  Branch {
		    DstBlock		    "Mux1"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "BloBhi"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "delay_b"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Mux1"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "AhiBhi"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "AloAhi"
		  SrcPort		  1
		  Points		  [0, 0; 160, 0]
		  Branch {
		    Points		    [0, 125]
		    DstBlock		    "Mux1"
		    DstPort		    3
		  }
		  Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "top_bit"
		  SrcPort		  1
		  Points		  [15, 0; 0, -110]
		  Branch {
		    Points		    [0, -105]
		    DstBlock		    "Mux"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "Mux1"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "Counter"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "top_bit"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [0, 0; 10, 0]
		  Branch {
		    DstBlock		    "Delay"
		    DstPort		    1
		  }
		  Branch {
		    Points		    [0, -30]
		    DstBlock		    "Counter"
		    DstPort		    1
		  }
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "biplex_commutator_ac"
	      Ports		      [3, 3]
	      Position		      [155, 49, 245, 101]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "size = 16\ndelay slr"
	      UserDataPersistent      on
	      UserData		      "DataTag24"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Biplex Commutator"
	      MaskDescription	      "The biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half of the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a power of 2).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log2_size-1)+1."
	      MaskHelp		      "<pre>\nDescription::\n\nThe biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half\nof the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a\npower of 2).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(N-1)+1.\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
	      MaskPromptString	      "Log2 Block Size|Bit Width|Use BRAM"
	      MaskStyleString	      "edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off"
	      MaskCallbackString      "||"
	      MaskEnableString	      "off,off,off"
	      MaskVisibilityString    "on,on,on"
	      MaskToolTipString	      "on,on,on"
	      MaskVarAliasString      ",,"
	      MaskVariables	      "log2_size=&1;n_bits=&2;use_bram=&3;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "4|12|off"
	      MaskTabNameString	      ",,"
	      System {
		Name			"biplex_commutator_ac"
		Location		[272, 537, 1491, 1090]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "AloAhi"
		  Position		  [40, 48, 70, 62]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "BloBhi"
		  Position		  [40, 153, 70, 167]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [40, 273, 70, 287]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Counter"
		  Ports			  [1, 1]
		  Position		  [110, 241, 160, 259]
		  SourceBlock		  "xbsIndex_r4/Counter"
		  SourceType		  "Xilinx Counter Block"
		  infoedit		  "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		  cnt_type		  "Free Running"
		  cnt_to		  "Inf"
		  operation		  "Up"
		  start_count		  "0"
		  cnt_by_val		  "1"
		  arith_type		  "Unsigned"
		  n_bits		  "4"
		  bin_pt		  "0"
		  load_pin		  off
		  rst			  on
		  en			  off
		  explicit_period	  "off"
		  period		  "1"
		  dbl_ovrd		  off
		  use_behavioral_HDL	  off
		  use_rpm		  on
		  implementation	  "Fabric"
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "counter"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "50,18,1,1,white,blue,0,300e9576,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay"
		  Ports			  [1, 1]
		  Position		  [280, 270, 325, 290]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "9"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,20,1,1,white,blue,0,45ffbd5e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-9}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Mux"
		  Ports			  [3, 1]
		  Position		  [285, 22, 310, 88]
		  SourceBlock		  "xbsIndex_r4/Mux"
		  SourceType		  "Xilinx Bus Multiplexer Block"
		  inputs		  "2"
		  en			  off
		  latency		  "1"
		  precision		  "Full"
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "8"
		  bin_pt		  "2"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  dbl_ovrd		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "mux"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,66,1,1,white,blue,3,03f9c9b9,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Mux1"
		  Ports			  [3, 1]
		  Position		  [285, 127, 310, 193]
		  SourceBlock		  "xbsIndex_r4/Mux"
		  SourceType		  "Xilinx Bus Multiplexer Block"
		  inputs		  "2"
		  en			  off
		  latency		  "1"
		  precision		  "Full"
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "8"
		  bin_pt		  "2"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  dbl_ovrd		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "mux"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,66,1,1,white,blue,3,03f9c9b9,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "delay_b"
		  Ports			  [1, 1]
		  Position		  [115, 144, 175, 176]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "slr depth = 8"
		  UserDataPersistent	  on
		  UserData		  "DataTag25"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "SLR16 Delay"
		  MaskDescription	  "A delay block that uses SLR16 elements for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		  MaskPromptString	  "Delay Depth"
		  MaskStyleString	  "edit"
		  MaskTunableValueString  "off"
		  MaskEnableString	  "off"
		  MaskVisibilityString	  "on"
		  MaskToolTipString	  "on"
		  MaskVariables		  "delay_depth=&1;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8"
		  System {
		    Name		    "delay_b"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "delay_lo"
		  Ports			  [1, 1]
		  Position		  [350, 39, 410, 71]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "slr depth = 8"
		  UserDataPersistent	  on
		  UserData		  "DataTag26"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "SLR16 Delay"
		  MaskDescription	  "A delay block that uses SLR16 elements for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		  MaskPromptString	  "Delay Depth"
		  MaskStyleString	  "edit"
		  MaskTunableValueString  "off"
		  MaskEnableString	  "off"
		  MaskVisibilityString	  "on"
		  MaskToolTipString	  "on"
		  MaskVariables		  "delay_depth=&1;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8"
		  System {
		    Name		    "delay_lo"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "top_bit"
		  Ports			  [1, 1]
		  Position		  [195, 242, 230, 258]
		  SourceBlock		  "xbsIndex_r4/Slice"
		  SourceType		  "Xilinx Bit Slice Extractor Block"
		  infoedit		  "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		  nbits			  "1"
		  boolean_output	  off
		  mode			  "Upper Bit Location + Width"
		  bit1			  "0"
		  base1			  "MSB of Input"
		  bit0			  "0"
		  base0			  "LSB of Input"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "slice"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "35,16,1,1,white,blue,0,b1026674,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "AloBlo"
		  Position		  [605, 48, 635, 62]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "AhiBhi"
		  Position		  [605, 153, 635, 167]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [605, 273, 635, 287]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "Delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "delay_lo"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "AloBlo"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Mux"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "delay_lo"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "delay_b"
		  SrcPort		  1
		  Points		  [0, 0; 40, 0]
		  Branch {
		    Points		    [0, -85]
		    DstBlock		    "Mux"
		    DstPort		    3
		  }
		  Branch {
		    DstBlock		    "Mux1"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "BloBhi"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "delay_b"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Mux1"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "AhiBhi"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "AloAhi"
		  SrcPort		  1
		  Points		  [0, 0; 160, 0]
		  Branch {
		    Points		    [0, 125]
		    DstBlock		    "Mux1"
		    DstPort		    3
		  }
		  Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "top_bit"
		  SrcPort		  1
		  Points		  [15, 0; 0, -110]
		  Branch {
		    Points		    [0, -105]
		    DstBlock		    "Mux"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "Mux1"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "Counter"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "top_bit"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [0, 0; 10, 0]
		  Branch {
		    DstBlock		    "Delay"
		    DstPort		    1
		  }
		  Branch {
		    Points		    [0, -30]
		    DstBlock		    "Counter"
		    DstPort		    1
		  }
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "biplex_commutator_bd"
	      Ports		      [3, 3]
	      Position		      [155, 144, 245, 196]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "size = 16\ndelay slr"
	      UserDataPersistent      on
	      UserData		      "DataTag27"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Biplex Commutator"
	      MaskDescription	      "The biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half of the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a power of 2).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log2_size-1)+1."
	      MaskHelp		      "<pre>\nDescription::\n\nThe biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half\nof the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a\npower of 2).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(N-1)+1.\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
	      MaskPromptString	      "Log2 Block Size|Bit Width|Use BRAM"
	      MaskStyleString	      "edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off"
	      MaskCallbackString      "||"
	      MaskEnableString	      "off,off,off"
	      MaskVisibilityString    "on,on,on"
	      MaskToolTipString	      "on,on,on"
	      MaskVarAliasString      ",,"
	      MaskVariables	      "log2_size=&1;n_bits=&2;use_bram=&3;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "4|12|off"
	      MaskTabNameString	      ",,"
	      System {
		Name			"biplex_commutator_bd"
		Location		[272, 537, 1491, 1090]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "AloAhi"
		  Position		  [40, 48, 70, 62]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "BloBhi"
		  Position		  [40, 153, 70, 167]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [40, 273, 70, 287]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Counter"
		  Ports			  [1, 1]
		  Position		  [110, 241, 160, 259]
		  SourceBlock		  "xbsIndex_r4/Counter"
		  SourceType		  "Xilinx Counter Block"
		  infoedit		  "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		  cnt_type		  "Free Running"
		  cnt_to		  "Inf"
		  operation		  "Up"
		  start_count		  "0"
		  cnt_by_val		  "1"
		  arith_type		  "Unsigned"
		  n_bits		  "4"
		  bin_pt		  "0"
		  load_pin		  off
		  rst			  on
		  en			  off
		  explicit_period	  "off"
		  period		  "1"
		  dbl_ovrd		  off
		  use_behavioral_HDL	  off
		  use_rpm		  on
		  implementation	  "Fabric"
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "counter"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "50,18,1,1,white,blue,0,300e9576,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay"
		  Ports			  [1, 1]
		  Position		  [280, 270, 325, 290]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "9"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "45,20,1,1,white,blue,0,45ffbd5e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-9}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Mux"
		  Ports			  [3, 1]
		  Position		  [285, 22, 310, 88]
		  SourceBlock		  "xbsIndex_r4/Mux"
		  SourceType		  "Xilinx Bus Multiplexer Block"
		  inputs		  "2"
		  en			  off
		  latency		  "1"
		  precision		  "Full"
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "8"
		  bin_pt		  "2"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  dbl_ovrd		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "mux"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,66,1,1,white,blue,3,03f9c9b9,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Mux1"
		  Ports			  [3, 1]
		  Position		  [285, 127, 310, 193]
		  SourceBlock		  "xbsIndex_r4/Mux"
		  SourceType		  "Xilinx Bus Multiplexer Block"
		  inputs		  "2"
		  en			  off
		  latency		  "1"
		  precision		  "Full"
		  arith_type		  "Signed  (2's comp)"
		  n_bits		  "8"
		  bin_pt		  "2"
		  quantization		  "Truncate"
		  overflow		  "Wrap"
		  dbl_ovrd		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "mux"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "25,66,1,1,white,blue,3,03f9c9b9,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "delay_b"
		  Ports			  [1, 1]
		  Position		  [115, 144, 175, 176]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "slr depth = 8"
		  UserDataPersistent	  on
		  UserData		  "DataTag28"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "SLR16 Delay"
		  MaskDescription	  "A delay block that uses SLR16 elements for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		  MaskPromptString	  "Delay Depth"
		  MaskStyleString	  "edit"
		  MaskTunableValueString  "off"
		  MaskEnableString	  "off"
		  MaskVisibilityString	  "on"
		  MaskToolTipString	  "on"
		  MaskVariables		  "delay_depth=&1;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8"
		  System {
		    Name		    "delay_b"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "delay_lo"
		  Ports			  [1, 1]
		  Position		  [350, 39, 410, 71]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "slr depth = 8"
		  UserDataPersistent	  on
		  UserData		  "DataTag29"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "SLR16 Delay"
		  MaskDescription	  "A delay block that uses SLR16 elements for its storage."
		  MaskHelp		  "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		  MaskPromptString	  "Delay Depth"
		  MaskStyleString	  "edit"
		  MaskTunableValueString  "off"
		  MaskEnableString	  "off"
		  MaskVisibilityString	  "on"
		  MaskToolTipString	  "on"
		  MaskVariables		  "delay_depth=&1;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8"
		  System {
		    Name		    "delay_lo"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Reference
		  Name			  "top_bit"
		  Ports			  [1, 1]
		  Position		  [195, 242, 230, 258]
		  SourceBlock		  "xbsIndex_r4/Slice"
		  SourceType		  "Xilinx Bit Slice Extractor Block"
		  infoedit		  "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		  nbits			  "1"
		  boolean_output	  off
		  mode			  "Upper Bit Location + Width"
		  bit1			  "0"
		  base1			  "MSB of Input"
		  bit0			  "0"
		  base0			  "LSB of Input"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "slice"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "35,16,1,1,white,blue,0,b1026674,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Outport
		  Name			  "AloBlo"
		  Position		  [605, 48, 635, 62]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "AhiBhi"
		  Position		  [605, 153, 635, 167]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [605, 273, 635, 287]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "Delay"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "delay_lo"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "AloBlo"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Mux"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "delay_lo"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "delay_b"
		  SrcPort		  1
		  Points		  [0, 0; 40, 0]
		  Branch {
		    Points		    [0, -85]
		    DstBlock		    "Mux"
		    DstPort		    3
		  }
		  Branch {
		    DstBlock		    "Mux1"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "BloBhi"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "delay_b"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Mux1"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "AhiBhi"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "AloAhi"
		  SrcPort		  1
		  Points		  [0, 0; 160, 0]
		  Branch {
		    Points		    [0, 125]
		    DstBlock		    "Mux1"
		    DstPort		    3
		  }
		  Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		  }
		}
		Line {
		  SrcBlock		  "top_bit"
		  SrcPort		  1
		  Points		  [15, 0; 0, -110]
		  Branch {
		    Points		    [0, -105]
		    DstBlock		    "Mux"
		    DstPort		    1
		  }
		  Branch {
		    DstBlock		    "Mux1"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "Counter"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "top_bit"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [0, 0; 10, 0]
		  Branch {
		    DstBlock		    "Delay"
		    DstPort		    1
		  }
		  Branch {
		    Points		    [0, -30]
		    DstBlock		    "Counter"
		    DstPort		    1
		  }
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "abcd0"
	      Position		      [545, 43, 575, 57]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "abcd1"
	      Position		      [545, 78, 575, 92]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "abcd2"
	      Position		      [545, 138, 575, 152]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "abcd3"
	      Position		      [545, 173, 575, 187]
	      Port		      "4"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [545, 228, 575, 242]
	      Port		      "5"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "biplex_commutator_01"
	      SrcPort		      3
	      DstBlock		      "Terminator"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "biplex_commutator_23"
	      SrcPort		      3
	      Points		      [25, 0; 0, 50]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [60, 0; 0, -50]
	      Branch {
		DstBlock		"biplex_commutator_bd"
		DstPort			3
	      }
	      Branch {
		Points			[0, -95]
		DstBlock		"biplex_commutator_ac"
		DstPort			3
	      }
	    }
	    Line {
	      SrcBlock		      "d"
	      SrcPort		      1
	      Points		      [35, 0; 0, -10]
	      DstBlock		      "biplex_commutator_bd"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "b"
	      SrcPort		      1
	      Points		      [35, 0; 0, 10]
	      DstBlock		      "biplex_commutator_bd"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "c"
	      SrcPort		      1
	      Points		      [35, 0; 0, -10]
	      DstBlock		      "biplex_commutator_ac"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "biplex_commutator_bd"
	      SrcPort		      3
	      DstBlock		      "biplex_commutator_23"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "biplex_commutator_bd"
	      SrcPort		      2
	      DstBlock		      "biplex_commutator_23"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "biplex_commutator_ac"
	      SrcPort		      3
	      DstBlock		      "biplex_commutator_01"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "biplex_commutator_bd"
	      SrcPort		      1
	      DstBlock		      "biplex_commutator_01"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "biplex_commutator_ac"
	      SrcPort		      2
	      DstBlock		      "biplex_commutator_23"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "biplex_commutator_23"
	      SrcPort		      2
	      Points		      [50, 0; 0, 10]
	      DstBlock		      "abcd3"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "biplex_commutator_23"
	      SrcPort		      1
	      Points		      [50, 0; 0, -10]
	      DstBlock		      "abcd2"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "biplex_commutator_01"
	      SrcPort		      2
	      Points		      [50, 0; 0, 10]
	      DstBlock		      "abcd1"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "biplex_commutator_01"
	      SrcPort		      1
	      Points		      [50, 0; 0, -10]
	      DstBlock		      "abcd0"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "a"
	      SrcPort		      1
	      Points		      [35, 0; 0, 10]
	      DstBlock		      "biplex_commutator_ac"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "biplex_commutator_ac"
	      SrcPort		      1
	      DstBlock		      "biplex_commutator_01"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "r4_dit_stage_1"
	  Ports			  [5, 5]
	  Position		  [100, 50, 200, 130]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "stage 1 of 2\ndelay slr\ntwiddle dist\nshift 0"
	  UserDataPersistent	  on
	  UserData		  "DataTag30"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "Radix-4 DIT FFT Stage"
	  MaskDescription	  "A radix-4 decimation-in-time Fast Fourier Transform stage."
	  MaskHelp		  "<pre>\nDescription::\n\nA radix-4 decimation-in-time Fast Fourier Transform stage.\n\nThis radix-4 decimation-in-time FFT stage is designed to be daisy chained together\nto form a multi-stage FFT.  The resulting FFT will have (4^n_stages) points.\n\nThe four inputs to the chain are independent complex signals (e.g. A, B, C, and D).\n\nThe four outputs of the last stage of the chain are commuted such that the a_out signal is really\nthe first quarter of A's transform followed by the first quarter of B's transform, the first quarter\nof C's transform and the first quarter of D's transform.  b_out is really the seconds quarter of\nA's transform followed by the second quarter of B's transform and so on for the rest of b_out\nas well as c_out and d_out.  Each quarter is in bit-reversed order.\n\nIf it is desired to have the four quarters of A's transform follow each other on the\nsame path (and so on for the transforms of B, C, and D), then a_out and b_out can\nbe fed through a quadplex_commutator with block size 4^n_stages.  This will result\nin the four quarters of A's transform (or B's, C's, D's) being in sequential order,\nbut note that each quarter of A's transform will still remain in bit-reversed order\n(i.e. each output is bit-reversed in quarterss; it is not bit reversed in its entirety).\n\nThe number of bits for each real and imaginary component grows by two through this stage.\nIf the input bit width is 17 or less, three embedded multipliers will be used per complex multiply.\nIf the input bit width is 18, four embedded multipliers will be used per complex multiply.\nIf the input bit width exceeds 18, then substantially more embedded multipliers will be used\nper complex multiply.  Enabling \"shifting\" in some (or all) stages can limit the bit growth\nto prevent this.\n\nMask Parameters::\n\nTotal Stages (n_stages):  The number of total stages in the FFT.\nThe FFT will have 4^n_stages points.\n\nCurrent Stage (cur_stage):  The number of the current stage.  Note that stages are counted\nfrom 1 to n_stages for DIT (i.e. cur_stage==1 for the first stage).\n\nNumber of Bits In (n_bits): Specifies the width of the real/imaginary components of ports\na_in and b_in.  Assumed equal for both components.  The real/imaginary components of\noorts a_out and b_out will be one bit wider.\n\nBinary Point In (bin_pt): Specifies the binary point position of the real/imaginary\ncomponents of ports a_in and b_in.  Assumed equal for both components.\n\nShift Bits (shift): Specifies how many bits to shift (down) by.  A positive value causes\nthe specified number of least significant bits to be dropped.  Usually zero or positive values\nare used to permit or limit bit growth, but negative values can be used to induce bit growth.\n\nUse BRAM for Biplex Commutator (commutator_bram): Check this checkbox to implement\nthe biplex commutator using BRAM.  If unchecked, the biplex commutator will be implemented\nusing SLR16 elements (i.e. slices).\n\nUse BRAM for Twiddle Coefficients (twiddle_bram): Check this checkbox to store twiddle\ncoefficients in BRAM.  If unchecked, the twiddle coefficients will be sored in distributed\nmemory (i.e. slices).\n\nTwiddle Coefficient Bitwidth (n_bits_w): Specifies the width of the real/imaginary\ncomponents of the twiddle coefficients.  Assumed equal for both components.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
	  MaskPromptString	  "Total Stages (4^N points)|Current Stage|Number of Bits In|Binary Point In|Shift Bits|Use BRAM for Quadplex Commutator|Use BRAM for Twiddle Coefficients|Twiddle Coefficient Bitwidth|Multiplier Latency|Adder Latency"
	  MaskStyleString	  "edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,edit"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "|||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,"
	  MaskVariables		  "n_stages=&1;cur_stage=&2;n_bits=&3;bin_pt=&4;shift=&5;commutator_bram=&6;twiddle_bram=&7;n_bits_w=&8;mult_latency=&9;add_latency=&10;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "2|1|8|7|0|off|off|9|3|1"
	  MaskTabNameString	  ",,,,,,,,,"
	  System {
	    Name		    "r4_dit_stage_1"
	    Location		    [482, 438, 1264, 867]
	    Open		    off
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "a_in"
	      Position		      [25, 53, 55, 67]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "b_in"
	      Position		      [25, 98, 55, 112]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "c_in"
	      Position		      [25, 143, 55, 157]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "d_in"
	      Position		      [25, 188, 55, 202]
	      Port		      "4"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [25, 233, 55, 247]
	      Port		      "5"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "quadplex_commutator"
	      Ports		      [5, 5]
	      Position		      [155, 111, 245, 189]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "size = 16\n0/4 bram"
	      UserDataPersistent      on
	      UserData		      "DataTag31"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Quadplex Commutator"
	      MaskDescription	      "The quadplex commutator performs a \"quarter-blockwise\" commutation of the four inputs.  A \"block\" is 4^log4_size consecutive samples (i.e. always a power of 4).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log4_size)+2^(log4_size-1)+2."
	      MaskHelp		      "<pre>\nDescription::\n\nThe quadplex commutator performs a \"quarter-blockwise\" commutation of the four inputs.\nA \"block\" is 4^log4_size consecutive samples (i.e. always a power of 4).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(log4_size)+2^(log4_size-1)+2.\n\nMask Parameters::\n\nLog4 Block Size (log4_size): The base-4 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 4.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
	      MaskPromptString	      "Log4 Block Size|Bit Width|Use BRAM"
	      MaskStyleString	      "edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off"
	      MaskCallbackString      "||"
	      MaskEnableString	      "off,off,off"
	      MaskVisibilityString    "on,on,on"
	      MaskToolTipString	      "on,on,on"
	      MaskVarAliasString      ",,"
	      MaskVariables	      "log4_size=&1;n_bits=&2;use_bram=&3;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "2|8|off"
	      MaskTabNameString	      ",,"
	      System {
		Name			"quadplex_commutator"
		Location		[475, 316, 1517, 1126]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "a"
		  Position		  [35, 43, 65, 57]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "b"
		  Position		  [35, 138, 65, 152]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "c"
		  Position		  [35, 78, 65, 92]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "d"
		  Position		  [35, 173, 65, 187]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [35, 228, 65, 242]
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Terminator
		  Name			  "Terminator"
		  Position		  [450, 85, 460, 95]
		  ShowName		  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "biplex_commutator_01"
		  Ports			  [3, 3]
		  Position		  [345, 49, 435, 101]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "size = 8\ndelay slr"
		  UserDataPersistent	  on
		  UserData		  "DataTag32"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Biplex Commutator"
		  MaskDescription	  "The biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half of the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a power of 2).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log2_size-1)+1."
		  MaskHelp		  "<pre>\nDescription::\n\nThe biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half\nof the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a\npower of 2).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(N-1)+1.\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
		  MaskPromptString	  "Log2 Block Size|Bit Width|Use BRAM"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "log2_size=&1;n_bits=&2;use_bram=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|8|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "biplex_commutator_01"
		    Location		    [475, 316, 1517, 1126]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "AloAhi"
		    Position		    [40, 48, 70, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "BloBhi"
		    Position		    [40, 153, 70, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [40, 273, 70, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [110, 241, 160, 259]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Free Running"
		    cnt_to		    "Inf"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "3"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [280, 270, 325, 290]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "5"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,20,1,1,white,blue,0,4edfc01c,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-5}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux"
		    Ports		    [3, 1]
		    Position		    [285, 22, 310, 88]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux1"
		    Ports		    [3, 1]
		    Position		    [285, 127, 310, 193]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_b"
		    Ports		    [1, 1]
		    Position		    [115, 144, 175, 176]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 4"
		    UserDataPersistent	    on
		    UserData		    "DataTag33"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "4"
		    System {
		    Name		    "delay_b"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "4"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,c2217bc4,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_lo"
		    Ports		    [1, 1]
		    Position		    [350, 39, 410, 71]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 4"
		    UserDataPersistent	    on
		    UserData		    "DataTag34"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "4"
		    System {
		    Name		    "delay_lo"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "4"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,c2217bc4,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "top_bit"
		    Ports		    [1, 1]
		    Position		    [195, 242, 230, 258]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "1"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "35,16,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AloBlo"
		    Position		    [605, 48, 635, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AhiBhi"
		    Position		    [605, 153, 635, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [605, 273, 635, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_lo"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AloBlo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_lo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_b"
		    SrcPort		    1
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, -85]
		    DstBlock		    "Mux"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "BloBhi"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AhiBhi"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "AloAhi"
		    SrcPort		    1
		    Points		    [0, 0; 160, 0]
		    Branch {
		    Points		    [0, 125]
		    DstBlock		    "Mux1"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "top_bit"
		    SrcPort		    1
		    Points		    [15, 0; 0, -110]
		    Branch {
		    Points		    [0, -105]
		    DstBlock		    "Mux"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "top_bit"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    Points		    [0, 0; 10, 0]
		    Branch {
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -30]
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "biplex_commutator_23"
		  Ports			  [3, 3]
		  Position		  [345, 144, 435, 196]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "size = 8\ndelay slr"
		  UserDataPersistent	  on
		  UserData		  "DataTag35"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Biplex Commutator"
		  MaskDescription	  "The biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half of the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a power of 2).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log2_size-1)+1."
		  MaskHelp		  "<pre>\nDescription::\n\nThe biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half\nof the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a\npower of 2).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(N-1)+1.\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
		  MaskPromptString	  "Log2 Block Size|Bit Width|Use BRAM"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "log2_size=&1;n_bits=&2;use_bram=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "3|8|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "biplex_commutator_23"
		    Location		    [272, 537, 1491, 1090]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "AloAhi"
		    Position		    [40, 48, 70, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "BloBhi"
		    Position		    [40, 153, 70, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [40, 273, 70, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [110, 241, 160, 259]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Free Running"
		    cnt_to		    "Inf"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "3"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [280, 270, 325, 290]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "5"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,20,1,1,white,blue,0,4edfc01c,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-5}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux"
		    Ports		    [3, 1]
		    Position		    [285, 22, 310, 88]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux1"
		    Ports		    [3, 1]
		    Position		    [285, 127, 310, 193]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_b"
		    Ports		    [1, 1]
		    Position		    [115, 144, 175, 176]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 4"
		    UserDataPersistent	    on
		    UserData		    "DataTag36"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "4"
		    System {
		    Name		    "delay_b"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "4"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,c2217bc4,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_lo"
		    Ports		    [1, 1]
		    Position		    [350, 39, 410, 71]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 4"
		    UserDataPersistent	    on
		    UserData		    "DataTag37"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "4"
		    System {
		    Name		    "delay_lo"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "4"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,c2217bc4,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-4}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "top_bit"
		    Ports		    [1, 1]
		    Position		    [195, 242, 230, 258]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "1"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "35,16,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AloBlo"
		    Position		    [605, 48, 635, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AhiBhi"
		    Position		    [605, 153, 635, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [605, 273, 635, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_lo"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AloBlo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_lo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_b"
		    SrcPort		    1
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, -85]
		    DstBlock		    "Mux"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "BloBhi"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AhiBhi"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "AloAhi"
		    SrcPort		    1
		    Points		    [0, 0; 160, 0]
		    Branch {
		    Points		    [0, 125]
		    DstBlock		    "Mux1"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "top_bit"
		    SrcPort		    1
		    Points		    [15, 0; 0, -110]
		    Branch {
		    Points		    [0, -105]
		    DstBlock		    "Mux"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "top_bit"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    Points		    [0, 0; 10, 0]
		    Branch {
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -30]
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "biplex_commutator_ac"
		  Ports			  [3, 3]
		  Position		  [155, 49, 245, 101]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "size = 16\ndelay slr"
		  UserDataPersistent	  on
		  UserData		  "DataTag38"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Biplex Commutator"
		  MaskDescription	  "The biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half of the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a power of 2).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log2_size-1)+1."
		  MaskHelp		  "<pre>\nDescription::\n\nThe biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half\nof the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a\npower of 2).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(N-1)+1.\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
		  MaskPromptString	  "Log2 Block Size|Bit Width|Use BRAM"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "log2_size=&1;n_bits=&2;use_bram=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "4|8|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "biplex_commutator_ac"
		    Location		    [272, 537, 1491, 1090]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "AloAhi"
		    Position		    [40, 48, 70, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "BloBhi"
		    Position		    [40, 153, 70, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [40, 273, 70, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [110, 241, 160, 259]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Free Running"
		    cnt_to		    "Inf"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "4"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [280, 270, 325, 290]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "9"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,20,1,1,white,blue,0,45ffbd5e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-9}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux"
		    Ports		    [3, 1]
		    Position		    [285, 22, 310, 88]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux1"
		    Ports		    [3, 1]
		    Position		    [285, 127, 310, 193]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_b"
		    Ports		    [1, 1]
		    Position		    [115, 144, 175, 176]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 8"
		    UserDataPersistent	    on
		    UserData		    "DataTag39"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "8"
		    System {
		    Name		    "delay_b"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_lo"
		    Ports		    [1, 1]
		    Position		    [350, 39, 410, 71]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 8"
		    UserDataPersistent	    on
		    UserData		    "DataTag40"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "8"
		    System {
		    Name		    "delay_lo"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "top_bit"
		    Ports		    [1, 1]
		    Position		    [195, 242, 230, 258]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "1"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "35,16,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AloBlo"
		    Position		    [605, 48, 635, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AhiBhi"
		    Position		    [605, 153, 635, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [605, 273, 635, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_lo"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AloBlo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_lo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_b"
		    SrcPort		    1
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, -85]
		    DstBlock		    "Mux"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "BloBhi"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AhiBhi"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "AloAhi"
		    SrcPort		    1
		    Points		    [0, 0; 160, 0]
		    Branch {
		    Points		    [0, 125]
		    DstBlock		    "Mux1"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "top_bit"
		    SrcPort		    1
		    Points		    [15, 0; 0, -110]
		    Branch {
		    Points		    [0, -105]
		    DstBlock		    "Mux"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "top_bit"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    Points		    [0, 0; 10, 0]
		    Branch {
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -30]
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "biplex_commutator_bd"
		  Ports			  [3, 3]
		  Position		  [155, 144, 245, 196]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "size = 16\ndelay slr"
		  UserDataPersistent	  on
		  UserData		  "DataTag41"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Biplex Commutator"
		  MaskDescription	  "The biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half of the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a power of 2).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log2_size-1)+1."
		  MaskHelp		  "<pre>\nDescription::\n\nThe biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half\nof the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a\npower of 2).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(N-1)+1.\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
		  MaskPromptString	  "Log2 Block Size|Bit Width|Use BRAM"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "log2_size=&1;n_bits=&2;use_bram=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "4|8|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "biplex_commutator_bd"
		    Location		    [272, 537, 1491, 1090]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "AloAhi"
		    Position		    [40, 48, 70, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "BloBhi"
		    Position		    [40, 153, 70, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [40, 273, 70, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [110, 241, 160, 259]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Free Running"
		    cnt_to		    "Inf"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "4"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [280, 270, 325, 290]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "9"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,20,1,1,white,blue,0,45ffbd5e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-9}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux"
		    Ports		    [3, 1]
		    Position		    [285, 22, 310, 88]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux1"
		    Ports		    [3, 1]
		    Position		    [285, 127, 310, 193]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_b"
		    Ports		    [1, 1]
		    Position		    [115, 144, 175, 176]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 8"
		    UserDataPersistent	    on
		    UserData		    "DataTag42"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "8"
		    System {
		    Name		    "delay_b"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_lo"
		    Ports		    [1, 1]
		    Position		    [350, 39, 410, 71]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 8"
		    UserDataPersistent	    on
		    UserData		    "DataTag43"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "8"
		    System {
		    Name		    "delay_lo"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "top_bit"
		    Ports		    [1, 1]
		    Position		    [195, 242, 230, 258]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "1"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "35,16,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AloBlo"
		    Position		    [605, 48, 635, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AhiBhi"
		    Position		    [605, 153, 635, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [605, 273, 635, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_lo"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AloBlo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_lo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_b"
		    SrcPort		    1
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, -85]
		    DstBlock		    "Mux"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "BloBhi"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AhiBhi"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "AloAhi"
		    SrcPort		    1
		    Points		    [0, 0; 160, 0]
		    Branch {
		    Points		    [0, 125]
		    DstBlock		    "Mux1"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "top_bit"
		    SrcPort		    1
		    Points		    [15, 0; 0, -110]
		    Branch {
		    Points		    [0, -105]
		    DstBlock		    "Mux"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "top_bit"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    Points		    [0, 0; 10, 0]
		    Branch {
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -30]
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "abcd0"
		  Position		  [545, 43, 575, 57]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "abcd1"
		  Position		  [545, 78, 575, 92]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "abcd2"
		  Position		  [545, 138, 575, 152]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "abcd3"
		  Position		  [545, 173, 575, 187]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [545, 228, 575, 242]
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "biplex_commutator_01"
		  SrcPort		  3
		  DstBlock		  "Terminator"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "biplex_commutator_23"
		  SrcPort		  3
		  Points		  [25, 0; 0, 50]
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [60, 0; 0, -50]
		  Branch {
		    DstBlock		    "biplex_commutator_bd"
		    DstPort		    3
		  }
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "biplex_commutator_ac"
		    DstPort		    3
		  }
		}
		Line {
		  SrcBlock		  "d"
		  SrcPort		  1
		  Points		  [35, 0; 0, -10]
		  DstBlock		  "biplex_commutator_bd"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "b"
		  SrcPort		  1
		  Points		  [35, 0; 0, 10]
		  DstBlock		  "biplex_commutator_bd"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c"
		  SrcPort		  1
		  Points		  [35, 0; 0, -10]
		  DstBlock		  "biplex_commutator_ac"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "biplex_commutator_bd"
		  SrcPort		  3
		  DstBlock		  "biplex_commutator_23"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "biplex_commutator_bd"
		  SrcPort		  2
		  DstBlock		  "biplex_commutator_23"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "biplex_commutator_ac"
		  SrcPort		  3
		  DstBlock		  "biplex_commutator_01"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "biplex_commutator_bd"
		  SrcPort		  1
		  DstBlock		  "biplex_commutator_01"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "biplex_commutator_ac"
		  SrcPort		  2
		  DstBlock		  "biplex_commutator_23"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "biplex_commutator_23"
		  SrcPort		  2
		  Points		  [50, 0; 0, 10]
		  DstBlock		  "abcd3"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "biplex_commutator_23"
		  SrcPort		  1
		  Points		  [50, 0; 0, -10]
		  DstBlock		  "abcd2"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "biplex_commutator_01"
		  SrcPort		  2
		  Points		  [50, 0; 0, 10]
		  DstBlock		  "abcd1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "biplex_commutator_01"
		  SrcPort		  1
		  Points		  [50, 0; 0, -10]
		  DstBlock		  "abcd0"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "a"
		  SrcPort		  1
		  Points		  [35, 0; 0, 10]
		  DstBlock		  "biplex_commutator_ac"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "biplex_commutator_ac"
		  SrcPort		  1
		  DstBlock		  "biplex_commutator_01"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "r4_butterfly"
	      Ports		      [5, 5]
	      Position		      [470, 111, 560, 189]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "shift 0"
	      UserDataPersistent      on
	      UserData		      "DataTag44"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Radix-4 Butterfly"
	      MaskDescription	      "The radix-4 butterfly performs a 4 point FFT on its four inputs (a_in,b_in,c_in,d_in), which are assumed to be in normal order.  Its ouputs (a_out,b_out,c_out,d_out) are in bit-reversed order (despite the lexigraphical ordering of the output port names)."
	      MaskHelp		      "<pre>\nDescription::\n\nThe radix-4 butterfly performs a 4 point FFT on its four inputs (a_in,b_in,c_in,d_in),\nwhich are assumed to be in normal order.  Its ouputs (a_out,b_out,c_out,d_out) are\nin bit-reversed order (despite the lexigraphical ordering of the output port names).\n\nThe outputs are two bits wider than the inputs.\nThe output precision (i.e. the number of fractional bits) stays the same.\n\nMask Parameters::\n\nBit Width In (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nShift Bits (shift): Specifies how many bits to shift (down) by.  A positive value causes\nthe specified number of least significant bits to be dropped.  Usually zero or positive values\nare used to permit or limit bit growth, but negative values can be used to induce bit growth.\n\nQuantization (quantization): Specifies quantization handling (when shift bits > 0).\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
	      MaskPromptString	      "Bit Width In|Shift Bits|Quantization|Adder Latency"
	      MaskStyleString	      "edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),edit"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "n_bits=&1;shift=&2;quantization=&3;add_latency=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "8|0|Truncate|1"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"r4_butterfly"
		Location		[475, 316, 1517, 1126]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "a_in"
		  Position		  [35, 83, 65, 97]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "b_in"
		  Position		  [35, 178, 65, 192]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "c_in"
		  Position		  [35, 118, 65, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "d_in"
		  Position		  [35, 213, 65, 227]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [35, 258, 65, 272]
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Terminator
		  Name			  "Terminator"
		  Position		  [440, 125, 450, 135]
		  ShowName		  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "butterfly0"
		  Ports			  [3, 3]
		  Position		  [145, 91, 235, 139]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "shift 0"
		  UserDataPersistent	  on
		  UserData		  "DataTag45"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Radix-2 Butterfly"
		  MaskDescription	  "The radix-2 butterfly produces a+b and a-b outputs for a and b inputs."
		  MaskHelp		  "<pre>\nDescription::\n\nThe radix-2 butterfly produces a+b and a-b outputs for a and b inputs.\nThe outputs are one bit wider than the inputs.\nThe output precision (i.e. the number of fractional bits) stays the same.\n\nMask Parameters::\n\nBit Width In (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nShift Bits (shift): Specifies how many bits to shift (down) by.  A positive value causes\nthe specified number of least significant bits to be dropped.  Usually zero or positive values\nare used to permit or limit bit growth, but negative values can be used to induce bit growth.\n\nQuantization (quantization): Specifies quantization handling (when shift bits > 0).\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
		  MaskPromptString	  "Bit Width In|Shift Bits|Quantization|Adder Latency"
		  MaskStyleString	  "edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),edit"
		  MaskTunableValueString  "off,off,off,off"
		  MaskCallbackString	  "|||"
		  MaskEnableString	  "off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on"
		  MaskToolTipString	  "on,on,on,on"
		  MaskVarAliasString	  ",,,"
		  MaskVariables		  "n_bits=&1;shift=&2;quantization=&3;add_latency=&4;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|0|Truncate|1"
		  MaskTabNameString	  ",,,"
		  System {
		    Name		    "butterfly0"
		    Location		    [475, 316, 1517, 1126]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [35, 88, 65, 102]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [35, 288, 65, 302]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [30, 413, 60, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [340, 397, 385, 443]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,fc531c0e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_im"
		    Ports		    [2, 1]
		    Position		    [235, 117, 285, 168]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_re"
		    Ports		    [2, 1]
		    Position		    [235, 42, 285, 93]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri"
		    Ports		    [1, 2]
		    Position		    [110, 19, 155, 166]
		    AttributesFormatString  "8_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag46"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "8|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri1"
		    Ports		    [1, 2]
		    Position		    [110, 224, 155, 366]
		    AttributesFormatString  "8_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag47"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "8|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant0"
		    Ports		    [1, 1]
		    Position		    [440, 55, 485, 85]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant1"
		    Ports		    [1, 1]
		    Position		    [440, 130, 485, 160]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant2"
		    Ports		    [1, 1]
		    Position		    [445, 235, 490, 265]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant3"
		    Ports		    [1, 1]
		    Position		    [445, 305, 490, 335]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c"
		    Ports		    [2, 1]
		    Position		    [525, 33, 575, 182]
		    UserDataPersistent	    on
		    UserData		    "DataTag48"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c1"
		    Ports		    [2, 1]
		    Position		    [525, 216, 575, 354]
		    UserDataPersistent	    on
		    UserData		    "DataTag49"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c1"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift0"
		    Ports		    [1, 1]
		    Position		    [335, 49, 390, 91]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift1"
		    Ports		    [1, 1]
		    Position		    [335, 124, 390, 166]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift2"
		    Ports		    [1, 1]
		    Position		    [335, 229, 390, 271]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift3"
		    Ports		    [1, 1]
		    Position		    [335, 299, 390, 341]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_im"
		    Ports		    [2, 1]
		    Position		    [235, 292, 285, 343]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_re"
		    Ports		    [2, 1]
		    Position		    [235, 222, 285, 273]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a+b"
		    Position		    [630, 103, 660, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a-b"
		    Position		    [635, 278, 665, 292]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [630, 413, 660, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "shift3"
		    SrcPort		    1
		    DstBlock		    "requant3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_im"
		    SrcPort		    1
		    DstBlock		    "shift3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift2"
		    SrcPort		    1
		    DstBlock		    "requant2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_re"
		    SrcPort		    1
		    DstBlock		    "shift2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift1"
		    SrcPort		    1
		    DstBlock		    "requant1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift0"
		    SrcPort		    1
		    DstBlock		    "requant0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant3"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c1"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant2"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant0"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a-b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a+b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_im"
		    SrcPort		    1
		    DstBlock		    "shift1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_re"
		    SrcPort		    1
		    DstBlock		    "shift0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    2
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, 175]
		    DstBlock		    "sub_im"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_im"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    1
		    Points		    [0, 0; 55, 0]
		    Branch {
		    Points		    [0, 180]
		    DstBlock		    "sub_re"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_re"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    2
		    Points		    [10, 0]
		    Branch {
		    Points		    [0, -175]
		    DstBlock		    "add_im"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_im"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    1
		    Points		    [0, 0; 25, 0]
		    Branch {
		    Points		    [0, -180]
		    DstBlock		    "add_re"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_re"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "c_to_ri1"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "butterfly1"
		  Ports			  [3, 3]
		  Position		  [145, 186, 235, 234]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "shift 0"
		  UserDataPersistent	  on
		  UserData		  "DataTag50"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Radix-2 Butterfly"
		  MaskDescription	  "The radix-2 butterfly produces a+b and a-b outputs for a and b inputs."
		  MaskHelp		  "<pre>\nDescription::\n\nThe radix-2 butterfly produces a+b and a-b outputs for a and b inputs.\nThe outputs are one bit wider than the inputs.\nThe output precision (i.e. the number of fractional bits) stays the same.\n\nMask Parameters::\n\nBit Width In (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nShift Bits (shift): Specifies how many bits to shift (down) by.  A positive value causes\nthe specified number of least significant bits to be dropped.  Usually zero or positive values\nare used to permit or limit bit growth, but negative values can be used to induce bit growth.\n\nQuantization (quantization): Specifies quantization handling (when shift bits > 0).\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
		  MaskPromptString	  "Bit Width In|Shift Bits|Quantization|Adder Latency"
		  MaskStyleString	  "edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),edit"
		  MaskTunableValueString  "off,off,off,off"
		  MaskCallbackString	  "|||"
		  MaskEnableString	  "off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on"
		  MaskToolTipString	  "on,on,on,on"
		  MaskVarAliasString	  ",,,"
		  MaskVariables		  "n_bits=&1;shift=&2;quantization=&3;add_latency=&4;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "8|0|Truncate|1"
		  MaskTabNameString	  ",,,"
		  System {
		    Name		    "butterfly1"
		    Location		    [475, 316, 1517, 1126]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [35, 88, 65, 102]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [35, 288, 65, 302]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [30, 413, 60, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [340, 397, 385, 443]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,fc531c0e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_im"
		    Ports		    [2, 1]
		    Position		    [235, 117, 285, 168]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_re"
		    Ports		    [2, 1]
		    Position		    [235, 42, 285, 93]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri"
		    Ports		    [1, 2]
		    Position		    [110, 19, 155, 166]
		    AttributesFormatString  "8_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag51"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "8|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri1"
		    Ports		    [1, 2]
		    Position		    [110, 224, 155, 366]
		    AttributesFormatString  "8_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag52"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "8|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "8"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant0"
		    Ports		    [1, 1]
		    Position		    [440, 55, 485, 85]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant1"
		    Ports		    [1, 1]
		    Position		    [440, 130, 485, 160]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant2"
		    Ports		    [1, 1]
		    Position		    [445, 235, 490, 265]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant3"
		    Ports		    [1, 1]
		    Position		    [445, 305, 490, 335]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "9"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c"
		    Ports		    [2, 1]
		    Position		    [525, 33, 575, 182]
		    UserDataPersistent	    on
		    UserData		    "DataTag53"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c1"
		    Ports		    [2, 1]
		    Position		    [525, 216, 575, 354]
		    UserDataPersistent	    on
		    UserData		    "DataTag54"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c1"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift0"
		    Ports		    [1, 1]
		    Position		    [335, 49, 390, 91]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift1"
		    Ports		    [1, 1]
		    Position		    [335, 124, 390, 166]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift2"
		    Ports		    [1, 1]
		    Position		    [335, 229, 390, 271]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift3"
		    Ports		    [1, 1]
		    Position		    [335, 299, 390, 341]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_im"
		    Ports		    [2, 1]
		    Position		    [235, 292, 285, 343]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_re"
		    Ports		    [2, 1]
		    Position		    [235, 222, 285, 273]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a+b"
		    Position		    [630, 103, 660, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a-b"
		    Position		    [635, 278, 665, 292]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [630, 413, 660, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "shift3"
		    SrcPort		    1
		    DstBlock		    "requant3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_im"
		    SrcPort		    1
		    DstBlock		    "shift3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift2"
		    SrcPort		    1
		    DstBlock		    "requant2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_re"
		    SrcPort		    1
		    DstBlock		    "shift2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift1"
		    SrcPort		    1
		    DstBlock		    "requant1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift0"
		    SrcPort		    1
		    DstBlock		    "requant0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant3"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c1"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant2"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant0"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a-b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a+b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_im"
		    SrcPort		    1
		    DstBlock		    "shift1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_re"
		    SrcPort		    1
		    DstBlock		    "shift0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    2
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, 175]
		    DstBlock		    "sub_im"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_im"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    1
		    Points		    [0, 0; 55, 0]
		    Branch {
		    Points		    [0, 180]
		    DstBlock		    "sub_re"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_re"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    2
		    Points		    [10, 0]
		    Branch {
		    Points		    [0, -175]
		    DstBlock		    "add_im"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_im"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    1
		    Points		    [0, 0; 25, 0]
		    Branch {
		    Points		    [0, -180]
		    DstBlock		    "add_re"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_re"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "c_to_ri1"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "butterfly2"
		  Ports			  [3, 3]
		  Position		  [335, 91, 425, 139]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "shift 0"
		  UserDataPersistent	  on
		  UserData		  "DataTag55"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Radix-2 Butterfly"
		  MaskDescription	  "The radix-2 butterfly produces a+b and a-b outputs for a and b inputs."
		  MaskHelp		  "<pre>\nDescription::\n\nThe radix-2 butterfly produces a+b and a-b outputs for a and b inputs.\nThe outputs are one bit wider than the inputs.\nThe output precision (i.e. the number of fractional bits) stays the same.\n\nMask Parameters::\n\nBit Width In (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nShift Bits (shift): Specifies how many bits to shift (down) by.  A positive value causes\nthe specified number of least significant bits to be dropped.  Usually zero or positive values\nare used to permit or limit bit growth, but negative values can be used to induce bit growth.\n\nQuantization (quantization): Specifies quantization handling (when shift bits > 0).\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
		  MaskPromptString	  "Bit Width In|Shift Bits|Quantization|Adder Latency"
		  MaskStyleString	  "edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),edit"
		  MaskTunableValueString  "off,off,off,off"
		  MaskCallbackString	  "|||"
		  MaskEnableString	  "off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on"
		  MaskToolTipString	  "on,on,on,on"
		  MaskVarAliasString	  ",,,"
		  MaskVariables		  "n_bits=&1;shift=&2;quantization=&3;add_latency=&4;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "9|0|Truncate|1"
		  MaskTabNameString	  ",,,"
		  System {
		    Name		    "butterfly2"
		    Location		    [48, 133, 782, 642]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [35, 88, 65, 102]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [35, 288, 65, 302]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [30, 413, 60, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [340, 397, 385, 443]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,fc531c0e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_im"
		    Ports		    [2, 1]
		    Position		    [235, 117, 285, 168]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_re"
		    Ports		    [2, 1]
		    Position		    [235, 42, 285, 93]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri"
		    Ports		    [1, 2]
		    Position		    [110, 19, 155, 166]
		    AttributesFormatString  "9_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag56"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "9|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri1"
		    Ports		    [1, 2]
		    Position		    [110, 224, 155, 366]
		    AttributesFormatString  "9_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag57"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "9|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant0"
		    Ports		    [1, 1]
		    Position		    [440, 55, 485, 85]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant1"
		    Ports		    [1, 1]
		    Position		    [440, 130, 485, 160]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant2"
		    Ports		    [1, 1]
		    Position		    [445, 235, 490, 265]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant3"
		    Ports		    [1, 1]
		    Position		    [445, 305, 490, 335]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c"
		    Ports		    [2, 1]
		    Position		    [525, 33, 575, 182]
		    UserDataPersistent	    on
		    UserData		    "DataTag58"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c1"
		    Ports		    [2, 1]
		    Position		    [525, 216, 575, 354]
		    UserDataPersistent	    on
		    UserData		    "DataTag59"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c1"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift0"
		    Ports		    [1, 1]
		    Position		    [335, 49, 390, 91]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift1"
		    Ports		    [1, 1]
		    Position		    [335, 124, 390, 166]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift2"
		    Ports		    [1, 1]
		    Position		    [335, 229, 390, 271]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift3"
		    Ports		    [1, 1]
		    Position		    [335, 299, 390, 341]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_im"
		    Ports		    [2, 1]
		    Position		    [235, 292, 285, 343]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_re"
		    Ports		    [2, 1]
		    Position		    [235, 222, 285, 273]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a+b"
		    Position		    [630, 103, 660, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a-b"
		    Position		    [635, 278, 665, 292]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [630, 413, 660, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "shift3"
		    SrcPort		    1
		    DstBlock		    "requant3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_im"
		    SrcPort		    1
		    DstBlock		    "shift3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift2"
		    SrcPort		    1
		    DstBlock		    "requant2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_re"
		    SrcPort		    1
		    DstBlock		    "shift2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift1"
		    SrcPort		    1
		    DstBlock		    "requant1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift0"
		    SrcPort		    1
		    DstBlock		    "requant0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant3"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c1"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant2"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant0"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a-b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a+b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_im"
		    SrcPort		    1
		    DstBlock		    "shift1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_re"
		    SrcPort		    1
		    DstBlock		    "shift0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    2
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, 175]
		    DstBlock		    "sub_im"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_im"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    1
		    Points		    [0, 0; 55, 0]
		    Branch {
		    Points		    [0, 180]
		    DstBlock		    "sub_re"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_re"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    2
		    Points		    [10, 0]
		    Branch {
		    Points		    [0, -175]
		    DstBlock		    "add_im"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_im"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    1
		    Points		    [0, 0; 25, 0]
		    Branch {
		    Points		    [0, -180]
		    DstBlock		    "add_re"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_re"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "c_to_ri1"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "butterfly3j"
		  Ports			  [3, 3]
		  Position		  [335, 186, 425, 234]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "shift 0"
		  UserDataPersistent	  on
		  UserData		  "DataTag60"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Radix-2 Butterfly with fixed -j twiddle (DIT, twiddle before butterfly)"
		  MaskDescription	  "The radix-2 butterfly with fixed DIT -j twiddle produces a-jb on the a+b output and a+jb on the a-b output for a and b inputs.  It is intended for use within a radix-4 butterfly."
		  MaskHelp		  "<pre>\nDescription::\n\nThe radix-2 butterfly with fixed DIT -j twiddle produces a-jb on the a+b output\nand a+jb on the a-b output for a and b inputs.\n\nIt is intended for use within a radix-4 butterfly.\n\nThe outputs are one bit wider than the inputs.\nThe output precision (i.e. the number of fractional bits) stays the same.\n\nMask Parameters::\n\nBit Width In (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nShift Bits (shift): Specifies how many bits to shift (down) by.  A positive value causes\nthe specified number of least significant bits to be dropped.  Usually zero or positive values\nare used to permit or limit bit growth, but negative values can be used to induce bit growth.\n\nQuantization (quantization): Specifies quantization handling (when shift bits > 0).\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
		  MaskPromptString	  "Bit Width In|Shift Bits|Quantization|Adder Latency"
		  MaskStyleString	  "edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),edit"
		  MaskTunableValueString  "off,off,off,off"
		  MaskCallbackString	  "|||"
		  MaskEnableString	  "off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on"
		  MaskToolTipString	  "on,on,on,on"
		  MaskVarAliasString	  ",,,"
		  MaskVariables		  "n_bits=&1;shift=&2;quantization=&3;add_latency=&4;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "9|0|Truncate|1"
		  MaskTabNameString	  ",,,"
		  System {
		    Name		    "butterfly3j"
		    Location		    [739, 201, 1530, 710]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [35, 88, 65, 102]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [35, 288, 65, 302]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [30, 413, 60, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [345, 397, 390, 443]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,fc531c0e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_im"
		    Ports		    [2, 1]
		    Position		    [235, 117, 285, 168]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_re"
		    Ports		    [2, 1]
		    Position		    [235, 42, 285, 93]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri"
		    Ports		    [1, 2]
		    Position		    [110, 19, 155, 166]
		    AttributesFormatString  "9_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag61"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "9|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri1"
		    Ports		    [1, 2]
		    Position		    [110, 224, 155, 366]
		    AttributesFormatString  "9_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag62"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "9|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant0"
		    Ports		    [1, 1]
		    Position		    [445, 55, 490, 85]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant1"
		    Ports		    [1, 1]
		    Position		    [445, 130, 490, 160]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant2"
		    Ports		    [1, 1]
		    Position		    [450, 235, 495, 265]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant3"
		    Ports		    [1, 1]
		    Position		    [450, 305, 495, 335]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c"
		    Ports		    [2, 1]
		    Position		    [545, 33, 595, 182]
		    UserDataPersistent	    on
		    UserData		    "DataTag63"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c1"
		    Ports		    [2, 1]
		    Position		    [545, 216, 595, 354]
		    UserDataPersistent	    on
		    UserData		    "DataTag64"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c1"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift0"
		    Ports		    [1, 1]
		    Position		    [340, 49, 395, 91]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift1"
		    Ports		    [1, 1]
		    Position		    [340, 124, 395, 166]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift2"
		    Ports		    [1, 1]
		    Position		    [340, 229, 395, 271]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift3"
		    Ports		    [1, 1]
		    Position		    [340, 299, 395, 341]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_im"
		    Ports		    [2, 1]
		    Position		    [235, 222, 285, 273]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_re"
		    Ports		    [2, 1]
		    Position		    [235, 292, 285, 343]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a+b"
		    Position		    [650, 103, 680, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a-b"
		    Position		    [655, 278, 685, 292]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [655, 413, 685, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "requant3"
		    SrcPort		    1
		    DstBlock		    "ri_to_c1"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant2"
		    SrcPort		    1
		    DstBlock		    "ri_to_c1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant1"
		    SrcPort		    1
		    DstBlock		    "ri_to_c"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant0"
		    SrcPort		    1
		    DstBlock		    "ri_to_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift3"
		    SrcPort		    1
		    DstBlock		    "requant3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift2"
		    SrcPort		    1
		    DstBlock		    "requant2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift1"
		    SrcPort		    1
		    DstBlock		    "requant1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift0"
		    SrcPort		    1
		    DstBlock		    "requant0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_im"
		    SrcPort		    1
		    DstBlock		    "shift3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_re"
		    SrcPort		    1
		    DstBlock		    "shift2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "c_to_ri1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    1
		    Points		    [40, 0]
		    Branch {
		    Points		    [0, -105]
		    DstBlock		    "add_im"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_im"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    2
		    Points		    [10, 0]
		    Branch {
		    Points		    [0, -250]
		    DstBlock		    "add_re"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_re"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    1
		    Points		    [25, 0]
		    Branch {
		    Points		    [0, 250]
		    DstBlock		    "sub_re"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_re"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    2
		    Points		    [55, 0]
		    Branch {
		    Points		    [0, 105]
		    DstBlock		    "sub_im"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_im"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_re"
		    SrcPort		    1
		    DstBlock		    "shift0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_im"
		    SrcPort		    1
		    DstBlock		    "shift1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a+b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a-b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "a_out"
		  Position		  [510, 83, 540, 97]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "b_out"
		  Position		  [510, 118, 540, 132]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "c_out"
		  Position		  [510, 173, 540, 187]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "d_out"
		  Position		  [510, 218, 540, 232]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [510, 258, 540, 272]
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "butterfly2"
		  SrcPort		  3
		  DstBlock		  "Terminator"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "butterfly3j"
		  SrcPort		  3
		  Points		  [30, 0; 0, 40]
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [45, 0; 0, -40]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "butterfly0"
		    DstPort		    3
		  }
		  Branch {
		    DstBlock		    "butterfly1"
		    DstPort		    3
		  }
		}
		Line {
		  SrcBlock		  "butterfly3j"
		  SrcPort		  2
		  Points		  [50, 0; 0, 15]
		  DstBlock		  "d_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "butterfly3j"
		  SrcPort		  1
		  Points		  [50, 0; 0, -15]
		  DstBlock		  "c_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "butterfly2"
		  SrcPort		  2
		  Points		  [50, 0; 0, 10]
		  DstBlock		  "b_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "butterfly2"
		  SrcPort		  1
		  Points		  [50, 0; 0, -10]
		  DstBlock		  "a_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "b_in"
		  SrcPort		  1
		  Points		  [15, 0; 0, 10]
		  DstBlock		  "butterfly1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "d_in"
		  SrcPort		  1
		  Points		  [15, 0; 0, -10]
		  DstBlock		  "butterfly1"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "c_in"
		  SrcPort		  1
		  Points		  [15, 0; 0, -10]
		  DstBlock		  "butterfly0"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "a_in"
		  SrcPort		  1
		  Points		  [15, 0; 0, 10]
		  DstBlock		  "butterfly0"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "butterfly1"
		  SrcPort		  1
		  DstBlock		  "butterfly2"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "butterfly0"
		  SrcPort		  2
		  DstBlock		  "butterfly3j"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "butterfly0"
		  SrcPort		  3
		  DstBlock		  "butterfly2"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "butterfly1"
		  SrcPort		  3
		  DstBlock		  "butterfly3j"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "butterfly1"
		  SrcPort		  2
		  DstBlock		  "butterfly3j"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "butterfly0"
		  SrcPort		  1
		  DstBlock		  "butterfly2"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "r4_twiddle"
	      Ports		      [5, 5]
	      Position		      [310, 111, 400, 189]
	      BackgroundColor	      "gray"
	      UserDataPersistent      on
	      UserData		      "DataTag65"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Radix-4 Stage-1 Twiddle Stage"
	      MaskDescription	      "A stage-1 twiddle stage for radix-4 Fast Fourier Transforms. Since there are no twiddles in stage 1 of an FFT, this is just a dummy placeholder block that passes its inputs through to its outputs.    Since it is a no-op, its use is completely optional."
	      MaskHelp		      "<pre>\nDescription::\n\nA stage-1 twiddle stage for radix-4 Fast Fourier Transforms.\n\nSince there are no twiddles in stage 1 of an FFT, this is just a dummy placeholder\nblock that passes its inputs through to its outputs.\n\nSince it is a no-op, its use is completely optional.\n\nNote that stages are counted from 1 to n_stages for DIT (i.e. cur_stage==1 for the first stage)\nand n_stages to 1for DIF (i.e. cur_stage==1 for the last stage).  Therefore, this block, if used,\nshould be the first twiddle stage of a DIT FFT or the last twiddle stage of a DIF FFT.\n\nMask Parameters::\n\n(N/A)"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      System {
		Name			"r4_twiddle"
		Location		[600, 635, 1145, 1064]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "a_in"
		  Position		  [25, 58, 55, 72]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "b_in"
		  Position		  [25, 103, 55, 117]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "c_in"
		  Position		  [25, 148, 55, 162]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "d_in"
		  Position		  [25, 193, 55, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [25, 238, 55, 252]
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "a_out"
		  Position		  [385, 58, 415, 72]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "b_out"
		  Position		  [385, 103, 415, 117]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "c_out"
		  Position		  [385, 148, 415, 162]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "d_out"
		  Position		  [385, 193, 415, 207]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [385, 238, 415, 252]
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "c_in"
		  SrcPort		  1
		  DstBlock		  "c_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "d_in"
		  SrcPort		  1
		  DstBlock		  "d_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "a_in"
		  SrcPort		  1
		  DstBlock		  "a_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "b_in"
		  SrcPort		  1
		  DstBlock		  "b_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "a_out"
	      Position		      [675, 53, 705, 67]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "b_out"
	      Position		      [675, 98, 705, 112]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "c_out"
	      Position		      [675, 143, 705, 157]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "d_out"
	      Position		      [675, 188, 705, 202]
	      Port		      "4"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [675, 233, 705, 247]
	      Port		      "5"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "r4_butterfly"
	      SrcPort		      5
	      Points		      [25, 0; 0, 60]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "r4_butterfly"
	      SrcPort		      4
	      Points		      [65, 0; 0, 30]
	      DstBlock		      "d_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "r4_butterfly"
	      SrcPort		      3
	      Points		      [0, 0]
	      DstBlock		      "c_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "r4_butterfly"
	      SrcPort		      2
	      Points		      [65, 0; 0, -30]
	      DstBlock		      "b_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "r4_butterfly"
	      SrcPort		      1
	      Points		      [25, 0; 0, -60]
	      DstBlock		      "a_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [60, 0; 0, -60]
	      DstBlock		      "quadplex_commutator"
	      DstPort		      5
	    }
	    Line {
	      SrcBlock		      "d_in"
	      SrcPort		      1
	      Points		      [35, 0; 0, -30]
	      DstBlock		      "quadplex_commutator"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "c_in"
	      SrcPort		      1
	      DstBlock		      "quadplex_commutator"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "b_in"
	      SrcPort		      1
	      Points		      [35, 0; 0, 30]
	      DstBlock		      "quadplex_commutator"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "a_in"
	      SrcPort		      1
	      Points		      [60, 0; 0, 60]
	      DstBlock		      "quadplex_commutator"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "r4_twiddle"
	      SrcPort		      5
	      DstBlock		      "r4_butterfly"
	      DstPort		      5
	    }
	    Line {
	      SrcBlock		      "r4_twiddle"
	      SrcPort		      4
	      DstBlock		      "r4_butterfly"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "r4_twiddle"
	      SrcPort		      3
	      DstBlock		      "r4_butterfly"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "r4_twiddle"
	      SrcPort		      2
	      DstBlock		      "r4_butterfly"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "r4_twiddle"
	      SrcPort		      1
	      DstBlock		      "r4_butterfly"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "quadplex_commutator"
	      SrcPort		      5
	      Points		      [0, 0]
	      DstBlock		      "r4_twiddle"
	      DstPort		      5
	    }
	    Line {
	      SrcBlock		      "quadplex_commutator"
	      SrcPort		      4
	      Points		      [0, 0]
	      DstBlock		      "r4_twiddle"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "quadplex_commutator"
	      SrcPort		      3
	      Points		      [0, 0]
	      DstBlock		      "r4_twiddle"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "quadplex_commutator"
	      SrcPort		      2
	      Points		      [0, 0]
	      DstBlock		      "r4_twiddle"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "quadplex_commutator"
	      SrcPort		      1
	      Points		      [0, 0]
	      DstBlock		      "r4_twiddle"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "r4_dit_stage_2"
	  Ports			  [5, 5]
	  Position		  [250, 50, 350, 130]
	  BackgroundColor	  "gray"
	  AttributesFormatString  "stage 2 of 2\ndelay slr\ntwiddle dist\nshift 0"
	  UserDataPersistent	  on
	  UserData		  "DataTag66"
	  MinAlgLoopOccurrences	  off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  MaskType		  "Radix-4 DIT FFT Stage"
	  MaskDescription	  "A radix-4 decimation-in-time Fast Fourier Transform stage."
	  MaskHelp		  "<pre>\nDescription::\n\nA radix-4 decimation-in-time Fast Fourier Transform stage.\n\nThis radix-4 decimation-in-time FFT stage is designed to be daisy chained together\nto form a multi-stage FFT.  The resulting FFT will have (4^n_stages) points.\n\nThe four inputs to the chain are independent complex signals (e.g. A, B, C, and D).\n\nThe four outputs of the last stage of the chain are commuted such that the a_out signal is really\nthe first quarter of A's transform followed by the first quarter of B's transform, the first quarter\nof C's transform and the first quarter of D's transform.  b_out is really the seconds quarter of\nA's transform followed by the second quarter of B's transform and so on for the rest of b_out\nas well as c_out and d_out.  Each quarter is in bit-reversed order.\n\nIf it is desired to have the four quarters of A's transform follow each other on the\nsame path (and so on for the transforms of B, C, and D), then a_out and b_out can\nbe fed through a quadplex_commutator with block size 4^n_stages.  This will result\nin the four quarters of A's transform (or B's, C's, D's) being in sequential order,\nbut note that each quarter of A's transform will still remain in bit-reversed order\n(i.e. each output is bit-reversed in quarterss; it is not bit reversed in its entirety).\n\nThe number of bits for each real and imaginary component grows by two through this stage.\nIf the input bit width is 17 or less, three embedded multipliers will be used per complex multiply.\nIf the input bit width is 18, four embedded multipliers will be used per complex multiply.\nIf the input bit width exceeds 18, then substantially more embedded multipliers will be used\nper complex multiply.  Enabling \"shifting\" in some (or all) stages can limit the bit growth\nto prevent this.\n\nMask Parameters::\n\nTotal Stages (n_stages):  The number of total stages in the FFT.\nThe FFT will have 4^n_stages points.\n\nCurrent Stage (cur_stage):  The number of the current stage.  Note that stages are counted\nfrom 1 to n_stages for DIT (i.e. cur_stage==1 for the first stage).\n\nNumber of Bits In (n_bits): Specifies the width of the real/imaginary components of ports\na_in and b_in.  Assumed equal for both components.  The real/imaginary components of\noorts a_out and b_out will be one bit wider.\n\nBinary Point In (bin_pt): Specifies the binary point position of the real/imaginary\ncomponents of ports a_in and b_in.  Assumed equal for both components.\n\nShift Bits (shift): Specifies how many bits to shift (down) by.  A positive value causes\nthe specified number of least significant bits to be dropped.  Usually zero or positive values\nare used to permit or limit bit growth, but negative values can be used to induce bit growth.\n\nUse BRAM for Biplex Commutator (commutator_bram): Check this checkbox to implement\nthe biplex commutator using BRAM.  If unchecked, the biplex commutator will be implemented\nusing SLR16 elements (i.e. slices).\n\nUse BRAM for Twiddle Coefficients (twiddle_bram): Check this checkbox to store twiddle\ncoefficients in BRAM.  If unchecked, the twiddle coefficients will be sored in distributed\nmemory (i.e. slices).\n\nTwiddle Coefficient Bitwidth (n_bits_w): Specifies the width of the real/imaginary\ncomponents of the twiddle coefficients.  Assumed equal for both components.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
	  MaskPromptString	  "Total Stages (4^N points)|Current Stage|Number of Bits In|Binary Point In|Shift Bits|Use BRAM for Quadplex Commutator|Use BRAM for Twiddle Coefficients|Twiddle Coefficient Bitwidth|Multiplier Latency|Adder Latency"
	  MaskStyleString	  "edit,edit,edit,edit,edit,checkbox,checkbox,edit,edit,edit"
	  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off"
	  MaskCallbackString	  "|||||||||"
	  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off"
	  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on"
	  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on"
	  MaskVarAliasString	  ",,,,,,,,,"
	  MaskVariables		  "n_stages=&1;cur_stage=&2;n_bits=&3;bin_pt=&4;shift=&5;commutator_bram=&6;twiddle_bram=&7;n_bits_w=&8;mult_latency=&9;add_latency=&10;"
	  MaskSelfModifiable	  on
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskIconUnits		  "autoscale"
	  MaskValueString	  "2|2|10|7|0|off|off|9|3|1"
	  MaskTabNameString	  ",,,,,,,,,"
	  System {
	    Name		    "r4_dit_stage_2"
	    Location		    [475, 316, 1517, 1126]
	    Open		    off
	    ModelBrowserVisibility  on
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "a_in"
	      Position		      [25, 53, 55, 67]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "b_in"
	      Position		      [25, 98, 55, 112]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "c_in"
	      Position		      [25, 143, 55, 157]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "d_in"
	      Position		      [25, 188, 55, 202]
	      Port		      "4"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "sync_in"
	      Position		      [25, 233, 55, 247]
	      Port		      "5"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "quadplex_commutator"
	      Ports		      [5, 5]
	      Position		      [155, 111, 245, 189]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "size = 4\n0/4 bram"
	      UserDataPersistent      on
	      UserData		      "DataTag67"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Quadplex Commutator"
	      MaskDescription	      "The quadplex commutator performs a \"quarter-blockwise\" commutation of the four inputs.  A \"block\" is 4^log4_size consecutive samples (i.e. always a power of 4).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log4_size)+2^(log4_size-1)+2."
	      MaskHelp		      "<pre>\nDescription::\n\nThe quadplex commutator performs a \"quarter-blockwise\" commutation of the four inputs.\nA \"block\" is 4^log4_size consecutive samples (i.e. always a power of 4).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(log4_size)+2^(log4_size-1)+2.\n\nMask Parameters::\n\nLog4 Block Size (log4_size): The base-4 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 4.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
	      MaskPromptString	      "Log4 Block Size|Bit Width|Use BRAM"
	      MaskStyleString	      "edit,edit,checkbox"
	      MaskTunableValueString  "off,off,off"
	      MaskCallbackString      "||"
	      MaskEnableString	      "off,off,off"
	      MaskVisibilityString    "on,on,on"
	      MaskToolTipString	      "on,on,on"
	      MaskVarAliasString      ",,"
	      MaskVariables	      "log4_size=&1;n_bits=&2;use_bram=&3;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "1|10|off"
	      MaskTabNameString	      ",,"
	      System {
		Name			"quadplex_commutator"
		Location		[685, 365, 1491, 1090]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "a"
		  Position		  [35, 43, 65, 57]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "b"
		  Position		  [35, 138, 65, 152]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "c"
		  Position		  [35, 78, 65, 92]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "d"
		  Position		  [35, 173, 65, 187]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [35, 228, 65, 242]
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Terminator
		  Name			  "Terminator"
		  Position		  [450, 85, 460, 95]
		  ShowName		  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "biplex_commutator_01"
		  Ports			  [3, 3]
		  Position		  [345, 49, 435, 101]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "size = 2\ndelay slr"
		  UserDataPersistent	  on
		  UserData		  "DataTag68"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Biplex Commutator"
		  MaskDescription	  "The biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half of the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a power of 2).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log2_size-1)+1."
		  MaskHelp		  "<pre>\nDescription::\n\nThe biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half\nof the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a\npower of 2).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(N-1)+1.\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
		  MaskPromptString	  "Log2 Block Size|Bit Width|Use BRAM"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "log2_size=&1;n_bits=&2;use_bram=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "1|10|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "biplex_commutator_01"
		    Location		    [272, 537, 1491, 1090]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "AloAhi"
		    Position		    [40, 48, 70, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "BloBhi"
		    Position		    [40, 153, 70, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [40, 273, 70, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [110, 241, 160, 259]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Free Running"
		    cnt_to		    "Inf"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "1"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [280, 270, 325, 290]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "2"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,20,1,1,white,blue,0,0a7a6cf1,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-2}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux"
		    Ports		    [3, 1]
		    Position		    [285, 22, 310, 88]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux1"
		    Ports		    [3, 1]
		    Position		    [285, 127, 310, 193]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_b"
		    Ports		    [1, 1]
		    Position		    [115, 144, 175, 176]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 1"
		    UserDataPersistent	    on
		    UserData		    "DataTag69"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "1"
		    System {
		    Name		    "delay_b"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,fc531c0e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_lo"
		    Ports		    [1, 1]
		    Position		    [350, 39, 410, 71]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 1"
		    UserDataPersistent	    on
		    UserData		    "DataTag70"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "1"
		    System {
		    Name		    "delay_lo"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,fc531c0e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "top_bit"
		    Ports		    [1, 1]
		    Position		    [195, 242, 230, 258]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "1"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "35,16,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AloBlo"
		    Position		    [605, 48, 635, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AhiBhi"
		    Position		    [605, 153, 635, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [605, 273, 635, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_lo"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AloBlo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_lo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_b"
		    SrcPort		    1
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, -85]
		    DstBlock		    "Mux"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "BloBhi"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AhiBhi"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "AloAhi"
		    SrcPort		    1
		    Points		    [0, 0; 160, 0]
		    Branch {
		    Points		    [0, 125]
		    DstBlock		    "Mux1"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "top_bit"
		    SrcPort		    1
		    Points		    [15, 0; 0, -110]
		    Branch {
		    Points		    [0, -105]
		    DstBlock		    "Mux"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "top_bit"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    Points		    [0, 0; 10, 0]
		    Branch {
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -30]
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "biplex_commutator_23"
		  Ports			  [3, 3]
		  Position		  [345, 144, 435, 196]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "size = 2\ndelay slr"
		  UserDataPersistent	  on
		  UserData		  "DataTag71"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Biplex Commutator"
		  MaskDescription	  "The biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half of the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a power of 2).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log2_size-1)+1."
		  MaskHelp		  "<pre>\nDescription::\n\nThe biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half\nof the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a\npower of 2).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(N-1)+1.\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
		  MaskPromptString	  "Log2 Block Size|Bit Width|Use BRAM"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "log2_size=&1;n_bits=&2;use_bram=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "1|10|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "biplex_commutator_23"
		    Location		    [272, 537, 1491, 1090]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "AloAhi"
		    Position		    [40, 48, 70, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "BloBhi"
		    Position		    [40, 153, 70, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [40, 273, 70, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [110, 241, 160, 259]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Free Running"
		    cnt_to		    "Inf"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "1"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [280, 270, 325, 290]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "2"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,20,1,1,white,blue,0,0a7a6cf1,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-2}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux"
		    Ports		    [3, 1]
		    Position		    [285, 22, 310, 88]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux1"
		    Ports		    [3, 1]
		    Position		    [285, 127, 310, 193]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_b"
		    Ports		    [1, 1]
		    Position		    [115, 144, 175, 176]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 1"
		    UserDataPersistent	    on
		    UserData		    "DataTag72"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "1"
		    System {
		    Name		    "delay_b"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,fc531c0e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_lo"
		    Ports		    [1, 1]
		    Position		    [350, 39, 410, 71]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 1"
		    UserDataPersistent	    on
		    UserData		    "DataTag73"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "1"
		    System {
		    Name		    "delay_lo"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,fc531c0e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "top_bit"
		    Ports		    [1, 1]
		    Position		    [195, 242, 230, 258]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "1"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "35,16,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AloBlo"
		    Position		    [605, 48, 635, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AhiBhi"
		    Position		    [605, 153, 635, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [605, 273, 635, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_lo"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AloBlo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_lo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_b"
		    SrcPort		    1
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, -85]
		    DstBlock		    "Mux"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "BloBhi"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AhiBhi"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "AloAhi"
		    SrcPort		    1
		    Points		    [0, 0; 160, 0]
		    Branch {
		    Points		    [0, 125]
		    DstBlock		    "Mux1"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "top_bit"
		    SrcPort		    1
		    Points		    [15, 0; 0, -110]
		    Branch {
		    Points		    [0, -105]
		    DstBlock		    "Mux"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "top_bit"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    Points		    [0, 0; 10, 0]
		    Branch {
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -30]
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "biplex_commutator_ac"
		  Ports			  [3, 3]
		  Position		  [155, 49, 245, 101]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "size = 4\ndelay slr"
		  UserDataPersistent	  on
		  UserData		  "DataTag74"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Biplex Commutator"
		  MaskDescription	  "The biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half of the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a power of 2).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log2_size-1)+1."
		  MaskHelp		  "<pre>\nDescription::\n\nThe biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half\nof the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a\npower of 2).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(N-1)+1.\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
		  MaskPromptString	  "Log2 Block Size|Bit Width|Use BRAM"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "log2_size=&1;n_bits=&2;use_bram=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "2|10|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "biplex_commutator_ac"
		    Location		    [272, 537, 1491, 1090]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "AloAhi"
		    Position		    [40, 48, 70, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "BloBhi"
		    Position		    [40, 153, 70, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [40, 273, 70, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [110, 241, 160, 259]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Free Running"
		    cnt_to		    "Inf"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "2"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [280, 270, 325, 290]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,20,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux"
		    Ports		    [3, 1]
		    Position		    [285, 22, 310, 88]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux1"
		    Ports		    [3, 1]
		    Position		    [285, 127, 310, 193]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_b"
		    Ports		    [1, 1]
		    Position		    [115, 144, 175, 176]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 2"
		    UserDataPersistent	    on
		    UserData		    "DataTag75"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "2"
		    System {
		    Name		    "delay_b"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "2"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,0a7a6cf1,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-2}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_lo"
		    Ports		    [1, 1]
		    Position		    [350, 39, 410, 71]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 2"
		    UserDataPersistent	    on
		    UserData		    "DataTag76"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "2"
		    System {
		    Name		    "delay_lo"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "2"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,0a7a6cf1,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-2}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "top_bit"
		    Ports		    [1, 1]
		    Position		    [195, 242, 230, 258]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "1"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "35,16,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AloBlo"
		    Position		    [605, 48, 635, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AhiBhi"
		    Position		    [605, 153, 635, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [605, 273, 635, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_lo"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AloBlo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_lo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_b"
		    SrcPort		    1
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, -85]
		    DstBlock		    "Mux"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "BloBhi"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AhiBhi"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "AloAhi"
		    SrcPort		    1
		    Points		    [0, 0; 160, 0]
		    Branch {
		    Points		    [0, 125]
		    DstBlock		    "Mux1"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "top_bit"
		    SrcPort		    1
		    Points		    [15, 0; 0, -110]
		    Branch {
		    Points		    [0, -105]
		    DstBlock		    "Mux"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "top_bit"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    Points		    [0, 0; 10, 0]
		    Branch {
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -30]
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "biplex_commutator_bd"
		  Ports			  [3, 3]
		  Position		  [155, 144, 245, 196]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "size = 4\ndelay slr"
		  UserDataPersistent	  on
		  UserData		  "DataTag77"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Biplex Commutator"
		  MaskDescription	  "The biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half of the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a power of 2).  sync_in precedes the first data input sample by one clock cycle.  Overall latency from sync_in to sync_out is 2^(log2_size-1)+1."
		  MaskHelp		  "<pre>\nDescription::\n\nThe biplex commutator commutes the first half of the BloBhi input \"block\"  with the last half\nof the AloAhi input \"block\".  A \"block\" is 2^log2_size consecutive samples (i.e. always a\npower of 2).\n\nsync_in precedes the first data input sample by one clock cycle.\nsync_out precedes the corresponding output sample by one clock cycle.\nOverall latency from sync_in to sync_out is 2^(N-1)+1.\n\nMask Parameters::\n\nLog 2 Block Size (log2_size): The base-2 logarithm of the length of one complete input block.\nThis MUST be an integer because the current implementation requires that\nthe input block size MUST be a power of 2.  (aka \"N\")\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nUse BRAM (use_bram): Check this checkbox to implement the internal delays using BRAM.\nIf unchecked, the internal delays will be implemented using SLR16 elements.\n</pre>"
		  MaskPromptString	  "Log2 Block Size|Bit Width|Use BRAM"
		  MaskStyleString	  "edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off"
		  MaskCallbackString	  "||"
		  MaskEnableString	  "off,off,off"
		  MaskVisibilityString	  "on,on,on"
		  MaskToolTipString	  "on,on,on"
		  MaskVarAliasString	  ",,"
		  MaskVariables		  "log2_size=&1;n_bits=&2;use_bram=&3;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "2|10|off"
		  MaskTabNameString	  ",,"
		  System {
		    Name		    "biplex_commutator_bd"
		    Location		    [272, 537, 1491, 1090]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "AloAhi"
		    Position		    [40, 48, 70, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "BloBhi"
		    Position		    [40, 153, 70, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [40, 273, 70, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [110, 241, 160, 259]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Free Running"
		    cnt_to		    "Inf"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "2"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,18,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [280, 270, 325, 290]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,20,1,1,white,blue,0,eabd56db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux"
		    Ports		    [3, 1]
		    Position		    [285, 22, 310, 88]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Mux1"
		    Ports		    [3, 1]
		    Position		    [285, 127, 310, 193]
		    SourceBlock		    "xbsIndex_r4/Mux"
		    SourceType		    "Xilinx Bus Multiplexer Block"
		    inputs		    "2"
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mux"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "25,66,1,1,white,blue,3,03f9c9b9,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 14.8571 89.1429 104 ],[0.77 0.82 0.91]);\npatch([10 3 14 3 10 22 25 28 41 31 21 14 25 14 21 31 41 28 25 22 10 ],[34 41 52 63 70 70 67 70 70 60 70 63 52 41 34 44 34 34 37 34 34 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 14.8571 89.1429 104 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'sel');\ncolor('black');port_label('input',2,'d0');\ncolor('black');port_label('input',3,'d1');\ncolor('black');disp('\\bf{  z^{-1}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_b"
		    Ports		    [1, 1]
		    Position		    [115, 144, 175, 176]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 2"
		    UserDataPersistent	    on
		    UserData		    "DataTag78"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "2"
		    System {
		    Name		    "delay_b"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "2"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,0a7a6cf1,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-2}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "delay_lo"
		    Ports		    [1, 1]
		    Position		    [350, 39, 410, 71]
		    BackgroundColor	    "gray"
		    AttributesFormatString  "slr depth = 2"
		    UserDataPersistent	    on
		    UserData		    "DataTag79"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "SLR16 Delay"
		    MaskDescription	    "A delay block that uses SLR16 elements for its storage."
		    MaskHelp		    "<pre>\nDescription::\n\nA delay block that uses SLR16 elements for its storage.\n\nMask Parameters::\n\nDelay Depth (delay_depth): The length of the delay.\n</pre>"
		    MaskPromptString	    "Delay Depth"
		    MaskStyleString	    "edit"
		    MaskTunableValueString  "off"
		    MaskEnableString	    "off"
		    MaskVisibilityString    "on"
		    MaskToolTipString	    "on"
		    MaskVariables	    "delay_depth=&1;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "2"
		    System {
		    Name		    "delay_lo"
		    Location		    [433, 403, 932, 623]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "in"
		    Position		    [70, 103, 100, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slr"
		    Ports		    [1, 1]
		    Position		    [220, 87, 265, 133]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "2"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,0a7a6cf1,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-2}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "out"
		    Position		    [390, 103, 420, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slr"
		    SrcPort		    1
		    DstBlock		    "out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "in"
		    SrcPort		    1
		    DstBlock		    "slr"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "top_bit"
		    Ports		    [1, 1]
		    Position		    [195, 242, 230, 258]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "1"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "35,16,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AloBlo"
		    Position		    [605, 48, 635, 62]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "AhiBhi"
		    Position		    [605, 153, 635, 167]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [605, 273, 635, 287]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_lo"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AloBlo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_lo"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "delay_b"
		    SrcPort		    1
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, -85]
		    DstBlock		    "Mux"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "BloBhi"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "delay_b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Mux1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "AhiBhi"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "AloAhi"
		    SrcPort		    1
		    Points		    [0, 0; 160, 0]
		    Branch {
		    Points		    [0, 125]
		    DstBlock		    "Mux1"
		    DstPort		    3
		    }
		    Branch {
		    DstBlock		    "Mux"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "top_bit"
		    SrcPort		    1
		    Points		    [15, 0; 0, -110]
		    Branch {
		    Points		    [0, -105]
		    DstBlock		    "Mux"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "Mux1"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "top_bit"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    Points		    [0, 0; 10, 0]
		    Branch {
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -30]
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "abcd0"
		  Position		  [545, 43, 575, 57]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "abcd1"
		  Position		  [545, 78, 575, 92]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "abcd2"
		  Position		  [545, 138, 575, 152]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "abcd3"
		  Position		  [545, 173, 575, 187]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [545, 228, 575, 242]
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "biplex_commutator_01"
		  SrcPort		  3
		  DstBlock		  "Terminator"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "biplex_commutator_23"
		  SrcPort		  3
		  Points		  [25, 0; 0, 50]
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [60, 0; 0, -50]
		  Branch {
		    DstBlock		    "biplex_commutator_bd"
		    DstPort		    3
		  }
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "biplex_commutator_ac"
		    DstPort		    3
		  }
		}
		Line {
		  SrcBlock		  "d"
		  SrcPort		  1
		  Points		  [35, 0; 0, -10]
		  DstBlock		  "biplex_commutator_bd"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "b"
		  SrcPort		  1
		  Points		  [35, 0; 0, 10]
		  DstBlock		  "biplex_commutator_bd"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "c"
		  SrcPort		  1
		  Points		  [35, 0; 0, -10]
		  DstBlock		  "biplex_commutator_ac"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "biplex_commutator_bd"
		  SrcPort		  3
		  DstBlock		  "biplex_commutator_23"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "biplex_commutator_bd"
		  SrcPort		  2
		  DstBlock		  "biplex_commutator_23"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "biplex_commutator_ac"
		  SrcPort		  3
		  DstBlock		  "biplex_commutator_01"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "biplex_commutator_bd"
		  SrcPort		  1
		  DstBlock		  "biplex_commutator_01"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "biplex_commutator_ac"
		  SrcPort		  2
		  DstBlock		  "biplex_commutator_23"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "biplex_commutator_23"
		  SrcPort		  2
		  Points		  [50, 0; 0, 10]
		  DstBlock		  "abcd3"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "biplex_commutator_23"
		  SrcPort		  1
		  Points		  [50, 0; 0, -10]
		  DstBlock		  "abcd2"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "biplex_commutator_01"
		  SrcPort		  2
		  Points		  [50, 0; 0, 10]
		  DstBlock		  "abcd1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "biplex_commutator_01"
		  SrcPort		  1
		  Points		  [50, 0; 0, -10]
		  DstBlock		  "abcd0"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "a"
		  SrcPort		  1
		  Points		  [35, 0; 0, 10]
		  DstBlock		  "biplex_commutator_ac"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "biplex_commutator_ac"
		  SrcPort		  1
		  DstBlock		  "biplex_commutator_01"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "r4_butterfly"
	      Ports		      [5, 5]
	      Position		      [470, 111, 560, 189]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "shift 0"
	      UserDataPersistent      on
	      UserData		      "DataTag80"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Radix-4 Butterfly"
	      MaskDescription	      "The radix-4 butterfly performs a 4 point FFT on its four inputs (a_in,b_in,c_in,d_in), which are assumed to be in normal order.  Its ouputs (a_out,b_out,c_out,d_out) are in bit-reversed order (despite the lexigraphical ordering of the output port names)."
	      MaskHelp		      "<pre>\nDescription::\n\nThe radix-4 butterfly performs a 4 point FFT on its four inputs (a_in,b_in,c_in,d_in),\nwhich are assumed to be in normal order.  Its ouputs (a_out,b_out,c_out,d_out) are\nin bit-reversed order (despite the lexigraphical ordering of the output port names).\n\nThe outputs are two bits wider than the inputs.\nThe output precision (i.e. the number of fractional bits) stays the same.\n\nMask Parameters::\n\nBit Width In (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nShift Bits (shift): Specifies how many bits to shift (down) by.  A positive value causes\nthe specified number of least significant bits to be dropped.  Usually zero or positive values\nare used to permit or limit bit growth, but negative values can be used to induce bit growth.\n\nQuantization (quantization): Specifies quantization handling (when shift bits > 0).\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
	      MaskPromptString	      "Bit Width In|Shift Bits|Quantization|Adder Latency"
	      MaskStyleString	      "edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),edit"
	      MaskTunableValueString  "off,off,off,off"
	      MaskCallbackString      "|||"
	      MaskEnableString	      "off,off,off,off"
	      MaskVisibilityString    "on,on,on,on"
	      MaskToolTipString	      "on,on,on,on"
	      MaskVarAliasString      ",,,"
	      MaskVariables	      "n_bits=&1;shift=&2;quantization=&3;add_latency=&4;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "10|0|Truncate|1"
	      MaskTabNameString	      ",,,"
	      System {
		Name			"r4_butterfly"
		Location		[475, 316, 1517, 1126]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "a_in"
		  Position		  [35, 83, 65, 97]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "b_in"
		  Position		  [35, 178, 65, 192]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "c_in"
		  Position		  [35, 118, 65, 132]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "d_in"
		  Position		  [35, 213, 65, 227]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [35, 258, 65, 272]
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Terminator
		  Name			  "Terminator"
		  Position		  [440, 125, 450, 135]
		  ShowName		  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "butterfly0"
		  Ports			  [3, 3]
		  Position		  [145, 91, 235, 139]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "shift 0"
		  UserDataPersistent	  on
		  UserData		  "DataTag81"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Radix-2 Butterfly"
		  MaskDescription	  "The radix-2 butterfly produces a+b and a-b outputs for a and b inputs."
		  MaskHelp		  "<pre>\nDescription::\n\nThe radix-2 butterfly produces a+b and a-b outputs for a and b inputs.\nThe outputs are one bit wider than the inputs.\nThe output precision (i.e. the number of fractional bits) stays the same.\n\nMask Parameters::\n\nBit Width In (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nShift Bits (shift): Specifies how many bits to shift (down) by.  A positive value causes\nthe specified number of least significant bits to be dropped.  Usually zero or positive values\nare used to permit or limit bit growth, but negative values can be used to induce bit growth.\n\nQuantization (quantization): Specifies quantization handling (when shift bits > 0).\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
		  MaskPromptString	  "Bit Width In|Shift Bits|Quantization|Adder Latency"
		  MaskStyleString	  "edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),edit"
		  MaskTunableValueString  "off,off,off,off"
		  MaskCallbackString	  "|||"
		  MaskEnableString	  "off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on"
		  MaskToolTipString	  "on,on,on,on"
		  MaskVarAliasString	  ",,,"
		  MaskVariables		  "n_bits=&1;shift=&2;quantization=&3;add_latency=&4;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "10|0|Truncate|1"
		  MaskTabNameString	  ",,,"
		  System {
		    Name		    "butterfly0"
		    Location		    [475, 316, 1517, 1126]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [35, 88, 65, 102]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [35, 288, 65, 302]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [30, 413, 60, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [340, 397, 385, 443]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,fc531c0e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_im"
		    Ports		    [2, 1]
		    Position		    [235, 117, 285, 168]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_re"
		    Ports		    [2, 1]
		    Position		    [235, 42, 285, 93]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri"
		    Ports		    [1, 2]
		    Position		    [110, 19, 155, 166]
		    AttributesFormatString  "10_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag82"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "10|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri1"
		    Ports		    [1, 2]
		    Position		    [110, 224, 155, 366]
		    AttributesFormatString  "10_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag83"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "10|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant0"
		    Ports		    [1, 1]
		    Position		    [440, 55, 485, 85]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "11"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant1"
		    Ports		    [1, 1]
		    Position		    [440, 130, 485, 160]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "11"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant2"
		    Ports		    [1, 1]
		    Position		    [445, 235, 490, 265]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "11"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant3"
		    Ports		    [1, 1]
		    Position		    [445, 305, 490, 335]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "11"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c"
		    Ports		    [2, 1]
		    Position		    [525, 33, 575, 182]
		    UserDataPersistent	    on
		    UserData		    "DataTag84"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c1"
		    Ports		    [2, 1]
		    Position		    [525, 216, 575, 354]
		    UserDataPersistent	    on
		    UserData		    "DataTag85"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c1"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift0"
		    Ports		    [1, 1]
		    Position		    [335, 49, 390, 91]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift1"
		    Ports		    [1, 1]
		    Position		    [335, 124, 390, 166]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift2"
		    Ports		    [1, 1]
		    Position		    [335, 229, 390, 271]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift3"
		    Ports		    [1, 1]
		    Position		    [335, 299, 390, 341]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_im"
		    Ports		    [2, 1]
		    Position		    [235, 292, 285, 343]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_re"
		    Ports		    [2, 1]
		    Position		    [235, 222, 285, 273]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a+b"
		    Position		    [630, 103, 660, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a-b"
		    Position		    [635, 278, 665, 292]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [630, 413, 660, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "shift3"
		    SrcPort		    1
		    DstBlock		    "requant3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_im"
		    SrcPort		    1
		    DstBlock		    "shift3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift2"
		    SrcPort		    1
		    DstBlock		    "requant2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_re"
		    SrcPort		    1
		    DstBlock		    "shift2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift1"
		    SrcPort		    1
		    DstBlock		    "requant1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift0"
		    SrcPort		    1
		    DstBlock		    "requant0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant3"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c1"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant2"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant0"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a-b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a+b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_im"
		    SrcPort		    1
		    DstBlock		    "shift1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_re"
		    SrcPort		    1
		    DstBlock		    "shift0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    2
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, 175]
		    DstBlock		    "sub_im"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_im"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    1
		    Points		    [0, 0; 55, 0]
		    Branch {
		    Points		    [0, 180]
		    DstBlock		    "sub_re"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_re"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    2
		    Points		    [10, 0]
		    Branch {
		    Points		    [0, -175]
		    DstBlock		    "add_im"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_im"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    1
		    Points		    [0, 0; 25, 0]
		    Branch {
		    Points		    [0, -180]
		    DstBlock		    "add_re"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_re"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "c_to_ri1"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "butterfly1"
		  Ports			  [3, 3]
		  Position		  [145, 186, 235, 234]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "shift 0"
		  UserDataPersistent	  on
		  UserData		  "DataTag86"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Radix-2 Butterfly"
		  MaskDescription	  "The radix-2 butterfly produces a+b and a-b outputs for a and b inputs."
		  MaskHelp		  "<pre>\nDescription::\n\nThe radix-2 butterfly produces a+b and a-b outputs for a and b inputs.\nThe outputs are one bit wider than the inputs.\nThe output precision (i.e. the number of fractional bits) stays the same.\n\nMask Parameters::\n\nBit Width In (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nShift Bits (shift): Specifies how many bits to shift (down) by.  A positive value causes\nthe specified number of least significant bits to be dropped.  Usually zero or positive values\nare used to permit or limit bit growth, but negative values can be used to induce bit growth.\n\nQuantization (quantization): Specifies quantization handling (when shift bits > 0).\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
		  MaskPromptString	  "Bit Width In|Shift Bits|Quantization|Adder Latency"
		  MaskStyleString	  "edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),edit"
		  MaskTunableValueString  "off,off,off,off"
		  MaskCallbackString	  "|||"
		  MaskEnableString	  "off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on"
		  MaskToolTipString	  "on,on,on,on"
		  MaskVarAliasString	  ",,,"
		  MaskVariables		  "n_bits=&1;shift=&2;quantization=&3;add_latency=&4;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "10|0|Truncate|1"
		  MaskTabNameString	  ",,,"
		  System {
		    Name		    "butterfly1"
		    Location		    [48, 133, 782, 642]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [35, 88, 65, 102]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [35, 288, 65, 302]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [30, 413, 60, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [340, 397, 385, 443]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,fc531c0e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_im"
		    Ports		    [2, 1]
		    Position		    [235, 117, 285, 168]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_re"
		    Ports		    [2, 1]
		    Position		    [235, 42, 285, 93]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri"
		    Ports		    [1, 2]
		    Position		    [110, 19, 155, 166]
		    AttributesFormatString  "10_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag87"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "10|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri1"
		    Ports		    [1, 2]
		    Position		    [110, 224, 155, 366]
		    AttributesFormatString  "10_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag88"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "10|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant0"
		    Ports		    [1, 1]
		    Position		    [440, 55, 485, 85]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "11"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant1"
		    Ports		    [1, 1]
		    Position		    [440, 130, 485, 160]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "11"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant2"
		    Ports		    [1, 1]
		    Position		    [445, 235, 490, 265]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "11"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant3"
		    Ports		    [1, 1]
		    Position		    [445, 305, 490, 335]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "11"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c"
		    Ports		    [2, 1]
		    Position		    [525, 33, 575, 182]
		    UserDataPersistent	    on
		    UserData		    "DataTag89"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c1"
		    Ports		    [2, 1]
		    Position		    [525, 216, 575, 354]
		    UserDataPersistent	    on
		    UserData		    "DataTag90"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c1"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift0"
		    Ports		    [1, 1]
		    Position		    [335, 49, 390, 91]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift1"
		    Ports		    [1, 1]
		    Position		    [335, 124, 390, 166]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift2"
		    Ports		    [1, 1]
		    Position		    [335, 229, 390, 271]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift3"
		    Ports		    [1, 1]
		    Position		    [335, 299, 390, 341]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_im"
		    Ports		    [2, 1]
		    Position		    [235, 292, 285, 343]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_re"
		    Ports		    [2, 1]
		    Position		    [235, 222, 285, 273]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a+b"
		    Position		    [630, 103, 660, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a-b"
		    Position		    [635, 278, 665, 292]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [630, 413, 660, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "shift3"
		    SrcPort		    1
		    DstBlock		    "requant3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_im"
		    SrcPort		    1
		    DstBlock		    "shift3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift2"
		    SrcPort		    1
		    DstBlock		    "requant2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_re"
		    SrcPort		    1
		    DstBlock		    "shift2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift1"
		    SrcPort		    1
		    DstBlock		    "requant1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift0"
		    SrcPort		    1
		    DstBlock		    "requant0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant3"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c1"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant2"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant0"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a-b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a+b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_im"
		    SrcPort		    1
		    DstBlock		    "shift1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_re"
		    SrcPort		    1
		    DstBlock		    "shift0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    2
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, 175]
		    DstBlock		    "sub_im"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_im"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    1
		    Points		    [0, 0; 55, 0]
		    Branch {
		    Points		    [0, 180]
		    DstBlock		    "sub_re"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_re"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    2
		    Points		    [10, 0]
		    Branch {
		    Points		    [0, -175]
		    DstBlock		    "add_im"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_im"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    1
		    Points		    [0, 0; 25, 0]
		    Branch {
		    Points		    [0, -180]
		    DstBlock		    "add_re"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_re"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "c_to_ri1"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "butterfly2"
		  Ports			  [3, 3]
		  Position		  [335, 91, 425, 139]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "shift 0"
		  UserDataPersistent	  on
		  UserData		  "DataTag91"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Radix-2 Butterfly"
		  MaskDescription	  "The radix-2 butterfly produces a+b and a-b outputs for a and b inputs."
		  MaskHelp		  "<pre>\nDescription::\n\nThe radix-2 butterfly produces a+b and a-b outputs for a and b inputs.\nThe outputs are one bit wider than the inputs.\nThe output precision (i.e. the number of fractional bits) stays the same.\n\nMask Parameters::\n\nBit Width In (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nShift Bits (shift): Specifies how many bits to shift (down) by.  A positive value causes\nthe specified number of least significant bits to be dropped.  Usually zero or positive values\nare used to permit or limit bit growth, but negative values can be used to induce bit growth.\n\nQuantization (quantization): Specifies quantization handling (when shift bits > 0).\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
		  MaskPromptString	  "Bit Width In|Shift Bits|Quantization|Adder Latency"
		  MaskStyleString	  "edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),edit"
		  MaskTunableValueString  "off,off,off,off"
		  MaskCallbackString	  "|||"
		  MaskEnableString	  "off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on"
		  MaskToolTipString	  "on,on,on,on"
		  MaskVarAliasString	  ",,,"
		  MaskVariables		  "n_bits=&1;shift=&2;quantization=&3;add_latency=&4;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "11|0|Truncate|1"
		  MaskTabNameString	  ",,,"
		  System {
		    Name		    "butterfly2"
		    Location		    [48, 133, 782, 642]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [35, 88, 65, 102]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [35, 288, 65, 302]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [30, 413, 60, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [340, 397, 385, 443]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,fc531c0e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_im"
		    Ports		    [2, 1]
		    Position		    [235, 117, 285, 168]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_re"
		    Ports		    [2, 1]
		    Position		    [235, 42, 285, 93]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri"
		    Ports		    [1, 2]
		    Position		    [110, 19, 155, 166]
		    AttributesFormatString  "11_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag92"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "11|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "11"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "11"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri1"
		    Ports		    [1, 2]
		    Position		    [110, 224, 155, 366]
		    AttributesFormatString  "11_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag93"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "11|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "11"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "11"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant0"
		    Ports		    [1, 1]
		    Position		    [440, 55, 485, 85]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "12"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant1"
		    Ports		    [1, 1]
		    Position		    [440, 130, 485, 160]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "12"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant2"
		    Ports		    [1, 1]
		    Position		    [445, 235, 490, 265]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "12"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant3"
		    Ports		    [1, 1]
		    Position		    [445, 305, 490, 335]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "12"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c"
		    Ports		    [2, 1]
		    Position		    [525, 33, 575, 182]
		    UserDataPersistent	    on
		    UserData		    "DataTag94"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c1"
		    Ports		    [2, 1]
		    Position		    [525, 216, 575, 354]
		    UserDataPersistent	    on
		    UserData		    "DataTag95"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c1"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift0"
		    Ports		    [1, 1]
		    Position		    [335, 49, 390, 91]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift1"
		    Ports		    [1, 1]
		    Position		    [335, 124, 390, 166]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift2"
		    Ports		    [1, 1]
		    Position		    [335, 229, 390, 271]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift3"
		    Ports		    [1, 1]
		    Position		    [335, 299, 390, 341]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_im"
		    Ports		    [2, 1]
		    Position		    [235, 292, 285, 343]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_re"
		    Ports		    [2, 1]
		    Position		    [235, 222, 285, 273]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a+b"
		    Position		    [630, 103, 660, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a-b"
		    Position		    [635, 278, 665, 292]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [630, 413, 660, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "shift3"
		    SrcPort		    1
		    DstBlock		    "requant3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_im"
		    SrcPort		    1
		    DstBlock		    "shift3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift2"
		    SrcPort		    1
		    DstBlock		    "requant2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_re"
		    SrcPort		    1
		    DstBlock		    "shift2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift1"
		    SrcPort		    1
		    DstBlock		    "requant1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift0"
		    SrcPort		    1
		    DstBlock		    "requant0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant3"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c1"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant2"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant0"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "ri_to_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a-b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a+b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_im"
		    SrcPort		    1
		    DstBlock		    "shift1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_re"
		    SrcPort		    1
		    DstBlock		    "shift0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    2
		    Points		    [0, 0; 40, 0]
		    Branch {
		    Points		    [0, 175]
		    DstBlock		    "sub_im"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_im"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    1
		    Points		    [0, 0; 55, 0]
		    Branch {
		    Points		    [0, 180]
		    DstBlock		    "sub_re"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_re"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    2
		    Points		    [10, 0]
		    Branch {
		    Points		    [0, -175]
		    DstBlock		    "add_im"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_im"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    1
		    Points		    [0, 0; 25, 0]
		    Branch {
		    Points		    [0, -180]
		    DstBlock		    "add_re"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_re"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "c_to_ri1"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "butterfly3j"
		  Ports			  [3, 3]
		  Position		  [335, 186, 425, 234]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "shift 0"
		  UserDataPersistent	  on
		  UserData		  "DataTag96"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Radix-2 Butterfly with fixed -j twiddle (DIT, twiddle before butterfly)"
		  MaskDescription	  "The radix-2 butterfly with fixed DIT -j twiddle produces a-jb on the a+b output and a+jb on the a-b output for a and b inputs.  It is intended for use within a radix-4 butterfly."
		  MaskHelp		  "<pre>\nDescription::\n\nThe radix-2 butterfly with fixed DIT -j twiddle produces a-jb on the a+b output\nand a+jb on the a-b output for a and b inputs.\n\nIt is intended for use within a radix-4 butterfly.\n\nThe outputs are one bit wider than the inputs.\nThe output precision (i.e. the number of fractional bits) stays the same.\n\nMask Parameters::\n\nBit Width In (n_bits): Specifies the width of the real/imaginary components.\nWidth of each component is assumed equal.\n\nShift Bits (shift): Specifies how many bits to shift (down) by.  A positive value causes\nthe specified number of least significant bits to be dropped.  Usually zero or positive values\nare used to permit or limit bit growth, but negative values can be used to induce bit growth.\n\nQuantization (quantization): Specifies quantization handling (when shift bits > 0).\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
		  MaskPromptString	  "Bit Width In|Shift Bits|Quantization|Adder Latency"
		  MaskStyleString	  "edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),edit"
		  MaskTunableValueString  "off,off,off,off"
		  MaskCallbackString	  "|||"
		  MaskEnableString	  "off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on"
		  MaskToolTipString	  "on,on,on,on"
		  MaskVarAliasString	  ",,,"
		  MaskVariables		  "n_bits=&1;shift=&2;quantization=&3;add_latency=&4;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "11|0|Truncate|1"
		  MaskTabNameString	  ",,,"
		  System {
		    Name		    "butterfly3j"
		    Location		    [739, 201, 1530, 710]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a"
		    Position		    [35, 88, 65, 102]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [35, 288, 65, 302]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [30, 413, 60, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [345, 397, 390, 443]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "1"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,fc531c0e,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_im"
		    Ports		    [2, 1]
		    Position		    [235, 117, 285, 168]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "add_re"
		    Ports		    [2, 1]
		    Position		    [235, 42, 285, 93]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri"
		    Ports		    [1, 2]
		    Position		    [110, 19, 155, 166]
		    AttributesFormatString  "11_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag97"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "11|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "11"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "11"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri1"
		    Ports		    [1, 2]
		    Position		    [110, 224, 155, 366]
		    AttributesFormatString  "11_0 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag98"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "11|0"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "11"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "11"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant0"
		    Ports		    [1, 1]
		    Position		    [445, 55, 490, 85]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "12"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant1"
		    Ports		    [1, 1]
		    Position		    [445, 130, 490, 160]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "12"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant2"
		    Ports		    [1, 1]
		    Position		    [450, 235, 495, 265]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "12"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "requant3"
		    Ports		    [1, 1]
		    Position		    [450, 305, 495, 335]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "12"
		    bin_pt		    "0"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    latency		    "0"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,74901e60,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c"
		    Ports		    [2, 1]
		    Position		    [545, 33, 595, 182]
		    UserDataPersistent	    on
		    UserData		    "DataTag99"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c1"
		    Ports		    [2, 1]
		    Position		    [545, 216, 595, 354]
		    UserDataPersistent	    on
		    UserData		    "DataTag100"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c1"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift0"
		    Ports		    [1, 1]
		    Position		    [340, 49, 395, 91]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift1"
		    Ports		    [1, 1]
		    Position		    [340, 124, 395, 166]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift2"
		    Ports		    [1, 1]
		    Position		    [340, 229, 395, 271]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "shift3"
		    Ports		    [1, 1]
		    Position		    [340, 299, 395, 341]
		    SourceBlock		    "xbsIndex_r4/Scale"
		    SourceType		    "Xilinx Input Scaler Block"
		    infoedit		    "Scales input by a power of two by adjusting the binary point position.<P><P>Hardware notes: In hardware this block costs nothing."
		    scale_factor	    "0"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "scale"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "55,42,1,1,white,blue,0,24e5474d,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('\\bf{2^{0}}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_im"
		    Ports		    [2, 1]
		    Position		    [235, 222, 285, 273]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sub_re"
		    Ports		    [2, 1]
		    Position		    [235, 292, 285, 343]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a+b"
		    Position		    [650, 103, 680, 117]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a-b"
		    Position		    [655, 278, 685, 292]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [655, 413, 685, 427]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "requant3"
		    SrcPort		    1
		    DstBlock		    "ri_to_c1"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant2"
		    SrcPort		    1
		    DstBlock		    "ri_to_c1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "requant1"
		    SrcPort		    1
		    DstBlock		    "ri_to_c"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "requant0"
		    SrcPort		    1
		    DstBlock		    "ri_to_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift3"
		    SrcPort		    1
		    DstBlock		    "requant3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift2"
		    SrcPort		    1
		    DstBlock		    "requant2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift1"
		    SrcPort		    1
		    DstBlock		    "requant1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "shift0"
		    SrcPort		    1
		    DstBlock		    "requant0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_im"
		    SrcPort		    1
		    DstBlock		    "shift3"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sub_re"
		    SrcPort		    1
		    DstBlock		    "shift2"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    DstBlock		    "c_to_ri1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    1
		    Points		    [40, 0]
		    Branch {
		    Points		    [0, -105]
		    DstBlock		    "add_im"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_im"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    2
		    Points		    [10, 0]
		    Branch {
		    Points		    [0, -250]
		    DstBlock		    "add_re"
		    DstPort		    2
		    }
		    Branch {
		    DstBlock		    "sub_re"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    1
		    Points		    [25, 0]
		    Branch {
		    Points		    [0, 250]
		    DstBlock		    "sub_re"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_re"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    2
		    Points		    [55, 0]
		    Branch {
		    Points		    [0, 105]
		    DstBlock		    "sub_im"
		    DstPort		    1
		    }
		    Branch {
		    DstBlock		    "add_im"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "a"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_re"
		    SrcPort		    1
		    DstBlock		    "shift0"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "add_im"
		    SrcPort		    1
		    DstBlock		    "shift1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a+b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c1"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "a-b"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "a_out"
		  Position		  [510, 83, 540, 97]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "b_out"
		  Position		  [510, 118, 540, 132]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "c_out"
		  Position		  [510, 173, 540, 187]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "d_out"
		  Position		  [510, 218, 540, 232]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [510, 258, 540, 272]
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "butterfly2"
		  SrcPort		  3
		  DstBlock		  "Terminator"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "butterfly3j"
		  SrcPort		  3
		  Points		  [30, 0; 0, 40]
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [45, 0; 0, -40]
		  Branch {
		    Points		    [0, -95]
		    DstBlock		    "butterfly0"
		    DstPort		    3
		  }
		  Branch {
		    DstBlock		    "butterfly1"
		    DstPort		    3
		  }
		}
		Line {
		  SrcBlock		  "butterfly3j"
		  SrcPort		  2
		  Points		  [50, 0; 0, 15]
		  DstBlock		  "d_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "butterfly3j"
		  SrcPort		  1
		  Points		  [50, 0; 0, -15]
		  DstBlock		  "c_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "butterfly2"
		  SrcPort		  2
		  Points		  [50, 0; 0, 10]
		  DstBlock		  "b_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "butterfly2"
		  SrcPort		  1
		  Points		  [50, 0; 0, -10]
		  DstBlock		  "a_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "b_in"
		  SrcPort		  1
		  Points		  [15, 0; 0, 10]
		  DstBlock		  "butterfly1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "d_in"
		  SrcPort		  1
		  Points		  [15, 0; 0, -10]
		  DstBlock		  "butterfly1"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "c_in"
		  SrcPort		  1
		  Points		  [15, 0; 0, -10]
		  DstBlock		  "butterfly0"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "a_in"
		  SrcPort		  1
		  Points		  [15, 0; 0, 10]
		  DstBlock		  "butterfly0"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "butterfly1"
		  SrcPort		  1
		  DstBlock		  "butterfly2"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "butterfly0"
		  SrcPort		  2
		  DstBlock		  "butterfly3j"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "butterfly0"
		  SrcPort		  3
		  DstBlock		  "butterfly2"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "butterfly1"
		  SrcPort		  3
		  DstBlock		  "butterfly3j"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "butterfly1"
		  SrcPort		  2
		  DstBlock		  "butterfly3j"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "butterfly0"
		  SrcPort		  1
		  DstBlock		  "butterfly2"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      SubSystem
	      Name		      "r4_twiddle"
	      Ports		      [5, 5]
	      Position		      [310, 111, 400, 189]
	      BackgroundColor	      "gray"
	      AttributesFormatString  "4 twiddles in dist"
	      UserDataPersistent      on
	      UserData		      "DataTag101"
	      MinAlgLoopOccurrences   off
	      RTWSystemCode	      "Auto"
	      FunctionWithSeparateData off
	      MaskType		      "Radix-4 General Twiddle Stage"
	      MaskDescription	      "A general twiddle stage for radix-4 Fast Fourier Transforms. Can be used in  Decimation in Time (i.e. twiddles before butterflies) or Decimation in Frequency (i.e. twiddles after butterflies) FFTs.  Regardless of the decimation mode, the FFT is assumed to have inputs in normal order and outputs in bit-reversed order."
	      MaskHelp		      "<pre>\nDescription::\n\nA general twiddle stage for radix-2 Fast Fourier Transforms.\n\nCan be used in  Decimation in Time (i.e. twiddles before butterflies) or Decimation in Frequency\n(i.e. twiddles after butterflies) FFTs.  Regardless of the decimation mode, the FFT is assumed\nto have inputs in normal order and outputs in bit-reversed order.\n\nInput a_in is passed through unchanged to a_out, while inputs b, c, and d are passed through\nto outputs bw, cw, and dw after being \"twiddled\".  Since twiddling is effectively multiplication\nby a complex number with unity magnitude, the bit respresentation of bw/cw/dw is the same\nas b/c/d (i.e. twiddling does not cause bit growth).  Input a_in is assumed to have the same bit\nwidth as b.  Thus, a_in, a_out, b, c, d, bw, cw, and dw all have the same bit representation.\n\nMask Parameters::\n\nTotal Stages (n_stages):  The number of total stages in the FFT.\nThe FFT will have 4^n_stages points.\n\nCurrent Stage (cur_stage):  The number of the current stage for which this block should\ngenerate twiddle coefficients.  Valid values are 2 through n_stages, inclusive.  Note that\nstages are counted from 1 to n_stages for DIT (i.e. cur_stage==1 for the first stage) and\nn_stages to 1 for DIF (i.e. cur_stage==1 for the last stage).\n\nDecimation Mode (decimation): The decimation mode of the FFT.\n\nNumber of Bits In/Out (n_bits): Specifies the width of the real/imaginary\ncomponents of ports a_in, b, a_out, bw.  Assumed equal for both components.\n\nBinary Point In/Out (bin_pt): Specifies the binary point position of the real/imaginary\ncomponents of ports a_in, b, a_out, bw.  Assumed equal for both components.\n\nTwiddle Coefficient Bitwidth (n_bits_w): Specifies the width of the real/imaginary\ncomponents of the twiddle coefficients.  Assumed equal for both components.\n\nUse BRAM for Twiddle Coefficients (use_bram): Check this checkbox to store twiddle\ncoefficients in BRAM.  If unchecked, the twiddle coefficients will be sored in distributed\nmemory (i.e. slices).\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n"
	      MaskPromptString	      "Total Stages|Current Stage|Decimation Mode|Number of Bits In/Out|Binary Point In/Out|Twiddle Coefficient Bitwidth|Use BRAM For Twiddle Coefficients|Multiplier Latency|Adder Latency"
	      MaskStyleString	      "edit,edit,popup(Time|Frequency),edit,edit,edit,checkbox,edit,edit"
	      MaskTunableValueString  "off,off,off,off,off,off,off,off,off"
	      MaskCallbackString      "||||||||"
	      MaskEnableString	      "off,off,off,off,off,off,off,off,off"
	      MaskVisibilityString    "on,on,on,on,on,on,on,on,on"
	      MaskToolTipString	      "on,on,on,on,on,on,on,on,on"
	      MaskVarAliasString      ",,,,,,,,"
	      MaskVariables	      "n_stages=&1;cur_stage=&2;decimation=&3;n_bits=&4;bin_pt=&5;n_bits_w=&6;use_bram=&7;mult_latency=&8;add_latency=&9;"
	      MaskSelfModifiable      on
	      MaskIconFrame	      on
	      MaskIconOpaque	      on
	      MaskIconRotate	      "none"
	      MaskIconUnits	      "autoscale"
	      MaskValueString	      "2|2|Time|10|7|9|off|3|1"
	      MaskTabNameString	      ",,,,,,,,"
	      System {
		Name			"r4_twiddle"
		Location		[406, 252, 1448, 812]
		Open			off
		ModelBrowserVisibility	on
		ModelBrowserWidth	200
		ScreenColor		"white"
		PaperOrientation	"landscape"
		PaperPositionMode	"auto"
		PaperType		"usletter"
		PaperUnits		"inches"
		TiledPaperMargins	[0.196850, 0.196850, 0.196850, 0.196850]
		TiledPageScale		1
		ShowPageBoundaries	off
		ZoomFactor		"100"
		Block {
		  BlockType		  Inport
		  Name			  "a_in"
		  Position		  [25, 43, 55, 57]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "b"
		  Position		  [25, 83, 55, 97]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "c"
		  Position		  [25, 213, 55, 227]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "d"
		  Position		  [25, 328, 55, 342]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Inport
		  Name			  "sync_in"
		  Position		  [25, 448, 55, 462]
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Constant"
		  Ports			  [0, 1]
		  Position		  [255, 243, 270, 257]
		  ShowName		  off
		  SourceBlock		  "xbsIndex_r4/Constant"
		  SourceType		  "Xilinx Constant Block Block"
		  arith_type		  "Unsigned"
		  const			  "0"
		  n_bits		  "1"
		  bin_pt		  "0"
		  explicit_period	  on
		  period		  "1"
		  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		  equ			  "P=C"
		  opselect		  "C"
		  inp2			  "PCIN>>17"
		  opr			  "+"
		  inp1			  "P"
		  carry			  "CIN"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "constant"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "15,14,1,1,white,blue,0,72d575a1,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'0');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Constant2"
		  Ports			  [0, 1]
		  Position		  [255, 358, 270, 372]
		  ShowName		  off
		  SourceBlock		  "xbsIndex_r4/Constant"
		  SourceType		  "Xilinx Constant Block Block"
		  arith_type		  "Unsigned"
		  const			  "0"
		  n_bits		  "1"
		  bin_pt		  "0"
		  explicit_period	  on
		  period		  "1"
		  dsp48_infoedit	  "The use of this block for DSP48 instructions is deprecated.  Please use the Opmode block."
		  equ			  "P=C"
		  opselect		  "C"
		  inp2			  "PCIN>>17"
		  opr			  "+"
		  inp1			  "P"
		  carry			  "CIN"
		  dbl_ovrd		  off
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "constant"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "15,14,1,1,white,blue,0,72d575a1,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 26 26 ],[0.77 0.82 0.91]);\npatch([20 16 22 16 20 27 29 31 38 32 26 22 28 22 26 32 38 31 29 27 20 ],[3 7 13 19 23 23 21 23 23 17 23 19 13 7 3 9 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 26 26 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'0');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay1"
		  Ports			  [1, 1]
		  Position		  [180, 79, 215, 101]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "35,22,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay2"
		  Ports			  [1, 1]
		  Position		  [180, 39, 215, 61]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "35,22,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay3"
		  Ports			  [1, 1]
		  Position		  [180, 445, 215, 465]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "35,20,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay4"
		  Ports			  [1, 1]
		  Position		  [180, 210, 215, 230]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "35,20,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Reference
		  Name			  "Delay5"
		  Ports			  [1, 1]
		  Position		  [180, 325, 215, 345]
		  SourceBlock		  "xbsIndex_r4/Delay"
		  SourceType		  "Xilinx Delay Block"
		  infoedit		  "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		  en			  off
		  latency		  "1"
		  dbl_ovrd		  off
		  reg_retiming		  off
		  xl_use_area		  off
		  xl_area		  "[0, 0, 0, 0, 0, 0, 0]"
		  has_advanced_control	  "0"
		  sggui_pos		  "-1,-1,-1,-1"
		  block_type		  "delay"
		  block_version		  "10.1.3"
		  sg_icon_stat		  "35,20,1,1,white,blue,0,fc531c0e,right"
		  sg_mask_display	  "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		}
		Block {
		  BlockType		  Terminator
		  Name			  "Terminator"
		  Position		  [395, 245, 405, 255]
		  ShowName		  off
		}
		Block {
		  BlockType		  Terminator
		  Name			  "Terminator2"
		  Position		  [395, 275, 405, 285]
		  ShowName		  off
		}
		Block {
		  BlockType		  Terminator
		  Name			  "Terminator4"
		  Position		  [395, 360, 405, 370]
		  ShowName		  off
		}
		Block {
		  BlockType		  Terminator
		  Name			  "Terminator6"
		  Position		  [395, 390, 405, 400]
		  ShowName		  off
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "cmpy1"
		  Ports			  [4, 3]
		  Position		  [280, 30, 385, 190]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "10_9 * 9_7 ==> 10_9\nround even, wrap\n3 mults"
		  UserDataPersistent	  on
		  UserData		  "DataTag102"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex Multiplier (4 real multipliers)"
		  MaskDescription	  "This block multiplies two complex numbers using 4 real multipliers and 2 real adders.  Pass-through paths are provided for another complex number and a sync signal.  These pass through paths provide delay that matches the latency of the complex multiply operation."
		  MaskHelp		  "<pre>\nDescription::\n\nThis block multiplies two complex numbers using 4 real multipliers and 2 real adders.\nPass-through paths are provided for another complex number and a sync signal.\nThese paths provide delay that matches the latency of the complex multiply operation.\n\na_in is passed through to a_out.\nb and w complex inputs are multiplied and their product appears on the bw output.\nsync_in is passed through to sync_out.\n\nMask Parameters::\n\nNumber of Bits B (n_bits_b): Specifies the width of the real/imaginary\ncomponents of input b.  Assumed equal for both components.\n\nBinary Point B (bin_pt_b): Specifies the binary point point position of the\nreal/imaginary components of input b.  Assumed equal for both components.\n\nNumber of Bits W (n_bits_w): Specifies the width of the real/imaginary\ncomponents of input w.  Assumed equal for both components.\n\nBinary Point W (bin_pt_w): Specifies the binary point point position of the\nreal/imaginary components of input w.  Assumed equal for both components.\n\nNumber of Bits BW (n_bits_bw): Specifies the width of the real/imaginary\ncomponents of output bw.  Assumed equal for both components.\n\nBinary Point BW (bin_pt_bw): Specifies the binary point point position of the\nreal/imaginary components of output bw.  Assumed equal for both components.\n\nQuantization (quantization): Specifies quantization handling.\n\nOverflow (overflow): Specifies overflow handling.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
		  MaskPromptString	  "Number of Bits B|Binary Point B|Number of Bits W|Binary Point W|Number of Bits BW|Binary Point BW|Quantization|Overflow|Multiplier Latency|Adder Latency"
		  MaskStyleString	  "edit,edit,edit,edit,edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),popup(Wrap|Saturate|Error),edit,edit"
		  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off"
		  MaskCallbackString	  "|||||||||"
		  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on"
		  MaskVarAliasString	  ",,,,,,,,,"
		  MaskVariables		  "n_bits_b=&1;bin_pt_b=&2;n_bits_w=&3;bin_pt_w=&4;n_bits_bw=&5;bin_pt_bw=&6;quantization=&7;overflow=&8;mult_latency=&9;add_latency=&10;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "10|9|9|7|10|9|Round  (unbiased: Even Values)|Wrap|3|1"
		  MaskTabNameString	  ",,,,,,,,,"
		  System {
		    Name		    "cmpy1"
		    Location		    [475, 316, 1517, 1126]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a_in"
		    Position		    [65, 38, 95, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [65, 133, 95, 147]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "w"
		    Position		    [70, 358, 100, 372]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [65, 458, 95, 472]
		    Port		    "4"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [405, 442, 450, 488]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[1 1 0 1 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay1"
		    Ports		    [1, 1]
		    Position		    [400, 22, 445, 68]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[17 34 0 34 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "br_add_bi"
		    Ports		    [2, 1]
		    Position		    [290, 267, 340, 318]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[9 18 0 18 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri"
		    Ports		    [1, 2]
		    Position		    [140, 69, 180, 211]
		    AttributesFormatString  "10_9 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag103"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "10|9"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "9"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "9"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri1"
		    Ports		    [1, 2]
		    Position		    [145, 337, 185, 388]
		    AttributesFormatString  "9_7 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag104"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "9|7"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "convert_im"
		    Ports		    [1, 1]
		    Position		    [595, 180, 640, 210]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "9"
		    quantization	    "Round  (unbiased: Even Values)"
		    overflow		    "Wrap"
		    latency		    "3"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,0b13ee9b,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\ncolor('black');disp('\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "convert_re"
		    Ports		    [1, 1]
		    Position		    [595, 120, 640, 150]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "9"
		    quantization	    "Round  (unbiased: Even Values)"
		    overflow		    "Wrap"
		    latency		    "3"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,0b13ee9b,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\ncolor('black');disp('\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "imim"
		    Ports		    [2, 1]
		    Position		    [290, 162, 340, 213]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[26 52 0 26 0 1 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "rere"
		    Ports		    [2, 1]
		    Position		    [290, 92, 340, 143]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[26 52 0 26 0 1 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c"
		    Ports		    [2, 1]
		    Position		    [680, 107, 720, 223]
		    UserDataPersistent	    on
		    UserData		    "DataTag105"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "rr_add_ii"
		    Ports		    [2, 1]
		    Position		    [400, 177, 450, 228]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[14 27 0 27 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "rr_sub_ii"
		    Ports		    [2, 1]
		    Position		    [400, 107, 450, 158]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "2"
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[44 44 0 69 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,2d46ec54,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-2}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "ss_sub_rrii"
		    Ports		    [2, 1]
		    Position		    [510, 167, 560, 218]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[46 29 0 90 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sumsum"
		    Ports		    [2, 1]
		    Position		    [400, 261, 450, 399]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[28 56 0 28 0 1 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,138,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "wr_add_wi"
		    Ports		    [2, 1]
		    Position		    [290, 337, 340, 388]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[5 10 0 10 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a_out"
		    Position		    [765, 38, 795, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "bw"
		    Position		    [765, 158, 795, 172]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [765, 458, 795, 472]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "convert_im"
		    SrcPort		    1
		    DstBlock		    "ri_to_c"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "convert_re"
		    SrcPort		    1
		    DstBlock		    "ri_to_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Delay1"
		    SrcPort		    1
		    DstBlock		    "a_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "a_in"
		    SrcPort		    1
		    DstBlock		    "Delay1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    2
		    Points		    [15, 0]
		    Branch {
		    DstBlock		    "imim"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 130]
		    DstBlock		    "br_add_bi"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    1
		    Points		    [0, 0; 50, 0]
		    Branch {
		    DstBlock		    "wr_add_wi"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -220]
		    DstBlock		    "rere"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    2
		    Points		    [0, 0; 70, 0]
		    Branch {
		    DstBlock		    "wr_add_wi"
		    DstPort		    2
		    }
		    Branch {
		    Points		    [0, -175]
		    DstBlock		    "imim"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    1
		    Points		    [35, 0]
		    Branch {
		    DstBlock		    "rere"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 175]
		    DstBlock		    "br_add_bi"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sumsum"
		    SrcPort		    1
		    Points		    [25, 0; 0, -150]
		    DstBlock		    "ss_sub_rrii"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "bw"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "wr_add_wi"
		    SrcPort		    1
		    DstBlock		    "sumsum"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "br_add_bi"
		    SrcPort		    1
		    DstBlock		    "sumsum"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "imim"
		    SrcPort		    1
		    Points		    [30, 0]
		    Branch {
		    DstBlock		    "rr_add_ii"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -45]
		    DstBlock		    "rr_sub_ii"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "rere"
		    SrcPort		    1
		    Points		    [15, 0]
		    Branch {
		    DstBlock		    "rr_sub_ii"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 95]
		    DstBlock		    "rr_add_ii"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "w"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "rr_add_ii"
		    SrcPort		    1
		    DstBlock		    "ss_sub_rrii"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "rr_sub_ii"
		    SrcPort		    1
		    DstBlock		    "convert_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ss_sub_rrii"
		    SrcPort		    1
		    DstBlock		    "convert_im"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "cmpy2"
		  Ports			  [4, 3]
		  Position		  [285, 241, 380, 289]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "10_9 * 9_7 ==> 10_9\nround even, wrap\n3 mults"
		  UserDataPersistent	  on
		  UserData		  "DataTag106"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex Multiplier (4 real multipliers)"
		  MaskDescription	  "This block multiplies two complex numbers using 4 real multipliers and 2 real adders.  Pass-through paths are provided for another complex number and a sync signal.  These pass through paths provide delay that matches the latency of the complex multiply operation."
		  MaskHelp		  "<pre>\nDescription::\n\nThis block multiplies two complex numbers using 4 real multipliers and 2 real adders.\nPass-through paths are provided for another complex number and a sync signal.\nThese paths provide delay that matches the latency of the complex multiply operation.\n\na_in is passed through to a_out.\nb and w complex inputs are multiplied and their product appears on the bw output.\nsync_in is passed through to sync_out.\n\nMask Parameters::\n\nNumber of Bits B (n_bits_b): Specifies the width of the real/imaginary\ncomponents of input b.  Assumed equal for both components.\n\nBinary Point B (bin_pt_b): Specifies the binary point point position of the\nreal/imaginary components of input b.  Assumed equal for both components.\n\nNumber of Bits W (n_bits_w): Specifies the width of the real/imaginary\ncomponents of input w.  Assumed equal for both components.\n\nBinary Point W (bin_pt_w): Specifies the binary point point position of the\nreal/imaginary components of input w.  Assumed equal for both components.\n\nNumber of Bits BW (n_bits_bw): Specifies the width of the real/imaginary\ncomponents of output bw.  Assumed equal for both components.\n\nBinary Point BW (bin_pt_bw): Specifies the binary point point position of the\nreal/imaginary components of output bw.  Assumed equal for both components.\n\nQuantization (quantization): Specifies quantization handling.\n\nOverflow (overflow): Specifies overflow handling.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
		  MaskPromptString	  "Number of Bits B|Binary Point B|Number of Bits W|Binary Point W|Number of Bits BW|Binary Point BW|Quantization|Overflow|Multiplier Latency|Adder Latency"
		  MaskStyleString	  "edit,edit,edit,edit,edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),popup(Wrap|Saturate|Error),edit,edit"
		  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off"
		  MaskCallbackString	  "|||||||||"
		  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on"
		  MaskVarAliasString	  ",,,,,,,,,"
		  MaskVariables		  "n_bits_b=&1;bin_pt_b=&2;n_bits_w=&3;bin_pt_w=&4;n_bits_bw=&5;bin_pt_bw=&6;quantization=&7;overflow=&8;mult_latency=&9;add_latency=&10;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "10|9|9|7|10|9|Round  (unbiased: Even Values)|Wrap|3|1"
		  MaskTabNameString	  ",,,,,,,,,"
		  System {
		    Name		    "cmpy2"
		    Location		    [429, 472, 1436, 1025]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a_in"
		    Position		    [65, 38, 95, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [65, 133, 95, 147]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "w"
		    Position		    [70, 358, 100, 372]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [65, 458, 95, 472]
		    Port		    "4"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [405, 442, 450, 488]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[1 1 0 1 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay1"
		    Ports		    [1, 1]
		    Position		    [400, 22, 445, 68]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[17 34 0 34 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "br_add_bi"
		    Ports		    [2, 1]
		    Position		    [290, 267, 340, 318]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[9 18 0 18 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri"
		    Ports		    [1, 2]
		    Position		    [140, 69, 180, 211]
		    AttributesFormatString  "10_9 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag107"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "10|9"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "9"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "9"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri1"
		    Ports		    [1, 2]
		    Position		    [145, 337, 185, 388]
		    AttributesFormatString  "9_7 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag108"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "9|7"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "convert_im"
		    Ports		    [1, 1]
		    Position		    [595, 180, 640, 210]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "9"
		    quantization	    "Round  (unbiased: Even Values)"
		    overflow		    "Wrap"
		    latency		    "3"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,0b13ee9b,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\ncolor('black');disp('\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "convert_re"
		    Ports		    [1, 1]
		    Position		    [595, 120, 640, 150]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "9"
		    quantization	    "Round  (unbiased: Even Values)"
		    overflow		    "Wrap"
		    latency		    "3"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,0b13ee9b,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\ncolor('black');disp('\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "imim"
		    Ports		    [2, 1]
		    Position		    [290, 162, 340, 213]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[26 52 0 26 0 1 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "rere"
		    Ports		    [2, 1]
		    Position		    [290, 92, 340, 143]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[26 52 0 26 0 1 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c"
		    Ports		    [2, 1]
		    Position		    [680, 107, 720, 223]
		    UserDataPersistent	    on
		    UserData		    "DataTag109"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "rr_add_ii"
		    Ports		    [2, 1]
		    Position		    [400, 177, 450, 228]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[14 27 0 27 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "rr_sub_ii"
		    Ports		    [2, 1]
		    Position		    [400, 107, 450, 158]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "2"
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[44 44 0 69 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,2d46ec54,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-2}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "ss_sub_rrii"
		    Ports		    [2, 1]
		    Position		    [510, 167, 560, 218]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[46 29 0 90 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sumsum"
		    Ports		    [2, 1]
		    Position		    [400, 261, 450, 399]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[28 56 0 28 0 1 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,138,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "wr_add_wi"
		    Ports		    [2, 1]
		    Position		    [290, 337, 340, 388]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[5 10 0 10 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a_out"
		    Position		    [765, 38, 795, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "bw"
		    Position		    [765, 158, 795, 172]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [765, 458, 795, 472]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "convert_im"
		    SrcPort		    1
		    DstBlock		    "ri_to_c"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "convert_re"
		    SrcPort		    1
		    DstBlock		    "ri_to_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Delay1"
		    SrcPort		    1
		    DstBlock		    "a_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "a_in"
		    SrcPort		    1
		    DstBlock		    "Delay1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    2
		    Points		    [15, 0]
		    Branch {
		    DstBlock		    "imim"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 130]
		    DstBlock		    "br_add_bi"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    1
		    Points		    [0, 0; 50, 0]
		    Branch {
		    DstBlock		    "wr_add_wi"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -220]
		    DstBlock		    "rere"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    2
		    Points		    [0, 0; 70, 0]
		    Branch {
		    DstBlock		    "wr_add_wi"
		    DstPort		    2
		    }
		    Branch {
		    Points		    [0, -175]
		    DstBlock		    "imim"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    1
		    Points		    [35, 0]
		    Branch {
		    DstBlock		    "rere"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 175]
		    DstBlock		    "br_add_bi"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sumsum"
		    SrcPort		    1
		    Points		    [25, 0; 0, -150]
		    DstBlock		    "ss_sub_rrii"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "bw"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "wr_add_wi"
		    SrcPort		    1
		    DstBlock		    "sumsum"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "br_add_bi"
		    SrcPort		    1
		    DstBlock		    "sumsum"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "imim"
		    SrcPort		    1
		    Points		    [30, 0]
		    Branch {
		    DstBlock		    "rr_add_ii"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -45]
		    DstBlock		    "rr_sub_ii"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "rere"
		    SrcPort		    1
		    Points		    [15, 0]
		    Branch {
		    DstBlock		    "rr_sub_ii"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 95]
		    DstBlock		    "rr_add_ii"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "w"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "rr_add_ii"
		    SrcPort		    1
		    DstBlock		    "ss_sub_rrii"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "rr_sub_ii"
		    SrcPort		    1
		    DstBlock		    "convert_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ss_sub_rrii"
		    SrcPort		    1
		    DstBlock		    "convert_im"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "cmpy3"
		  Ports			  [4, 3]
		  Position		  [285, 356, 380, 404]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "10_9 * 9_7 ==> 10_9\nround even, wrap\n3 mults"
		  UserDataPersistent	  on
		  UserData		  "DataTag110"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Complex Multiplier (4 real multipliers)"
		  MaskDescription	  "This block multiplies two complex numbers using 4 real multipliers and 2 real adders.  Pass-through paths are provided for another complex number and a sync signal.  These pass through paths provide delay that matches the latency of the complex multiply operation."
		  MaskHelp		  "<pre>\nDescription::\n\nThis block multiplies two complex numbers using 4 real multipliers and 2 real adders.\nPass-through paths are provided for another complex number and a sync signal.\nThese paths provide delay that matches the latency of the complex multiply operation.\n\na_in is passed through to a_out.\nb and w complex inputs are multiplied and their product appears on the bw output.\nsync_in is passed through to sync_out.\n\nMask Parameters::\n\nNumber of Bits B (n_bits_b): Specifies the width of the real/imaginary\ncomponents of input b.  Assumed equal for both components.\n\nBinary Point B (bin_pt_b): Specifies the binary point point position of the\nreal/imaginary components of input b.  Assumed equal for both components.\n\nNumber of Bits W (n_bits_w): Specifies the width of the real/imaginary\ncomponents of input w.  Assumed equal for both components.\n\nBinary Point W (bin_pt_w): Specifies the binary point point position of the\nreal/imaginary components of input w.  Assumed equal for both components.\n\nNumber of Bits BW (n_bits_bw): Specifies the width of the real/imaginary\ncomponents of output bw.  Assumed equal for both components.\n\nBinary Point BW (bin_pt_bw): Specifies the binary point point position of the\nreal/imaginary components of output bw.  Assumed equal for both components.\n\nQuantization (quantization): Specifies quantization handling.\n\nOverflow (overflow): Specifies overflow handling.\n\nMultiplier Latency (mult_latency): Latency to use for the underlying real multipliers.\n\nAdder Latency (add_latency): Latency to use for the underlying real adders.\n</pre>"
		  MaskPromptString	  "Number of Bits B|Binary Point B|Number of Bits W|Binary Point W|Number of Bits BW|Binary Point BW|Quantization|Overflow|Multiplier Latency|Adder Latency"
		  MaskStyleString	  "edit,edit,edit,edit,edit,edit,popup(Truncate|Round  (unbiased: +/- Inf)|Round  (unbiased: Even Values)),popup(Wrap|Saturate|Error),edit,edit"
		  MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off"
		  MaskCallbackString	  "|||||||||"
		  MaskEnableString	  "off,off,off,off,off,off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on,on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on,on,on,on,on,on"
		  MaskVarAliasString	  ",,,,,,,,,"
		  MaskVariables		  "n_bits_b=&1;bin_pt_b=&2;n_bits_w=&3;bin_pt_w=&4;n_bits_bw=&5;bin_pt_bw=&6;quantization=&7;overflow=&8;mult_latency=&9;add_latency=&10;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "10|9|9|7|10|9|Round  (unbiased: Even Values)|Wrap|3|1"
		  MaskTabNameString	  ",,,,,,,,,"
		  System {
		    Name		    "cmpy3"
		    Location		    [429, 472, 1436, 1025]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "a_in"
		    Position		    [65, 38, 95, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "b"
		    Position		    [65, 133, 95, 147]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "w"
		    Position		    [70, 358, 100, 372]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [65, 458, 95, 472]
		    Port		    "4"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay"
		    Ports		    [1, 1]
		    Position		    [405, 442, 450, 488]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[1 1 0 1 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Delay1"
		    Ports		    [1, 1]
		    Position		    [400, 22, 445, 68]
		    SourceBlock		    "xbsIndex_r4/Delay"
		    SourceType		    "Xilinx Delay Block"
		    infoedit		    "Hardware notes: A delay line is a chain, each link of which is an SRL16 followed by a flip-flop."
		    en			    off
		    latency		    "8"
		    dbl_ovrd		    off
		    reg_retiming	    off
		    xl_use_area		    off
		    xl_area		    "[17 34 0 34 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "delay"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,46,1,1,white,blue,0,a6538547,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('z^{-8}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "br_add_bi"
		    Ports		    [2, 1]
		    Position		    [290, 267, 340, 318]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[9 18 0 18 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri"
		    Ports		    [1, 2]
		    Position		    [140, 69, 180, 211]
		    AttributesFormatString  "10_9 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag111"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "10|9"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "9"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "9"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "10"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "c_to_ri1"
		    Ports		    [1, 2]
		    Position		    [145, 337, 185, 388]
		    AttributesFormatString  "9_7 r/i"
		    UserDataPersistent	    on
		    UserData		    "DataTag112"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Complex to Real-Imag"
		    MaskDescription	    "Outputs real and imaginary components of a complex input."
		    MaskHelp		    "<pre>\nDescription::\n\nOutputs real and imaginary components of a complex input.\nUseful for simplifying interconnects.\nSee also: Real-Imag to Complex (ri_to_c)\n\nMask Parameters::\n\nBit Width (n_bits): Specifies the width of the real/imaginary components.\nAssumed equal for both components.\n\nBinary Point (bin_pt): Specifies the binary point location in the real/imaginary components.\nAssumed equal for both components.\n</pre>"
		    MaskPromptString	    "Bit Width|Binary Point"
		    MaskStyleString	    "edit,edit"
		    MaskTunableValueString  "off,off"
		    MaskCallbackString	    "|"
		    MaskEnableString	    "off,off"
		    MaskVisibilityString    "on,on"
		    MaskToolTipString	    "on,on"
		    MaskVarAliasString	    ","
		    MaskVariables	    "n_bits=&1;bin_pt=&2;"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    MaskValueString	    "9|7"
		    MaskTabNameString	    ","
		    System {
		    Name		    "c_to_ri1"
		    Location		    [567, 157, 837, 310]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "c"
		    Position		    [20, 63, 50, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [150, 79, 190, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [150, 29, 190, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Signed  (2's comp)"
		    force_bin_pt	    on
		    bin_pt		    "7"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_im"
		    Ports		    [1, 1]
		    Position		    [80, 81, 125, 109]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Lower Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "slice_re"
		    Ports		    [1, 1]
		    Position		    [80, 31, 125, 59]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "9"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "0"
		    base0		    "LSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "re"
		    Position		    [215, 38, 245, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "im"
		    Position		    [215, 88, 245, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "slice_re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "slice_im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    DstBlock		    "re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    DstBlock		    "im"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c"
		    SrcPort		    1
		    Points		    [5, 0]
		    Branch {
		    Points		    [0, -25]
		    DstBlock		    "slice_re"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 25]
		    DstBlock		    "slice_im"
		    DstPort		    1
		    }
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "convert_im"
		    Ports		    [1, 1]
		    Position		    [595, 180, 640, 210]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "9"
		    quantization	    "Round  (unbiased: Even Values)"
		    overflow		    "Wrap"
		    latency		    "3"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,0b13ee9b,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\ncolor('black');disp('\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "convert_re"
		    Ports		    [1, 1]
		    Position		    [595, 120, 640, 150]
		    SourceBlock		    "xbsIndex_r4/Convert"
		    SourceType		    "Xilinx Type Converter Block"
		    infoedit		    "Hardware notes: rounding and saturating require hardware resources; truncating and wrapping do not."
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "10"
		    bin_pt		    "9"
		    quantization	    "Round  (unbiased: Even Values)"
		    overflow		    "Wrap"
		    latency		    "3"
		    dbl_ovrd		    off
		    pipeline		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "convert"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,30,1,1,white,blue,0,0b13ee9b,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 45 45 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([15 10 17 10 15 23 25 27 35 28 22 17 23 17 22 28 35 27 25 23 15 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 45 45 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'cast');\ncolor('black');disp('\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "imim"
		    Ports		    [2, 1]
		    Position		    [290, 162, 340, 213]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[26 52 0 26 0 1 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "rere"
		    Ports		    [2, 1]
		    Position		    [290, 92, 340, 143]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[26 52 0 26 0 1 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    SubSystem
		    Name		    "ri_to_c"
		    Ports		    [2, 1]
		    Position		    [680, 107, 720, 223]
		    UserDataPersistent	    on
		    UserData		    "DataTag113"
		    MinAlgLoopOccurrences   off
		    RTWSystemCode	    "Auto"
		    FunctionWithSeparateData off
		    MaskType		    "Real-Imag to Complex"
		    MaskDescription	    "Concatenates real and imaginary inputs into a complex output."
		    MaskHelp		    "<pre>\nDescription::\n\nConcatenates a real and imaginary input into a complex output.\nUseful for simplifying interconnects.\nSee also: Complex to Real-Imag (c_to_ri)\n\nMask Parameters::\n\n(N/A)\n</pre>"
		    MaskSelfModifiable	    on
		    MaskIconFrame	    on
		    MaskIconOpaque	    on
		    MaskIconRotate	    "none"
		    MaskIconUnits	    "autoscale"
		    System {
		    Name		    "ri_to_c"
		    Location		    [512, 132, 787, 285]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "re"
		    Position		    [25, 38, 55, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Inport
		    Name		    "im"
		    Position		    [25, 88, 55, 102]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "concat"
		    Ports		    [2, 1]
		    Position		    [145, 40, 195, 95]
		    SourceBlock		    "xbsIndex_r4/Concat"
		    SourceType		    "Xilinx Bus Concatenator Block"
		    infoedit		    "Concatenates two or more inputs.  Output will be cast to an unsigned value with the binary point at zero."
		    num_inputs		    "2"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "concat"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,55,1,1,white,blue,0,df1e5aba,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'hi');\ncolor('black');port_label('input',2,'lo');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_im"
		    Ports		    [1, 1]
		    Position		    [80, 79, 120, 111]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "force_re"
		    Ports		    [1, 1]
		    Position		    [80, 29, 120, 61]
		    SourceBlock		    "xbsIndex_r4/Reinterpret"
		    SourceType		    "Xilinx Type Reinterpreter Block"
		    infoedit		    "Changes signal type without altering the binary representation.   You can changed the signal between signed and unsigned, and relocate the binary point.<P><P>Hardware notes: In hardware this block costs nothing.<P><P>Example:  Suppose the input is 6 bits wide, signed, with 2 fractional bits, and the output is forced to unsigned with 0 fractional bits.  Then an input of -2.0 (1110.00 in binary 2's complement) becomes an output of 56 (111000 in binary)."
		    force_arith_type	    on
		    arith_type		    "Unsigned"
		    force_bin_pt	    on
		    bin_pt		    "0"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "reinterpret"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "40,32,1,1,white,blue,0,8982c1db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 50 50 0 ],[0 0 32 32 ],[0.77 0.82 0.91]);\npatch([16 11 18 11 16 24 26 28 37 30 23 18 25 18 23 30 37 28 26 24 16 ],[3 8 15 22 27 27 25 27 27 20 27 22 15 8 3 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 50 50 0 0 ],[0 0 32 32 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');disp('reinterpret');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "c"
		    Position		    [220, 63, 250, 77]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "force_re"
		    SrcPort		    1
		    Points		    [0, 10]
		    DstBlock		    "concat"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "force_im"
		    SrcPort		    1
		    Points		    [0, -15]
		    DstBlock		    "concat"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "re"
		    SrcPort		    1
		    DstBlock		    "force_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "concat"
		    SrcPort		    1
		    DstBlock		    "c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "im"
		    SrcPort		    1
		    DstBlock		    "force_im"
		    DstPort		    1
		    }
		    }
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "rr_add_ii"
		    Ports		    [2, 1]
		    Position		    [400, 177, 450, 228]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[14 27 0 27 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "rr_sub_ii"
		    Ports		    [2, 1]
		    Position		    [400, 107, 450, 158]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "2"
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[44 44 0 69 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,2d46ec54,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-2}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "ss_sub_rrii"
		    Ports		    [2, 1]
		    Position		    [510, 167, 560, 218]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Subtraction"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[46 29 0 90 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,f900bd06,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a - b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "sumsum"
		    Ports		    [2, 1]
		    Position		    [400, 261, 450, 399]
		    SourceBlock		    "xbsIndex_r4/Mult"
		    SourceType		    "Xilinx Multiplier Block"
		    infoedit		    "Hardware notes: To use the internal pipeline stage of the dedicated multiplier you must select 'Pipeline for maximum performance'."
		    precision		    "User Defined"
		    arith_type		    "Signed  (2's comp)"
		    n_bits		    "17"
		    bin_pt		    "16"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    en			    off
		    latency		    "3"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_embedded	    on
		    opt			    "Speed"
		    optimum_pipeline	    off
		    xl_use_area		    off
		    xl_area		    "[28 56 0 28 0 1 0]"
		    pipeline		    "on"
		    use_rpm		    "on"
		    placement_style	    "Rectangular shape"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "mult"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,138,1,1,white,blue,0,9c0d74db,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 55 55 0 ],[0 0 55 55 ],[0.77 0.82 0.91]);\npatch([13 4 17 4 13 28 32 36 52 40 28 19 32 19 28 40 52 36 32 28 13 ],[6 15 28 41 50 50 46 50 50 38 50 41 28 15 6 18 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 55 55 0 0 ],[0 0 55 55 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'(ab)');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-3}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "wr_add_wi"
		    Ports		    [2, 1]
		    Position		    [290, 337, 340, 388]
		    SourceBlock		    "xbsIndex_r4/AddSub"
		    SourceType		    "Xilinx Adder/Subtractor Block"
		    mode		    "Addition"
		    use_carryin		    off
		    use_carryout	    off
		    en			    off
		    latency		    "1"
		    precision		    "Full"
		    arith_type		    "Unsigned"
		    n_bits		    "8"
		    bin_pt		    "2"
		    quantization	    "Truncate"
		    overflow		    "Wrap"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    on
		    pipelined		    on
		    use_rpm		    on
		    hw_selection	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[5 10 0 10 0 0 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "addsub"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,51,1,1,white,blue,0,d7118884,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 58 58 ],[0.77 0.82 0.91]);\npatch([15 5 19 5 15 30 34 38 54 41 29 20 34 20 29 41 54 38 34 30 15 ],[6 16 30 44 54 54 50 54 54 41 53 44 30 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 58 58 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'a');\ncolor('black');port_label('input',2,'b');\ncolor('black');port_label('output',1,'\\bf{a + b}','texmode','on');\ncolor('black');disp('\\newline\\bf{}\\newlinez^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "a_out"
		    Position		    [765, 38, 795, 52]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "bw"
		    Position		    [765, 158, 795, 172]
		    Port		    "2"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "sync_out"
		    Position		    [765, 458, 795, 472]
		    Port		    "3"
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "convert_im"
		    SrcPort		    1
		    DstBlock		    "ri_to_c"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "convert_re"
		    SrcPort		    1
		    DstBlock		    "ri_to_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Delay1"
		    SrcPort		    1
		    DstBlock		    "a_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "a_in"
		    SrcPort		    1
		    DstBlock		    "Delay1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    2
		    Points		    [15, 0]
		    Branch {
		    DstBlock		    "imim"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 130]
		    DstBlock		    "br_add_bi"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    1
		    Points		    [0, 0; 50, 0]
		    Branch {
		    DstBlock		    "wr_add_wi"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -220]
		    DstBlock		    "rere"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri1"
		    SrcPort		    2
		    Points		    [0, 0; 70, 0]
		    Branch {
		    DstBlock		    "wr_add_wi"
		    DstPort		    2
		    }
		    Branch {
		    Points		    [0, -175]
		    DstBlock		    "imim"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "c_to_ri"
		    SrcPort		    1
		    Points		    [35, 0]
		    Branch {
		    DstBlock		    "rere"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 175]
		    DstBlock		    "br_add_bi"
		    DstPort		    1
		    }
		    }
		    Line {
		    SrcBlock		    "Delay"
		    SrcPort		    1
		    DstBlock		    "sync_out"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Delay"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sumsum"
		    SrcPort		    1
		    Points		    [25, 0; 0, -150]
		    DstBlock		    "ss_sub_rrii"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ri_to_c"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "bw"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "wr_add_wi"
		    SrcPort		    1
		    DstBlock		    "sumsum"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "br_add_bi"
		    SrcPort		    1
		    DstBlock		    "sumsum"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "imim"
		    SrcPort		    1
		    Points		    [30, 0]
		    Branch {
		    DstBlock		    "rr_add_ii"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -45]
		    DstBlock		    "rr_sub_ii"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "rere"
		    SrcPort		    1
		    Points		    [15, 0]
		    Branch {
		    DstBlock		    "rr_sub_ii"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, 95]
		    DstBlock		    "rr_add_ii"
		    DstPort		    2
		    }
		    }
		    Line {
		    SrcBlock		    "w"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri1"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "b"
		    SrcPort		    1
		    Points		    [0, 0]
		    DstBlock		    "c_to_ri"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "rr_add_ii"
		    SrcPort		    1
		    DstBlock		    "ss_sub_rrii"
		    DstPort		    2
		    }
		    Line {
		    SrcBlock		    "rr_sub_ii"
		    SrcPort		    1
		    DstBlock		    "convert_re"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "ss_sub_rrii"
		    SrcPort		    1
		    DstBlock		    "convert_im"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "twiddle_gen1"
		  Ports			  [1, 1]
		  Position		  [100, 110, 170, 150]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "depth 4\ntwiddle dist"
		  UserDataPersistent	  on
		  UserData		  "DataTag114"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Radix-R Twiddle Coefficient Generator (complex storage)"
		  MaskDescription	  "A radix-R twiddle coefficient generator using complex storage.  Generates twiddle factors for Decimation in Time (i.e. twiddles before butterflies) or Decimation in Frequency (i.e. twiddles after butterflies) Fast Fourier Transforms of arbitrary-but-fixed radix.  Radix must be a power of 2.  Regardless of the decimation mode, the FFT is assumed to have inputs in normal order and outputs in bit-reversed order."
		  MaskHelp		  "<pre>\nDescription::\n\nA radix-R twiddle coefficient generator using complex storage.\n\nGenerates twiddle factors for Decimation in Time (i.e. twiddles before butterflies)\nor Decimation in Frequency (i.e. twiddles after butterflies) Fast Fourier Transforms\nof arbitrary-but-fixed radix.  Radix must be a power of 2.\n\nRegardless of the decimation mode, the FFT is assumed to have inputs normally\nordered and outputs in bit-reversed order.\n\nComplex storage means that the real and imaginary components are stored in\nthe same memory element.  This is generally fine, but if the combined width of\nthe real and imaginary components is greater than 18 and BRAM is being used\nfor the underlying storage, then the multiplier(s) adjacent to the BRAM(s) will\nnot be usable.  If that is a problem for your design, consider using the\n\"Radix-R Twiddle Coefficient Generator (real/imag storage)\" block.\n\nMask Parameters::\n\nTotal Stages (n_stages):  The number of total stages in the FFT.\n\nRadix (radix): The radix of the FFT.  The FFT will have radix^n_stages points.\n\nCurrent Stage (cur_stage):  The number of the current stage for which this block should\ngenerate twiddle coefficients.  Valid values are 3 through n_stages, inclusive.  Note that\nstages are counted from 1 to n_stages for DIT (i.e. cur_stage==1 for the first stage) and\nn_stages to 1 for DIF (i.e. cur_stage==1 for the last stage).\n\nBranch (branch): The butterfly branch associated with this twiddle generator.\nValid values are 1 through radix-1, inclusive.\n\nDecimation Mode (decimation): The decimation mode of the FFT.\n\nNumber of Bits (n_bits_w): Specifies the width of the real/imaginary components.\nAssumed equal for both components.  This block outputs UFix_(2*n_bits_w)_0.\n\nUse BRAM (use_bram): Check this checkbox to store twiddle coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Total Stages|Radix|Current Stage|Branch|Decimation Mode|Number of Bits|Binary Point|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,popup(Time|Frequency),edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off,off,off,off"
		  MaskCallbackString	  "|||||||"
		  MaskEnableString	  "off,off,off,off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on,on,on,on"
		  MaskVarAliasString	  ",,,,,,,"
		  MaskVariables		  "n_stages=&1;radix=&2;cur_stage=&3;branch=&4;decimation=&5;n_bits_w=&6;bin_pt_w=&7;use_bram=&8;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "2|4|2|1|Time|9|7|off"
		  MaskTabNameString	  ",,,,,,,"
		  System {
		    Name		    "twiddle_gen1"
		    Location		    [525, 268, 1023, 568]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Free Running"
		    cnt_to		    "Inf"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "2"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "2"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem_c"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "4"
		    initVector		    "[65536;47013;60879;25482]"
		    distributed_mem	    "Distributed memory"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "18"
		    bin_pt		    "0"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "w"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "mem_c"
		    SrcPort		    1
		    DstBlock		    "w"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "twiddle_gen2"
		  Ports			  [1, 1]
		  Position		  [100, 250, 170, 290]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "depth 4\ntwiddle dist"
		  UserDataPersistent	  on
		  UserData		  "DataTag115"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Radix-R Twiddle Coefficient Generator (complex storage)"
		  MaskDescription	  "A radix-R twiddle coefficient generator using complex storage.  Generates twiddle factors for Decimation in Time (i.e. twiddles before butterflies) or Decimation in Frequency (i.e. twiddles after butterflies) Fast Fourier Transforms of arbitrary-but-fixed radix.  Radix must be a power of 2.  Regardless of the decimation mode, the FFT is assumed to have inputs in normal order and outputs in bit-reversed order."
		  MaskHelp		  "<pre>\nDescription::\n\nA radix-R twiddle coefficient generator using complex storage.\n\nGenerates twiddle factors for Decimation in Time (i.e. twiddles before butterflies)\nor Decimation in Frequency (i.e. twiddles after butterflies) Fast Fourier Transforms\nof arbitrary-but-fixed radix.  Radix must be a power of 2.\n\nRegardless of the decimation mode, the FFT is assumed to have inputs normally\nordered and outputs in bit-reversed order.\n\nComplex storage means that the real and imaginary components are stored in\nthe same memory element.  This is generally fine, but if the combined width of\nthe real and imaginary components is greater than 18 and BRAM is being used\nfor the underlying storage, then the multiplier(s) adjacent to the BRAM(s) will\nnot be usable.  If that is a problem for your design, consider using the\n\"Radix-R Twiddle Coefficient Generator (real/imag storage)\" block.\n\nMask Parameters::\n\nTotal Stages (n_stages):  The number of total stages in the FFT.\n\nRadix (radix): The radix of the FFT.  The FFT will have radix^n_stages points.\n\nCurrent Stage (cur_stage):  The number of the current stage for which this block should\ngenerate twiddle coefficients.  Valid values are 3 through n_stages, inclusive.  Note that\nstages are counted from 1 to n_stages for DIT (i.e. cur_stage==1 for the first stage) and\nn_stages to 1 for DIF (i.e. cur_stage==1 for the last stage).\n\nBranch (branch): The butterfly branch associated with this twiddle generator.\nValid values are 1 through radix-1, inclusive.\n\nDecimation Mode (decimation): The decimation mode of the FFT.\n\nNumber of Bits (n_bits_w): Specifies the width of the real/imaginary components.\nAssumed equal for both components.  This block outputs UFix_(2*n_bits_w)_0.\n\nUse BRAM (use_bram): Check this checkbox to store twiddle coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Total Stages|Radix|Current Stage|Branch|Decimation Mode|Number of Bits|Binary Point|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,popup(Time|Frequency),edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off,off,off,off"
		  MaskCallbackString	  "|||||||"
		  MaskEnableString	  "off,off,off,off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on,on,on,on"
		  MaskVarAliasString	  ",,,,,,,"
		  MaskVariables		  "n_stages=&1;radix=&2;cur_stage=&3;branch=&4;decimation=&5;n_bits_w=&6;bin_pt_w=&7;use_bram=&8;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "2|4|2|2|Time|9|7|off"
		  MaskTabNameString	  ",,,,,,,"
		  System {
		    Name		    "twiddle_gen2"
		    Location		    [525, 268, 1023, 568]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Free Running"
		    cnt_to		    "Inf"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "2"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "2"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem_c"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "4"
		    initVector		    "[65536;384;47013;215973]"
		    distributed_mem	    "Distributed memory"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "18"
		    bin_pt		    "0"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "w"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "mem_c"
		    SrcPort		    1
		    DstBlock		    "w"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  SubSystem
		  Name			  "twiddle_gen3"
		  Ports			  [1, 1]
		  Position		  [100, 365, 170, 405]
		  BackgroundColor	  "gray"
		  AttributesFormatString  "depth 4\ntwiddle dist"
		  UserDataPersistent	  on
		  UserData		  "DataTag116"
		  MinAlgLoopOccurrences	  off
		  RTWSystemCode		  "Auto"
		  FunctionWithSeparateData off
		  MaskType		  "Radix-R Twiddle Coefficient Generator (complex storage)"
		  MaskDescription	  "A radix-R twiddle coefficient generator using complex storage.  Generates twiddle factors for Decimation in Time (i.e. twiddles before butterflies) or Decimation in Frequency (i.e. twiddles after butterflies) Fast Fourier Transforms of arbitrary-but-fixed radix.  Radix must be a power of 2.  Regardless of the decimation mode, the FFT is assumed to have inputs in normal order and outputs in bit-reversed order."
		  MaskHelp		  "<pre>\nDescription::\n\nA radix-R twiddle coefficient generator using complex storage.\n\nGenerates twiddle factors for Decimation in Time (i.e. twiddles before butterflies)\nor Decimation in Frequency (i.e. twiddles after butterflies) Fast Fourier Transforms\nof arbitrary-but-fixed radix.  Radix must be a power of 2.\n\nRegardless of the decimation mode, the FFT is assumed to have inputs normally\nordered and outputs in bit-reversed order.\n\nComplex storage means that the real and imaginary components are stored in\nthe same memory element.  This is generally fine, but if the combined width of\nthe real and imaginary components is greater than 18 and BRAM is being used\nfor the underlying storage, then the multiplier(s) adjacent to the BRAM(s) will\nnot be usable.  If that is a problem for your design, consider using the\n\"Radix-R Twiddle Coefficient Generator (real/imag storage)\" block.\n\nMask Parameters::\n\nTotal Stages (n_stages):  The number of total stages in the FFT.\n\nRadix (radix): The radix of the FFT.  The FFT will have radix^n_stages points.\n\nCurrent Stage (cur_stage):  The number of the current stage for which this block should\ngenerate twiddle coefficients.  Valid values are 3 through n_stages, inclusive.  Note that\nstages are counted from 1 to n_stages for DIT (i.e. cur_stage==1 for the first stage) and\nn_stages to 1 for DIF (i.e. cur_stage==1 for the last stage).\n\nBranch (branch): The butterfly branch associated with this twiddle generator.\nValid values are 1 through radix-1, inclusive.\n\nDecimation Mode (decimation): The decimation mode of the FFT.\n\nNumber of Bits (n_bits_w): Specifies the width of the real/imaginary components.\nAssumed equal for both components.  This block outputs UFix_(2*n_bits_w)_0.\n\nUse BRAM (use_bram): Check this checkbox to store twiddle coefficients in BRAM.\nIf unchecked, the coefficients will be sored in distributed memory (i.e. slices).\n</pre>"
		  MaskPromptString	  "Total Stages|Radix|Current Stage|Branch|Decimation Mode|Number of Bits|Binary Point|Use BRAM"
		  MaskStyleString	  "edit,edit,edit,edit,popup(Time|Frequency),edit,edit,checkbox"
		  MaskTunableValueString  "off,off,off,off,off,off,off,off"
		  MaskCallbackString	  "|||||||"
		  MaskEnableString	  "off,off,off,off,off,off,off,off"
		  MaskVisibilityString	  "on,on,on,on,on,on,on,on"
		  MaskToolTipString	  "on,on,on,on,on,on,on,on"
		  MaskVarAliasString	  ",,,,,,,"
		  MaskVariables		  "n_stages=&1;radix=&2;cur_stage=&3;branch=&4;decimation=&5;n_bits_w=&6;bin_pt_w=&7;use_bram=&8;"
		  MaskSelfModifiable	  on
		  MaskIconFrame		  on
		  MaskIconOpaque	  on
		  MaskIconRotate	  "none"
		  MaskIconUnits		  "autoscale"
		  MaskValueString	  "2|4|2|3|Time|9|7|off"
		  MaskTabNameString	  ",,,,,,,"
		  System {
		    Name		    "twiddle_gen3"
		    Location		    [525, 268, 1023, 568]
		    Open		    off
		    ModelBrowserVisibility  on
		    ModelBrowserWidth	    200
		    ScreenColor		    "white"
		    PaperOrientation	    "landscape"
		    PaperPositionMode	    "auto"
		    PaperType		    "usletter"
		    PaperUnits		    "inches"
		    TiledPaperMargins	    [0.196850, 0.196850, 0.196850, 0.196850]
		    TiledPageScale	    1
		    ShowPageBoundaries	    off
		    ZoomFactor		    "100"
		    Block {
		    BlockType		    Inport
		    Name		    "sync_in"
		    Position		    [45, 108, 75, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "Counter"
		    Ports		    [1, 1]
		    Position		    [125, 90, 175, 140]
		    SourceBlock		    "xbsIndex_r4/Counter"
		    SourceType		    "Xilinx Counter Block"
		    infoedit		    "Hardware notes: Free running counters are the least expensive in hardware.  A count limited counter is implemented by combining a counter with a comparator."
		    cnt_type		    "Free Running"
		    cnt_to		    "Inf"
		    operation		    "Up"
		    start_count		    "0"
		    cnt_by_val		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "2"
		    bin_pt		    "0"
		    load_pin		    off
		    rst			    on
		    en			    off
		    explicit_period	    "off"
		    period		    "1"
		    dbl_ovrd		    off
		    use_behavioral_HDL	    off
		    use_rpm		    on
		    implementation	    "Fabric"
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "counter"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,50,1,1,white,blue,0,300e9576,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 60 60 ],[0.77 0.82 0.91]);\npatch([14 4 18 4 14 30 34 38 55 42 29 20 35 20 29 42 55 38 34 30 14 ],[6 16 30 44 54 54 50 54 54 41 54 45 30 15 6 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 60 60 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'rst');\ncolor('black');port_label('output',1,'out');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "addr_sel"
		    Ports		    [1, 1]
		    Position		    [220, 101, 265, 129]
		    SourceBlock		    "xbsIndex_r4/Slice"
		    SourceType		    "Xilinx Bit Slice Extractor Block"
		    infoedit		    "Extracts a given range of bits from each input sample and presents it at the output.  The output type is ordinarily unsigned with binary point at zero, but can be Boolean when the slice is one bit wide.<P><P>Hardware notes: In hardware this block costs nothing."
		    nbits		    "2"
		    boolean_output	    off
		    mode		    "Upper Bit Location + Width"
		    bit1		    "0"
		    base1		    "MSB of Input"
		    bit0		    "-1"
		    base0		    "MSB of Input"
		    dbl_ovrd		    off
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "slice"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "45,28,1,1,white,blue,0,b1026674,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 30 30 ],[0.77 0.82 0.91]);\npatch([22 17 24 17 22 30 32 34 42 35 29 24 30 24 29 35 42 34 32 30 22 ],[3 8 15 22 27 27 25 27 27 20 26 21 15 9 4 10 3 3 5 3 3 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 30 30 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('output',1,'[a:b]');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Reference
		    Name		    "mem_c"
		    Ports		    [1, 1]
		    Position		    [310, 88, 360, 142]
		    AttributesFormatString  "depth = %<depth>\\ndist_mem = %<distributed_mem>"
		    SourceBlock		    "xbsIndex_r4/ROM"
		    SourceType		    "Xilinx Single Port Read-Only Memory Block"
		    depth		    "4"
		    initVector		    "[65536;215973;25482;201777]"
		    distributed_mem	    "Distributed memory"
		    rst			    off
		    init_reg		    "0"
		    en			    off
		    latency		    "1"
		    arith_type		    "Unsigned"
		    n_bits		    "18"
		    bin_pt		    "0"
		    dbl_ovrd		    off
		    optimize		    "Area"
		    use_rpm		    on
		    xl_use_area		    off
		    xl_area		    "[0, 0, 0, 0, 0, 0, 0]"
		    has_advanced_control    "0"
		    sggui_pos		    "-1,-1,-1,-1"
		    block_type		    "sprom"
		    block_version	    "10.1.3"
		    sg_icon_stat	    "50,54,1,1,white,blue,0,a8b86474,right"
		    sg_mask_display	    "fprintf('','COMMENT: begin icon graphics');\npatch([0 60 60 0 ],[0 0 56 56 ],[0.77 0.82 0.91]);\npatch([15 6 19 6 15 30 34 38 54 41 29 20 32 20 29 41 54 38 34 30 15 ],[6 15 28 41 50 50 46 50 50 37 49 40 28 16 7 19 6 6 10 6 6 ],[0.98 0.96 0.92]);\nplot([0 60 60 0 0 ],[0 0 56 56 0 ]);\nfprintf('','COMMENT: end icon graphics');\nfprintf('','COMMENT: begin icon text');\ncolor('black');port_label('input',1,'addr');\ncolor('black');disp('z^{-1}','texmode','on');\nfprintf('','COMMENT: end icon text');\n"
		    }
		    Block {
		    BlockType		    Outport
		    Name		    "w"
		    Position		    [415, 108, 445, 122]
		    IconDisplay		    "Port number"
		    OutDataType		    "sfix(16)"
		    OutScaling		    "2^0"
		    }
		    Line {
		    SrcBlock		    "mem_c"
		    SrcPort		    1
		    DstBlock		    "w"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "addr_sel"
		    SrcPort		    1
		    DstBlock		    "mem_c"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "Counter"
		    SrcPort		    1
		    DstBlock		    "addr_sel"
		    DstPort		    1
		    }
		    Line {
		    SrcBlock		    "sync_in"
		    SrcPort		    1
		    DstBlock		    "Counter"
		    DstPort		    1
		    }
		  }
		}
		Block {
		  BlockType		  Outport
		  Name			  "a_out"
		  Position		  [425, 48, 455, 62]
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "bw"
		  Position		  [425, 103, 455, 117]
		  Port			  "2"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "cw"
		  Position		  [420, 258, 450, 272]
		  Port			  "3"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "dw"
		  Position		  [420, 373, 450, 387]
		  Port			  "4"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Block {
		  BlockType		  Outport
		  Name			  "sync_out"
		  Position		  [425, 158, 455, 172]
		  Port			  "5"
		  IconDisplay		  "Port number"
		  OutDataType		  "sfix(16)"
		  OutScaling		  "2^0"
		}
		Line {
		  SrcBlock		  "Delay3"
		  SrcPort		  1
		  Points		  [25, 0; 0, -60]
		  Branch {
		    Points		    [0, -115]
		    Branch {
		    DstBlock		    "cmpy2"
		    DstPort		    4
		    }
		    Branch {
		    Points		    [0, -110]
		    DstBlock		    "cmpy1"
		    DstPort		    4
		    }
		  }
		  Branch {
		    DstBlock		    "cmpy3"
		    DstPort		    4
		  }
		}
		Line {
		  SrcBlock		  "cmpy3"
		  SrcPort		  3
		  DstBlock		  "Terminator6"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "cmpy3"
		  SrcPort		  1
		  DstBlock		  "Terminator4"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Constant2"
		  SrcPort		  1
		  DstBlock		  "cmpy3"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "cmpy2"
		  SrcPort		  3
		  DstBlock		  "Terminator2"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "cmpy2"
		  SrcPort		  1
		  DstBlock		  "Terminator"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Constant"
		  SrcPort		  1
		  DstBlock		  "cmpy2"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Delay5"
		  SrcPort		  1
		  Points		  [10, 0; 0, 40]
		  DstBlock		  "cmpy3"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "d"
		  SrcPort		  1
		  Points		  [0, 0]
		  DstBlock		  "Delay5"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Delay4"
		  SrcPort		  1
		  Points		  [10, 0; 0, 40]
		  DstBlock		  "cmpy2"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "c"
		  SrcPort		  1
		  DstBlock		  "Delay4"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "twiddle_gen3"
		  SrcPort		  1
		  DstBlock		  "cmpy3"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "twiddle_gen2"
		  SrcPort		  1
		  DstBlock		  "cmpy2"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "cmpy3"
		  SrcPort		  2
		  Points		  [0, 0]
		  DstBlock		  "dw"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "cmpy2"
		  SrcPort		  2
		  Points		  [0, 0]
		  DstBlock		  "cw"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "sync_in"
		  SrcPort		  1
		  Points		  [0, 0; 10, 0]
		  Branch {
		    Points		    [0, -70]
		    Branch {
		    DstBlock		    "twiddle_gen3"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -115]
		    Branch {
		    DstBlock		    "twiddle_gen2"
		    DstPort		    1
		    }
		    Branch {
		    Points		    [0, -140]
		    DstBlock		    "twiddle_gen1"
		    DstPort		    1
		    }
		    }
		  }
		  Branch {
		    DstBlock		    "Delay3"
		    DstPort		    1
		  }
		}
		Line {
		  SrcBlock		  "b"
		  SrcPort		  1
		  DstBlock		  "Delay1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "a_in"
		  SrcPort		  1
		  DstBlock		  "Delay2"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Delay2"
		  SrcPort		  1
		  DstBlock		  "cmpy1"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "cmpy1"
		  SrcPort		  1
		  DstBlock		  "a_out"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "Delay1"
		  SrcPort		  1
		  DstBlock		  "cmpy1"
		  DstPort		  2
		}
		Line {
		  SrcBlock		  "cmpy1"
		  SrcPort		  2
		  DstBlock		  "bw"
		  DstPort		  1
		}
		Line {
		  SrcBlock		  "twiddle_gen1"
		  SrcPort		  1
		  DstBlock		  "cmpy1"
		  DstPort		  3
		}
		Line {
		  SrcBlock		  "cmpy1"
		  SrcPort		  3
		  DstBlock		  "sync_out"
		  DstPort		  1
		}
	      }
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "a_out"
	      Position		      [675, 53, 705, 67]
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "b_out"
	      Position		      [675, 98, 705, 112]
	      Port		      "2"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "c_out"
	      Position		      [675, 143, 705, 157]
	      Port		      "3"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "d_out"
	      Position		      [675, 188, 705, 202]
	      Port		      "4"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "sync_out"
	      Position		      [675, 233, 705, 247]
	      Port		      "5"
	      IconDisplay	      "Port number"
	      OutDataType	      "sfix(16)"
	      OutScaling	      "2^0"
	    }
	    Line {
	      SrcBlock		      "r4_butterfly"
	      SrcPort		      5
	      Points		      [25, 0; 0, 60]
	      DstBlock		      "sync_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "r4_butterfly"
	      SrcPort		      4
	      Points		      [65, 0; 0, 30]
	      DstBlock		      "d_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "r4_butterfly"
	      SrcPort		      3
	      Points		      [0, 0]
	      DstBlock		      "c_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "r4_butterfly"
	      SrcPort		      2
	      Points		      [65, 0; 0, -30]
	      DstBlock		      "b_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "r4_butterfly"
	      SrcPort		      1
	      Points		      [25, 0; 0, -60]
	      DstBlock		      "a_out"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "sync_in"
	      SrcPort		      1
	      Points		      [60, 0; 0, -60]
	      DstBlock		      "quadplex_commutator"
	      DstPort		      5
	    }
	    Line {
	      SrcBlock		      "d_in"
	      SrcPort		      1
	      Points		      [35, 0; 0, -30]
	      DstBlock		      "quadplex_commutator"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "c_in"
	      SrcPort		      1
	      DstBlock		      "quadplex_commutator"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "b_in"
	      SrcPort		      1
	      Points		      [35, 0; 0, 30]
	      DstBlock		      "quadplex_commutator"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "a_in"
	      SrcPort		      1
	      Points		      [60, 0; 0, 60]
	      DstBlock		      "quadplex_commutator"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "r4_twiddle"
	      SrcPort		      5
	      DstBlock		      "r4_butterfly"
	      DstPort		      5
	    }
	    Line {
	      SrcBlock		      "r4_twiddle"
	      SrcPort		      4
	      DstBlock		      "r4_butterfly"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "r4_twiddle"
	      SrcPort		      3
	      DstBlock		      "r4_butterfly"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "r4_twiddle"
	      SrcPort		      2
	      DstBlock		      "r4_butterfly"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "r4_twiddle"
	      SrcPort		      1
	      DstBlock		      "r4_butterfly"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "quadplex_commutator"
	      SrcPort		      5
	      Points		      [0, 0]
	      DstBlock		      "r4_twiddle"
	      DstPort		      5
	    }
	    Line {
	      SrcBlock		      "quadplex_commutator"
	      SrcPort		      4
	      Points		      [0, 0]
	      DstBlock		      "r4_twiddle"
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "quadplex_commutator"
	      SrcPort		      3
	      Points		      [0, 0]
	      DstBlock		      "r4_twiddle"
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "quadplex_commutator"
	      SrcPort		      2
	      Points		      [0, 0]
	      DstBlock		      "r4_twiddle"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "quadplex_commutator"
	      SrcPort		      1
	      Points		      [0, 0]
	      DstBlock		      "r4_twiddle"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  Outport
	  Name			  "a_out"
	  Position		  [700, 13, 730, 27]
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "b_out"
	  Position		  [700, 48, 730, 62]
	  Port			  "2"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "c_out"
	  Position		  [700, 83, 730, 97]
	  Port			  "3"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "d_out"
	  Position		  [700, 118, 730, 132]
	  Port			  "4"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Block {
	  BlockType		  Outport
	  Name			  "sync_out"
	  Position		  [700, 153, 730, 167]
	  Port			  "5"
	  IconDisplay		  "Port number"
	  OutDataType		  "sfix(16)"
	  OutScaling		  "2^0"
	}
	Line {
	  SrcBlock		  "a_in"
	  SrcPort		  1
	  DstBlock		  "r4_dit_stage_1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "b_in"
	  SrcPort		  1
	  DstBlock		  "r4_dit_stage_1"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "c_in"
	  SrcPort		  1
	  DstBlock		  "r4_dit_stage_1"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "d_in"
	  SrcPort		  1
	  DstBlock		  "r4_dit_stage_1"
	  DstPort		  4
	}
	Line {
	  SrcBlock		  "sync_in"
	  SrcPort		  1
	  DstBlock		  "r4_dit_stage_1"
	  DstPort		  5
	}
	Line {
	  SrcBlock		  "r4_dit_stage_1"
	  SrcPort		  1
	  DstBlock		  "r4_dit_stage_2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "r4_dit_stage_1"
	  SrcPort		  2
	  DstBlock		  "r4_dit_stage_2"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "r4_dit_stage_1"
	  SrcPort		  3
	  DstBlock		  "r4_dit_stage_2"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "r4_dit_stage_1"
	  SrcPort		  4
	  DstBlock		  "r4_dit_stage_2"
	  DstPort		  4
	}
	Line {
	  SrcBlock		  "r4_dit_stage_1"
	  SrcPort		  5
	  DstBlock		  "r4_dit_stage_2"
	  DstPort		  5
	}
	Line {
	  SrcBlock		  "r4_dit_stage_2"
	  SrcPort		  1
	  DstBlock		  "quadplex_commutator"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "r4_dit_stage_2"
	  SrcPort		  3
	  DstBlock		  "quadplex_commutator"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "r4_dit_stage_2"
	  SrcPort		  2
	  DstBlock		  "quadplex_commutator"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "r4_dit_stage_2"
	  SrcPort		  4
	  DstBlock		  "quadplex_commutator"
	  DstPort		  4
	}
	Line {
	  SrcBlock		  "r4_dit_stage_2"
	  SrcPort		  5
	  DstBlock		  "quadplex_commutator"
	  DstPort		  5
	}
	Line {
	  SrcBlock		  "quadplex_commutator"
	  SrcPort		  1
	  DstBlock		  "quadplex_bitrev"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "quadplex_commutator"
	  SrcPort		  2
	  DstBlock		  "quadplex_bitrev"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "quadplex_commutator"
	  SrcPort		  3
	  DstBlock		  "quadplex_bitrev"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "quadplex_commutator"
	  SrcPort		  4
	  DstBlock		  "quadplex_bitrev"
	  DstPort		  4
	}
	Line {
	  SrcBlock		  "quadplex_commutator"
	  SrcPort		  5
	  DstBlock		  "quadplex_bitrev"
	  DstPort		  5
	}
	Line {
	  SrcBlock		  "quadplex_bitrev"
	  SrcPort		  1
	  DstBlock		  "a_out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "quadplex_bitrev"
	  SrcPort		  2
	  DstBlock		  "b_out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "quadplex_bitrev"
	  SrcPort		  3
	  DstBlock		  "c_out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "quadplex_bitrev"
	  SrcPort		  4
	  DstBlock		  "d_out"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "quadplex_bitrev"
	  SrcPort		  5
	  DstBlock		  "sync_out"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      Outport
      Name		      "a_out"
      Position		      [1180, 23, 1210, 37]
      IconDisplay	      "Port number"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
    }
    Block {
      BlockType		      Outport
      Name		      "sync_out"
      Position		      [1180, 283, 1210, 297]
      Port		      "2"
      IconDisplay	      "Port number"
      OutDataType	      "sfix(16)"
      OutScaling	      "2^0"
    }
    Block {
      BlockType		      SignalViewerScope
      Name		      "Scope1"
      Ports		      []
      Position		      [20, 15, 60, 55]
      IOType		      "viewer"
      Location		      [34, 86, 358, 325]
      Open		      off
      NumInputPorts	      "1"
      List {
	ListType		AxesTitles
	axes1			"%<SignalLabel>"
      }
      ShowDataMarkers	      off
      ShowLegends	      off
      DataFormat	      "Array"
      MaxDataPoints	      "7500"
      RefreshTime	      0.035000
    }
    Line {
      SrcBlock		      "Gateway In"
      SrcPort		      1
      Points		      [10, 0]
      Branch {
	Points			[0, 165]
	DstBlock		"Relational"
	DstPort			1
      }
      Branch {
	DstBlock		"Delay"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Gateway In1"
      SrcPort		      1
      DstBlock		      "r4_dit_fft"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Relational"
      SrcPort		      1
      Points		      [80, 0]
      DstBlock		      "r4_dit_fft"
      DstPort		      5
    }
    Line {
      SrcBlock		      "Constant2"
      SrcPort		      1
      Points		      [0, 0]
      DstBlock		      "Gateway In1"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Gateway Out"
      SrcPort		      1
      Points		      [35, 0]
      Branch {
	DstBlock		"Scope"
	DstPort			1
      }
      Branch {
	Points			[0, -55]
	DstBlock		"Real-Imag to\nComplex"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Gateway Out1"
      SrcPort		      1
      Points		      [50, 0]
      Branch {
	DstBlock		"Scope"
	DstPort			2
      }
      Branch {
	Points			[0, -80]
	DstBlock		"Real-Imag to\nComplex"
	DstPort			2
      }
    }
    Line {
      SrcBlock		      "Gateway Out2"
      SrcPort		      1
      DstBlock		      "Scope"
      DstPort		      3
    }
    Line {
      SrcBlock		      "Constant4"
      SrcPort		      1
      DstBlock		      "Relational"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Repeating\nSequence"
      SrcPort		      1
      DstBlock		      "Gateway In"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Delay"
      SrcPort		      1
      Points		      [105, 0]
      DstBlock		      "r4_dit_fft"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Gateway Out3"
      SrcPort		      1
      DstBlock		      "Scope"
      DstPort		      4
    }
    Line {
      SrcBlock		      "Gateway Out4"
      SrcPort		      1
      Points		      [50, 0]
      Branch {
	DstBlock		"Scope"
	DstPort			5
      }
      Branch {
	Points			[0, 45]
	DstBlock		"Real-Imag to\nComplex1"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "c_to_ri"
      SrcPort		      1
      DstBlock		      "Gateway Out"
      DstPort		      1
    }
    Line {
      SrcBlock		      "c_to_ri"
      SrcPort		      2
      Points		      [10, 0; 0, 20]
      DstBlock		      "Gateway Out1"
      DstPort		      1
    }
    Line {
      SrcBlock		      "c_to_ri1"
      SrcPort		      1
      DstBlock		      "Gateway Out2"
      DstPort		      1
    }
    Line {
      SrcBlock		      "c_to_ri1"
      SrcPort		      2
      Points		      [10, 0; 0, 20]
      DstBlock		      "Gateway Out3"
      DstPort		      1
    }
    Line {
      SrcBlock		      "r4_dit_fft"
      SrcPort		      1
      Points		      [50, 0; 0, -65]
      DstBlock		      "c_to_ri"
      DstPort		      1
    }
    Line {
      SrcBlock		      "r4_dit_fft"
      SrcPort		      2
      DstBlock		      "c_to_ri1"
      DstPort		      1
    }
    Line {
      SrcBlock		      "r4_dit_fft"
      SrcPort		      5
      Points		      [0, 25]
      DstBlock		      "Gateway Out4"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Real-Imag to\nComplex"
      SrcPort		      1
      DstBlock		      "a_out"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Constant1"
      SrcPort		      1
      Points		      [0, 0]
      DstBlock		      "Gateway In2"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Constant3"
      SrcPort		      1
      Points		      [0, 0]
      DstBlock		      "Gateway In3"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Gateway In2"
      SrcPort		      1
      Points		      [35, 0; 0, -25]
      DstBlock		      "r4_dit_fft"
      DstPort		      3
    }
    Line {
      SrcBlock		      "Gateway In3"
      SrcPort		      1
      Points		      [65, 0; 0, -50]
      DstBlock		      "r4_dit_fft"
      DstPort		      4
    }
    Line {
      SrcBlock		      "r4_dit_fft"
      SrcPort		      3
      DstBlock		      "Terminator"
      DstPort		      1
    }
    Line {
      SrcBlock		      "r4_dit_fft"
      SrcPort		      4
      DstBlock		      "Terminator2"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Real-Imag to\nComplex1"
      SrcPort		      1
      DstBlock		      "sync_out"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Constant6"
      SrcPort		      1
      DstBlock		      "Real-Imag to\nComplex1"
      DstPort		      2
    }
  }
}
MatData {
  NumRecords		  117
  DataRecord {
    Tag			    DataTag116
    Data		    "  %)30     .    J (   8    (     0         %    \"     $    *     0         .    0     8    (    !          %    \"     $    0     0         0    $    '1W:61D;&5?9V5N7VEN:70.    .     8    (    !@         %    \"     $    !     0         )    \"             ! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            00 X    X    !@    @    &          4    (     0    $    !          D    (             $ .    .     8    (    !@         %    \"     $    !     0         )    \"             A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @           #P/PX    X    !@    @    &          4    (     0    $    !          D    (            (D .    .     8    (    !@         %    \"     $    !     0         )    \"            !Q #@   #     &    \"     D\"        !0    @    !     0    $          @ !       .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag115
    Data		
  }
  DataRecord {
    Tag			    DataTag114
    Data		
  }
  DataRecord {
    Tag			    DataTag113
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag112
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \") #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag111
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"1 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            B0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag110
    Data		
  }
  DataRecord {
    Tag			    DataTag109
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag108
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \") #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag107
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"1 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            B0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag106
    Data		
  }
  DataRecord {
    Tag			    DataTag105
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag104
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \") #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag103
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"1 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            B0 X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag102
    Data		
  }
  DataRecord {
    Tag			    DataTag101
    Data		
  }
  DataRecord {
    Tag			    DataTag100
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag99
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag98
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"9 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag97
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"9 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag96
    Data		
  }
  DataRecord {
    Tag			    DataTag95
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag94
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag93
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"9 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag92
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"9 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag91
    Data		
  }
  DataRecord {
    Tag			    DataTag90
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag89
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag88
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"1 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag87
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"1 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag86
    Data		
  }
  DataRecord {
    Tag			    DataTag85
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag84
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag83
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"1 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag82
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"1 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag81
    Data		
  }
  DataRecord {
    Tag			    DataTag80
    Data		
  }
  DataRecord {
    Tag			    DataTag79
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"             ! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag78
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"             ! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag77
    Data		    "  %)30     .    > $   8    (     0         %    \"     $    %     0         .    2     8    (    !          %    \"     $    6     0         0    %@   &)I<&QE>%]C;VUM=71A=&]R7VEN:70   X    X    !@    @    &          4    (     0    $    !          D    (             $ .    .     8    (    !@         %    \"     $    !     0         )    \"            \"1 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag76
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"             ! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag75
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"             ! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag74
    Data		
  }
  DataRecord {
    Tag			    DataTag73
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            / _#@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag72
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            / _#@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag71
    Data		    "  %)30     .    > $   8    (     0         %    \"     $    %     0         .    2     8    (    !          %    \"     $    6     0         0    %@   &)I<&QE>%]C;VUM=71A=&]R7VEN:70   X    X    !@    @    &          4    (     0    $    !          D    (            \\#\\.    .     8    (    !@         %    \"     $    !     0         )    \"            \"1 #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag70
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            / _#@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag69
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            / _#@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag68
    Data		
  }
  DataRecord {
    Tag			    DataTag67
    Data		
  }
  DataRecord {
    Tag			    DataTag66
    Data		    "  %)30     .    * ,   8    (     0         %    \"     $    ,     0         .    2     8    (    !          %    \"     $    1     0         0    $0   '(T7V1I=%]S=&%G95]I;FET          X    X    !@    @    &          4    (     0    $    !          D    (             $ .    .     8    (    !@         %    \"     $    !     0         )    \"             ! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            D0 X    X    !@    @    &          4    (     0    $    !          D    (            '$ .    .     8    (    !@         %    \"     $    !     0         )    \"               #@   #     &    \"     D\"        !0    @    !     0    $          @ !       .    ,     8    (    \"0(        %    \"     $    !     0         \"  $       X    X    !@    @    &          4    (     0    $    !          D    (            (D .    .     8    (    !@         %    \"     $    !     0         )    \"             A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @           #P/PX    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag65
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    .     0         0    #@   '1W:61D;&5?,5]I;FET   .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag64
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag63
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag62
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \") #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag61
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \") #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag60
    Data		
  }
  DataRecord {
    Tag			    DataTag59
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag58
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag57
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \") #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag56
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \") #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag55
    Data		
  }
  DataRecord {
    Tag			    DataTag54
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag53
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag52
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag51
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag50
    Data		    "  %)30     .    N $   8    (     0         %    \"     $    &     0         .    2     8    (    !          %    \"     $    1     0         0    $0   '(R7V)U='1E<F9L>5]I;FET          X    X    !@    @    &          4    (     0    $    !          D    (            ($ .    .     8    (    !@         %    \"     $    !     0         )    \"               #@   #@    &    \"     8         !0    @    !     0    $         \"0    @           #P/PX    X    !@    @    &          4    (     0    $    !          D    (            \\#\\.    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag49
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag48
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag47
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag46
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag45
    Data		
  }
  DataRecord {
    Tag			    DataTag44
    Data		
  }
  DataRecord {
    Tag			    DataTag43
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag42
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag41
    Data		
  }
  DataRecord {
    Tag			    DataTag40
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag39
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag38
    Data		
  }
  DataRecord {
    Tag			    DataTag37
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            !! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag36
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            !! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag35
    Data		    "  %)30     .    > $   8    (     0         %    \"     $    %     0         .    2     8    (    !          %    \"     $    6     0         0    %@   &)I<&QE>%]C;VUM=71A=&]R7VEN:70   X    X    !@    @    &          4    (     0    $    !          D    (            \"$ .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag34
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            !! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag33
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            !! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag32
    Data		
  }
  DataRecord {
    Tag			    DataTag31
    Data		
  }
  DataRecord {
    Tag			    DataTag30
    Data		
  }
  DataRecord {
    Tag			    DataTag29
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag28
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag27
    Data		    "  %)30     .    > $   8    (     0         %    \"     $    %     0         .    2     8    (    !          %    \"     $    6     0         0    %@   &)I<&QE>%]C;VUM=71A=&]R7VEN:70   X    X    !@    @    &          4    (     0    $    !          D    (            $$ .    .     8    (    !@         %    \"     $    !     0         )    \"            \"A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag26
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag25
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            \"! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag24
    Data		
  }
  DataRecord {
    Tag			    DataTag23
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            !! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag22
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            !! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag21
    Data		
  }
  DataRecord {
    Tag			    DataTag20
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            !! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag19
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    .     0         0    #@   &1E;&%Y7W-L<E]I;FET   .    .     8    (    !@         %    \"     $    !     0         )    \"            !! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag18
    Data		
  }
  DataRecord {
    Tag			    DataTag17
    Data		
  }
  DataRecord {
    Tag			    DataTag16
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag15
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag14
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag13
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag12
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    0     0         0    $    &)I=%]R979E<G-E7VEN:70.    .     8    (    !@         %    \"     $    !     0         )    \"             ! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag11
    Data		    "  %)30     .    . $   8    (     0         %    \"     $    $     0         .    2     8    (    !          %    \"     $    2     0         0    $@   &)I<&QE>%]B:71R979?:6YI=         X    X    !@    @    &          4    (     0    $    !          D    (             $ .    .     8    (    !@         %    \"     $    !     0         )    \"            \"A #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag10
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag9
    Data		    "  %)30     .    L     8    (     0         %    \"     $    \"     0         .    0     8    (    !          %    \"     $    ,     0         0    #    ')I7W1O7V-?:6YI=      .    .     8    (    !          %    \"     $    (     0         0    \"    &1U;6)D;W=N"
  }
  DataRecord {
    Tag			    DataTag8
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag7
    Data		    "  %)30     .    , $   8    (     0         %    \"     $    $     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @               X    X    !@    @    $          4    (     0    @    !         !     (    9'5M8F1O=VX"
  }
  DataRecord {
    Tag			    DataTag6
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    0     0         0    $    &)I=%]R979E<G-E7VEN:70.    .     8    (    !@         %    \"     $    !     0         )    \"             ! #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag5
    Data		    "  %)30     .    . $   8    (     0         %    \"     $    $     0         .    2     8    (    !          %    \"     $    2     0         0    $@   &)I<&QE>%]B:71R979?:6YI=         X    X    !@    @    &          4    (     0    $    !          D    (             $ .    .     8    (    !@         %    \"     $    !     0         )    \"            \"A #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag4
    Data		    "  %)30     .    . $   8    (     0         %    \"     $    $     0         .    2     8    (    !          %    \"     $    4     0         0    %    '%U861P;&5X7V)I=')E=E]I;FET      X    X    !@    @    &          4    (     0    $    !          D    (             $ .    .     8    (    !@         %    \"     $    !     0         )    \"            \"A #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !D=6UB9&]W;@"
  }
  DataRecord {
    Tag			    DataTag3
    Data		
  }
  DataRecord {
    Tag			    DataTag2
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 "
  }
  DataRecord {
    Tag			    DataTag1
    Data		    "  %)30     .    \\     8    (     0         %    \"     $    #     0         .    0     8    (    !          %    \"     $    ,     0         0    #    &-?=&]?<FE?:6YI=      .    .     8    (    !@         %    \"     $    !     0         )    \"            \"A #@   #@    &    \"     8         !0    @    !     0    $         \"0    @            <0 "
  }
  DataRecord {
    Tag			    DataTag0
    Data		    "  %)30     .    2 @   8    (     @         %    \"     $    !     0         %  0 !@    $    &    <V%V960    .      @   8    (     @         %    \"     $    !     0         %  0 #     $    8    <VAA<F5D        8V]M<&EL871I;VX #@   ( #   &    \"     (         !0    @    !     0    $         !0 $ !,    !    A0   &-O;7!I;&%T:6]N          !C;VUP:6QA=&EO;E]L=70     <VEM=6QI;FM?<&5R:6]D     &EN8W)?;F5T;&ES=         !T<FEM7W9B:71S            9&)L7V]V<F0              &1E<')E8V%T961?8V]N=')O;      .    .     8    (    !          %    \"     $    '     0         0    !P   '1A<F=E=#$ #@   # !   &    \"     (         !0    @    !     0    $         !0 $  <    !    #@   &ME>7,   !V86QU97,    .    <     8    (     0         %    \"     $    !     0         .    0     8    (    !          %    \"     $    +     0         0    \"P   $A$3\"!.971L:7-T       .    :     8    (     0         %    \"     $    !     0         .    .     8    (    !          %    \"     $    '     0         0    !P   '1A<F=E=#$ #@   #     &    \"     0         !0    @    !     0    $         $  ! #$    .    ,     8    (    !          %    \"     $    #     0         0  , ;V9F  X   !(    !@    @    $          4    (     0   !<    !         !     7    179E<GEW:&5R92!I;B!3=6)3>7-T96T #@   $@    &    \"     0         !0    @    !    &     $         $    !@   !!8V-O<F1I;F<@=&\\@0FQO8VL@36%S:W,.    ,     8    (    !          %    \"     $    #     0         0  , ;V9F  X    @!   !@    @    \"          4    (     0    $    !          4 !  (     0    @   !T87)G970Q  X   #8 P  !@    @    \"          4    (     0    $    !          4 !  0     0   ,    !X:6QI;GAF86UI;'D     <&%R=                '-P965D              !P86-K86=E            <WEN=&AE<VES7W1O;VP  &1I<F5C=&]R>0        !T97-T8F5N8V@         <WES8VQK7W!E<FEO9    &-O<F5?9V5N97)A=&EO;@!R=6Y?8V]R96=E;@      979A;%]F:65L9        &-L;V-K7VQO8P         .    .     8    (    !          %    \"     $    '     0         0    !P   %9I<G1E>#( #@   #@    &    \"     0         !0    @    !    \"     $         $     @   !X8S)V,3 P, X    P    !@    @    $          4    (     0    (    !         !   @ M-   #@   #@    &    \"     0         !0    @    !    !0    $         $     4   !B9S4W-0    X    P    !@    @    $          4    (     0    ,    !         !   P!84U0 #@   $     &    \"     0         !0    @    !    \"0    $         $     D    N+VYE=&QI<W0         #@   #     &    \"     0         !0    @    !     P    $         $  # &]F9@ .    ,     8    (    !          %    \"     $    #     0         0  , ,3 P  X   !(    !@    @    $          4    (     0   !@    !         !     8    06-C;W)D:6YG('1O($)L;V-K($UA<VMS#@   #     &    \"     0         !0    @    !     P    $         $  # &]F9@ .    ,     8    (    !          %    \"     $    !     0         0  $ ,     X    P    !@    @    $          4    (               !         !          "
  }
}
