set output_file [open "mem_tester_sim/ddr2_controller_v1_00_a/hdl/vhdl/ddr_dqs_iob.vhd" w ]
set line_num 1; puts $output_file "--******************************************************************************"
set line_num 2; puts $output_file "--"
set line_num 3; puts $output_file "--  Xilinx, Inc. 2002                 www.xilinx.com"
set line_num 4; puts $output_file "--"
set line_num 5; puts $output_file "--"
set line_num 6; puts $output_file "--*******************************************************************************"
set line_num 7; puts $output_file "--"
set line_num 8; puts $output_file "--  File name :       ddr_dqs_iob.vhd"
set line_num 9; puts $output_file "--"
set line_num 10; puts $output_file "--  Description :     This module instantiates DDR IOB output flip-flops, an "
set line_num 11; puts $output_file "--                    output buffer with registered tri-state, and an input buffer  "
set line_num 12; puts $output_file "--                    for a single strobe/dqs bit. The DDR IOB output flip-flops "
set line_num 13; puts $output_file "--                    are used to forward strobe to memory during a write. During"
set line_num 14; puts $output_file "--                    a read, the output of the IBUF is routed to the internal "
set line_num 15; puts $output_file "--                    delay module, dqs_delay. "
set line_num 16; puts $output_file "--                    "
set line_num 17; puts $output_file "--  Date - revision : 07/28/2003"
set line_num 18; puts $output_file "--"
set line_num 19; puts $output_file "--  Author :          Maria George"
set line_num 20; puts $output_file "--"
set line_num 21; puts $output_file "--  Contact : e-mail  hotline@xilinx.com"
set line_num 22; puts $output_file "--            phone   + 1 800 255 7778 "
set line_num 23; puts $output_file "--"
set line_num 24; puts $output_file "--  Disclaimer: LIMITED WARRANTY AND DISCLAMER. These designs are "
set line_num 25; puts $output_file "--              provided to you \"as is\". Xilinx and its licensors make and you "
set line_num 26; puts $output_file "--              receive no warranties or conditions, express, implied, "
set line_num 27; puts $output_file "--              statutory or otherwise, and Xilinx specifically disclaims any "
set line_num 28; puts $output_file "--              implied warranties of merchantability, non-infringement, or "
set line_num 29; puts $output_file "--              fitness for a particular purpose. Xilinx does not warrant that "
set line_num 30; puts $output_file "--              the functions contained in these designs will meet your "
set line_num 31; puts $output_file "--              requirements, or that the operation of these designs will be "
set line_num 32; puts $output_file "--              uninterrupted or error free, or that defects in the Designs "
set line_num 33; puts $output_file "--              will be corrected. Furthermore, Xilinx does not warrant or "
set line_num 34; puts $output_file "--              make any representations regarding use or the results of the "
set line_num 35; puts $output_file "--              use of the designs in terms of correctness, accuracy, "
set line_num 36; puts $output_file "--              reliability, or otherwise. "
set line_num 37; puts $output_file "--"
set line_num 38; puts $output_file "--              LIMITATION OF LIABILITY. In no event will Xilinx or its "
set line_num 39; puts $output_file "--              licensors be liable for any loss of data, lost profits, cost "
set line_num 40; puts $output_file "--              or procurement of substitute goods or services, or for any "
set line_num 41; puts $output_file "--              special, incidental, consequential, or indirect damages "
set line_num 42; puts $output_file "--              arising from the use or operation of the designs or "
set line_num 43; puts $output_file "--              accompanying documentation, however caused and on any theory "
set line_num 44; puts $output_file "--              of liability. This limitation will apply even if Xilinx "
set line_num 45; puts $output_file "--              has been advised of the possibility of such damage. This "
set line_num 46; puts $output_file "--              limitation shall apply not-withstanding the failure of the "
set line_num 47; puts $output_file "--              essential purpose of any limited remedies herein. "
set line_num 48; puts $output_file "--"
set line_num 49; puts $output_file "--  Copyright © 2002 Xilinx, Inc."
set line_num 50; puts $output_file "--  All rights reserved "
set line_num 51; puts $output_file "-- "
set line_num 52; puts $output_file "--*****************************************************************************"
set line_num 53; puts $output_file ""
set line_num 54; puts $output_file "library ieee;"
set line_num 55; puts $output_file "use ieee.std_logic_1164.all;"
set line_num 56; puts $output_file "--library synplify; "
set line_num 57; puts $output_file "--use synplify.attributes.all;"
set line_num 58; puts $output_file ""
set line_num 59; puts $output_file "--"
set line_num 60; puts $output_file "-- pragma translate_off"
set line_num 61; puts $output_file "library UNISIM;"
set line_num 62; puts $output_file "use UNISIM.VCOMPONENTS.ALL;"
set line_num 63; puts $output_file "-- pragma translate_on"
set line_num 64; puts $output_file "--"
set line_num 65; puts $output_file ""
set line_num 66; puts $output_file "entity ddr_dqs_iob is"
set line_num 67; puts $output_file "port("
set line_num 68; puts $output_file "     clk            : in std_logic;"
set line_num 69; puts $output_file "     ddr_dqs_reset  : in std_logic;"
set line_num 70; puts $output_file "     ddr_dqs_enable : in std_logic;"
set line_num 71; puts $output_file "     ddr_dqs        : inout std_logic;"
set line_num 72; puts $output_file "     dqs            : out std_logic);              "
set line_num 73; puts $output_file "end ddr_dqs_iob;"
set line_num 74; puts $output_file " "
set line_num 75; puts $output_file "     "
set line_num 76; puts $output_file "architecture arc_ddr_dqs_iob of ddr_dqs_iob is"
set line_num 77; puts $output_file "component FD"
set line_num 78; puts $output_file "port( D : in std_logic;"
set line_num 79; puts $output_file "      Q : out std_logic;"
set line_num 80; puts $output_file "      C : in std_logic);"
set line_num 81; puts $output_file "end component;"
set line_num 82; puts $output_file ""
set line_num 83; puts $output_file "component FDDRRSE "
set line_num 84; puts $output_file "port( Q  : out std_logic;"
set line_num 85; puts $output_file "      C0 : in std_logic;"
set line_num 86; puts $output_file "      C1 : in std_logic;"
set line_num 87; puts $output_file "      CE : in std_logic;"
set line_num 88; puts $output_file "      D0 : in std_logic;"
set line_num 89; puts $output_file "      D1 : in std_logic;"
set line_num 90; puts $output_file "      R  : in std_logic;"
set line_num 91; puts $output_file "      S  : in std_logic);"
set line_num 92; puts $output_file "end component;"
set line_num 93; puts $output_file ""
set line_num 94; puts $output_file "component OBUFT"
set line_num 95; puts $output_file "port("
set line_num 96; puts $output_file "      I : in std_logic;"
set line_num 97; puts $output_file "      T : in std_logic;"
set line_num 98; puts $output_file "      O : out std_logic);"
set line_num 99; puts $output_file "end component;"
set line_num 100; puts $output_file ""
set line_num 101; puts $output_file "component IBUF_SSTL2_II"
set line_num 102; puts $output_file "port("
set line_num 103; puts $output_file "      I : in std_logic;"
set line_num 104; puts $output_file "      O : out std_logic);"
set line_num 105; puts $output_file "end component;"
set line_num 106; puts $output_file ""
set line_num 107; puts $output_file "attribute syn_keep : boolean;"
set line_num 108; puts $output_file ""
set line_num 109; puts $output_file "signal dqs_q            : std_logic;"
set line_num 110; puts $output_file "signal ddr_dqs_enable1  : std_logic;"
set line_num 111; puts $output_file "signal vcc              : std_logic;"
set line_num 112; puts $output_file "signal gnd              : std_logic;"
set line_num 113; puts $output_file "signal ddr_dqs_enable_b : std_logic;"
set line_num 114; puts $output_file "signal data1            : std_logic;"
set line_num 115; puts $output_file "  signal clk180           : std_logic;"
set line_num 116; puts $output_file ""
set line_num 117; puts $output_file "  attribute syn_keep of clk180 : signal is true;"
set line_num 118; puts $output_file ""
set line_num 119; puts $output_file "begin"
set line_num 120; puts $output_file ""
set line_num 121; puts $output_file "--***********************************************************************"
set line_num 122; puts $output_file "--     Output DDR generation"
set line_num 123; puts $output_file "--     This includes instantiation of the output DDR flip flop."
set line_num 124; puts $output_file "--     Additionally, to keep synthesis tools from register sharing, manually"
set line_num 125; puts $output_file "--     instantiate the output tri-state flip-flop."
set line_num 126; puts $output_file "--*********************************************************************** "
set line_num 127; puts $output_file "vcc <= '1';"
set line_num 128; puts $output_file "gnd <= '0';"
set line_num 129; puts $output_file "ddr_dqs_enable_b <= not ddr_dqs_enable;"
set line_num 130; puts $output_file "data1 <= '0' when ddr_dqs_reset = '1' else"
set line_num 131; puts $output_file "         '1';"
set line_num 132; puts $output_file ""
set line_num 133; puts $output_file "  clk180 <= not clk;"
set line_num 134; puts $output_file ""
set line_num 135; puts $output_file "U1 : FD port map  ( D => ddr_dqs_enable_b,"
set line_num 136; puts $output_file "                    Q => ddr_dqs_enable1,"
set line_num 137; puts $output_file "                    C => clk);"
set line_num 138; puts $output_file ""
set line_num 139; puts $output_file "U2 : FDDRRSE port map (  Q => dqs_q,"
set line_num 140; puts $output_file "                        C0 => clk180,"
set line_num 141; puts $output_file "                        C1 => clk,"
set line_num 142; puts $output_file "                        CE => vcc,"
set line_num 143; puts $output_file "                        D0 => gnd,"
set line_num 144; puts $output_file "                        D1 => data1,"
set line_num 145; puts $output_file "                         R => gnd,"
set line_num 146; puts $output_file "                         S => gnd);"
set line_num 147; puts $output_file "--***********************************************************************"
set line_num 148; puts $output_file "--    IO buffer for dqs signal. Allows for distribution of dqs"
set line_num 149; puts $output_file "--     to the data (DQ) loads."
set line_num 150; puts $output_file "--***********************************************************************"
set line_num 151; puts $output_file "U3 : OBUFT  port map ( I => dqs_q, "
set line_num 152; puts $output_file "                       T => ddr_dqs_enable1 ,"
set line_num 153; puts $output_file "                       O => ddr_dqs);"
set line_num 154; puts $output_file ""
set line_num 155; puts $output_file "U4 : IBUF_SSTL2_II port map ( I => ddr_dqs,"
set line_num 156; puts $output_file "                              O => dqs);"
set line_num 157; puts $output_file ""
set line_num 158; puts $output_file "  "
set line_num 159; puts $output_file "end arc_ddr_dqs_iob;"
close $output_file
