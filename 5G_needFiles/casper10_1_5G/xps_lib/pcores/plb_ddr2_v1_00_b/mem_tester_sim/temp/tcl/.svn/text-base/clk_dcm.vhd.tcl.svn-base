set output_file [open "mem_tester_sim/ddr2_controller_v1_00_a/hdl/vhdl/clk_dcm.vhd" w ]
set line_num 1; puts $output_file "--******************************************************************************"
set line_num 2; puts $output_file "--"
set line_num 3; puts $output_file "--  Xilinx, Inc. 2002                 www.xilinx.com"
set line_num 4; puts $output_file "--"
set line_num 5; puts $output_file "--  XAPP 253 - Synthesizable DDR SDRAM Controller"
set line_num 6; puts $output_file "--"
set line_num 7; puts $output_file "--*******************************************************************************"
set line_num 8; puts $output_file "--"
set line_num 9; puts $output_file "--  File name :       clk_dcm.vhd"
set line_num 10; puts $output_file "--"
set line_num 11; puts $output_file "--  Description :     This module generates the system clock for controller block"
set line_num 12; puts $output_file "--                    This also generates the recapture clock, clock for the"
set line_num 13; puts $output_file "--                    Refresh counter and also for the data path"
set line_num 14; puts $output_file "--"
set line_num 15; puts $output_file "--  Date - revision : 05/01/2002"
set line_num 16; puts $output_file "--"
set line_num 17; puts $output_file "--  Author :          Lakshmi Gopalakrishnan ( Modified by Padmaja Sannala)"
set line_num 18; puts $output_file "--"
set line_num 19; puts $output_file "--  Contact : e-mail  hotline@xilinx.com"
set line_num 20; puts $output_file "--            phone   + 1 800 255 7778 "
set line_num 21; puts $output_file "--"
set line_num 22; puts $output_file "--  Disclaimer: LIMITED WARRANTY AND DISCLAMER. These designs are "
set line_num 23; puts $output_file "--              provided to you \"as is\". Xilinx and its licensors make and you "
set line_num 24; puts $output_file "--              receive no warranties or conditions, express, implied, "
set line_num 25; puts $output_file "--              statutory or otherwise, and Xilinx specifically disclaims any "
set line_num 26; puts $output_file "--              implied warranties of merchantability, non-infringement, or "
set line_num 27; puts $output_file "--              fitness for a particular purpose. Xilinx does not warrant that "
set line_num 28; puts $output_file "--              the functions contained in these designs will meet your "
set line_num 29; puts $output_file "--              requirements, or that the operation of these designs will be "
set line_num 30; puts $output_file "--              uninterrupted or error free, or that defects in the Designs "
set line_num 31; puts $output_file "--              will be corrected. Furthermore, Xilinx does not warrant or "
set line_num 32; puts $output_file "--              make any representations regarding use or the results of the "
set line_num 33; puts $output_file "--              use of the designs in terms of correctness, accuracy, "
set line_num 34; puts $output_file "--              reliability, or otherwise. "
set line_num 35; puts $output_file "--"
set line_num 36; puts $output_file "--              LIMITATION OF LIABILITY. In no event will Xilinx or its "
set line_num 37; puts $output_file "--              licensors be liable for any loss of data, lost profits, cost "
set line_num 38; puts $output_file "--              or procurement of substitute goods or services, or for any "
set line_num 39; puts $output_file "--              special, incidental, consequential, or indirect damages "
set line_num 40; puts $output_file "--              arising from the use or operation of the designs or "
set line_num 41; puts $output_file "--              accompanying documentation, however caused and on any theory "
set line_num 42; puts $output_file "--              of liability. This limitation will apply even if Xilinx "
set line_num 43; puts $output_file "--              has been advised of the possibility of such damage. This "
set line_num 44; puts $output_file "--              limitation shall apply not-withstanding the failure of the "
set line_num 45; puts $output_file "--              essential purpose of any limited remedies herein. "
set line_num 46; puts $output_file "--"
set line_num 47; puts $output_file "--  Copyright © 2002 Xilinx, Inc."
set line_num 48; puts $output_file "--  All rights reserved "
set line_num 49; puts $output_file "-- "
set line_num 50; puts $output_file "--*****************************************************************************"
set line_num 51; puts $output_file "library ieee;"
set line_num 52; puts $output_file "use ieee.std_logic_1164.all;"
set line_num 53; puts $output_file "use IEEE.numeric_std.all;"
set line_num 54; puts $output_file "use work.parameter.all;"
set line_num 55; puts $output_file "--"
set line_num 56; puts $output_file "-- pragma translate_off"
set line_num 57; puts $output_file "library UNISIM;"
set line_num 58; puts $output_file "use UNISIM.VCOMPONENTS.ALL;"
set line_num 59; puts $output_file "-- pragma translate_on"
set line_num 60; puts $output_file "--"
set line_num 61; puts $output_file "--library synplify; "
set line_num 62; puts $output_file "--use synplify.attributes.all; "
set line_num 63; puts $output_file ""
set line_num 64; puts $output_file "--library work;"
set line_num 65; puts $output_file "--use work.hispdclks_pkg_2vp20.all;"
set line_num 66; puts $output_file ""
set line_num 67; puts $output_file "entity clk_dcm is "
set line_num 68; puts $output_file ""
set line_num 69; puts $output_file "port("
set line_num 70; puts $output_file "   input_clk   : in std_logic;"
set line_num 71; puts $output_file "   rst         : in std_logic;"
set line_num 72; puts $output_file "   clk         : out std_logic;"
set line_num 73; puts $output_file "   clk90       : out std_logic;"
set line_num 74; puts $output_file "   dcm_lock    : out std_logic"
set line_num 75; puts $output_file "   );"
set line_num 76; puts $output_file "end clk_dcm;"
set line_num 77; puts $output_file ""
set line_num 78; puts $output_file "architecture arc_clk_dcm of clk_dcm is"
set line_num 79; puts $output_file ""
set line_num 80; puts $output_file "--attribute syn_hier : string;"
set line_num 81; puts $output_file "--attribute syn_hier of arc_clk_dcm: architecture is \"hard\";"
set line_num 82; puts $output_file ""
set line_num 83; puts $output_file "component DCM"
set line_num 84; puts $output_file "-- pragma translate_off"
set line_num 85; puts $output_file "    generic ( "
set line_num 86; puts $output_file "             DLL_FREQUENCY_MODE    : string := \"LOW\";"
set line_num 87; puts $output_file "             DUTY_CYCLE_CORRECTION : boolean := TRUE"
set line_num 88; puts $output_file "            );  "
set line_num 89; puts $output_file "-- pragma translate_on"
set line_num 90; puts $output_file ""
set line_num 91; puts $output_file "    port ( CLKIN     : in  std_logic;"
set line_num 92; puts $output_file "           CLKFB     : in  std_logic;"
set line_num 93; puts $output_file "           DSSEN     : in  std_logic;"
set line_num 94; puts $output_file "           PSINCDEC  : in  std_logic;"
set line_num 95; puts $output_file "           PSEN      : in  std_logic;"
set line_num 96; puts $output_file "           PSCLK     : in  std_logic;"
set line_num 97; puts $output_file "           RST       : in  std_logic;"
set line_num 98; puts $output_file "           CLK0      : out std_logic;"
set line_num 99; puts $output_file "           CLK90     : out std_logic;"
set line_num 100; puts $output_file "           CLK180    : out std_logic;"
set line_num 101; puts $output_file "           CLK270    : out std_logic;"
set line_num 102; puts $output_file "           CLK2X     : out std_logic;"
set line_num 103; puts $output_file "           CLK2X180  : out std_logic;"
set line_num 104; puts $output_file "           CLKDV     : out std_logic;"
set line_num 105; puts $output_file "           CLKFX     : out std_logic;"
set line_num 106; puts $output_file "           CLKFX180  : out std_logic;"
set line_num 107; puts $output_file "           LOCKED    : out std_logic;"
set line_num 108; puts $output_file "           PSDONE    : out std_logic;"
set line_num 109; puts $output_file "           STATUS    : out std_logic_vector(7 downto 0)"
set line_num 110; puts $output_file "          );"
set line_num 111; puts $output_file "end component;"
set line_num 112; puts $output_file ""
set line_num 113; puts $output_file " component BUFG"
set line_num 114; puts $output_file "  port ( I : in std_logic;"
set line_num 115; puts $output_file "         O : out std_logic);"
set line_num 116; puts $output_file " end component;"
set line_num 117; puts $output_file ""
set line_num 118; puts $output_file " component myBUFG"
set line_num 119; puts $output_file "  port ( I : in std_logic;"
set line_num 120; puts $output_file "         O : out std_logic);"
set line_num 121; puts $output_file " end component;"
set line_num 122; puts $output_file ""
set line_num 123;  if $synthesize {
set line_num 124; puts $output_file " component dcmx3y0_2vp70"
set line_num 125;  } else {
set line_num 126; puts $output_file " component dcmx3y0_2vp70_sim"
set line_num 127;  }
set line_num 128; puts $output_file "   port (  clock1_in     : in std_logic;   "
set line_num 129; puts $output_file "           clock2_in     : in std_logic;   "
set line_num 130; puts $output_file "           clock1_out    : out std_logic;   "
set line_num 131; puts $output_file "           clock2_out    : out std_logic);   "
set line_num 132; puts $output_file "end component;"
set line_num 133; puts $output_file ""
set line_num 134; puts $output_file "signal clk0dcm             : std_logic;"
set line_num 135; puts $output_file "signal clk90dcm            : std_logic;"
set line_num 136; puts $output_file "signal clk0d2inv           : std_logic;"
set line_num 137; puts $output_file "signal clk90d2inv          : std_logic;"
set line_num 138; puts $output_file "signal clk0_buf            : std_logic;"
set line_num 139; puts $output_file "signal clk90_buf           : std_logic;"
set line_num 140; puts $output_file "signal vcc                 : std_logic;"
set line_num 141; puts $output_file "signal gnd                 : std_logic;"
set line_num 142; puts $output_file "signal dcm1_lock           : std_logic;"
set line_num 143; puts $output_file ""
set line_num 144; puts $output_file ""
set line_num 145; puts $output_file "attribute DLL_FREQUENCY_MODE : string; "
set line_num 146; puts $output_file "attribute DUTY_CYCLE_CORRECTION : string;"
set line_num 147; puts $output_file "attribute CLKIN_DIVIDE_BY_2     : string;"
set line_num 148; puts $output_file ""
set line_num 149; puts $output_file "---attribute syn_noclockbuf : boolean;"
set line_num 150; puts $output_file "----attribute syn_noclockbuf of clk0_buf: signal is true;"
set line_num 151; puts $output_file "----attribute syn_noclockbuf of clk90_buf: signal is true;"
set line_num 152; puts $output_file ""
set line_num 153; puts $output_file "attribute DLL_FREQUENCY_MODE of DCM_INST1    : label is \"LOW\";"
set line_num 154; puts $output_file "attribute DUTY_CYCLE_CORRECTION of DCM_INST1 : label is \"TRUE\";"
set line_num 155; puts $output_file ""
set line_num 156; puts $output_file "begin"
set line_num 157; puts $output_file ""
set line_num 158; puts $output_file "vcc <= '1';"
set line_num 159; puts $output_file "gnd <= '0';"
set line_num 160; puts $output_file ""
set line_num 161; puts $output_file "clk    <= clk0_buf;"
set line_num 162; puts $output_file "clk90  <= clk90_buf;"
set line_num 163; puts $output_file ""
set line_num 164; puts $output_file "DCM_INST1 :  DCM "
set line_num 165; puts $output_file "                 port map ( CLKIN    => input_clk,"
set line_num 166; puts $output_file "                            CLKFB    => clk0_buf,"
set line_num 167; puts $output_file "                            DSSEN    => gnd,"
set line_num 168; puts $output_file "                            PSINCDEC => gnd,"
set line_num 169; puts $output_file "                            PSEN     => gnd,"
set line_num 170; puts $output_file "                            PSCLK    => gnd,"
set line_num 171; puts $output_file "                            RST      => RST,"
set line_num 172; puts $output_file "                            CLK0     => clk0dcm,"
set line_num 173; puts $output_file "                            CLK90    => clk90dcm,"
set line_num 174; puts $output_file "                            CLK180   => open,"
set line_num 175; puts $output_file "                            CLK270   => open,"
set line_num 176; puts $output_file "                            CLK2X    => open,"
set line_num 177; puts $output_file "                            CLK2X180 => open,"
set line_num 178; puts $output_file "                            CLKDV    => open,"
set line_num 179; puts $output_file "                            CLKFX    => open,"
set line_num 180; puts $output_file "                            CLKFX180 => open,"
set line_num 181; puts $output_file "                            LOCKED   => dcm1_lock,"
set line_num 182; puts $output_file "                            PSDONE   => open,"
set line_num 183; puts $output_file "                            STATUS   => open);"
set line_num 184; puts $output_file ""
set line_num 185;  if $synthesize {
set line_num 186; puts $output_file "DCD0    : dcmx3y0_2vp70"
set line_num 187;  } else {
set line_num 188; puts $output_file "DCD0    : dcmx3y0_2vp70_sim"
set line_num 189;  }
set line_num 190; puts $output_file "        port map ( clock1_in   =>   clk0dcm,"
set line_num 191; puts $output_file "                   clock2_in   =>   clk90dcm,"
set line_num 192; puts $output_file "                   clock1_out  =>   clk0d2inv,"
set line_num 193; puts $output_file "                   clock2_out  =>   clk90d2inv);"
set line_num 194; puts $output_file ""
set line_num 195; puts $output_file "BUFG_CLK0    : myBUFG port map ( I => clk0d2inv ,"
set line_num 196; puts $output_file "                               O => clk0_buf);"
set line_num 197; puts $output_file "                                                              "
set line_num 198; puts $output_file "BUFG_CLK90   : myBUFG port map ( I => clk90d2inv,"
set line_num 199; puts $output_file "                               O => clk90_buf); "
set line_num 200; puts $output_file ""
set line_num 201; puts $output_file "dcm_lock <= dcm1_lock;                                 "
set line_num 202; puts $output_file ""
set line_num 203; puts $output_file "end arc_clk_dcm;"
set line_num 204; puts $output_file ""
set line_num 205; puts $output_file ""
set line_num 206; puts $output_file ""
set line_num 207; puts $output_file ""
close $output_file
