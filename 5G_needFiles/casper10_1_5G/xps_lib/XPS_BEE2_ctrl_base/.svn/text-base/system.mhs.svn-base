# ##############################################################################
# Target Board:  BEE2 Control FPGA
# Family:	 virtex2p
# Device:	 xc2vp70
# Package:	 ff1704
# Speed Grade:	 -7
# Processor: PPC 405
# Processor clock frequency: 300.000000 MHz
# Bus clock frequency: 100.000000 MHz
# Debug interface: FPGA JTAG
# On Chip Memory : 64 KB
# ##############################################################################


 PARAMETER VERSION = 2.1.0

 PORT reset_n = sys_rst_s, DIR = INPUT
 PORT sysclk_p = sysclk_p, DIR = INPUT
 PORT sysclk_m = sysclk_m, DIR = INPUT
 PORT usrclk_p = usrclk_p, DIR = INPUT
 PORT usrclk_m = usrclk_m, DIR = INPUT
 PORT usrclk_en_n = net_gnd, DIR = OUTPUT
 PORT sysclk_en_n = net_gnd, DIR = OUTPUT
 PORT rs232_ctsN = RS232_ctsN, DIR = INPUT
 PORT rs232_rtsN = RS232_rtsN, DIR = OUTPUT
 PORT rs232_rx = RS232_rx, DIR = INPUT
 PORT rs232_tx = RS232_tx, DIR = OUTPUT
 PORT dimm1_rst_dqs_div_in = dimm1_rst_dqs_div_in, DIR = I
 PORT dimm1_rst_dqs_div_out = dimm1_rst_dqs_div_out, DIR = O
 PORT dimm1_cke = dimm1_cke, DIR = O
 PORT dimm1_clk0 = dimm1_clk0, DIR = O
 PORT dimm1_clk0b = dimm1_clk0b, DIR = O
 PORT dimm1_clk1 = dimm1_clk1, DIR = O
 PORT dimm1_clk1b = dimm1_clk1b, DIR = O
 PORT dimm1_clk2 = dimm1_clk2, DIR = O
 PORT dimm1_clk2b = dimm1_clk2b, DIR = O
 PORT dimm1_csb = dimm1_csb, VEC = [1:0], DIR = O
 PORT dimm1_casb = dimm1_casb, DIR = O
 PORT dimm1_rasb = dimm1_rasb, DIR = O
 PORT dimm1_web = dimm1_web, DIR = O
 PORT dimm1_ODT = dimm1_ODT, VEC = [1:0], DIR = O
 PORT dimm1_address = dimm1_address, VEC = [13:0], DIR = O
 PORT dimm1_ba = dimm1_ba, VEC = [1:0], DIR = O
 PORT dimm1_dm = dimm1_dm, VEC = [8:0], DIR = O
 PORT dimm1_dqs = dimm1_dqs, VEC = [8:0], DIR = IO
 PORT dimm1_dq = dimm1_dq, VEC = [71:0], DIR = IO
 PORT mpa = opb_sysace_0_SysACE_MPA, VEC = [6:0], DIR = O
 PORT mclk = opb_sysace_0_SysACE_CLK, DIR = I
 PORT mpirq = opb_sysace_0_SysACE_MPIRQ, DIR = I
 PORT mpd = opb_sysace_0_SysACE_MPD, VEC = [7:0], DIR = IO
 PORT mpce_n = opb_sysace_0_SysACE_CEN, DIR = O
 PORT mpoe_n = opb_sysace_0_SysACE_OEN, DIR = O
 PORT mpwe_n = opb_sysace_0_SysACE_WEN, DIR = O
 PORT smb_data = smb_data, DIR = IO
 PORT smb_clk = smb_clk, DIR = O
 PORT phy_slew = net_vcc, VEC = [1:0], DIR = O
 PORT phy_tx_clk = plb_ethernet_0_PHY_tx_clk, DIR = I
 PORT phy_rx_clk = plb_ethernet_0_PHY_rx_clk, DIR = I
 PORT phy_crs = plb_ethernet_0_PHY_crs, DIR = I
 PORT phy_rx_dv = plb_ethernet_0_PHY_dv, DIR = I
 PORT phy_rxd = plb_ethernet_0_PHY_rx_data, VEC = [3:0], DIR = I
 PORT phy_col = plb_ethernet_0_PHY_col, DIR = I
 PORT phy_rx_er = plb_ethernet_0_PHY_rx_er, DIR = I
 PORT phy_mdc = plb_ethernet_0_PHY_Mii_clk, DIR = IO
 PORT phy_tx_en = plb_ethernet_0_PHY_tx_en, DIR = O
 PORT phy_tx_er = plb_ethernet_0_PHY_tx_er, DIR = O
 PORT phy_txd = plb_ethernet_0_PHY_tx_data, VEC = [3:0], DIR = O
 PORT phy_reset_n = plb_ethernet_0_PHY_rst_n, DIR = O
 PORT phy_mdio = plb_ethernet_0_PHY_Mii_data, DIR = IO
 PORT FPGA_CCLK = FPGA_CCLK, DIR = O
 PORT FPGA1_D = FPGA1_D, VEC = [0:7], DIR = IO
 PORT FPGA1_RDWR_B = FPGA1_RDWR_B, DIR = O
 PORT FPGA1_CS_B = FPGA1_CS_B, DIR = O
 PORT FPGA1_INIT_B = FPGA1_INIT_B, DIR = I
 PORT FPGA1_DONE = FPGA1_DONE, DIR = I
 PORT FPGA1_PROG_B = FPGA1_PROG_B, DIR = O
 PORT FPGA2_D = FPGA2_D, VEC = [0:7], DIR = IO
 PORT FPGA2_RDWR_B = FPGA2_RDWR_B, DIR = O
 PORT FPGA2_CS_B = FPGA2_CS_B, DIR = O
 PORT FPGA2_INIT_B = FPGA2_INIT_B, DIR = I
 PORT FPGA2_DONE = FPGA2_DONE, DIR = I
 PORT FPGA2_PROG_B = FPGA2_PROG_B, DIR = O
 PORT FPGA3_D = FPGA3_D, VEC = [0:7], DIR = IO
 PORT FPGA3_RDWR_B = FPGA3_RDWR_B, DIR = O
 PORT FPGA3_CS_B = FPGA3_CS_B, DIR = O
 PORT FPGA3_INIT_B = FPGA3_INIT_B, DIR = I
 PORT FPGA3_DONE = FPGA3_DONE, DIR = I
 PORT FPGA3_PROG_B = FPGA3_PROG_B, DIR = O
 PORT FPGA4_D = FPGA4_D, VEC = [0:7], DIR = IO
 PORT FPGA4_RDWR_B = FPGA4_RDWR_B, DIR = O
 PORT FPGA4_CS_B = FPGA4_CS_B, DIR = O
 PORT FPGA4_INIT_B = FPGA4_INIT_B, DIR = I
 PORT FPGA4_DONE = FPGA4_DONE, DIR = I
 PORT FPGA4_PROG_B = FPGA4_PROG_B, DIR = O
#IF# strcmp(get(b,'type'),'xps_xaui') && (strcmp(get(b,'port'),'0') || strcmp(get(b,'port'),'1'))# PORT bref_clk_top_p = bref_clk_top_p, DIR = I
#IF# strcmp(get(b,'type'),'xps_xaui') && (strcmp(get(b,'port'),'0') || strcmp(get(b,'port'),'1'))# PORT bref_clk_top_n = bref_clk_top_n, DIR = I
#IF# strcmp(get(b,'type'),'xps_tengbe')# PORT brefclk_top_p     = brefclk_top_p,     DIR = I
#IF# strcmp(get(b,'type'),'xps_tengbe')# PORT brefclk_top_m     = brefclk_top_m,     DIR = I
#IF# strcmp(get(b,'type'),'xps_tengbe')# PORT brefclk2_top_p    = brefclk2_top_p,    DIR = I
#IF# strcmp(get(b,'type'),'xps_tengbe')# PORT brefclk2_top_m    = brefclk2_top_m,    DIR = I
#IF# strcmp(get(b,'type'),'xps_tengbe')# PORT brefclk_bot_p     = brefclk_bot_p,     DIR = I
#IF# strcmp(get(b,'type'),'xps_tengbe')# PORT brefclk_bot_m     = brefclk_bot_m,     DIR = I

BEGIN opb_selectmap_fifo
 PARAMETER INSTANCE = opb_selectmap_fifo_0
 PARAMETER HW_VER = 1.01.a
 PARAMETER C_BASEADDR = 0xd0fffe00
 PARAMETER C_HIGHADDR = 0xd0ffffff
 BUS_INTERFACE SOPB = opb0
 PORT OPB_Clk = sys_clk
 PORT D_O = SELECTMAP_D_O
 PORT D_I = SELECTMAP_D_I
 PORT RDWR_B = SELECTMAP_RDWR_B
 PORT CS_B = SELECTMAP_CS_B
 PORT INIT_B = SELECTMAP_INIT_B
END

BEGIN proc_sys_reset
 PARAMETER INSTANCE = reset_block
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_EXT_RESET_HIGH = 0
 PORT Ext_Reset_In = sys_rst_s
 PORT Slowest_sync_clk = sys_clk
 PORT Chip_Reset_Req = C405RSTCHIPRESETREQ
 PORT Core_Reset_Req = C405RSTCORERESETREQ
 PORT System_Reset_Req = C405RSTSYSRESETREQ
 PORT Rstc405resetchip = RSTC405RESETCHIP
 PORT Rstc405resetcore = RSTC405RESETCORE
 PORT Rstc405resetsys = RSTC405RESETSYS
 PORT Bus_Struct_Reset = sys_bus_reset
 PORT Dcm_locked = dcm_0_lock
END

BEGIN dcm_module
 PARAMETER INSTANCE = dcm_0
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_CLK0_BUF = TRUE
 PARAMETER C_CLKIN_PERIOD = 10.000000
 PARAMETER C_CLK_FEEDBACK = 1X
 PARAMETER C_EXT_RESET_HIGH = 1
 PARAMETER C_CLK2X_BUF = TRUE
 PARAMETER C_CLKFX_DIVIDE = 1
 PARAMETER C_CLKFX_MULTIPLY = 3
 PARAMETER C_CLKFX_BUF = TRUE
 PARAMETER C_CLK90_BUF = TRUE
 PARAMETER C_DFS_FREQUENCY_MODE = HIGH
 PORT LOCKED = dcm_0_lock
 PORT CLKIN = dcm_clk_s
 PORT RST = net_gnd
 PORT CLKFB = sys_clk
 PORT CLK0 = sys_clk
 PORT CLK2X = sys_clk2x_dcm
 PORT CLK90 = sys_clk90
 PORT CLKFX = sys_clk3x
END

BEGIN dcm_module
 PARAMETER INSTANCE = dcm_1
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_CLK0_BUF = TRUE
 PARAMETER C_CLKIN_PERIOD = 5.000000
 PARAMETER C_CLK_FEEDBACK = 1X
 PARAMETER C_EXT_RESET_HIGH = 0
 PARAMETER C_CLK90_BUF = TRUE
 PORT CLKIN = sys_clk2x_dcm
 PORT CLK0 = sys_clk2x
 PORT CLKFB = sys_clk2x
 PORT RST = dcm_0_lock
 PORT CLK90 = sys_clk2x90
END

BEGIN dcm_module
 PARAMETER INSTANCE = dcm_2
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_CLK0_BUF = TRUE
 PARAMETER C_CLKIN_PERIOD = 10.000000
 PARAMETER C_CLK_FEEDBACK = 1X
 PARAMETER C_EXT_RESET_HIGH = 1
 PARAMETER C_CLK90_BUF = TRUE
 PORT LOCKED = dcm_2_lock
 PORT CLKIN = usrclk_in
 PORT CLK0 = usr_clk
 PORT CLKFB = usr_clk
 PORT RST = sys_bus_reset
 PORT CLK2X = usr_clk2x_dcm
 PORT CLK90 = usr_clk90
END

BEGIN dcm_module
 PARAMETER INSTANCE = dcm_3
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_CLK0_BUF = TRUE
 PARAMETER C_CLKIN_PERIOD = 5.000000
 PARAMETER C_CLK_FEEDBACK = 1X
 PARAMETER C_EXT_RESET_HIGH = 0
 PARAMETER C_CLK90_BUF = TRUE
 PORT CLKIN = usr_clk2x_dcm
 PORT CLK0 = usr_clk2x
 PORT CLKFB = usr_clk2x
 PORT RST = dcm_2_lock
 PORT CLK90 = usr_clk2x90
END

BEGIN ppc405
 PARAMETER INSTANCE = ppc405_1
 PARAMETER HW_VER = 2.00.c
 BUS_INTERFACE JTAGPPC = jtagppc_0_1
 BUS_INTERFACE DPLB = plb
 BUS_INTERFACE IPLB = plb
 PORT PLBCLK = sys_clk
 PORT C405RSTCHIPRESETREQ = C405RSTCHIPRESETREQ
 PORT C405RSTCORERESETREQ = C405RSTCORERESETREQ
 PORT C405RSTSYSRESETREQ = C405RSTSYSRESETREQ
 PORT RSTC405RESETCHIP = RSTC405RESETCHIP
 PORT RSTC405RESETCORE = RSTC405RESETCORE
 PORT RSTC405RESETSYS = RSTC405RESETSYS
 PORT CPMC405CLOCK = sys_clk3x
END

BEGIN jtagppc_cntlr
 PARAMETER INSTANCE = jtagppc_0
 PARAMETER HW_VER = 2.00.a
 BUS_INTERFACE JTAGPPC0 = jtagppc_0_0
 BUS_INTERFACE JTAGPPC1 = jtagppc_0_1
END

BEGIN bram_block
 PARAMETER INSTANCE = plb_bram_if_cntlr_1_bram
 PARAMETER HW_VER = 1.00.a
 BUS_INTERFACE PORTA = plb_bram
END

BEGIN plb_bram_if_cntlr
 PARAMETER INSTANCE = plb_bram_if_cntlr_1
 PARAMETER HW_VER = 1.00.b
 PARAMETER c_plb_clk_period_ps = 10000
 PARAMETER c_baseaddr = 0xffff0000
 PARAMETER c_highaddr = 0xffffffff
 BUS_INTERFACE PORTA = plb_bram
 BUS_INTERFACE SPLB = plb
 PORT PLB_Clk = sys_clk
END

BEGIN plb2opb_bridge
 PARAMETER INSTANCE = plb2opb_bridge_0
 PARAMETER HW_VER = 1.01.a
 PARAMETER C_DCR_INTFCE = 0
 PARAMETER C_NUM_ADDR_RNG = 1
 PARAMETER C_RNG0_BASEADDR = 0xd0000000
 PARAMETER C_RNG0_HIGHADDR = 0xd0ffffff
 BUS_INTERFACE SPLB = plb
 BUS_INTERFACE MOPB = opb0
 PORT PLB_Clk = sys_clk
 PORT OPB_Clk = sys_clk
END

BEGIN plb_v34
 PARAMETER INSTANCE = plb
 PARAMETER HW_VER = 1.02.a
 PARAMETER C_DCR_INTFCE = 0
 PARAMETER C_EXT_RESET_HIGH = 1
 PORT SYS_Rst = sys_bus_reset
 PORT PLB_Clk = sys_clk
END

BEGIN opb_v20
 PARAMETER INSTANCE = opb0
 PARAMETER HW_VER = 1.10.c
 PARAMETER C_EXT_RESET_HIGH = 1
 PORT SYS_Rst = sys_bus_reset
 PORT OPB_Clk = sys_clk
END

BEGIN diffclk_buf
 PARAMETER INSTANCE = diffclk_buf_0
 PARAMETER HW_VER = 1.00.a
 PORT Clkin_p = sysclk_p
 PORT Clkin_m = sysclk_m
 PORT Clkout = dcm_clk_s
END

BEGIN diffclk_buf
 PARAMETER INSTANCE = diffclk_buf_1
 PARAMETER HW_VER = 1.00.a
 PORT Clkin_p = usrclk_p
 PORT Clkin_m = usrclk_m
 PORT Clkout = usrclk_in
END

BEGIN ppc405
 PARAMETER INSTANCE = ppc405_0
 PARAMETER HW_VER = 2.00.c
 BUS_INTERFACE DPLB = linux_plb
 BUS_INTERFACE IPLB = linux_plb
 BUS_INTERFACE JTAGPPC = jtagppc_0_0
 PORT C405RSTCHIPRESETREQ = C405RSTCHIPRESETREQ_linux
 PORT C405RSTCORERESETREQ = C405RSTCORERESETREQ_linux
 PORT C405RSTSYSRESETREQ = C405RSTSYSRESETREQ_linux
 PORT EICC405EXTINPUTIRQ = EICC405EXTINPUTIRQ
 PORT RSTC405RESETCHIP = RSTC405RESETCHIP_linux
 PORT RSTC405RESETCORE = RSTC405RESETCORE_linux
 PORT RSTC405RESETSYS = RSTC405RESETSYS_linux
 PORT CPMC405CLOCK = sys_clk3x
 PORT PLBCLK = sys_clk
END

BEGIN proc_sys_reset
 PARAMETER INSTANCE = reset_block_linux
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_EXT_RESET_HIGH = 0
 PORT Ext_Reset_In = net_vcc
 PORT Slowest_sync_clk = sys_clk
 PORT Chip_Reset_Req = C405RSTCHIPRESETREQ_linux
 PORT Core_Reset_Req = C405RSTCORERESETREQ_linux
 PORT System_Reset_Req = C405RSTSYSRESETREQ_linux
 PORT Rstc405resetchip = RSTC405RESETCHIP_linux
 PORT Rstc405resetcore = RSTC405RESETCORE_linux
 PORT Rstc405resetsys = RSTC405RESETSYS_linux
 PORT Bus_Struct_Reset = sys_bus_reset_linux
 PORT Dcm_locked = dcm_0_lock
END

BEGIN plb2opb_bridge
 PARAMETER INSTANCE = plb2opb
 PARAMETER HW_VER = 1.01.a
 PARAMETER C_DCR_INTFCE = 0
 PARAMETER C_RNG0_BASEADDR = 0xe0000000
 PARAMETER C_RNG0_HIGHADDR = 0xe0003fff
 PARAMETER C_NUM_ADDR_RNG = 1
 BUS_INTERFACE SPLB = linux_plb
 BUS_INTERFACE MOPB = linux_opb
 PORT OPB_Clk = sys_clk
 PORT PLB_Clk = sys_clk
END

BEGIN plb_v34
 PARAMETER INSTANCE = linux_plb
 PARAMETER HW_VER = 1.02.a
 PARAMETER C_DCR_INTFCE = 0
 PARAMETER C_EXT_RESET_HIGH = 1
 PORT SYS_Rst = sys_bus_reset_linux
 PORT PLB_Clk = sys_clk
END

BEGIN bram_block
 PARAMETER INSTANCE = plb_bram_if_cntlr_0_bram
 PARAMETER HW_VER = 1.00.a
 BUS_INTERFACE PORTA = plb_bram_0
END

BEGIN plb_bram_if_cntlr
 PARAMETER INSTANCE = plb_bram_if_cntlr_0
 PARAMETER HW_VER = 1.00.b
 PARAMETER c_plb_clk_period_ps = 10000
 PARAMETER c_baseaddr = 0xffffc000
 PARAMETER c_highaddr = 0xffffffff
 BUS_INTERFACE PORTA = plb_bram_0
 BUS_INTERFACE SPLB = linux_plb
 PORT PLB_Clk = sys_clk
END

BEGIN opb_v20
 PARAMETER INSTANCE = linux_opb
 PARAMETER HW_VER = 1.10.b
 PARAMETER C_EXT_RESET_HIGH = 1
 PORT SYS_Rst = sys_bus_reset_linux
 PORT OPB_Clk = sys_clk
END

BEGIN opb_uart16550
 PARAMETER INSTANCE = RS232_UART
 PARAMETER HW_VER = 1.00.d
 PARAMETER C_IS_A_16550 = 1
 PARAMETER C_BASEADDR = 0xe0000000
 PARAMETER C_HIGHADDR = 0xe0001fff
 BUS_INTERFACE SOPB = linux_opb
 PORT OPB_Clk = sys_clk
 PORT IP2INTC_Irpt = RS232_irq
 PORT ctsN = RS232_ctsN
 PORT rtsN = RS232_rtsN
 PORT sin = RS232_rx
 PORT sout = RS232_tx
END

BEGIN opb_intc
 PARAMETER INSTANCE = opb_intc_0
 PARAMETER HW_VER = 1.00.c
 PARAMETER C_BASEADDR = 0xe0002400
 PARAMETER C_HIGHADDR = 0xe000241f
 BUS_INTERFACE SOPB = linux_opb
 PORT Irq = EICC405EXTINPUTIRQ
 PORT Intr = RS232_irq & plb_ethernet_0_irq & opb_sysace_0_irq & opb_selectmap_0_irq
END

BEGIN opb_software_iic
 PARAMETER INSTANCE = opb_software_iic_0
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_BASEADDR = 0xe0002500
 PARAMETER C_HIGHADDR = 0xe00025ff
 BUS_INTERFACE SOPB = linux_opb
 PORT OPB_Clk = sys_clk
 PORT SDA = smb_data
 PORT SCL = smb_clk
END

BEGIN opb_sysace
 PARAMETER INSTANCE = opb_sysace_0
 PARAMETER HW_VER = 1.00.c
 PARAMETER C_BASEADDR = 0xe0002600
 PARAMETER C_HIGHADDR = 0xe000267f
 PARAMETER C_MEM_WIDTH = 8
 BUS_INTERFACE SOPB = linux_opb
 PORT OPB_Clk = sys_clk
 PORT SysACE_MPA = opb_sysace_0_SysACE_MPA
 PORT SysACE_CLK = opb_sysace_0_SysACE_CLK
 PORT SysACE_MPIRQ = opb_sysace_0_SysACE_MPIRQ
 PORT SysACE_MPD = opb_sysace_0_SysACE_MPD
 PORT SysACE_CEN = opb_sysace_0_SysACE_CEN
 PORT SysACE_OEN = opb_sysace_0_SysACE_OEN
 PORT SysACE_WEN = opb_sysace_0_SysACE_WEN
 PORT SysACE_IRQ = opb_sysace_0_irq
END

BEGIN ddr2_infrastructure
 PARAMETER INSTANCE = ddr2_infrastructure_0
 PARAMETER HW_VER = 2.00.a
 PORT reset_in           = sys_bus_reset_linux
 PORT clk_in             = sys_clk2x_dcm
 PORT dcmlock_in         = dcm_0_lock
 PORT user_ddr_reset     = ddr2_user_reset
 PORT user_ddr_clk       = ddr2_user_clk
 BUS_INTERFACE DDR2_SYS0 = ddr2_sys0
#IF# strcmp(get(b,'dimm'),'2')# BUS_INTERFACE DDR2_SYS1 = ddr2_sys1
#IF# strcmp(get(b,'dimm'),'3')# BUS_INTERFACE DDR2_SYS2 = ddr2_sys2
#IF# strcmp(get(b,'dimm'),'4')# BUS_INTERFACE DDR2_SYS3 = ddr2_sys3
END

BEGIN plb_ddr2
 PARAMETER INSTANCE = plb_ddr2_0
 PARAMETER HW_VER = 2.00.a
 PARAMETER C_BASEADDR = 0x00000000
 PARAMETER C_HIGHADDR = 0x3fffffff
 PARAMETER C_WIDE_DATA = 0
 PARAMETER C_HALF_BURST = 1
 PARAMETER C_SUPPORT_SHARED = 0
 BUS_INTERFACE SPLB = linux_plb
 BUS_INTERFACE MEM_CMD = linuxplb_MEM_CMD
END

BEGIN async_ddr2
 PARAMETER INSTANCE = async_ddr2_linux
 PARAMETER HW_VER = 2.00.a
 PARAMETER C_WIDE_DATA = 0
 PARAMETER C_HALF_BURST = 1
 BUS_INTERFACE MEM_CMD   = linuxplb_MEM_CMD
 BUS_INTERFACE DDR2_USER = ddr2_user_linux
 PORT Mem_Clk            = sys_clk
 PORT MEM_Rst            = sys_bus_reset_linux
 PORT DDR_Clk            = ddr2_user_clk
END

BEGIN ddr2_controller
 PARAMETER INSTANCE = ddr2_controller_linux
 PARAMETER HW_VER = 2.00.a
 PARAMETER DIMM = 1
 PARAMETER BANK_MANAGEMENT = 0
 BUS_INTERFACE DDR2_USER  = ddr2_user_linux
 BUS_INTERFACE DDR2_SYS   = ddr2_sys0
 PORT pad_rst_dqs_div_in  = dimm1_rst_dqs_div_in
 PORT pad_rst_dqs_div_out = dimm1_rst_dqs_div_out
 PORT pad_cke             = dimm1_cke
 PORT pad_clk0            = dimm1_clk0
 PORT pad_clk0b           = dimm1_clk0b
 PORT pad_clk1            = dimm1_clk1
 PORT pad_clk1b           = dimm1_clk1b
 PORT pad_clk2            = dimm1_clk2
 PORT pad_clk2b           = dimm1_clk2b
 PORT pad_csb             = dimm1_csb
 PORT pad_casb            = dimm1_casb
 PORT pad_rasb            = dimm1_rasb
 PORT pad_web             = dimm1_web
 PORT pad_ODT             = dimm1_ODT
 PORT pad_address         = dimm1_address
 PORT pad_ba              = dimm1_ba
 PORT pad_dm              = dimm1_dm
 PORT pad_dqs             = dimm1_dqs
 PORT pad_dq              = dimm1_dq
END

BEGIN opb_selectmap
 PARAMETER INSTANCE = opb_selectmap_0
 PARAMETER HW_VER = 1.01.a
 PARAMETER C_BASEADDR = 0xe0003000
 PARAMETER C_HIGHADDR = 0xe00033ff
 BUS_INTERFACE SOPB = linux_opb
 PORT CCLK = FPGA_CCLK
 PORT IP2INTC_Irpt = opb_selectmap_0_irq
 PORT FPGA1_D = FPGA1_D
 PORT FPGA1_RDWR_B = FPGA1_RDWR_B
 PORT FPGA1_CS_B = FPGA1_CS_B
 PORT FPGA1_INIT_B = FPGA1_INIT_B
 PORT FPGA1_DONE = FPGA1_DONE
 PORT FPGA1_PROG_B = FPGA1_PROG_B
 PORT FPGA2_D = FPGA2_D
 PORT FPGA2_RDWR_B = FPGA2_RDWR_B
 PORT FPGA2_CS_B = FPGA2_CS_B
 PORT FPGA2_INIT_B = FPGA2_INIT_B
 PORT FPGA2_DONE = FPGA2_DONE
 PORT FPGA2_PROG_B = FPGA2_PROG_B
 PORT FPGA3_D = FPGA3_D
 PORT FPGA3_RDWR_B = FPGA3_RDWR_B
 PORT FPGA3_CS_B = FPGA3_CS_B
 PORT FPGA3_INIT_B = FPGA3_INIT_B
 PORT FPGA3_DONE = FPGA3_DONE
 PORT FPGA3_PROG_B = FPGA3_PROG_B
 PORT FPGA4_D = FPGA4_D
 PORT FPGA4_RDWR_B = FPGA4_RDWR_B
 PORT FPGA4_CS_B = FPGA4_CS_B
 PORT FPGA4_INIT_B = FPGA4_INIT_B
 PORT FPGA4_DONE = FPGA4_DONE
 PORT FPGA4_PROG_B = FPGA4_PROG_B
 PORT FPGA0_D_O = SELECTMAP_D_I
 PORT FPGA0_D_I = SELECTMAP_D_O
 PORT FPGA0_RDWR_B = SELECTMAP_RDWR_B
 PORT FPGA0_CS_B = SELECTMAP_CS_B
 PORT FPGA0_INIT_B = SELECTMAP_INIT_B
 PORT FPGA0_DONE = net_vcc
END

BEGIN plb_ethernet
 PARAMETER INSTANCE = plb_ethernet_0
 PARAMETER HW_VER = 1.01.a
 PARAMETER C_BASEADDR = 0xd0000000
 PARAMETER C_HIGHADDR = 0xd0003fff
 PARAMETER C_DMA_PRESENT = 1
 BUS_INTERFACE MSPLB = linux_plb
 PORT PLB_Clk = sys_clk
 PORT IP2INTC_Irpt = plb_ethernet_0_irq
 PORT PHY_tx_clk = plb_ethernet_0_PHY_tx_clk
 PORT PHY_rx_clk = plb_ethernet_0_PHY_rx_clk
 PORT PHY_crs = plb_ethernet_0_PHY_crs
 PORT PHY_dv = plb_ethernet_0_PHY_dv
 PORT PHY_rx_data = plb_ethernet_0_PHY_rx_data
 PORT PHY_col = plb_ethernet_0_PHY_col
 PORT PHY_rx_er = plb_ethernet_0_PHY_rx_er
 PORT PHY_Mii_clk = plb_ethernet_0_PHY_Mii_clk
 PORT PHY_tx_en = plb_ethernet_0_PHY_tx_en
 PORT PHY_tx_er = plb_ethernet_0_PHY_tx_er
 PORT PHY_tx_data = plb_ethernet_0_PHY_tx_data
 PORT PHY_rst_n = plb_ethernet_0_PHY_rst_n
 PORT PHY_Mii_data = plb_ethernet_0_PHY_Mii_data
END

#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')#BEGIN XAUI_infrastructure
#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')# PARAMETER INSTANCE = xaui_infrastructure_0
#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')# PARAMETER HW_VER = 2.00.a
#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')# PARAMETER CONTROL_FPGA = 1
#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')# PORT link_speed         = net_vcc
#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')# PORT brefclk_top_p      = brefclk_top_p
#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')# PORT brefclk_top_m      = brefclk_top_m
#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')# PORT brefclk2_top_p     = brefclk2_top_p
#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')# PORT brefclk2_top_m     = brefclk2_top_m
#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')# PORT brefclk_bottom_p   = brefclk_bot_p
#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')# PORT brefclk_bottom_m   = brefclk_bot_m
#IF# (strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')) && strcmp(get(b,'port'),'0')# BUS_INTERFACE XAUI_SYS0 = xaui_sys0
#IF# (strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')) && strcmp(get(b,'port'),'1')# BUS_INTERFACE XAUI_SYS1 = xaui_sys1
#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')#END
#IF# strcmp(get(b,'type'),'xps_tengbe') || strcmp(get(b,'type'),'xps_xaui_v2')#
#IF# strcmp(get(b,'type'),'xps_xaui') && (strcmp(get(b,'port'),'0') || strcmp(get(b,'port'),'1'))#BEGIN diffclk_buf
#IF# strcmp(get(b,'type'),'xps_xaui') && (strcmp(get(b,'port'),'0') || strcmp(get(b,'port'),'1'))# PARAMETER INSTANCE = diffclk_xaui_top
#IF# strcmp(get(b,'type'),'xps_xaui') && (strcmp(get(b,'port'),'0') || strcmp(get(b,'port'),'1'))# PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_xaui') && (strcmp(get(b,'port'),'0') || strcmp(get(b,'port'),'1'))# PORT Clkin_p = bref_clk_top_p
#IF# strcmp(get(b,'type'),'xps_xaui') && (strcmp(get(b,'port'),'0') || strcmp(get(b,'port'),'1'))# PORT Clkin_m = bref_clk_top_n
#IF# strcmp(get(b,'type'),'xps_xaui') && (strcmp(get(b,'port'),'0') || strcmp(get(b,'port'),'1'))# PORT Clkout = bref_clk_top
#IF# strcmp(get(b,'type'),'xps_xaui') && (strcmp(get(b,'port'),'0') || strcmp(get(b,'port'),'1'))#END
#IF# strcmp(get(b,'type'),'xps_xaui') && (strcmp(get(b,'port'),'0') || strcmp(get(b,'port'),'1'))#
#IF# strcmp(get(b,'type'),'xps_probe')#BEGIN chipscope_icon
#IF# strcmp(get(b,'type'),'xps_probe')# PARAMETER INSTANCE = chipscope_icon_0
#IF# strcmp(get(b,'type'),'xps_probe')# PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 1  # PARAMETER C_NUM_CONTROL_PORTS = 1
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 2  # PARAMETER C_NUM_CONTROL_PORTS = 2
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 3  # PARAMETER C_NUM_CONTROL_PORTS = 3
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 4  # PARAMETER C_NUM_CONTROL_PORTS = 4
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 5  # PARAMETER C_NUM_CONTROL_PORTS = 5
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 6  # PARAMETER C_NUM_CONTROL_PORTS = 6
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 7  # PARAMETER C_NUM_CONTROL_PORTS = 7
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 8  # PARAMETER C_NUM_CONTROL_PORTS = 8
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 9  # PARAMETER C_NUM_CONTROL_PORTS = 9
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 10 # PARAMETER C_NUM_CONTROL_PORTS = 10
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 11 # PARAMETER C_NUM_CONTROL_PORTS = 11
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 12 # PARAMETER C_NUM_CONTROL_PORTS = 12
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 13 # PARAMETER C_NUM_CONTROL_PORTS = 13
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 14 # PARAMETER C_NUM_CONTROL_PORTS = 14
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 15 # PARAMETER C_NUM_CONTROL_PORTS = 15
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 0  # PORT control0  = chipscope_icon_control0
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 1  # PORT control1  = chipscope_icon_control1
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 2  # PORT control2  = chipscope_icon_control2
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 3  # PORT control3  = chipscope_icon_control3
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 4  # PORT control4  = chipscope_icon_control4
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 5  # PORT control5  = chipscope_icon_control5
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 6  # PORT control6  = chipscope_icon_control6
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 7  # PORT control7  = chipscope_icon_control7
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 8  # PORT control8  = chipscope_icon_control8
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 9  # PORT control9  = chipscope_icon_control9
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 10 # PORT control10 = chipscope_icon_control10
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 11 # PORT control11 = chipscope_icon_control11
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 12 # PORT control12 = chipscope_icon_control12
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 13 # PORT control13 = chipscope_icon_control13
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 14 # PORT control14 = chipscope_icon_control14
#IF# strcmp(get(b,'type'),'xps_probe')#END
#IF# strcmp(get(b,'type'),'xps_probe')#
