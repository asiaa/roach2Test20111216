set output_file [open "mem_tester_sim/ddr2_controller_v1_00_a/hdl/vhdl/ddr2_dm_72bit.vhd" w ]
set line_num 1; puts $output_file "--******************************************************************************"
set line_num 2; puts $output_file "--"
set line_num 3; puts $output_file "--  Xilinx, Inc. 2002                 www.xilinx.com"
set line_num 4; puts $output_file "--"
set line_num 5; puts $output_file "--"
set line_num 6; puts $output_file "--*******************************************************************************"
set line_num 7; puts $output_file "--"
set line_num 8; puts $output_file "--  File name :       ddr2_dm.vhd"
set line_num 9; puts $output_file "--"
set line_num 10; puts $output_file "--  Description :     This module instantiates DDR IOB output flip-flops, and an "
set line_num 11; puts $output_file "--                    output buffer for the data mask bits.   "
set line_num 12; puts $output_file "--                   "
set line_num 13; puts $output_file "--  Date - revision : 07/31/2003"
set line_num 14; puts $output_file "--"
set line_num 15; puts $output_file "--  Author :          Maria George"
set line_num 16; puts $output_file "--"
set line_num 17; puts $output_file "--  Contact : e-mail  hotline@xilinx.com"
set line_num 18; puts $output_file "--            phone   + 1 800 255 7778 "
set line_num 19; puts $output_file "--"
set line_num 20; puts $output_file "--  Disclaimer: LIMITED WARRANTY AND DISCLAMER. These designs are "
set line_num 21; puts $output_file "--              provided to you \"as is\". Xilinx and its licensors make and you "
set line_num 22; puts $output_file "--              receive no warranties or conditions, express, implied, "
set line_num 23; puts $output_file "--              statutory or otherwise, and Xilinx specifically disclaims any "
set line_num 24; puts $output_file "--              implied warranties of merchantability, non-infringement, or "
set line_num 25; puts $output_file "--              fitness for a particular purpose. Xilinx does not warrant that "
set line_num 26; puts $output_file "--              the functions contained in these designs will meet your "
set line_num 27; puts $output_file "--              requirements, or that the operation of these designs will be "
set line_num 28; puts $output_file "--              uninterrupted or error free, or that defects in the Designs "
set line_num 29; puts $output_file "--              will be corrected. Furthermore, Xilinx does not warrant or "
set line_num 30; puts $output_file "--              make any representations regarding use or the results of the "
set line_num 31; puts $output_file "--              use of the designs in terms of correctness, accuracy, "
set line_num 32; puts $output_file "--              reliability, or otherwise. "
set line_num 33; puts $output_file "--"
set line_num 34; puts $output_file "--              LIMITATION OF LIABILITY. In no event will Xilinx or its "
set line_num 35; puts $output_file "--              licensors be liable for any loss of data, lost profits, cost "
set line_num 36; puts $output_file "--              or procurement of substitute goods or services, or for any "
set line_num 37; puts $output_file "--              special, incidental, consequential, or indirect damages "
set line_num 38; puts $output_file "--              arising from the use or operation of the designs or "
set line_num 39; puts $output_file "--              accompanying documentation, however caused and on any theory "
set line_num 40; puts $output_file "--              of liability. This limitation will apply even if Xilinx "
set line_num 41; puts $output_file "--              has been advised of the possibility of such damage. This "
set line_num 42; puts $output_file "--              limitation shall apply not-withstanding the failure of the "
set line_num 43; puts $output_file "--              essential purpose of any limited remedies herein. "
set line_num 44; puts $output_file "--"
set line_num 45; puts $output_file "--  Copyright © 2002 Xilinx, Inc."
set line_num 46; puts $output_file "--  All rights reserved "
set line_num 47; puts $output_file "-- "
set line_num 48; puts $output_file "--*****************************************************************************"
set line_num 49; puts $output_file "library ieee;"
set line_num 50; puts $output_file "use ieee.std_logic_1164.all;"
set line_num 51; puts $output_file "use ieee.std_logic_unsigned.all;"
set line_num 52; puts $output_file ""
set line_num 53; puts $output_file "-- pragma translate_off"
set line_num 54; puts $output_file "library UNISIM;"
set line_num 55; puts $output_file "use UNISIM.VCOMPONENTS.ALL;"
set line_num 56; puts $output_file "-- pragma translate_on"
set line_num 57; puts $output_file "--"
set line_num 58; puts $output_file ""
set line_num 59; puts $output_file "entity   ddr2_dm_72bit  is"
set line_num 60; puts $output_file "port ("
set line_num 61; puts $output_file "      ddr_dm       : out std_logic_vector(8 downto 0);   --Data mask output"
set line_num 62; puts $output_file "      mask_falling : in std_logic_vector(8 downto 0);    --Mask output on falling edge"
set line_num 63; puts $output_file "      mask_rising  : in std_logic_vector(8 downto 0);    --Mask output on rising edge"
set line_num 64; puts $output_file "      write_en_val : in std_logic;"
set line_num 65; puts $output_file "      clk90        : in std_logic   --Clock 90"
set line_num 66; puts $output_file "      ); "
set line_num 67; puts $output_file "end   ddr2_dm_72bit;  "
set line_num 68; puts $output_file ""
set line_num 69; puts $output_file "architecture   arc_ddr2_dm_72bit of   ddr2_dm_72bit    is"
set line_num 70; puts $output_file ""
set line_num 71; puts $output_file "attribute syn_keep : boolean;"
set line_num 72; puts $output_file ""
set line_num 73; puts $output_file "component FDDRRSE "
set line_num 74; puts $output_file "port( Q  : out std_logic;"
set line_num 75; puts $output_file "      C0 : in std_logic;"
set line_num 76; puts $output_file "      C1 : in std_logic;"
set line_num 77; puts $output_file "      CE : in std_logic;"
set line_num 78; puts $output_file "      D0 : in std_logic;"
set line_num 79; puts $output_file "      D1 : in std_logic;"
set line_num 80; puts $output_file "      R  : in std_logic;"
set line_num 81; puts $output_file "      S  : in std_logic);"
set line_num 82; puts $output_file "end component;"
set line_num 83; puts $output_file ""
set line_num 84; puts $output_file "component OBUF"
set line_num 85; puts $output_file "port ("
set line_num 86; puts $output_file "       I : in std_logic;"
set line_num 87; puts $output_file "       O : out std_logic);"
set line_num 88; puts $output_file "end component;"
set line_num 89; puts $output_file ""
set line_num 90; puts $output_file ""
set line_num 91; puts $output_file ""
set line_num 92; puts $output_file ""
set line_num 93; puts $output_file ""
set line_num 94; puts $output_file "--***********************************************************************\\"
set line_num 95; puts $output_file "--     Internal signal declaration"
set line_num 96; puts $output_file "--***********************************************************************/"
set line_num 97; puts $output_file "  "
set line_num 98; puts $output_file "signal mask_o         : std_logic_vector(8 downto 0);  -- Mask output intermediate signal"
set line_num 99; puts $output_file "signal gnd            : std_logic;"
set line_num 100; puts $output_file "signal vcc            : std_logic;"
set line_num 101; puts $output_file "signal write_enable_n : std_logic;"
set line_num 102; puts $output_file ""
set line_num 103; puts $output_file "signal clk270    : std_logic;"
set line_num 104; puts $output_file ""
set line_num 105; puts $output_file "attribute syn_keep of clk270 : signal is true;"
set line_num 106; puts $output_file ""
set line_num 107; puts $output_file "begin"
set line_num 108; puts $output_file ""
set line_num 109; puts $output_file "gnd      <= '0';"
set line_num 110; puts $output_file "vcc      <= '1';"
set line_num 111; puts $output_file "clk270   <= not clk90;"
set line_num 112; puts $output_file ""
set line_num 113; puts $output_file "-- delay and invert the enable signal"
set line_num 114; puts $output_file ""
set line_num 115; puts $output_file "process(clk90)"
set line_num 116; puts $output_file "begin"
set line_num 117; puts $output_file "	if clk90'event and clk90 = '1' then"
set line_num 118; puts $output_file "		write_enable_n <= not write_en_val;"
set line_num 119; puts $output_file "	end if;"
set line_num 120; puts $output_file "end process;"
set line_num 121; puts $output_file ""
set line_num 122; puts $output_file "-- Data Mask Output during a write command"
set line_num 123; puts $output_file ""
set line_num 124; puts $output_file "DDR_DM0_OUT : FDDRRSE port map ("
set line_num 125; puts $output_file "                               Q  => mask_o(0), "
set line_num 126; puts $output_file "                               C0 => clk270, "
set line_num 127; puts $output_file "                               C1 => clk90, "
set line_num 128; puts $output_file "                               CE => vcc,"
set line_num 129; puts $output_file "                               D0 => mask_rising(0), "
set line_num 130; puts $output_file "                               D1 => mask_falling(0), "
set line_num 131; puts $output_file "                               R  => write_enable_n, "
set line_num 132; puts $output_file "                               S  => gnd"
set line_num 133; puts $output_file "                              );"
set line_num 134; puts $output_file ""
set line_num 135; puts $output_file "DDR_DM1_OUT : FDDRRSE port map ("
set line_num 136; puts $output_file "                               Q  => mask_o(1), "
set line_num 137; puts $output_file "                               C0 => clk270, "
set line_num 138; puts $output_file "                               C1 => clk90, "
set line_num 139; puts $output_file "                               CE => vcc,"
set line_num 140; puts $output_file "                               D0 => mask_rising(1), "
set line_num 141; puts $output_file "                               D1 => mask_falling(1), "
set line_num 142; puts $output_file "                               R  => write_enable_n, "
set line_num 143; puts $output_file "                               S  => gnd"
set line_num 144; puts $output_file "                              );"
set line_num 145; puts $output_file "                              "
set line_num 146; puts $output_file "DDR_DM2_OUT : FDDRRSE port map ("
set line_num 147; puts $output_file "                               Q  => mask_o(2), "
set line_num 148; puts $output_file "                               C0 => clk270, "
set line_num 149; puts $output_file "                               C1 => clk90, "
set line_num 150; puts $output_file "                               CE => vcc,"
set line_num 151; puts $output_file "                               D0 => mask_rising(2), "
set line_num 152; puts $output_file "                               D1 => mask_falling(2), "
set line_num 153; puts $output_file "                               R  => write_enable_n, "
set line_num 154; puts $output_file "                               S  => gnd"
set line_num 155; puts $output_file "                              );"
set line_num 156; puts $output_file "                              "
set line_num 157; puts $output_file "DDR_DM3_OUT : FDDRRSE port map ("
set line_num 158; puts $output_file "                               Q  => mask_o(3), "
set line_num 159; puts $output_file "                               C0 => clk270, "
set line_num 160; puts $output_file "                               C1 => clk90, "
set line_num 161; puts $output_file "                               CE => vcc,"
set line_num 162; puts $output_file "                               D0 => mask_rising(3), "
set line_num 163; puts $output_file "                               D1 => mask_falling(3), "
set line_num 164; puts $output_file "                               R  => write_enable_n, "
set line_num 165; puts $output_file "                               S  => gnd"
set line_num 166; puts $output_file "                              );"
set line_num 167; puts $output_file "                              "
set line_num 168; puts $output_file "DDR_DM4_OUT : FDDRRSE port map ("
set line_num 169; puts $output_file "                               Q  => mask_o(4), "
set line_num 170; puts $output_file "                               C0 => clk270, "
set line_num 171; puts $output_file "                               C1 => clk90, "
set line_num 172; puts $output_file "                               CE => vcc,"
set line_num 173; puts $output_file "                               D0 => mask_rising(4), "
set line_num 174; puts $output_file "                               D1 => mask_falling(4), "
set line_num 175; puts $output_file "                               R  => write_enable_n, "
set line_num 176; puts $output_file "                               S  => gnd"
set line_num 177; puts $output_file "                              );"
set line_num 178; puts $output_file "                              "
set line_num 179; puts $output_file "DDR_DM5_OUT : FDDRRSE port map ("
set line_num 180; puts $output_file "                               Q  => mask_o(5), "
set line_num 181; puts $output_file "                               C0 => clk270, "
set line_num 182; puts $output_file "                               C1 => clk90, "
set line_num 183; puts $output_file "                               CE => vcc,"
set line_num 184; puts $output_file "                               D0 => mask_rising(5), "
set line_num 185; puts $output_file "                               D1 => mask_falling(5), "
set line_num 186; puts $output_file "                               R  => write_enable_n, "
set line_num 187; puts $output_file "                               S  => gnd"
set line_num 188; puts $output_file "                              );"
set line_num 189; puts $output_file "                              "
set line_num 190; puts $output_file "DDR_DM6_OUT : FDDRRSE port map ("
set line_num 191; puts $output_file "                               Q  => mask_o(6), "
set line_num 192; puts $output_file "                               C0 => clk270, "
set line_num 193; puts $output_file "                               C1 => clk90, "
set line_num 194; puts $output_file "                               CE => vcc,"
set line_num 195; puts $output_file "                               D0 => mask_rising(6), "
set line_num 196; puts $output_file "                               D1 => mask_falling(6), "
set line_num 197; puts $output_file "                               R  => write_enable_n, "
set line_num 198; puts $output_file "                               S  => gnd"
set line_num 199; puts $output_file "                              );"
set line_num 200; puts $output_file "                              "
set line_num 201; puts $output_file "DDR_DM7_OUT : FDDRRSE port map ("
set line_num 202; puts $output_file "                               Q  => mask_o(7), "
set line_num 203; puts $output_file "                               C0 => clk270, "
set line_num 204; puts $output_file "                               C1 => clk90, "
set line_num 205; puts $output_file "                               CE => vcc,"
set line_num 206; puts $output_file "                               D0 => mask_rising(7), "
set line_num 207; puts $output_file "                               D1 => mask_falling(7), "
set line_num 208; puts $output_file "                               R  => write_enable_n, "
set line_num 209; puts $output_file "                               S  => gnd"
set line_num 210; puts $output_file "                              );"
set line_num 211; puts $output_file "                                                                                                                                                                                                                  "
set line_num 212; puts $output_file "                              "
set line_num 213; puts $output_file "DDR_DM8_OUT : FDDRRSE port map ("
set line_num 214; puts $output_file "                               Q  => mask_o(8), "
set line_num 215; puts $output_file "                               C0 => clk270, "
set line_num 216; puts $output_file "                               C1 => clk90, "
set line_num 217; puts $output_file "                               CE => vcc,"
set line_num 218; puts $output_file "                               D0 => mask_rising(8), "
set line_num 219; puts $output_file "                               D1 => mask_falling(8), "
set line_num 220; puts $output_file "                               R  => write_enable_n, "
set line_num 221; puts $output_file "                               S  => gnd"
set line_num 222; puts $output_file "                              );"
set line_num 223; puts $output_file "                                                                      "
set line_num 224; puts $output_file "DM0_OBUF : OBUF port map ("
set line_num 225; puts $output_file "                         I => mask_o(0),"
set line_num 226; puts $output_file "                         O => ddr_dm(0)"
set line_num 227; puts $output_file "                        );"
set line_num 228; puts $output_file ""
set line_num 229; puts $output_file "DM1_OBUF : OBUF port map ("
set line_num 230; puts $output_file "                         I => mask_o(1),"
set line_num 231; puts $output_file "                         O => ddr_dm(1)"
set line_num 232; puts $output_file "                        );"
set line_num 233; puts $output_file "                        "
set line_num 234; puts $output_file "DM2_OBUF : OBUF port map ("
set line_num 235; puts $output_file "                         I => mask_o(2),"
set line_num 236; puts $output_file "                         O => ddr_dm(2)"
set line_num 237; puts $output_file "                        );"
set line_num 238; puts $output_file "                        "
set line_num 239; puts $output_file "DM3_OBUF : OBUF port map ("
set line_num 240; puts $output_file "                         I => mask_o(3),"
set line_num 241; puts $output_file "                         O => ddr_dm(3)"
set line_num 242; puts $output_file "                        );"
set line_num 243; puts $output_file "                        "
set line_num 244; puts $output_file "DM4_OBUF : OBUF port map ("
set line_num 245; puts $output_file "                         I => mask_o(4),"
set line_num 246; puts $output_file "                         O => ddr_dm(4)"
set line_num 247; puts $output_file "                        );"
set line_num 248; puts $output_file "                        "
set line_num 249; puts $output_file "DM5_OBUF : OBUF port map ("
set line_num 250; puts $output_file "                         I => mask_o(5),"
set line_num 251; puts $output_file "                         O => ddr_dm(5)"
set line_num 252; puts $output_file "                        );"
set line_num 253; puts $output_file "                        "
set line_num 254; puts $output_file "DM6_OBUF : OBUF port map ("
set line_num 255; puts $output_file "                         I => mask_o(6),"
set line_num 256; puts $output_file "                         O => ddr_dm(6)"
set line_num 257; puts $output_file "                        );"
set line_num 258; puts $output_file "                        "
set line_num 259; puts $output_file "DM7_OBUF : OBUF port map ("
set line_num 260; puts $output_file "                         I => mask_o(7),"
set line_num 261; puts $output_file "                         O => ddr_dm(7)"
set line_num 262; puts $output_file "                        );"
set line_num 263; puts $output_file "                        "
set line_num 264; puts $output_file "DM8_OBUF : OBUF port map ("
set line_num 265; puts $output_file "                         I => mask_o(8),"
set line_num 266; puts $output_file "                         O => ddr_dm(8)"
set line_num 267; puts $output_file "                        );"
set line_num 268; puts $output_file "                        "
set line_num 269; puts $output_file "end   arc_ddr2_dm_72bit;  "
set line_num 270; puts $output_file ""
set line_num 271; puts $output_file ""
close $output_file
