set output_file [open "mem_tester_sim/ddr2_controller_v1_00_a/hdl/vhdl/cal_top.vhd" w ]
set line_num 1; puts $output_file "library ieee;"
set line_num 2; puts $output_file "use ieee.std_logic_1164.all;"
set line_num 3; puts $output_file "use work.parameter.all;"
set line_num 4; puts $output_file "--"
set line_num 5; puts $output_file "-- pragma translate_off"
set line_num 6; puts $output_file "library UNISIM;"
set line_num 7; puts $output_file "use UNISIM.VCOMPONENTS.ALL;"
set line_num 8; puts $output_file "-- pragma translate_on"
set line_num 9; puts $output_file "--"
set line_num 10; puts $output_file "--library synplify; "
set line_num 11; puts $output_file "--use synplify.attributes.all; "
set line_num 12; puts $output_file ""
set line_num 13; puts $output_file ""
set line_num 14; puts $output_file ""
set line_num 15; puts $output_file "entity cal_top is"
set line_num 16; puts $output_file "port("
set line_num 17; puts $output_file "     clk         : in std_logic;"
set line_num 18; puts $output_file "     clk0        : in std_logic;"
set line_num 19; puts $output_file "     clk0dcmlock : in std_logic;"
set line_num 20; puts $output_file "     reset       : in std_logic;"
set line_num 21; puts $output_file "     okToSelTap  : in std_logic;"
set line_num 22; puts $output_file "     tapForDqs   : out std_logic_vector( 4 downto 0)"
set line_num 23; puts $output_file "     );"
set line_num 24; puts $output_file "end cal_top;"
set line_num 25; puts $output_file ""
set line_num 26; puts $output_file "architecture arc_cal_top of cal_top is"
set line_num 27; puts $output_file ""
set line_num 28; puts $output_file "attribute syn_noprune :boolean;"
set line_num 29; puts $output_file ""
set line_num 30; puts $output_file ""
set line_num 31; puts $output_file "component DCM"
set line_num 32; puts $output_file "-- pragma translate_off"
set line_num 33; puts $output_file "  generic ("
set line_num 34; puts $output_file "    CLKOUT_PHASE_SHIFT : string := \"VARIABLE\";"
set line_num 35; puts $output_file "    DLL_FREQUENCY_MODE : string := \"LOW\";"
set line_num 36; puts $output_file "    DUTY_CYCLE_CORRECTION : boolean := TRUE;"
set line_num 37; puts $output_file "    PHASE_SHIFT : integer := 128"
set line_num 38; puts $output_file "    );"
set line_num 39; puts $output_file "-- pragma translate_on"
set line_num 40; puts $output_file " port (    CLKIN     : in  std_logic;"
set line_num 41; puts $output_file "           CLKFB     : in  std_logic;"
set line_num 42; puts $output_file "           DSSEN     : in  std_logic;"
set line_num 43; puts $output_file "           PSINCDEC  : in  std_logic;"
set line_num 44; puts $output_file "           PSEN      : in  std_logic;"
set line_num 45; puts $output_file "           PSCLK     : in  std_logic;"
set line_num 46; puts $output_file "           RST       : in  std_logic;"
set line_num 47; puts $output_file "           CLK0      : out std_logic;"
set line_num 48; puts $output_file "           CLK90     : out std_logic;"
set line_num 49; puts $output_file "           CLK180    : out std_logic;"
set line_num 50; puts $output_file "           CLK270    : out std_logic;"
set line_num 51; puts $output_file "           CLK2X     : out std_logic;"
set line_num 52; puts $output_file "           CLK2X180  : out std_logic;"
set line_num 53; puts $output_file "           CLKDV     : out std_logic;"
set line_num 54; puts $output_file "           CLKFX     : out std_logic;"
set line_num 55; puts $output_file "           CLKFX180  : out std_logic;"
set line_num 56; puts $output_file "           LOCKED    : out std_logic;"
set line_num 57; puts $output_file "           PSDONE    : out std_logic;"
set line_num 58; puts $output_file "           STATUS    : out std_logic_vector(7 downto 0)"
set line_num 59; puts $output_file "          );"
set line_num 60; puts $output_file "end component;"
set line_num 61; puts $output_file ""
set line_num 62; puts $output_file ""
set line_num 63; puts $output_file "component BUFG "
set line_num 64; puts $output_file "	port("
set line_num 65; puts $output_file "	     O    :	out std_logic;"
set line_num 66; puts $output_file "	     I    :	in  std_logic"
set line_num 67; puts $output_file "	     );"
set line_num 68; puts $output_file "end component;"
set line_num 69; puts $output_file ""
set line_num 70; puts $output_file "component dqs_delay                                             "
set line_num 71; puts $output_file "              port ("
set line_num 72; puts $output_file "		    clk_in   : in std_logic;"
set line_num 73; puts $output_file "		    sel_in   : in std_logic_vector(4 downto 0);"
set line_num 74; puts $output_file "		    clk_out  : out std_logic"
set line_num 75; puts $output_file "		  );                                           "
set line_num 76; puts $output_file "end component;"
set line_num 77; puts $output_file ""
set line_num 78; puts $output_file "component cal_ctl"
set line_num 79; puts $output_file "             port ("
set line_num 80; puts $output_file "                   clk          : in std_logic;"
set line_num 81; puts $output_file "                   okToSelTap   : in std_logic;"
set line_num 82; puts $output_file "                   psDone       : in std_logic;"
set line_num 83; puts $output_file "                   reset        : in std_logic;"
set line_num 84; puts $output_file "                   hxSamp1      : in std_logic;"
set line_num 85; puts $output_file "                   phSamp1      : in std_logic;"
set line_num 86; puts $output_file "                   dcmlocked    : in std_logic;"
set line_num 87; puts $output_file "                   locReset     : out std_logic;"
set line_num 88; puts $output_file "                   psEn         : out std_logic;"
set line_num 89; puts $output_file "                   psInc        : out std_logic;"
set line_num 90; puts $output_file "                   selTap       : out std_logic_vector( 4 downto 0);"
set line_num 91; puts $output_file "                   tapForDqs    : out std_logic_vector( 4 downto 0)"
set line_num 92; puts $output_file "                  );"
set line_num 93; puts $output_file "end component;"
set line_num 94; puts $output_file ""
set line_num 95; puts $output_file "component cal_div2"
set line_num 96; puts $output_file "              port ("
set line_num 97; puts $output_file "                    reset      : in std_logic;"
set line_num 98; puts $output_file "                    iclk       : in std_logic;"
set line_num 99; puts $output_file "                    oclk       : out std_logic"
set line_num 100; puts $output_file "                   );"
set line_num 101; puts $output_file "end component;"
set line_num 102; puts $output_file ""
set line_num 103; puts $output_file ""
set line_num 104; puts $output_file "component cal_div2f"
set line_num 105; puts $output_file "              port ("
set line_num 106; puts $output_file "                    reset      : in std_logic;"
set line_num 107; puts $output_file "                    iclk       : in std_logic;"
set line_num 108; puts $output_file "                    oclk       : out std_logic"
set line_num 109; puts $output_file "                   );"
set line_num 110; puts $output_file "end component;"
set line_num 111; puts $output_file ""
set line_num 112; puts $output_file ""
set line_num 113; puts $output_file "component cal_reg "
set line_num 114; puts $output_file "             port ("
set line_num 115; puts $output_file "                   clk       : in std_logic;"
set line_num 116; puts $output_file "                   dInp      : in std_logic;"
set line_num 117; puts $output_file "                   iReg      : out std_logic;"
set line_num 118; puts $output_file "                   dReg      : out std_logic"
set line_num 119; puts $output_file "                  );"
set line_num 120; puts $output_file "end component;"
set line_num 121; puts $output_file " "
set line_num 122; puts $output_file "constant noMuxF5: std_logic := '1';"
set line_num 123; puts $output_file ""
set line_num 124; puts $output_file "signal fpga_rst     : std_logic;"
set line_num 125; puts $output_file "signal divRst       : std_logic;"
set line_num 126; puts $output_file "signal gnd          : std_logic;"
set line_num 127; puts $output_file "signal phShftClk    : std_logic;"
set line_num 128; puts $output_file "signal phShftClkDcm : std_logic;"
set line_num 129; puts $output_file "signal psInc        : std_logic;"
set line_num 130; puts $output_file "signal psEn         : std_logic;"
set line_num 131; puts $output_file "signal dcmlocked    : std_logic;"
set line_num 132; puts $output_file "signal psDone       : std_logic;"
set line_num 133; puts $output_file "signal hexClk       : std_logic;"
set line_num 134; puts $output_file "signal clkDiv2      : std_logic;"
set line_num 135; puts $output_file "signal phClkDiv2    : std_logic;"
set line_num 136; puts $output_file "signal selTap       : std_logic_vector( 4 downto 0);"
set line_num 137; puts $output_file "signal locReset     : std_logic;"
set line_num 138; puts $output_file "signal hxSamp1      : std_logic;"
set line_num 139; puts $output_file "signal phSamp1      : std_logic;"
set line_num 140; puts $output_file "signal reset_not    : std_logic;"
set line_num 141; puts $output_file "signal hxSamp0      : std_logic;"
set line_num 142; puts $output_file "signal suClkDiv2    : std_logic;"
set line_num 143; puts $output_file "signal suPhClkDiv2  : std_logic;"
set line_num 144; puts $output_file "signal phSamp0      : std_logic;"
set line_num 145; puts $output_file ""
set line_num 146; puts $output_file "signal hexClk_defer : std_logic;"
set line_num 147; puts $output_file "signal phclk_defer  : std_logic;"
set line_num 148; puts $output_file ""
set line_num 149; puts $output_file "attribute CLKOUT_PHASE_SHIFT : string;"
set line_num 150; puts $output_file "attribute DLL_FREQUENCY_MODE : string;"
set line_num 151; puts $output_file "attribute DUTY_CYCLE_CORRECTION : string; "
set line_num 152; puts $output_file "attribute PHASE_SHIFT : integer;"
set line_num 153; puts $output_file ""
set line_num 154; puts $output_file "attribute CLKOUT_PHASE_SHIFT of cal_dcm : label is \"VARIABLE\";"
set line_num 155; puts $output_file "attribute DLL_FREQUENCY_MODE of cal_dcm : label is \"LOW\";"
set line_num 156; puts $output_file "attribute DUTY_CYCLE_CORRECTION of cal_dcm  : label is \"TRUE\"; "
set line_num 157; puts $output_file "attribute PHASE_SHIFT of cal_dcm : label is 128;"
set line_num 158; puts $output_file ""
set line_num 159; puts $output_file "attribute syn_noprune of cal_clkd2 : label is true;"
set line_num 160; puts $output_file "attribute syn_noprune of cal_phClkd2 : label is true;"
set line_num 161; puts $output_file "--attribute syn_noprune of cal_suclkd2 : label is true;"
set line_num 162; puts $output_file "--attribute syn_noprune of cal_suphClkd2 : label is true;"
set line_num 163; puts $output_file ""
set line_num 164; puts $output_file "begin"
set line_num 165; puts $output_file ""
set line_num 166; puts $output_file "reset_not <= not reset;"
set line_num 167; puts $output_file "gnd      <= '0';"
set line_num 168; puts $output_file ""
set line_num 169; puts $output_file ""
set line_num 170; puts $output_file "cal_dcm : DCM         "
set line_num 171; puts $output_file "port map ("
set line_num 172; puts $output_file "                        CLKIN    =>  clk,"
set line_num 173; puts $output_file "                        CLKFB    =>  phShftClk,"
set line_num 174; puts $output_file "                        DSSEN    =>  gnd,"
set line_num 175; puts $output_file "                        PSINCDEC =>  psInc,"
set line_num 176; puts $output_file "                        PSEN     =>  psEn,"
set line_num 177; puts $output_file "                        PSCLK    =>  clk0,"
set line_num 178; puts $output_file "                        RST      =>  reset_not,"
set line_num 179; puts $output_file "                        CLK0     =>  phShftClkDcm,"
set line_num 180; puts $output_file "                        CLK90    =>  open,"
set line_num 181; puts $output_file "                        CLK180   =>  open,"
set line_num 182; puts $output_file "                        CLK270   =>  open,"
set line_num 183; puts $output_file "                        CLK2X    =>  open,"
set line_num 184; puts $output_file "                        CLK2X180 =>  open,"
set line_num 185; puts $output_file "                        CLKDV    =>  open,"
set line_num 186; puts $output_file "                        CLKFX    =>  open,"
set line_num 187; puts $output_file "                        CLKFX180 =>  open,"
set line_num 188; puts $output_file "                        LOCKED   =>  dcmlocked,"
set line_num 189; puts $output_file "                        PSDONE   =>  psDone,"
set line_num 190; puts $output_file "                        STATUS   =>  open );"
set line_num 191; puts $output_file ""
set line_num 192; puts $output_file ""
set line_num 193; puts $output_file "process (clk0)"
set line_num 194; puts $output_file "begin"
set line_num 195; puts $output_file "  if clk0'event and clk0 = '1' then"
set line_num 196; puts $output_file "--     if reset = '0' then"
set line_num 197; puts $output_file "--        fpga_rst <= '1';"
set line_num 198; puts $output_file "--     else"
set line_num 199; puts $output_file "--        fpga_rst <= not (dcmlocked and clk0dcmlock) after 1 ps ;"
set line_num 200; puts $output_file "        fpga_rst <= not (reset and dcmlocked and clk0dcmlock) after 1 ps ;"
set line_num 201; puts $output_file "--   end if;"
set line_num 202; puts $output_file " end if;"
set line_num 203; puts $output_file "end process;"
set line_num 204; puts $output_file ""
set line_num 205; puts $output_file "divRst   <= not (dcmlocked and clk0dcmlock) after 1 ps ;"
set line_num 206; puts $output_file ""
set line_num 207; puts $output_file ""
set line_num 208; puts $output_file ""
set line_num 209; puts $output_file "phclk_bufg : BUFG port map ("
set line_num 210; puts $output_file "                            I    =>  phShftClkDcm,"
set line_num 211; puts $output_file "                            O    =>  phShftClk);"
set line_num 212; puts $output_file ""
set line_num 213; puts $output_file "cal_ctl0   : cal_ctl port map ("
set line_num 214; puts $output_file "                               clk         =>   clk0,"
set line_num 215; puts $output_file "                               psDone      =>   psDone,"
set line_num 216; puts $output_file "                               reset       =>   fpga_rst,"
set line_num 217; puts $output_file "                               okToSelTap  =>   okToSelTap,"
set line_num 218; puts $output_file "                               locReset    =>   locReset,"
set line_num 219; puts $output_file "                               hxSamp1     =>   hxSamp1,"
set line_num 220; puts $output_file "                               phSamp1     =>   phSamp1,"
set line_num 221; puts $output_file "                               selTap      =>   SelTap,"
set line_num 222; puts $output_file "                               psEn        =>   psEn,"
set line_num 223; puts $output_file "                               psInc       =>   psInc,"
set line_num 224; puts $output_file "                               dcmlocked   =>   dcmlocked,"
set line_num 225; puts $output_file "                               tapForDqs   =>   tapForDqs);"
set line_num 226; puts $output_file ""
set line_num 227; puts $output_file ""
set line_num 228; puts $output_file "cal_clkd2  : cal_div2 port map ("
set line_num 229; puts $output_file "                                reset    =>  divRst,"
set line_num 230; puts $output_file "                                iclk     =>  clk0,"
set line_num 231; puts $output_file "                                oclk     =>  clkDiv2);"
set line_num 232; puts $output_file ""
set line_num 233; puts $output_file "cal_phClkd2 : cal_div2f port map ("
set line_num 234; puts $output_file "                                 reset   => divRst,"
set line_num 235; puts $output_file "                                 iclk    => phShftClk,"
set line_num 236; puts $output_file "                                 oclk    => phClkDiv2);"
set line_num 237; puts $output_file ""
set line_num 238; puts $output_file "hexClk_defer <= hexClk after 2 ps;"
set line_num 239; puts $output_file ""
set line_num 240; puts $output_file "hxSampReg0 : cal_reg port map ("
set line_num 241; puts $output_file "                                clk      =>   hexClk,"
set line_num 242; puts $output_file "                                --clk      =>   hexClk_defer,"
set line_num 243; puts $output_file "                                dInp     =>   clkDiv2,"
set line_num 244; puts $output_file "                                iReg     =>   hxSamp0,"
set line_num 245; puts $output_file "                                dReg     =>   hxSamp1);"
set line_num 246; puts $output_file ""
set line_num 247; puts $output_file "cal_suClkd2  : cal_div2 port map ("
set line_num 248; puts $output_file "                                  reset   => divRst,"
set line_num 249; puts $output_file "                                  iclk    => clk0,"
set line_num 250; puts $output_file "                                  oclk    => suClkDiv2);"
set line_num 251; puts $output_file ""
set line_num 252; puts $output_file "cal_suPhClkd2 : cal_div2f port map ("
set line_num 253; puts $output_file "                                   reset   =>  divRst,"
set line_num 254; puts $output_file "                                   iclk    =>  phShftClk,"
set line_num 255; puts $output_file "                                   oclk    =>  suPhClkDiv2);"
set line_num 256; puts $output_file ""
set line_num 257; puts $output_file "phclk_defer <= suPhClkDiv2 after 2 ps;"
set line_num 258; puts $output_file ""
set line_num 259; puts $output_file "phSampReg0   : cal_reg port map ("
set line_num 260; puts $output_file "                                 clk      =>   suPhClkDiv2,"
set line_num 261; puts $output_file "                                 --clk      =>   phclk_defer,"
set line_num 262; puts $output_file "                                 dInp     =>   suClkDiv2,"
set line_num 263; puts $output_file "                                 iReg     =>   phSamp0,"
set line_num 264; puts $output_file "                                 dReg     =>   phSamp1);"
set line_num 265; puts $output_file ""
set line_num 266; puts $output_file ""
set line_num 267; puts $output_file "ckt_to_cal  : dqs_delay port map ("
set line_num 268; puts $output_file "                                  clk_in    =>   phClkDiv2,"
set line_num 269; puts $output_file "                                  sel_in    =>   selTap,"
set line_num 270; puts $output_file "                                  clk_out   =>   hexClk);"
set line_num 271; puts $output_file "	"
set line_num 272; puts $output_file "end arc_cal_top;"
set line_num 273; puts $output_file ""
close $output_file
