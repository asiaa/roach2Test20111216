## Copyright (c) 2004 Xilinx, Inc. All Rights Reserved.
## You may copy and modify these files for your own internal use solely with
## Xilinx programmable logic devices and  Xilinx EDK system or create IP
## modules solely for Xilinx programmable logic devices and Xilinx EDK system.
## No rights are granted to distribute any files unless they are distributed in
## Xilinx programmable logic devices.
###################################################################
##
## Name     : framebuffer
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN framebuffer

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IP_GROUP = MICROBLAZE:PPC:USER
OPTION CORE_STATE = DEVELOPMENT
OPTION STYLE = MIX

## framebuffer resolution parameters as defined in the XFree framebuffer documentation
## default parameters correspond to 1280x1024 resolution
PARAMETER HR  = 1280, DT = integer
PARAMETER SH1 = 1328, DT = integer
PARAMETER SH2 = 1512, DT = integer
PARAMETER HFL = 1712, DT = integer
PARAMETER VR  = 1024, DT = integer
PARAMETER SV1 = 1025, DT = integer
PARAMETER SV2 = 1028, DT = integer
PARAMETER VFL = 1054, DT = integer

PARAMETER C_WIDE_DATA  = 0, DT = INTEGER, RANGE = (0:1)
PARAMETER C_HALF_BURST = 1, DT = INTEGER, RANGE = (1)

## Bus Interfaces
BUS_INTERFACE BUS = MEM_CMD, BUS_STD = MEM_CMD, BUS_TYPE = INITIATOR

## Ports

# DVI ports
PORT dvi_data   = "", DIR = O, VEC = [0:11], IOB_STATE=BUF, THREE_STATE=FALSE
PORT dvi_idck_p = "", DIR = O, IOB_STATE=BUF, THREE_STATE=FALSE
PORT dvi_idck_m = "", DIR = O, IOB_STATE=BUF, THREE_STATE=FALSE
PORT dvi_vsync  = "", DIR = O, IOB_STATE=BUF, THREE_STATE=FALSE
PORT dvi_hsync  = "", DIR = O, IOB_STATE=BUF, THREE_STATE=FALSE
PORT dvi_de     = "", DIR = O, IOB_STATE=BUF, THREE_STATE=FALSE

# Clocks
PORT pixel_clk   = "", DIR = I
PORT pixel_clk90 = "", DIR = I

# Memory interface
PORT Mem_Clk         = "", DIR = I
PORT Mem_Cmd_Address = Mem_Cmd_Address, DIR = O, BUS = MEM_CMD,  VEC = [31:0]
PORT Mem_Cmd_RNW     = Mem_Cmd_RNW,     DIR = O, BUS = MEM_CMD   
PORT Mem_Cmd_Valid   = Mem_Cmd_Valid,   DIR = O, BUS = MEM_CMD   
PORT Mem_Cmd_Tag     = Mem_Cmd_Tag,     DIR = O, BUS = MEM_CMD,  VEC = [31:0]
PORT Mem_Cmd_Ack     = Mem_Cmd_Ack,     DIR = I, BUS = MEM_CMD
PORT Mem_Rd_Dout     = Mem_Rd_Dout,     DIR = I, BUS = MEM_CMD,  VEC = [(144*(C_WIDE_DATA+1))-1:0]
PORT Mem_Rd_Tag      = Mem_Rd_Tag,      DIR = I, BUS = MEM_CMD,  VEC = [31:0]
PORT Mem_Rd_Ack      = Mem_Rd_Ack,      DIR = O, BUS = MEM_CMD   
PORT Mem_Rd_Valid    = Mem_Rd_Valid,    DIR = I, BUS = MEM_CMD   
PORT Mem_Wr_Din      = Mem_Wr_Din,      DIR = O, BUS = MEM_CMD,  VEC = [(144*(C_WIDE_DATA+1))-1:0]
PORT Mem_Wr_BE       = Mem_Wr_BE,       DIR = O, BUS = MEM_CMD,  VEC = [(18*(C_WIDE_DATA+1))-1:0]

# Framebuffer address
PORT fb_addr         = "", VEC = [31:0] , DIR = I
# Blank signal
PORT fb_blank        = "", DIR = I

END
