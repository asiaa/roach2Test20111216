## Copyright (c) 2004 Xilinx, Inc. All Rights Reserved.
## You may copy and modify these files for your own internal use solely with
## Xilinx programmable logic devices and  Xilinx EDK system or create IP
## modules solely for Xilinx programmable logic devices and Xilinx EDK system.
## No rights are granted to distribute any files unless they are distributed in
## Xilinx programmable logic devices.
###################################################################
##
## Name     : opb_framebuffer
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN opb_framebuffer

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IP_GROUP = MICROBLAZE:PPC:USER
OPTION CORE_STATE = DEVELOPMENT
OPTION STYLE = MIX

## Bus Interfaces
BUS_INTERFACE BUS = SOPB, BUS_TYPE = SLAVE, BUS_STD = OPB
BUS_INTERFACE BUS = MEM_CMD, BUS_STD = TRANSPARENT, BUS_TYPE = UNDEF

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x100, BUS = SOPB, ADDRESS = BASE, PAIR = C_HIGHADDR
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SOPB, ADDRESS = HIGH, PAIR = C_BASEADDR
PARAMETER C_OPB_AWIDTH = 32, DT = INTEGER, BUS = SOPB
PARAMETER C_OPB_DWIDTH = 32, DT = INTEGER, BUS = SOPB
PARAMETER C_FAMILY = virtex2p, DT = STRING

PARAMETER C_WIDE_DATA = 0, DT = INTEGER, RANGE = (0:1)
PARAMETER C_HALF_BURST = 1, DT = INTEGER, RANGE = (1)

## framebuffer resolution parameters as defined in the XFree framebuffer documentation
## default parameters correspond to 1280x1024 resolution
PARAMETER HR  = 1280, DT = integer
PARAMETER SH1 = 1328, DT = integer
PARAMETER SH2 = 1512, DT = integer
PARAMETER HFL = 1712, DT = integer
PARAMETER VR  = 1024, DT = integer
PARAMETER SV1 = 1025, DT = integer
PARAMETER SV2 = 1028, DT = integer
PARAMETER VFL = 1054, DT = integer

# DVI ports
PORT dvi_data   = "", DIR = O, VEC = [0:11]
PORT dvi_idck_p = "", DIR = O
PORT dvi_idck_m = "", DIR = O
PORT dvi_vsync  = "", DIR = O
PORT dvi_hsync  = "", DIR = O
PORT dvi_de     = "", DIR = O

# Clocks
PORT pixel_clk   = "", DIR = I
PORT pixel_clk90 = "", DIR = I

# Memory interface
PORT Mem_Cmd_Address = Mem_Cmd_Address, DIR = O, BUS = MEM_CMD,  VEC = [31:0]
PORT Mem_Cmd_RNW     = Mem_Cmd_RNW,     DIR = O, BUS = MEM_CMD   
PORT Mem_Cmd_Valid   = Mem_Cmd_Valid,   DIR = O, BUS = MEM_CMD   
PORT Mem_Cmd_Tag     = Mem_Cmd_Tag,     DIR = O, BUS = MEM_CMD,  VEC = [31:0]
PORT Mem_Cmd_Ack     = Mem_Cmd_Ack,     DIR = I, BUS = MEM_CMD
PORT Mem_Rd_Dout     = Mem_Rd_Dout,     DIR = I, BUS = MEM_CMD,  VEC = [(144*(C_WIDE_DATA+1))-1:0]
PORT Mem_Rd_Tag      = Mem_Rd_Tag,      DIR = I, BUS = MEM_CMD,  VEC = [31:0]
PORT Mem_Rd_Ack      = Mem_Rd_Ack,      DIR = O, BUS = MEM_CMD   
PORT Mem_Rd_Valid    = Mem_Rd_Valid,    DIR = I, BUS = MEM_CMD   
PORT Mem_Wr_Din      = Mem_Wr_Din,      DIR = O, BUS = MEM_CMD,  VEC = [(144*(C_WIDE_DATA+1))-1:0]
PORT Mem_Wr_BE       = Mem_Wr_BE,       DIR = O, BUS = MEM_CMD,  VEC = [(18*(C_WIDE_DATA+1))-1:0]

## Ports
PORT OPB_Clk = "", DIR = I, SIGIS = Clk, BUS = SOPB
PORT OPB_Rst = OPB_Rst, DIR = I, SIGIS = Rst, BUS = SOPB
PORT Sl_DBus = Sl_DBus, DIR = O, VEC = [0:(C_OPB_DWIDTH-1)], BUS = SOPB
PORT Sl_errAck = Sl_errAck, DIR = O, BUS = SOPB
PORT Sl_retry = Sl_retry, DIR = O, BUS = SOPB
PORT Sl_toutSup = Sl_toutSup, DIR = O, BUS = SOPB
PORT Sl_xferAck = Sl_xferAck, DIR = O, BUS = SOPB
PORT OPB_ABus = OPB_ABus, DIR = I, VEC = [0:(C_OPB_AWIDTH-1)], BUS = SOPB
PORT OPB_BE = OPB_BE, DIR = I, VEC = [0:((C_OPB_DWIDTH/8)-1)], BUS = SOPB
PORT OPB_DBus = OPB_DBus, DIR = I, VEC = [0:(C_OPB_DWIDTH-1)], BUS = SOPB
PORT OPB_RNW = OPB_RNW, DIR = I, BUS = SOPB
PORT OPB_select = OPB_select, DIR = I, BUS = SOPB
PORT OPB_seqAddr = OPB_seqAddr, DIR = I, BUS = SOPB

END
